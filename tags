!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
0	docs/html/search/search.js	/^{$/;"	p	class:indexSectionNames
0	docs/html/search/search.js	/^{$/;"	p	class:indexSectionsWithContent
1	docs/html/search/search.js	/^  0: "abcdefghijlmnoprstuvwxy~",$/;"	p	class:indexSectionsWithContent
1	docs/html/search/search.js	/^  0: "all",$/;"	p	class:indexSectionNames
2	docs/html/search/search.js	/^  1: "abdfhipr",$/;"	p	class:indexSectionsWithContent
2	docs/html/search/search.js	/^  1: "classes",$/;"	p	class:indexSectionNames
3	docs/html/search/search.js	/^  2: "gs",$/;"	p	class:indexSectionsWithContent
3	docs/html/search/search.js	/^  2: "namespaces",$/;"	p	class:indexSectionNames
4	docs/html/search/search.js	/^  3: "abcdfghimprt",$/;"	p	class:indexSectionsWithContent
4	docs/html/search/search.js	/^  3: "files",$/;"	p	class:indexSectionNames
5	docs/html/search/search.js	/^  4: "abcdeghilmoprsuy~",$/;"	p	class:indexSectionsWithContent
5	docs/html/search/search.js	/^  4: "functions",$/;"	p	class:indexSectionNames
6	docs/html/search/search.js	/^  5: "finprsvw",$/;"	p	class:indexSectionsWithContent
6	docs/html/search/search.js	/^  5: "variables",$/;"	p	class:indexSectionNames
7	docs/html/search/search.js	/^  6: "ci",$/;"	p	class:indexSectionsWithContent
7	docs/html/search/search.js	/^  6: "typedefs",$/;"	p	class:indexSectionNames
8	docs/html/search/search.js	/^  7: "acdo",$/;"	p	class:indexSectionsWithContent
8	docs/html/search/search.js	/^  7: "enums",$/;"	p	class:indexSectionNames
9	docs/html/search/search.js	/^  8: "abcdefghijlmnoprstuvx",$/;"	p	class:indexSectionsWithContent
9	docs/html/search/search.js	/^  8: "enumvalues",$/;"	p	class:indexSectionNames
A	test/gtest/test/gtest-linked_ptr_test.cc	/^  A(): mynum(num++) { *history << "A" << mynum << " ctor\\n"; }$/;"	f	class:__anon25::A
A	test/gtest/test/gtest-linked_ptr_test.cc	/^class A {$/;"	c	namespace:__anon25	file:
A	test/gtest/test/gtest_shuffle_test_.cc	/^class A : public Test {};$/;"	c	namespace:__anon30	file:
A0	experiments/backup/benchmarks/src/base/flops-1.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-2.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-3.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-4.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-5.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-6.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-7.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops-8.c	/^double A0 = 1.0;$/;"	v
A0	experiments/backup/benchmarks/src/base/flops.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-1.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-2.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-3.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-4.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-5.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-6.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-7.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops-8.c	/^double A0 = 1.0;$/;"	v
A0	experiments/benchmarks/src/base/flops.c	/^double A0 = 1.0;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-1.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-2.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-3.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-4.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-5.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-6.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-7.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops-8.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/backup/benchmarks/src/base/flops.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-1.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-2.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-3.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-4.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-5.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-6.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-7.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops-8.c	/^double A1 = -0.1666666666671334;$/;"	v
A1	experiments/benchmarks/src/base/flops.c	/^double A1 = -0.1666666666671334;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-1.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-2.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-3.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-4.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-5.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-6.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-7.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops-8.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/backup/benchmarks/src/base/flops.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-1.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-2.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-3.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-4.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-5.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-6.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-7.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops-8.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A2	experiments/benchmarks/src/base/flops.c	/^double A2 = 0.833333333809067E-2;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-1.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-2.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-3.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-4.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-5.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-6.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-7.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops-8.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/backup/benchmarks/src/base/flops.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-1.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-2.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-3.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-4.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-5.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-6.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-7.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops-8.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A3	experiments/benchmarks/src/base/flops.c	/^double A3 = 0.198412715551283E-3;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-1.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-2.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-3.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-4.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-5.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-6.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-7.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops-8.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/backup/benchmarks/src/base/flops.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-1.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-2.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-3.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-4.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-5.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-6.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-7.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops-8.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A4	experiments/benchmarks/src/base/flops.c	/^double A4 = 0.27557589750762E-5;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-1.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-2.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-3.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-4.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-5.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-6.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-7.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops-8.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/backup/benchmarks/src/base/flops.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-1.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-2.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-3.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-4.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-5.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-6.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-7.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops-8.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A5	experiments/benchmarks/src/base/flops.c	/^double A5 = 0.2507059876207E-7;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-1.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-2.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-3.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-4.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-5.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-6.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-7.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops-8.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/backup/benchmarks/src/base/flops.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-1.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-2.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-3.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-4.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-5.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-6.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-7.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops-8.c	/^double A6 = 0.164105986683E-9;$/;"	v
A6	experiments/benchmarks/src/base/flops.c	/^double A6 = 0.164105986683E-9;$/;"	v
ACTIVE_TESTS	test/gtest/test/gtest_filter_unittest.py	/^ACTIVE_TESTS = [$/;"	v
ACTIVE_TESTS	test/gtest/test/gtest_shuffle_test.py	/^ACTIVE_TESTS = []$/;"	v
ADD_FAILURE	test/gtest/fused-src/gtest/gtest.h	19276;"	d
ADD_FAILURE	test/gtest/include/gtest/gtest.h	1863;"	d
ADD_FAILURE_AT	test/gtest/fused-src/gtest/gtest.h	19280;"	d
ADD_FAILURE_AT	test/gtest/include/gtest/gtest.h	1867;"	d
ADI_H	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	9;"	d
ADI_H	experiments/benchmarks/src/polybench/stencils/adi/adi.h	9;"	d
ALL_TESTS	test/gtest/test/gtest_shuffle_test.py	/^ALL_TESTS = []$/;"	v
ALSO_RUN_DISABED_TESTS_FLAG	test/gtest/test/gtest_filter_unittest.py	/^ALSO_RUN_DISABED_TESTS_FLAG = 'gtest_also_run_disabled_tests'$/;"	v
AM	experiments/backup/benchmarks/src/base/lpbench.c	/^static const double AM = 4.65661287525E-10;$/;"	v	file:
AM	experiments/benchmarks/src/base/lpbench.c	/^static const double AM = 4.65661287525E-10;$/;"	v	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARRAY_H	experiments/backup/benchmarks/src/SciMark2-C/array.h	3;"	d
ARRAY_H	experiments/benchmarks/src/SciMark2-C/array.h	3;"	d
ARRAY_SIZE	experiments/backup/benchmarks/src/base/puzzle.c	4;"	d	file:
ARRAY_SIZE	experiments/benchmarks/src/base/puzzle.c	4;"	d	file:
ASSERT_ANY_THROW	test/gtest/fused-src/gtest/gtest.h	19321;"	d
ASSERT_ANY_THROW	test/gtest/include/gtest/gtest.h	1908;"	d
ASSERT_DEATH	test/gtest/fused-src/gtest/gtest.h	8614;"	d
ASSERT_DEATH	test/gtest/include/gtest/gtest-death-test.h	179;"	d
ASSERT_DEATH_IF_SUPPORTED	test/gtest/fused-src/gtest/gtest.h	8718;"	d
ASSERT_DEATH_IF_SUPPORTED	test/gtest/fused-src/gtest/gtest.h	8723;"	d
ASSERT_DEATH_IF_SUPPORTED	test/gtest/include/gtest/gtest-death-test.h	283;"	d
ASSERT_DEATH_IF_SUPPORTED	test/gtest/include/gtest/gtest-death-test.h	288;"	d
ASSERT_DEBUG_DEATH	test/gtest/fused-src/gtest/gtest.h	8696;"	d
ASSERT_DEBUG_DEATH	test/gtest/fused-src/gtest/gtest.h	8704;"	d
ASSERT_DEBUG_DEATH	test/gtest/include/gtest/gtest-death-test.h	261;"	d
ASSERT_DEBUG_DEATH	test/gtest/include/gtest/gtest-death-test.h	269;"	d
ASSERT_DOUBLE_EQ	test/gtest/fused-src/gtest/gtest.h	19864;"	d
ASSERT_DOUBLE_EQ	test/gtest/include/gtest/gtest.h	2094;"	d
ASSERT_EQ	test/gtest/fused-src/gtest/gtest.h	19781;"	d
ASSERT_EQ	test/gtest/include/gtest/gtest.h	2011;"	d
ASSERT_EXIT	test/gtest/fused-src/gtest/gtest.h	8603;"	d
ASSERT_EXIT	test/gtest/include/gtest/gtest-death-test.h	168;"	d
ASSERT_FALSE	test/gtest/fused-src/gtest/gtest.h	19336;"	d
ASSERT_FALSE	test/gtest/include/gtest/gtest.h	1923;"	d
ASSERT_FLOAT_EQ	test/gtest/fused-src/gtest/gtest.h	19860;"	d
ASSERT_FLOAT_EQ	test/gtest/include/gtest/gtest.h	2090;"	d
ASSERT_GE	test/gtest/fused-src/gtest/gtest.h	19797;"	d
ASSERT_GE	test/gtest/include/gtest/gtest.h	2027;"	d
ASSERT_GT	test/gtest/fused-src/gtest/gtest.h	19801;"	d
ASSERT_GT	test/gtest/include/gtest/gtest.h	2031;"	d
ASSERT_HRESULT_FAILED	test/gtest/fused-src/gtest/gtest.h	19909;"	d
ASSERT_HRESULT_FAILED	test/gtest/include/gtest/gtest.h	2139;"	d
ASSERT_HRESULT_SUCCEEDED	test/gtest/fused-src/gtest/gtest.h	19903;"	d
ASSERT_HRESULT_SUCCEEDED	test/gtest/include/gtest/gtest.h	2133;"	d
ASSERT_LE	test/gtest/fused-src/gtest/gtest.h	19789;"	d
ASSERT_LE	test/gtest/include/gtest/gtest.h	2019;"	d
ASSERT_LT	test/gtest/fused-src/gtest/gtest.h	19793;"	d
ASSERT_LT	test/gtest/include/gtest/gtest.h	2023;"	d
ASSERT_NE	test/gtest/fused-src/gtest/gtest.h	19785;"	d
ASSERT_NE	test/gtest/include/gtest/gtest.h	2015;"	d
ASSERT_NEAR	test/gtest/fused-src/gtest/gtest.h	19872;"	d
ASSERT_NEAR	test/gtest/include/gtest/gtest.h	2102;"	d
ASSERT_NO_FATAL_FAILURE	test/gtest/fused-src/gtest/gtest.h	19924;"	d
ASSERT_NO_FATAL_FAILURE	test/gtest/include/gtest/gtest.h	2154;"	d
ASSERT_NO_THROW	test/gtest/fused-src/gtest/gtest.h	19319;"	d
ASSERT_NO_THROW	test/gtest/include/gtest/gtest.h	1906;"	d
ASSERT_PRED1	test/gtest/fused-src/gtest/gtest.h	19460;"	d
ASSERT_PRED1	test/gtest/include/gtest/gtest_pred_impl.h	119;"	d
ASSERT_PRED1Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test ASSERT_PRED1Test;$/;"	t	file:
ASSERT_PRED2	test/gtest/fused-src/gtest/gtest.h	19508;"	d
ASSERT_PRED2	test/gtest/include/gtest/gtest_pred_impl.h	167;"	d
ASSERT_PRED2Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test ASSERT_PRED2Test;$/;"	t	file:
ASSERT_PRED3	test/gtest/fused-src/gtest/gtest.h	19563;"	d
ASSERT_PRED3	test/gtest/include/gtest/gtest_pred_impl.h	222;"	d
ASSERT_PRED3Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test ASSERT_PRED3Test;$/;"	t	file:
ASSERT_PRED4	test/gtest/fused-src/gtest/gtest.h	19625;"	d
ASSERT_PRED4	test/gtest/include/gtest/gtest_pred_impl.h	284;"	d
ASSERT_PRED4Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test ASSERT_PRED4Test;$/;"	t	file:
ASSERT_PRED5	test/gtest/fused-src/gtest/gtest.h	19694;"	d
ASSERT_PRED5	test/gtest/include/gtest/gtest_pred_impl.h	353;"	d
ASSERT_PRED5Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test ASSERT_PRED5Test;$/;"	t	file:
ASSERT_PRED_FORMAT1	test/gtest/fused-src/gtest/gtest.h	19458;"	d
ASSERT_PRED_FORMAT1	test/gtest/include/gtest/gtest_pred_impl.h	117;"	d
ASSERT_PRED_FORMAT1Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test ASSERT_PRED_FORMAT1Test;$/;"	t	file:
ASSERT_PRED_FORMAT2	test/gtest/fused-src/gtest/gtest.h	19506;"	d
ASSERT_PRED_FORMAT2	test/gtest/include/gtest/gtest_pred_impl.h	165;"	d
ASSERT_PRED_FORMAT2Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test ASSERT_PRED_FORMAT2Test;$/;"	t	file:
ASSERT_PRED_FORMAT3	test/gtest/fused-src/gtest/gtest.h	19561;"	d
ASSERT_PRED_FORMAT3	test/gtest/include/gtest/gtest_pred_impl.h	220;"	d
ASSERT_PRED_FORMAT3Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test ASSERT_PRED_FORMAT3Test;$/;"	t	file:
ASSERT_PRED_FORMAT4	test/gtest/fused-src/gtest/gtest.h	19623;"	d
ASSERT_PRED_FORMAT4	test/gtest/include/gtest/gtest_pred_impl.h	282;"	d
ASSERT_PRED_FORMAT4Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test ASSERT_PRED_FORMAT4Test;$/;"	t	file:
ASSERT_PRED_FORMAT5	test/gtest/fused-src/gtest/gtest.h	19692;"	d
ASSERT_PRED_FORMAT5	test/gtest/include/gtest/gtest_pred_impl.h	351;"	d
ASSERT_PRED_FORMAT5Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test ASSERT_PRED_FORMAT5Test;$/;"	t	file:
ASSERT_STRCASEEQ	test/gtest/fused-src/gtest/gtest.h	19833;"	d
ASSERT_STRCASEEQ	test/gtest/include/gtest/gtest.h	2063;"	d
ASSERT_STRCASENE	test/gtest/fused-src/gtest/gtest.h	19835;"	d
ASSERT_STRCASENE	test/gtest/include/gtest/gtest.h	2065;"	d
ASSERT_STREQ	test/gtest/fused-src/gtest/gtest.h	19829;"	d
ASSERT_STREQ	test/gtest/include/gtest/gtest.h	2059;"	d
ASSERT_STRNE	test/gtest/fused-src/gtest/gtest.h	19831;"	d
ASSERT_STRNE	test/gtest/include/gtest/gtest.h	2061;"	d
ASSERT_THROW	test/gtest/fused-src/gtest/gtest.h	19317;"	d
ASSERT_THROW	test/gtest/include/gtest/gtest.h	1904;"	d
ASSERT_TRUE	test/gtest/fused-src/gtest/gtest.h	19333;"	d
ASSERT_TRUE	test/gtest/include/gtest/gtest.h	1920;"	d
ATAX_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	9;"	d
ATAX_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	9;"	d
ATypeParamDeathTest	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(ATypeParamDeathTest);$/;"	v
ATypeParamDeathTest	test/gtest/test/gtest_output_test_.cc	/^class ATypeParamDeathTest : public testing::Test {$/;"	c	file:
ATypedDeathTest	test/gtest/test/gtest_output_test_.cc	/^class ATypedDeathTest : public testing::Test {$/;"	c	file:
Abort	test/gtest/fused-src/gtest/gtest-all.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix
Abort	test/gtest/fused-src/gtest/gtest-all.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl
Abort	test/gtest/fused-src/gtest/gtest.h	/^inline void Abort() { abort(); }$/;"	f	namespace:std::tr1::posix
Abort	test/gtest/include/gtest/internal/gtest-port.h	/^inline void Abort() { abort(); }$/;"	f	namespace:testing::internal::posix
Abort	test/gtest/src/gtest-death-test.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl
Abort	test/gtest/src/gtest-port.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix
Abort	test/gtest/test/gtest-death-test_test.cc	/^  virtual void Abort(AbortReason reason) {$/;"	f	class:MockDeathTest
AbortArgument	test/gtest/test/gtest-death-test_test.cc	/^  DeathTest::AbortReason AbortArgument(int n) const {$/;"	f	class:MockDeathTestFactory
AbortCalls	test/gtest/test/gtest-death-test_test.cc	/^  int AbortCalls() const { return abort_args_.size(); }$/;"	f	class:MockDeathTestFactory
AbortReason	test/gtest/fused-src/gtest/gtest.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbortReason	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbstractCacheState	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  AbstractCacheState(unsigned S, unsigned W, unsigned L) : L(L), W(W) {$/;"	f	struct:AbstractCacheState
AbstractCacheState	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^struct AbstractCacheState {$/;"	s	file:
AbstractSocketWriter	test/gtest/fused-src/gtest/gtest-all.cc	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
AbstractSocketWriter	test/gtest/src/gtest-internal-inl.h	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
Accumulate	test/gtest/test/gtest_unittest.cc	/^static void Accumulate(int n) { g_sum += n; }$/;"	f	namespace:__anon14
Ack	experiments/backup/benchmarks/src/base/ackermann.c	/^Ack(int M, int N) {$/;"	f
Ack	experiments/benchmarks/src/base/ackermann.c	/^Ack(int M, int N) {$/;"	f
Activate	docs/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m	class:SearchBox
AdHocTest	test/gtest/test/gtest_output_test_.cc	/^void AdHocTest() {$/;"	f
AddArgument	test/gtest/fused-src/gtest/gtest-all.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments
AddArgument	test/gtest/src/gtest-death-test.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments
AddArguments	test/gtest/fused-src/gtest/gtest-all.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments
AddArguments	test/gtest/src/gtest-death-test.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments
AddDiscriminators	include/GEOS.h	/^  AddDiscriminators,$/;"	e	enum:OptimizationKind
AddEnvironment	test/gtest/fused-src/gtest/gtest-all.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest
AddEnvironment	test/gtest/src/gtest.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest
AddFailure	test/gtest/test/gtest_output_test_.cc	/^  static void AddFailure(FailureMode failure) {$/;"	f	class:ExpectFailureTest
AddFailure	test/gtest/test/gtest_unittest.cc	/^  static void AddFailure(FailureMode failure) {$/;"	f	class:__anon14::ScopedFakeTestPartResultReporterTest
AddFailureHelper	test/gtest/test/gtest_unittest.cc	/^void AddFailureHelper(bool* aborted) {$/;"	f	namespace:__anon16
AddFailureInOtherThread	test/gtest/test/gtest_output_test_.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;"	f	class:ExpectFailureWithThreadsTest
AddFailureInOtherThread	test/gtest/test/gtest_unittest.cc	/^  static void AddFailureInOtherThread(FailureMode failure) {$/;"	f	class:__anon14::ScopedFakeTestPartResultReporterWithThreadsTest
AddFatalFailure	test/gtest/test/gtest_unittest.cc	/^static void AddFatalFailure() {$/;"	f	namespace:__anon14
AddGlobalTestEnvironment	test/gtest/fused-src/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing
AddGlobalTestEnvironment	test/gtest/include/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing
AddNonfatalFailure	test/gtest/test/gtest_unittest.cc	/^static void AddNonfatalFailure() {$/;"	f	namespace:__anon14
AddRef	test/gtest/fused-src/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	test/gtest/fused-src/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddReference	test/gtest/fused-src/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	test/gtest/fused-src/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	test/gtest/include/gtest/internal/gtest-internal.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	test/gtest/include/gtest/internal/gtest-internal.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddTestCaseInstantiation	test/gtest/fused-src/gtest/gtest.h	/^  int AddTestCaseInstantiation(const string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTestCaseInstantiation	test/gtest/include/gtest/internal/gtest-param-util.h	/^  int AddTestCaseInstantiation(const string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl
AddTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestCase::AddTestInfo(TestInfo * test_info) {$/;"	f	class:testing::TestCase
AddTestInfo	test/gtest/src/gtest-internal-inl.h	/^  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl
AddTestInfo	test/gtest/src/gtest.cc	/^void TestCase::AddTestInfo(TestInfo * test_info) {$/;"	f	class:testing::TestCase
AddTestName	test/gtest/fused-src/gtest/gtest.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestCasePState
AddTestName	test/gtest/include/gtest/internal/gtest-internal.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestCasePState
AddTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult
AddTestPartResult	test/gtest/src/gtest.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult
AddTestPattern	test/gtest/fused-src/gtest/gtest.h	/^  void AddTestPattern(const char* test_case_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTestPattern	test/gtest/include/gtest/internal/gtest-param-util.h	/^  void AddTestPattern(const char* test_case_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTwo	test/gtest/test/gtest-port_test.cc	/^void AddTwo(int* param) { *param += 2; }$/;"	f	namespace:testing::internal
Address	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned Address = 0x400780;$/;"	m	struct:MachineAST	file:
AddressMap	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^typedef std::unordered_map<MachineInstr*, unsigned> AddressMap;$/;"	t	file:
Addresses	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  AddressMap Addresses;$/;"	m	struct:MachineAST	file:
AdjustForParameterizedTests	test/gtest/test/gtest_filter_unittest.py	/^  def AdjustForParameterizedTests(self, tests_to_run):$/;"	m	class:GTestFilterUnitTest
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Advance	test/gtest/fused-src/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Advance	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
AggressiveDCE	include/GEOS.h	/^  AggressiveDCE,$/;"	e	enum:OptimizationKind
Aint	experiments/backup/benchmarks/src/base/fannkuch.c	15;"	d	file:
Aint	experiments/benchmarks/src/base/fannkuch.c	15;"	d	file:
AlignmentFromAssumptions	include/GEOS.h	/^  AlignmentFromAssumptions,$/;"	e	enum:OptimizationKind
AllBlocks	include/Profiling/GCOV.h	/^  bool AllBlocks;$/;"	m	struct:llvm::GCOVOptions
AllowsGenericStreaming	test/gtest/test/gtest-printers_test.cc	/^class AllowsGenericStreaming {};$/;"	c	namespace:testing::gtest_printers_test	file:
AllowsGenericStreamingAndImplicitConversionTemplate	test/gtest/test/gtest-printers_test.cc	/^class AllowsGenericStreamingAndImplicitConversionTemplate {$/;"	c	namespace:testing::gtest_printers_test	file:
AllowsGenericStreamingTemplate	test/gtest/test/gtest-printers_test.cc	/^class AllowsGenericStreamingTemplate {};$/;"	c	namespace:testing::gtest_printers_test	file:
AlmostEquals	test/gtest/fused-src/gtest/gtest.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint
AlmostEquals	test/gtest/include/gtest/internal/gtest-internal.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint
AlsoRunDisabledTests	test/gtest/test/gtest_unittest.cc	/^  static Flags AlsoRunDisabledTests(bool also_run_disabled_tests) {$/;"	f	struct:testing::Flags
AlsoRunDisabledTestsFlag	test/gtest/test/gtest_shuffle_test.py	/^def AlsoRunDisabledTestsFlag():$/;"	f
AlwaysFalse	test/gtest/fused-src/gtest/gtest.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal
AlwaysFalse	test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal
AlwaysTrue	test/gtest/fused-src/gtest/gtest-all.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal
AlwaysTrue	test/gtest/src/gtest.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal
AnalysisActivated	include/CostEstimator/CostEstimatorOptions.h	/^    std::vector<CostAnalysisKind> AnalysisActivated;$/;"	m	struct:__anon4::CostEstimatorOptions
And	experiments/backup/benchmarks/src/aha/aha.h	/^int And(int x, int y, int z) {return x & y;}$/;"	f
And	experiments/benchmarks/src/aha/aha.h	/^int And(int x, int y, int z) {return x & y;}$/;"	f
AnonymousEnum	test/gtest/test/gtest-printers_test.cc	/^enum AnonymousEnum {$/;"	g	file:
AnotherSubClassOfTest	test/gtest/test/gtest_unittest.cc	/^class AnotherSubClassOfTest : public Test {};$/;"	c	namespace:__anon14	file:
AnsiToUtf16	test/gtest/fused-src/gtest/gtest-all.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String
AnsiToUtf16	test/gtest/src/gtest.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String
Append	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Append	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventRepeater::Append(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Append	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray
Append	test/gtest/scripts/pump.py	/^  def Append(self, s):$/;"	m	class:Output
Append	test/gtest/src/gtest-test-part.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray
Append	test/gtest/src/gtest.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Append	test/gtest/src/gtest.cc	/^void TestEventRepeater::Append(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
AppendMessage	test/gtest/fused-src/gtest/gtest.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult
AppendMessage	test/gtest/include/gtest/gtest.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult
AppendUserMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal
AppendUserMessage	test/gtest/src/gtest.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal
ArchSensitive	include/CostEstimator/CostEstimatorOptions.h	/^     NonArchSensitive, ArchSensitive$/;"	e	enum:__anon4::CostEstimatorOptionsSet
Arguments	test/gtest/fused-src/gtest/gtest-all.cc	/^  Arguments() {$/;"	f	class:testing::internal::Arguments
Arguments	test/gtest/fused-src/gtest/gtest-all.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Arguments	test/gtest/src/gtest-death-test.cc	/^  Arguments() {$/;"	f	class:testing::internal::Arguments
Arguments	test/gtest/src/gtest-death-test.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Argv	test/gtest/fused-src/gtest/gtest-all.cc	/^  char* const* Argv() {$/;"	f	class:testing::internal::Arguments
Argv	test/gtest/src/gtest-death-test.cc	/^  char* const* Argv() {$/;"	f	class:testing::internal::Arguments
Arity	test/gtest/scripts/gen_gtest_pred_impl.py	/^def Arity(n):$/;"	f
Array1Dim	experiments/backup/benchmarks/src/base/dry.c	/^typedef int	Array1Dim[51];$/;"	t	file:
Array1Dim	experiments/backup/benchmarks/src/base/fldry.c	/^typedef extended	Array1Dim[51];$/;"	t	file:
Array1Dim	experiments/benchmarks/src/base/dry.c	/^typedef int	Array1Dim[51];$/;"	t	file:
Array1Dim	experiments/benchmarks/src/base/fldry.c	/^typedef extended	Array1Dim[51];$/;"	t	file:
Array1Glob	experiments/backup/benchmarks/src/base/dry.c	/^Array1Dim	Array1Glob;$/;"	v
Array1Glob	experiments/backup/benchmarks/src/base/fldry.c	/^Array1Dim	Array1Glob;$/;"	v
Array1Glob	experiments/benchmarks/src/base/dry.c	/^Array1Dim	Array1Glob;$/;"	v
Array1Glob	experiments/benchmarks/src/base/fldry.c	/^Array1Dim	Array1Glob;$/;"	v
Array2D_double_copy	experiments/backup/benchmarks/src/SciMark2-C/array.c	/^  void Array2D_double_copy(int M, int N, double **B, double **A)$/;"	f
Array2D_double_copy	experiments/benchmarks/src/SciMark2-C/array.c	/^  void Array2D_double_copy(int M, int N, double **B, double **A)$/;"	f
Array2D_double_delete	experiments/backup/benchmarks/src/SciMark2-C/array.c	/^void Array2D_double_delete(int M, int N, double **A)$/;"	f
Array2D_double_delete	experiments/benchmarks/src/SciMark2-C/array.c	/^void Array2D_double_delete(int M, int N, double **A)$/;"	f
Array2Dim	experiments/backup/benchmarks/src/base/dry.c	/^typedef int	Array2Dim[51][51];$/;"	t	file:
Array2Dim	experiments/backup/benchmarks/src/base/fldry.c	/^typedef extended	Array2Dim[51][51];$/;"	t	file:
Array2Dim	experiments/benchmarks/src/base/dry.c	/^typedef int	Array2Dim[51][51];$/;"	t	file:
Array2Dim	experiments/benchmarks/src/base/fldry.c	/^typedef extended	Array2Dim[51][51];$/;"	t	file:
Array2Glob	experiments/backup/benchmarks/src/base/dry.c	/^Array2Dim	Array2Glob;$/;"	v
Array2Glob	experiments/backup/benchmarks/src/base/fldry.c	/^Array2Dim	Array2Glob;$/;"	v
Array2Glob	experiments/benchmarks/src/base/dry.c	/^Array2Dim	Array2Glob;$/;"	v
Array2Glob	experiments/benchmarks/src/base/fldry.c	/^Array2Dim	Array2Glob;$/;"	v
ArrayAsVector	test/gtest/fused-src/gtest/gtest-all.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing
ArrayAsVector	test/gtest/src/gtest.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing
ArrayAwareFind	test/gtest/fused-src/gtest/gtest.h	/^Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {$/;"	f	namespace:testing::internal
ArrayAwareFind	test/gtest/include/gtest/internal/gtest-internal.h	/^Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {$/;"	f	namespace:testing::internal
ArrayEq	test/gtest/fused-src/gtest/gtest.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal
ArrayEq	test/gtest/fused-src/gtest/gtest.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }$/;"	f	namespace:testing::internal
ArrayEq	test/gtest/include/gtest/internal/gtest-internal.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal
ArrayEq	test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }$/;"	f	namespace:testing::internal
Asize	experiments/backup/benchmarks/src/base/ffbench.c	141;"	d	file:
Asize	experiments/benchmarks/src/base/ffbench.c	141;"	d	file:
Assert	test/gtest/test/gtest_uninitialized_test.py	/^def Assert(condition):$/;"	f
AssertDebugDeathHelper	test/gtest/test/gtest-death-test_test.cc	/^void AssertDebugDeathHelper(bool* aborted) {$/;"	f
AssertEq	test/gtest/test/gtest_env_var_test.py	/^def AssertEq(expected, actual):$/;"	f
AssertEq	test/gtest/test/gtest_uninitialized_test.py	/^def AssertEq(expected, actual):$/;"	f
AssertEquivalentNodes	test/gtest/test/gtest_xml_test_utils.py	/^  def AssertEquivalentNodes(self, expected_node, actual_node):$/;"	m	class:GTestXMLTestCase
AssertHeld	test/gtest/fused-src/gtest/gtest.h	/^  void AssertHeld() const {$/;"	f	class:std::tr1::MutexBase
AssertHeld	test/gtest/fused-src/gtest/gtest.h	/^  void AssertHeld() const {}$/;"	f	class:std::tr1::Mutex
AssertHeld	test/gtest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {$/;"	f	class:testing::internal::MutexBase
AssertHeld	test/gtest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {}$/;"	f	class:testing::internal::Mutex
AssertHelper	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type,$/;"	f	class:testing::internal::AssertHelper
AssertHelper	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelper	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelper	test/gtest/src/gtest.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type,$/;"	f	class:testing::internal::AssertHelper
AssertHelperData	test/gtest/fused-src/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	test/gtest/fused-src/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertHelperData	test/gtest/include/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	test/gtest/include/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertIsEven	test/gtest/test/gtest_unittest.cc	/^AssertionResult AssertIsEven(const char* expr, int n) {$/;"	f	namespace:__anon14
AssertIsEvenFunctor	test/gtest/test/gtest_unittest.cc	/^struct AssertIsEvenFunctor {$/;"	s	namespace:__anon14	file:
AssertNoFatalFailureIgnoresFailuresInOtherThreads	test/gtest/test/gtest_stress_test.cc	/^void AssertNoFatalFailureIgnoresFailuresInOtherThreads() {$/;"	f	namespace:testing::__anon23
AssertPartitionIsValid	test/gtest/test/gtest_filter_unittest.py	/^  def AssertPartitionIsValid(self, set_var, list_of_sets):$/;"	m	class:GTestFilterUnitTest
AssertPred1Helper	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult AssertPred1Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred1Helper	test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred1Helper(const char* pred_text,$/;"	f
AssertPred2Helper	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult AssertPred2Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred2Helper	test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred2Helper(const char* pred_text,$/;"	f
AssertPred3Helper	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult AssertPred3Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred3Helper	test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred3Helper(const char* pred_text,$/;"	f
AssertPred4Helper	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult AssertPred4Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred4Helper	test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred4Helper(const char* pred_text,$/;"	f
AssertPred5Helper	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult AssertPred5Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred5Helper	test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred5Helper(const char* pred_text,$/;"	f
AssertSetEqual	test/gtest/test/gtest_filter_unittest.py	/^  def AssertSetEqual(self, lhs, rhs):$/;"	m	class:GTestFilterUnitTest
AssertStringArrayEq	test/gtest/test/gtest_unittest.cc	/^  static void AssertStringArrayEq(size_t size1, CharType** array1,$/;"	f	class:testing::InitGoogleTestTest
AssertSumIsEven4	test/gtest/test/gtest_unittest.cc	/^AssertionResult AssertSumIsEven4($/;"	f	namespace:__anon14
AssertSumIsEven5Functor	test/gtest/test/gtest_unittest.cc	/^struct AssertSumIsEven5Functor {$/;"	s	namespace:__anon14	file:
AssertTypeEq	test/gtest/fused-src/gtest/gtest.h	/^struct AssertTypeEq<T, T> {$/;"	s	namespace:testing::internal
AssertTypeEq	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct AssertTypeEq<T, T> {$/;"	s	namespace:testing::internal
AssertionFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult AssertionFailure() {$/;"	f	namespace:testing
AssertionFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing
AssertionFailure	test/gtest/src/gtest.cc	/^AssertionResult AssertionFailure() {$/;"	f	namespace:testing
AssertionFailure	test/gtest/src/gtest.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing
AssertionResult	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionResult	test/gtest/fused-src/gtest/gtest.h	/^  explicit AssertionResult(bool success) : success_(success) {}$/;"	f	class:testing::AssertionResult
AssertionResult	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionResult	test/gtest/include/gtest/gtest.h	/^  explicit AssertionResult(bool success) : success_(success) {}$/;"	f	class:testing::AssertionResult
AssertionResult	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionResult	test/gtest/src/gtest.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionResult	test/gtest/test/gtest_unittest.cc	/^class AssertionResult {};$/;"	c	namespace:my_namespace::testing	file:
AssertionSuccess	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult AssertionSuccess() {$/;"	f	namespace:testing
AssertionSuccess	test/gtest/src/gtest.cc	/^AssertionResult AssertionSuccess() {$/;"	f	namespace:testing
AssumeRole	test/gtest/fused-src/gtest/gtest-all.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest
AssumeRole	test/gtest/fused-src/gtest/gtest-all.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest
AssumeRole	test/gtest/fused-src/gtest/gtest-all.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest
AssumeRole	test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest
AssumeRole	test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest
AssumeRole	test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest
AssumeRole	test/gtest/test/gtest-death-test_test.cc	/^  virtual TestRole AssumeRole() {$/;"	f	class:MockDeathTest
AssumeRoleCalls	test/gtest/test/gtest-death-test_test.cc	/^  int AssumeRoleCalls() const { return assume_role_calls_; }$/;"	f	class:MockDeathTestFactory
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
AtEnd	test/gtest/fused-src/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
AtEnd	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
AtomMatchesChar	test/gtest/fused-src/gtest/gtest-all.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal
AtomMatchesChar	test/gtest/src/gtest-port.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal
AtomicCounterWithMutex	test/gtest/test/gtest-port_test.cc	/^  explicit AtomicCounterWithMutex(Mutex* mutex) :$/;"	f	class:testing::internal::AtomicCounterWithMutex
AtomicCounterWithMutex	test/gtest/test/gtest-port_test.cc	/^class AtomicCounterWithMutex {$/;"	c	namespace:testing::internal	file:
AutoHandle	test/gtest/fused-src/gtest/gtest-all.cc	/^  AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit AutoHandle(HANDLE handle) : handle_(handle) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	test/gtest/fused-src/gtest/gtest-all.cc	/^class AutoHandle {$/;"	c	namespace:testing::internal	file:
AutoHandle	test/gtest/src/gtest-internal-inl.h	/^  AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	test/gtest/src/gtest-internal-inl.h	/^  explicit AutoHandle(HANDLE handle) : handle_(handle) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	test/gtest/src/gtest-internal-inl.h	/^class AutoHandle {$/;"	c	namespace:testing::internal
B	test/gtest/test/gtest-linked_ptr_test.cc	/^  B() { *history << "B" << mynum << " ctor\\n"; }$/;"	f	class:__anon25::B
B	test/gtest/test/gtest-linked_ptr_test.cc	/^class B : public A {$/;"	c	namespace:__anon25	file:
B0	experiments/backup/benchmarks/src/base/flops-1.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-2.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-3.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-4.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-5.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-6.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-7.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops-8.c	/^double B0 = 1.0;$/;"	v
B0	experiments/backup/benchmarks/src/base/flops.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-1.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-2.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-3.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-4.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-5.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-6.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-7.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops-8.c	/^double B0 = 1.0;$/;"	v
B0	experiments/benchmarks/src/base/flops.c	/^double B0 = 1.0;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-1.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-2.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-3.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-4.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-5.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-6.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-7.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops-8.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/backup/benchmarks/src/base/flops.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-1.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-2.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-3.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-4.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-5.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-6.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-7.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops-8.c	/^double B1 = -0.4999999999982;$/;"	v
B1	experiments/benchmarks/src/base/flops.c	/^double B1 = -0.4999999999982;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-1.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-2.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-3.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-4.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-5.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-6.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-7.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops-8.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/backup/benchmarks/src/base/flops.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-1.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-2.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-3.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-4.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-5.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-6.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-7.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops-8.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B2	experiments/benchmarks/src/base/flops.c	/^double B2 = 0.4166666664651E-1;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-1.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-2.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-3.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-4.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-5.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-6.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-7.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops-8.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/backup/benchmarks/src/base/flops.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-1.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-2.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-3.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-4.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-5.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-6.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-7.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops-8.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B3	experiments/benchmarks/src/base/flops.c	/^double B3 = -0.1388888805755E-2;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-1.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-2.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-3.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-4.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-5.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-6.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-7.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops-8.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/backup/benchmarks/src/base/flops.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-1.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-2.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-3.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-4.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-5.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-6.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-7.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops-8.c	/^double B4 = 0.24801428034E-4;$/;"	v
B4	experiments/benchmarks/src/base/flops.c	/^double B4 = 0.24801428034E-4;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-1.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-2.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-3.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-4.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-5.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-6.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-7.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops-8.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/backup/benchmarks/src/base/flops.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-1.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-2.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-3.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-4.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-5.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-6.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-7.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops-8.c	/^double B5 = -0.2754213324E-6;$/;"	v
B5	experiments/benchmarks/src/base/flops.c	/^double B5 = -0.2754213324E-6;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-1.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-2.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-3.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-4.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-5.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-6.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-7.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops-8.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/backup/benchmarks/src/base/flops.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-1.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-2.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-3.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-4.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-5.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-6.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-7.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops-8.c	/^double B6 = 0.20189405E-8;$/;"	v
B6	experiments/benchmarks/src/base/flops.c	/^double B6 = 0.20189405E-8;$/;"	v
BBITS	experiments/backup/benchmarks/src/base/nsieve-bits.c	12;"	d	file:
BBITS	experiments/benchmarks/src/base/nsieve-bits.c	12;"	d	file:
BFLIP	experiments/backup/benchmarks/src/base/nsieve-bits.c	16;"	d	file:
BFLIP	experiments/benchmarks/src/base/nsieve-bits.c	16;"	d	file:
BICG_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	9;"	d
BICG_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	9;"	d
BIG	experiments/backup/benchmarks/src/sgefa/driver.c	11;"	d	file:
BIG	experiments/benchmarks/src/sgefa/driver.c	11;"	d	file:
BINARY_OUTPUT	test/gtest/test/gtest_catch_exceptions_test.py	/^  BINARY_OUTPUT = gtest_test_utils.Subprocess([EXE_PATH], env=environ).output$/;"	v
BIN_MASK	experiments/backup/benchmarks/src/base/misr.c	39;"	d	file:
BIN_MASK	experiments/benchmarks/src/base/misr.c	39;"	d	file:
BMASK	experiments/backup/benchmarks/src/base/nsieve-bits.c	14;"	d	file:
BMASK	experiments/benchmarks/src/base/nsieve-bits.c	14;"	d	file:
BREAK_ON_FAILURE_ENV_VAR	test/gtest/test/gtest_break_on_failure_unittest.py	/^BREAK_ON_FAILURE_ENV_VAR = 'GTEST_BREAK_ON_FAILURE'$/;"	v
BREAK_ON_FAILURE_FLAG	test/gtest/test/gtest_break_on_failure_unittest.py	/^BREAK_ON_FAILURE_FLAG = 'gtest_break_on_failure'$/;"	v
BSIZE	experiments/backup/benchmarks/src/base/nsieve-bits.c	13;"	d	file:
BSIZE	experiments/benchmarks/src/base/nsieve-bits.c	13;"	d	file:
BTEST	experiments/backup/benchmarks/src/base/nsieve-bits.c	15;"	d	file:
BTEST	experiments/benchmarks/src/base/nsieve-bits.c	15;"	d	file:
BUFSIZE	experiments/backup/benchmarks/src/base/richards_benchmark.c	39;"	d	file:
BUFSIZE	experiments/benchmarks/src/base/richards_benchmark.c	39;"	d	file:
Bar	test/gtest/test/gtest_unittest.cc	/^  int Bar() const { return 1; }$/;"	f	class:__anon16::Foo	file:
BarEnvironment	test/gtest/test/gtest_output_test_.cc	/^class BarEnvironment : public testing::Environment {$/;"	c	file:
Base	test/gtest/test/gtest-port_test.cc	/^  Base() : member_(0) {}$/;"	f	class:testing::internal::Base
Base	test/gtest/test/gtest-port_test.cc	/^  explicit Base(int n) : member_(n) {}$/;"	f	class:testing::internal::Base
Base	test/gtest/test/gtest-port_test.cc	/^class Base {$/;"	c	namespace:testing::internal	file:
Base	test/gtest/test/gtest_unittest.cc	/^  explicit Base(int an_x) : x_(an_x) {}$/;"	f	class:Base
Base	test/gtest/test/gtest_unittest.cc	/^class Base {$/;"	c	file:
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
BaseGenerator	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
BaseGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
BasicNarrowIoManip	test/gtest/fused-src/gtest/gtest.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message::std
BasicNarrowIoManip	test/gtest/include/gtest/gtest-message.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message::std
BeautifyCode	test/gtest/scripts/pump.py	/^def BeautifyCode(string):$/;"	f
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::RangeGenerator
Begin	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
Begin	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
Begin	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::RangeGenerator
Begin	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
Big	test/gtest/test/gtest-printers_test.cc	/^  Big() { memset(array, 0, sizeof(array)); }$/;"	f	struct:testing::gtest_printers_test::Big
Big	test/gtest/test/gtest-printers_test.cc	/^struct Big {$/;"	s	namespace:testing::gtest_printers_test	file:
BigTuple	test/gtest/test/gtest-tuple_test.cc	/^  typedef tuple<int, int, int, int, int, int, int, int, int, int> BigTuple;$/;"	t	class:__anon27::BigTupleTest	file:
BigTupleTest	test/gtest/test/gtest-tuple_test.cc	/^  BigTupleTest() :$/;"	f	class:__anon27::BigTupleTest
BigTupleTest	test/gtest/test/gtest-tuple_test.cc	/^class BigTupleTest : public testing::Test {$/;"	c	namespace:__anon27	file:
BiggestInt	test/gtest/fused-src/gtest/gtest.h	/^typedef __int64 BiggestInt;$/;"	t	namespace:std::tr1
BiggestInt	test/gtest/fused-src/gtest/gtest.h	/^typedef long long BiggestInt;  \/\/ NOLINT$/;"	t	namespace:std::tr1
BiggestInt	test/gtest/include/gtest/internal/gtest-port.h	/^typedef __int64 BiggestInt;$/;"	t	namespace:testing::internal
BiggestInt	test/gtest/include/gtest/internal/gtest-port.h	/^typedef long long BiggestInt;  \/\/ NOLINT$/;"	t	namespace:testing::internal
BiggestInt	test/gtest/test/gtest-printers_test.cc	/^  operator ::testing::internal::BiggestInt() const { return 42; }$/;"	f	class:BiggestIntConvertible::operator::testing::internal
BiggestIntConvertible	test/gtest/test/gtest-printers_test.cc	/^class BiggestIntConvertible {$/;"	c	file:
BiggestParsable	test/gtest/test/gtest-death-test_test.cc	/^typedef unsigned __int64 BiggestParsable;$/;"	t	file:
BiggestParsable	test/gtest/test/gtest-death-test_test.cc	/^typedef unsigned long long BiggestParsable;$/;"	t	file:
BiggestSignedParsable	test/gtest/test/gtest-death-test_test.cc	/^typedef signed __int64 BiggestSignedParsable;$/;"	t	file:
BiggestSignedParsable	test/gtest/test/gtest-death-test_test.cc	/^typedef signed long long BiggestSignedParsable;$/;"	t	file:
Bind	test/gtest/fused-src/gtest/gtest.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
Bind	test/gtest/include/gtest/internal/gtest-type-util.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
BitBoard64	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	/^	BitBoard64(uint32_t l, uint32_t h) {lowbits = l, highbits = h;};$/;"	f	class:BitBoard64
BitBoard64	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	/^	BitBoard64(void) {};$/;"	f	class:BitBoard64
BitBoard64	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	/^class BitBoard64$/;"	c
BitBoard64	experiments/benchmarks/src/.hexxagon/bitboard64.h	/^	BitBoard64(uint32_t l, uint32_t h) {lowbits = l, highbits = h;};$/;"	f	class:BitBoard64
BitBoard64	experiments/benchmarks/src/.hexxagon/bitboard64.h	/^	BitBoard64(void) {};$/;"	f	class:BitBoard64
BitBoard64	experiments/benchmarks/src/.hexxagon/bitboard64.h	/^class BitBoard64$/;"	c
Bits	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
Bits	test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
Bits	test/gtest/test/gtest_unittest.cc	/^  typedef typename Floating::Bits Bits;$/;"	t	class:__anon14::FloatingPointTest	file:
BlockIterator	include/Profiling/GCOV.h	/^  BlockIterator;$/;"	t	class:llvm::GCOVFunction
BlockLines	include/Profiling/GCOV.h	/^  typedef DenseMap<uint32_t, BlockVector> BlockLines;$/;"	t	class:llvm::FileInfo
BlockVector	include/Profiling/GCOV.h	/^  typedef SmallVector<const GCOVBlock *, 4> BlockVector;$/;"	t	class:llvm::FileInfo
Blocks	include/Profiling/GCOV.h	/^    BlockLines Blocks;$/;"	m	struct:llvm::FileInfo::LineData
Blocks	include/Profiling/GCOV.h	/^  SmallVector<std::unique_ptr<GCOVBlock>, 16> Blocks;$/;"	m	class:llvm::GCOVFunction
Bool	test/gtest/fused-src/gtest/gtest.h	/^inline internal::ParamGenerator<bool> Bool() {$/;"	f	namespace:testing
Bool	test/gtest/include/gtest/gtest-param-test.h	/^inline internal::ParamGenerator<bool> Bool() {$/;"	f	namespace:testing
Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^  explicit Bool(int val) : value(val != 0) {}$/;"	f	struct:Bool
Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct Bool {$/;"	s	file:
BoolFromGTestEnv	test/gtest/fused-src/gtest/gtest-all.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal
BoolFromGTestEnv	test/gtest/src/gtest-port.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal
BoolGlob	experiments/backup/benchmarks/src/base/dry.c	/^boolean		BoolGlob;$/;"	v
BoolGlob	experiments/backup/benchmarks/src/base/fldry.c	/^boolean		BoolGlob;$/;"	v
BoolGlob	experiments/benchmarks/src/base/dry.c	/^boolean		BoolGlob;$/;"	v
BoolGlob	experiments/benchmarks/src/base/fldry.c	/^boolean		BoolGlob;$/;"	v
Branch	include/CostEstimator/CostEstimatorOptions.h	/^    Cache, StaticInstruction, TTIInstruction, Branch, Call$/;"	e	enum:__anon4::CostAnalysisKind
BranchAnalysis	include/CostEstimator/CostAnalysis.h	/^class BranchAnalysis : public CostAnalysis {$/;"	c
BranchCount	include/Profiling/GCOV.h	/^  bool BranchCount;$/;"	m	struct:llvm::GCOVOptions
BranchInfo	include/Profiling/GCOV.h	/^  bool BranchInfo;$/;"	m	struct:llvm::GCOVOptions
BranchMispredictionCost	include/CostEstimator/CostEstimatorOptions.h	/^    double BranchMispredictionCost = 40; $/;"	m	struct:__anon4::CostEstimatorOptions
BranchMispredictionFrequency	include/CostEstimator/CostEstimatorOptions.h	/^    double BranchMispredictionFrequency = 0.1; $/;"	m	struct:__anon4::CostEstimatorOptions
Branches	include/Profiling/GCOV.h	/^    uint32_t Branches;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
BranchesExec	include/Profiling/GCOV.h	/^    uint32_t BranchesExec;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
BranchesTaken	include/Profiling/GCOV.h	/^    uint32_t BranchesTaken;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
BreakCriticalEdges	include/GEOS.h	/^  BreakCriticalEdges,$/;"	e	enum:OptimizationKind
BreakOnFailure	test/gtest/test/gtest_unittest.cc	/^  static Flags BreakOnFailure(bool break_on_failure) {$/;"	f	struct:testing::Flags
Bubble	experiments/backup/benchmarks/src/base/bubblesort.c	/^void Bubble(int run) {$/;"	f
Bubble	experiments/benchmarks/src/base/bubblesort.c	/^void Bubble(int run) {$/;"	f
Buffer	include/Profiling/GCOV.h	/^  MemoryBuffer *Buffer;$/;"	m	class:llvm::GCOVBuffer
Buffer	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  std::unique_ptr<MemoryBuffer> Buffer;$/;"	m	class:__anon2::LineConsumer	file:
ByRef	test/gtest/fused-src/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	test/gtest/fused-src/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
C0	experiments/backup/benchmarks/src/base/flops-1.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-2.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-3.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-4.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-5.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-6.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-7.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops-8.c	/^double C0 = 1.0;$/;"	v
C0	experiments/backup/benchmarks/src/base/flops.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-1.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-2.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-3.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-4.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-5.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-6.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-7.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops-8.c	/^double C0 = 1.0;$/;"	v
C0	experiments/benchmarks/src/base/flops.c	/^double C0 = 1.0;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-1.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-2.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-3.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-4.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-5.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-6.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-7.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops-8.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/backup/benchmarks/src/base/flops.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-1.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-2.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-3.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-4.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-5.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-6.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-7.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops-8.c	/^double C1 = 0.99999999668;$/;"	v
C1	experiments/benchmarks/src/base/flops.c	/^double C1 = 0.99999999668;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-1.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-2.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-3.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-4.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-5.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-6.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-7.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops-8.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/backup/benchmarks/src/base/flops.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-1.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-2.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-3.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-4.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-5.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-6.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-7.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops-8.c	/^double C2 = 0.49999995173;$/;"	v
C2	experiments/benchmarks/src/base/flops.c	/^double C2 = 0.49999995173;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-1.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-2.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-3.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-4.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-5.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-6.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-7.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops-8.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/backup/benchmarks/src/base/flops.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-1.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-2.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-3.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-4.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-5.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-6.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-7.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops-8.c	/^double C3 = 0.16666704243;$/;"	v
C3	experiments/benchmarks/src/base/flops.c	/^double C3 = 0.16666704243;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-1.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-2.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-3.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-4.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-5.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-6.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-7.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops-8.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/backup/benchmarks/src/base/flops.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-1.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-2.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-3.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-4.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-5.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-6.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-7.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops-8.c	/^double C4 = 0.4166685027E-1;$/;"	v
C4	experiments/benchmarks/src/base/flops.c	/^double C4 = 0.4166685027E-1;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-1.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-2.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-3.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-4.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-5.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-6.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-7.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops-8.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/backup/benchmarks/src/base/flops.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-1.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-2.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-3.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-4.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-5.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-6.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-7.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops-8.c	/^double C5 = 0.832672635E-2;$/;"	v
C5	experiments/benchmarks/src/base/flops.c	/^double C5 = 0.832672635E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-1.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-2.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-3.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-4.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-5.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-6.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-7.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops-8.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/backup/benchmarks/src/base/flops.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-1.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-2.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-3.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-4.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-5.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-6.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-7.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops-8.c	/^double C6 = 0.140836136E-2;$/;"	v
C6	experiments/benchmarks/src/base/flops.c	/^double C6 = 0.140836136E-2;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-1.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-2.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-3.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-4.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-5.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-6.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-7.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops-8.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/backup/benchmarks/src/base/flops.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-1.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-2.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-3.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-4.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-5.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-6.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-7.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops-8.c	/^double C7 = 0.17358267E-3;$/;"	v
C7	experiments/benchmarks/src/base/flops.c	/^double C7 = 0.17358267E-3;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-1.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-2.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-3.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-4.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-5.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-6.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-7.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops-8.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/backup/benchmarks/src/base/flops.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-1.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-2.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-3.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-4.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-5.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-6.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-7.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops-8.c	/^double C8 = 0.3931683E-4;$/;"	v
C8	experiments/benchmarks/src/base/flops.c	/^double C8 = 0.3931683E-4;$/;"	v
CAN_GENERATE_GOLDEN_FILE	test/gtest/test/gtest_output_test.py	/^CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS and$/;"	v
CAN_PASS_EMPTY_ENV	test/gtest/test/gtest_filter_unittest.py	/^CAN_PASS_EMPTY_ENV = eval(child.output)$/;"	v
CAN_TEST_EMPTY_FILTER	test/gtest/test/gtest_filter_unittest.py	/^CAN_TEST_EMPTY_FILTER = (CAN_PASS_EMPTY_ENV and CAN_UNSET_ENV)$/;"	v
CAN_UNSET_ENV	test/gtest/test/gtest_filter_unittest.py	/^CAN_UNSET_ENV = eval(child.output)$/;"	v
CATCH_EXCEPTIONS_ENV_VAR	test/gtest/test/gtest_break_on_failure_unittest.py	/^CATCH_EXCEPTIONS_ENV_VAR = 'GTEST_CATCH_EXCEPTIONS'$/;"	v
CATCH_EXCEPTIONS_ENV_VAR_NAME	test/gtest/test/gtest_output_test.py	/^CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'$/;"	v
CFGSimplification	include/GEOS.h	/^  CFGSimplification,$/;"	e	enum:OptimizationKind
CFGStructurization	include/GEOS.h	/^  CFGStructurization,$/;"	e	enum:OptimizationKind
CHOLESKY_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	9;"	d
CHOLESKY_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	9;"	d
CLOCK	experiments/backup/benchmarks/src/base/dry.c	101;"	d	file:
CLOCK	experiments/backup/benchmarks/src/base/fldry.c	102;"	d	file:
CLOCK	experiments/benchmarks/src/base/dry.c	101;"	d	file:
CLOCK	experiments/benchmarks/src/base/fldry.c	102;"	d	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/CostAnalysis/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/CostEstimator/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/ProfileModule/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/CallCostAnalyzer/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/ExecutionFrequency/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Profiling/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/test/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/test/gtest/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/tool/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_BINARY_DIR	build/tools/Makefile	/^CMAKE_BINARY_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/CostAnalysis/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/CostEstimator/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/ProfileModule/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/CallCostAnalyzer/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/ExecutionFrequency/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Profiling/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/test/gtest/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tool/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tools/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/examples/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/CostAnalysis/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/CostEstimator/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/ProfileModule/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/CallCostAnalyzer/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/ExecutionFrequency/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/src/Profiling/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/test/gtest/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/tool/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CMAKE_SOURCE_DIR	build/tools/Makefile	/^CMAKE_SOURCE_DIR = \/home\/vanderson\/dev\/repos\/GEOS1.0\/GEOS$/;"	m
CM_NAME	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	33;"	d	file:
COLOR_DEFAULT	test/gtest/fused-src/gtest/gtest-all.cc	/^  COLOR_DEFAULT,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_DEFAULT	test/gtest/src/gtest.cc	/^  COLOR_DEFAULT,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_ENV_VAR	test/gtest/test/gtest_color_test.py	/^COLOR_ENV_VAR = 'GTEST_COLOR'$/;"	v
COLOR_FLAG	test/gtest/test/gtest_color_test.py	/^COLOR_FLAG = 'gtest_color'$/;"	v
COLOR_GREEN	test/gtest/fused-src/gtest/gtest-all.cc	/^  COLOR_GREEN,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_GREEN	test/gtest/src/gtest.cc	/^  COLOR_GREEN,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_RED	test/gtest/fused-src/gtest/gtest-all.cc	/^  COLOR_RED,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_RED	test/gtest/src/gtest.cc	/^  COLOR_RED,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_YELLOW	test/gtest/fused-src/gtest/gtest-all.cc	/^  COLOR_YELLOW$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_YELLOW	test/gtest/src/gtest.cc	/^  COLOR_YELLOW$/;"	e	enum:testing::internal::GTestColor	file:
COMMAND	test/gtest/test/gtest_color_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_color_test_')$/;"	v
COMMAND	test/gtest/test/gtest_env_var_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_env_var_test_')$/;"	v
COMMAND	test/gtest/test/gtest_filter_unittest.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_filter_unittest_')$/;"	v
COMMAND	test/gtest/test/gtest_shuffle_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_shuffle_test_')$/;"	v
COMMAND	test/gtest/test/gtest_uninitialized_test.py	/^COMMAND = gtest_test_utils.GetTestExecutablePath('gtest_uninitialized_test_')$/;"	v
COMMAND_LIST_TESTS	test/gtest/test/gtest_output_test.py	/^COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])$/;"	v
COMMAND_WITH_COLOR	test/gtest/test/gtest_output_test.py	/^COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])$/;"	v
COMMAND_WITH_DISABLED	test/gtest/test/gtest_output_test.py	/^COMMAND_WITH_DISABLED = ($/;"	v
COMMAND_WITH_SHARDING	test/gtest/test/gtest_output_test.py	/^COMMAND_WITH_SHARDING = ($/;"	v
COMMAND_WITH_TIME	test/gtest/test/gtest_output_test.py	/^COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,$/;"	v
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CONSTANTS_H_	experiments/backup/benchmarks/src/SciMark2-C/constants.h	2;"	d
CONSTANTS_H_	experiments/benchmarks/src/SciMark2-C/constants.h	2;"	d
CORRELATION_H	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	9;"	d
CORRELATION_H	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	9;"	d
COSTESTIMATOROPTIONS_H	include/CostEstimator/CostEstimatorOptions.h	15;"	d
COUNT	experiments/backup/benchmarks/src/base/fp-convert.c	14;"	d	file:
COUNT	experiments/backup/benchmarks/src/base/fp-convert.c	16;"	d	file:
COUNT	experiments/benchmarks/src/base/fp-convert.c	14;"	d	file:
COUNT	experiments/benchmarks/src/base/fp-convert.c	16;"	d	file:
COVARIANCE_H	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	9;"	d
COVARIANCE_H	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	9;"	d
CPUClockInGHz	include/CostEstimator/CostEstimatorOptions.h	/^    double CPUClockInGHz = 1;$/;"	m	struct:__anon4::CostEstimatorOptions
CStringEquals	test/gtest/fused-src/gtest/gtest-all.cc	/^bool String::CStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CStringEquals	test/gtest/src/gtest.cc	/^bool String::CStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CXM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	22;"	d
CXM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	28;"	d
CXM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	34;"	d
CXM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	43;"	d
CXM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	49;"	d
CXM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	22;"	d
CXM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	28;"	d
CXM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	34;"	d
CXM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	43;"	d
CXM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	49;"	d
CYCLES	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	14;"	d	file:
CYCLES	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	16;"	d	file:
CYCLES	experiments/benchmarks/src/SciMark2-C/kernel.c	14;"	d	file:
CYCLES	experiments/benchmarks/src/SciMark2-C/kernel.c	16;"	d	file:
CYM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	21;"	d
CYM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	27;"	d
CYM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	33;"	d
CYM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	42;"	d
CYM	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	48;"	d
CYM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	21;"	d
CYM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	27;"	d
CYM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	33;"	d
CYM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	42;"	d
CYM	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	48;"	d
CZ	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	20;"	d
CZ	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	26;"	d
CZ	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	32;"	d
CZ	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	41;"	d
CZ	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	47;"	d
CZ	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	20;"	d
CZ	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	26;"	d
CZ	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	32;"	d
CZ	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	41;"	d
CZ	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	47;"	d
Cache	include/CostEstimator/CostEstimatorOptions.h	/^    Cache, StaticInstruction, TTIInstruction, Branch, Call$/;"	e	enum:__anon4::CostAnalysisKind
Cache	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  lru::list<unsigned> Cache;$/;"	m	class:CacheSet	file:
CacheAnalysis	include/CostEstimator/CostAnalysis.h	/^class CacheAnalysis : public CostAnalysis {$/;"	c
CacheSet	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  CacheSet(unsigned W, unsigned L) : Size(W), LineSize(L) {$/;"	f	class:CacheSet
CacheSet	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^class CacheSet {$/;"	c	file:
CalculateEndIndex	test/gtest/fused-src/gtest/gtest.h	/^  static int CalculateEndIndex(const T& begin,$/;"	f	class:testing::internal::RangeGenerator
CalculateEndIndex	test/gtest/include/gtest/internal/gtest-param-util.h	/^  static int CalculateEndIndex(const T& begin,$/;"	f	class:testing::internal::RangeGenerator
CalculatePrimesUpTo	test/gtest/samples/prime_tables.h	/^  void CalculatePrimesUpTo(int max) {$/;"	f	class:PreCalculatedPrimeTable
CalculateTestLists	test/gtest/test/gtest_shuffle_test.py	/^def CalculateTestLists():$/;"	f
Call	include/CostEstimator/CostEstimatorOptions.h	/^    Cache, StaticInstruction, TTIInstruction, Branch, Call$/;"	e	enum:__anon4::CostAnalysisKind
CallAnalysis	include/CostEstimator/CostAnalysis.h	/^class CallAnalysis : public CostAnalysis {$/;"	c
CallCost	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      CallCost() : ModulePass(ID) {}$/;"	f	struct:__anon3::CallCost
CallCost	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^  struct CallCost : public ModulePass {$/;"	s	namespace:__anon3	file:
CallTabuList	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::unordered_map<std::string, bool> CallTabuList;$/;"	m	struct:MachineAST	file:
CallThreadLocalGet	test/gtest/test/gtest-port_test.cc	/^void CallThreadLocalGet(ThreadParam thread_local_param) {$/;"	f	namespace:testing::internal
CapitalLetter	experiments/backup/benchmarks/src/base/dry.c	/^typedef char	CapitalLetter;$/;"	t	file:
CapitalLetter	experiments/backup/benchmarks/src/base/fldry.c	/^typedef char	CapitalLetter;$/;"	t	file:
CapitalLetter	experiments/benchmarks/src/base/dry.c	/^typedef char	CapitalLetter;$/;"	t	file:
CapitalLetter	experiments/benchmarks/src/base/fldry.c	/^typedef char	CapitalLetter;$/;"	t	file:
CaptureStderr	test/gtest/fused-src/gtest/gtest-all.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal
CaptureStderr	test/gtest/src/gtest-port.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal
CaptureStdout	test/gtest/fused-src/gtest/gtest-all.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal
CaptureStdout	test/gtest/src/gtest-port.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal
CaptureStream	test/gtest/fused-src/gtest/gtest-all.cc	/^void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {$/;"	f	namespace:testing::internal
CaptureStream	test/gtest/src/gtest-port.cc	/^void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {$/;"	f	namespace:testing::internal
CapturedStream	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream
CapturedStream	test/gtest/fused-src/gtest/gtest-all.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
CapturedStream	test/gtest/src/gtest-port.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream
CapturedStream	test/gtest/src/gtest-port.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
CartesianProductGenerator10	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator10(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator10
CartesianProductGenerator10	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator10$/;"	c	namespace:testing::internal
CartesianProductGenerator10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator10(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator10
CartesianProductGenerator10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator10$/;"	c	namespace:testing::internal
CartesianProductGenerator2	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator2(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator2
CartesianProductGenerator2	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator2$/;"	c	namespace:testing::internal
CartesianProductGenerator2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator2(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator2
CartesianProductGenerator2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator2$/;"	c	namespace:testing::internal
CartesianProductGenerator3	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator3(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator3
CartesianProductGenerator3	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator3$/;"	c	namespace:testing::internal
CartesianProductGenerator3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator3(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator3
CartesianProductGenerator3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator3$/;"	c	namespace:testing::internal
CartesianProductGenerator4	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator4(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator4
CartesianProductGenerator4	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator4$/;"	c	namespace:testing::internal
CartesianProductGenerator4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator4(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator4
CartesianProductGenerator4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator4$/;"	c	namespace:testing::internal
CartesianProductGenerator5	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator5(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator5
CartesianProductGenerator5	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator5$/;"	c	namespace:testing::internal
CartesianProductGenerator5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator5(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator5
CartesianProductGenerator5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator5$/;"	c	namespace:testing::internal
CartesianProductGenerator6	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator6(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator6
CartesianProductGenerator6	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator6$/;"	c	namespace:testing::internal
CartesianProductGenerator6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator6(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator6
CartesianProductGenerator6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator6$/;"	c	namespace:testing::internal
CartesianProductGenerator7	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator7(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator7
CartesianProductGenerator7	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator7$/;"	c	namespace:testing::internal
CartesianProductGenerator7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator7(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator7
CartesianProductGenerator7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator7$/;"	c	namespace:testing::internal
CartesianProductGenerator8	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator8(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator8
CartesianProductGenerator8	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator8$/;"	c	namespace:testing::internal
CartesianProductGenerator8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator8(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator8
CartesianProductGenerator8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator8$/;"	c	namespace:testing::internal
CartesianProductGenerator9	test/gtest/fused-src/gtest/gtest.h	/^  CartesianProductGenerator9(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator9
CartesianProductGenerator9	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductGenerator9$/;"	c	namespace:testing::internal
CartesianProductGenerator9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  CartesianProductGenerator9(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator9
CartesianProductGenerator9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductGenerator9$/;"	c	namespace:testing::internal
CartesianProductHolder10	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder10(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder10
CartesianProductHolder10	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder10 {$/;"	c	namespace:testing::internal
CartesianProductHolder10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder10(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder10
CartesianProductHolder10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder10 {$/;"	c	namespace:testing::internal
CartesianProductHolder2	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder2(const Generator1& g1, const Generator2& g2)$/;"	f	class:testing::internal::CartesianProductHolder2
CartesianProductHolder2	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder2 {$/;"	c	namespace:testing::internal
CartesianProductHolder2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder2(const Generator1& g1, const Generator2& g2)$/;"	f	class:testing::internal::CartesianProductHolder2
CartesianProductHolder2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder2 {$/;"	c	namespace:testing::internal
CartesianProductHolder3	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder3(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder3
CartesianProductHolder3	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder3 {$/;"	c	namespace:testing::internal
CartesianProductHolder3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder3(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder3
CartesianProductHolder3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder3 {$/;"	c	namespace:testing::internal
CartesianProductHolder4	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder4(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder4
CartesianProductHolder4	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder4 {$/;"	c	namespace:testing::internal
CartesianProductHolder4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder4(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder4
CartesianProductHolder4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder4 {$/;"	c	namespace:testing::internal
CartesianProductHolder5	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder5(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder5
CartesianProductHolder5	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder5 {$/;"	c	namespace:testing::internal
CartesianProductHolder5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder5(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder5
CartesianProductHolder5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder5 {$/;"	c	namespace:testing::internal
CartesianProductHolder6	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder6(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder6
CartesianProductHolder6	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder6 {$/;"	c	namespace:testing::internal
CartesianProductHolder6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder6(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder6
CartesianProductHolder6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder6 {$/;"	c	namespace:testing::internal
CartesianProductHolder7	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder7(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder7
CartesianProductHolder7	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder7 {$/;"	c	namespace:testing::internal
CartesianProductHolder7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder7(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder7
CartesianProductHolder7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder7 {$/;"	c	namespace:testing::internal
CartesianProductHolder8	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder8(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder8
CartesianProductHolder8	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder8 {$/;"	c	namespace:testing::internal
CartesianProductHolder8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder8(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder8
CartesianProductHolder8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder8 {$/;"	c	namespace:testing::internal
CartesianProductHolder9	test/gtest/fused-src/gtest/gtest.h	/^CartesianProductHolder9(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder9
CartesianProductHolder9	test/gtest/fused-src/gtest/gtest.h	/^class CartesianProductHolder9 {$/;"	c	namespace:testing::internal
CartesianProductHolder9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^CartesianProductHolder9(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder9
CartesianProductHolder9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class CartesianProductHolder9 {$/;"	c	namespace:testing::internal
CaseInsensitiveCStringEquals	test/gtest/fused-src/gtest/gtest-all.cc	/^bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CaseInsensitiveCStringEquals	test/gtest/src/gtest.cc	/^bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CaseInsensitiveWideCStringEquals	test/gtest/fused-src/gtest/gtest-all.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String
CaseInsensitiveWideCStringEquals	test/gtest/src/gtest.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String
Castable	test/gtest/test/gtest-port_test.cc	/^  explicit Castable(bool* converted) : converted_(converted) {}$/;"	f	class:testing::internal::Castable
Castable	test/gtest/test/gtest-port_test.cc	/^class Castable {$/;"	c	namespace:testing::internal	file:
CatchCxxExceptionsTest	test/gtest/test/gtest_catch_exceptions_test.py	/^class CatchCxxExceptionsTest(gtest_test_utils.TestCase):$/;"	c
CatchExceptions	test/gtest/test/gtest_unittest.cc	/^  static Flags CatchExceptions(bool catch_exceptions) {$/;"	f	struct:testing::Flags
CatchSehExceptionsTest	test/gtest/test/gtest_catch_exceptions_test.py	/^  class CatchSehExceptionsTest(gtest_test_utils.TestCase):$/;"	c
ChDir	test/gtest/fused-src/gtest/gtest.h	/^inline int ChDir(const char* dir) { return chdir(dir); }$/;"	f	namespace:std::tr1::posix
ChDir	test/gtest/include/gtest/internal/gtest-port.h	/^inline int ChDir(const char* dir) { return chdir(dir); }$/;"	f	namespace:testing::internal::posix
ChangeToRootDir	test/gtest/test/gtest-death-test_test.cc	/^void ChangeToRootDir() { posix::ChDir(GTEST_PATH_SEP_); }$/;"	f
Char1Glob	experiments/backup/benchmarks/src/base/dry.c	/^char		Char1Glob;$/;"	v
Char1Glob	experiments/backup/benchmarks/src/base/fldry.c	/^char		Char1Glob;$/;"	v
Char1Glob	experiments/benchmarks/src/base/dry.c	/^char		Char1Glob;$/;"	v
Char1Glob	experiments/benchmarks/src/base/fldry.c	/^char		Char1Glob;$/;"	v
Char2Glob	experiments/backup/benchmarks/src/base/dry.c	/^char		Char2Glob;$/;"	v
Char2Glob	experiments/backup/benchmarks/src/base/fldry.c	/^char		Char2Glob;$/;"	v
Char2Glob	experiments/benchmarks/src/base/dry.c	/^char		Char2Glob;$/;"	v
Char2Glob	experiments/benchmarks/src/base/fldry.c	/^char		Char2Glob;$/;"	v
CharFormat	test/gtest/fused-src/gtest/gtest-all.cc	/^enum CharFormat {$/;"	g	namespace:testing::internal	file:
CharFormat	test/gtest/src/gtest-printers.cc	/^enum CharFormat {$/;"	g	namespace:testing::internal	file:
Check	test/gtest/test/gtest_environment_test.cc	/^void Check(bool condition, const char* msg) {$/;"	f	namespace:__anon21
CheckCounts	test/gtest/test/gtest_repeat_test.cc	/^void CheckCounts(int expected) {$/;"	f	namespace:__anon33
CheckFlags	test/gtest/test/gtest_unittest.cc	/^  static void CheckFlags(const Flags& expected) {$/;"	f	class:testing::InitGoogleTestTest
CheckPoints	test/gtest/test/gtest_output_test_.cc	/^struct CheckPoints {$/;"	s	file:
CheckTestFailureCount	test/gtest/test/gtest_stress_test.cc	/^void CheckTestFailureCount(int expected_failures) {$/;"	f	namespace:testing::__anon23
CheckedDowncastToActualType	test/gtest/fused-src/gtest/gtest.h	/^Derived* CheckedDowncastToActualType(Base* base) {$/;"	f	namespace:std::tr1
CheckedDowncastToActualType	test/gtest/include/gtest/internal/gtest-port.h	/^Derived* CheckedDowncastToActualType(Base* base) {$/;"	f	namespace:testing::internal
Checksum	include/Profiling/GCOV.h	/^  uint32_t Checksum;$/;"	m	class:llvm::GCOVFile
Checksum	include/Profiling/GCOV.h	/^  uint32_t Checksum;$/;"	m	class:llvm::GCOVFunction
Checktree	experiments/backup/benchmarks/src/base/treesort.c	/^int Checktree(struct node *p) {$/;"	f
Checktree	experiments/benchmarks/src/base/treesort.c	/^int Checktree(struct node *p) {$/;"	f
ChopLowBits	test/gtest/fused-src/gtest/gtest-all.cc	/^inline UInt32 ChopLowBits(UInt32* bits, int n) {$/;"	f	namespace:testing::internal
ChopLowBits	test/gtest/src/gtest.cc	/^inline UInt32 ChopLowBits(UInt32* bits, int n) {$/;"	f	namespace:testing::internal
ClassUniqueToAlwaysTrue	test/gtest/fused-src/gtest/gtest-all.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anon39	file:
ClassUniqueToAlwaysTrue	test/gtest/src/gtest.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anon12	file:
Clear	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult
Clear	test/gtest/samples/sample3-inl.h	/^  void Clear() {$/;"	f	class:Queue
Clear	test/gtest/src/gtest.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult
ClearAdHocTestResult	test/gtest/fused-src/gtest/gtest-all.cc	/^  void ClearAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearAdHocTestResult	test/gtest/src/gtest-internal-inl.h	/^  void ClearAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearCurrentTestPartResults	test/gtest/test/gtest_unittest.cc	/^static void ClearCurrentTestPartResults() {$/;"	f	namespace:__anon14
ClearNonAdHocTestResult	test/gtest/fused-src/gtest/gtest-all.cc	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearNonAdHocTestResult	test/gtest/src/gtest-internal-inl.h	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestCase::ClearResult() {$/;"	f	class:testing::TestCase
ClearResult	test/gtest/src/gtest.cc	/^void TestCase::ClearResult() {$/;"	f	class:testing::TestCase
ClearTestCaseResult	test/gtest/fused-src/gtest/gtest.h	/^  static void ClearTestCaseResult(TestCase* test_case) {$/;"	f	class:testing::TestCase
ClearTestCaseResult	test/gtest/include/gtest/gtest.h	/^  static void ClearTestCaseResult(TestCase* test_case) {$/;"	f	class:testing::TestCase
ClearTestPartResults	test/gtest/fused-src/gtest/gtest-all.cc	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor
ClearTestPartResults	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestResult::ClearTestPartResults() {$/;"	f	class:testing::TestResult
ClearTestPartResults	test/gtest/src/gtest-internal-inl.h	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor
ClearTestPartResults	test/gtest/src/gtest.cc	/^void TestResult::ClearTestPartResults() {$/;"	f	class:testing::TestResult
ClearTestResult	test/gtest/fused-src/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo
ClearTestResult	test/gtest/include/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Clone	test/gtest/fused-src/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Clone	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Clone	test/gtest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Cursor
Clone	test/gtest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Env
Clone	test/gtest/scripts/pump.py	/^  def Clone(self):$/;"	m	class:Token
CloneCString	test/gtest/samples/sample2.cc	/^const char* MyString::CloneCString(const char* a_c_string) {$/;"	f	class:MyString
Close	test/gtest/fused-src/gtest/gtest.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:std::tr1::posix
Close	test/gtest/include/gtest/internal/gtest-port.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:testing::internal::posix
CloseConnection	test/gtest/fused-src/gtest/gtest-all.cc	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
CloseConnection	test/gtest/fused-src/gtest/gtest-all.cc	/^    void CloseConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	file:
CloseConnection	test/gtest/src/gtest-internal-inl.h	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
CloseConnection	test/gtest/src/gtest-internal-inl.h	/^    void CloseConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
CloseResultsWindow	docs/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m	class:SearchBox
CloseSelectionWindow	docs/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m	class:SearchBox
CmpHelperEQ	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperEQ	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperEQ	test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperEQ	test/gtest/src/gtest.cc	/^AssertionResult CmpHelperEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperFloatingPointEQ	test/gtest/fused-src/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperFloatingPointEQ	test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASEEQ	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASEEQ	test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASENE	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASENE	test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal
CmpHelperSTREQ	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult CmpHelperSTREQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTREQ	test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTREQ(const char* expected_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRNE	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRNE	test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal
CodeNode	test/gtest/scripts/pump.py	/^class CodeNode:$/;"	c
CodePointToUtf8	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string CodePointToUtf8(UInt32 code_point) {$/;"	f	namespace:testing::internal
CodePointToUtf8	test/gtest/src/gtest.cc	/^std::string CodePointToUtf8(UInt32 code_point) {$/;"	f	namespace:testing::internal
ColoredPrintf	test/gtest/fused-src/gtest/gtest-all.cc	/^void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal
ColoredPrintf	test/gtest/src/gtest.cc	/^void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator10> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7, Generator8> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator4, Generator5, Generator6> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator4, Generator5> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator4> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^    Generator9> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^internal::CartesianProductHolder2<Generator1, Generator2> Combine($/;"	f	namespace:testing
Combine	test/gtest/fused-src/gtest/gtest.h	/^internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator10> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6, Generator7, Generator8> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6, Generator7> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5, Generator6> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator4, Generator5> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator4> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^    Generator9> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^internal::CartesianProductHolder2<Generator1, Generator2> Combine($/;"	f	namespace:testing
Combine	test/gtest/include/gtest/gtest-param-test.h	/^internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine($/;"	f	namespace:testing
CommentTest	test/gtest/test/gtest-param-test_test.cc	/^class CommentTest : public TestWithParam<Unstreamable> {};$/;"	c	file:
CommonTest	test/gtest/test/gtest-typed-test_test.cc	/^  CommonTest() : value_(1) {}$/;"	f	class:CommonTest
CommonTest	test/gtest/test/gtest-typed-test_test.cc	/^class CommonTest : public Test {$/;"	c	file:
Compare	test/gtest/fused-src/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper
Compare	test/gtest/fused-src/gtest/gtest.h	/^  static AssertionResult Compare(const char* expected_expression,$/;"	f	class:testing::internal::EqHelper
Compare	test/gtest/include/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper
Compare	test/gtest/include/gtest/gtest.h	/^  static AssertionResult Compare(const char* expected_expression,$/;"	f	class:testing::internal::EqHelper
CompareAndIncrementCharPtrs	test/gtest/test/gtest_unittest.cc	/^  static void CompareAndIncrementCharPtrs() {$/;"	f	class:__anon14::SingleEvaluationTest
CompareAndIncrementInts	test/gtest/test/gtest_unittest.cc	/^  static void CompareAndIncrementInts() {$/;"	f	class:__anon14::SingleEvaluationTest
CompareTestPartResult	test/gtest/test/gtest_unittest.cc	/^  static void CompareTestPartResult(const TestPartResult& expected,$/;"	f	class:__anon14::TestResultTest
CompileAssert	test/gtest/include/gtest/internal/gtest-port.h	/^struct CompileAssert {$/;"	s	namespace:testing::internal
CompileAssertTypesEqual	test/gtest/fused-src/gtest/gtest.h	/^struct CompileAssertTypesEqual<T, T> {$/;"	s	namespace:testing::internal
CompileAssertTypesEqual	test/gtest/include/gtest/internal/gtest-internal.h	/^struct CompileAssertTypesEqual<T, T> {$/;"	s	namespace:testing::internal
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
ComputeCurrentValue	test/gtest/fused-src/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
ComputeCurrentValue	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
ConcatPaths	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
ConcatPaths	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
ConfigureStreamingOutput	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConfigureStreamingOutput	test/gtest/src/gtest.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConfigureXmlOutput	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConfigureXmlOutput	test/gtest/src/gtest.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConstAndNonConstCastable	test/gtest/test/gtest-port_test.cc	/^  ConstAndNonConstCastable(bool* converted, bool* const_converted)$/;"	f	class:testing::internal::ConstAndNonConstCastable
ConstAndNonConstCastable	test/gtest/test/gtest-port_test.cc	/^class ConstAndNonConstCastable {$/;"	c	namespace:testing::internal	file:
ConstCastable	test/gtest/test/gtest-port_test.cc	/^  explicit ConstCastable(bool* converted) : converted_(converted) {}$/;"	f	class:testing::internal::ConstCastable
ConstCastable	test/gtest/test/gtest-port_test.cc	/^class ConstCastable {$/;"	c	namespace:testing::internal	file:
ConstCharPtr	test/gtest/fused-src/gtest/gtest.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	test/gtest/fused-src/gtest/gtest.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstCharPtr	test/gtest/include/gtest/internal/gtest-internal.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	test/gtest/include/gtest/internal/gtest-internal.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstantHoisting	include/GEOS.h	/^  ConstantHoisting,$/;"	e	enum:OptimizationKind
ConstantPropagation	include/GEOS.h	/^  ConstantPropagation,$/;"	e	enum:OptimizationKind
ContainerTest	test/gtest/test/gtest-typed-test_test.h	/^TYPED_TEST_CASE_P(ContainerTest);$/;"	v
ContainerTest	test/gtest/test/gtest-typed-test_test.h	/^class ContainerTest : public Test {$/;"	c
ContainerType	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator
ContainerType	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator
ConversionHelperBase	test/gtest/test/gtest_unittest.cc	/^class ConversionHelperBase {};$/;"	c	file:
ConversionHelperDerived	test/gtest/test/gtest_unittest.cc	/^class ConversionHelperDerived : public ConversionHelperBase {};$/;"	c	file:
ConvertFromPumpSource	test/gtest/scripts/pump.py	/^def ConvertFromPumpSource(src_text):$/;"	f
CopyArray	test/gtest/fused-src/gtest/gtest.h	/^inline void CopyArray(const T& from, U* to) { *to = from; }$/;"	f	namespace:testing::internal
CopyArray	test/gtest/fused-src/gtest/gtest.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal
CopyArray	test/gtest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T& from, U* to) { *to = from; }$/;"	f	namespace:testing::internal
CopyArray	test/gtest/include/gtest/internal/gtest-internal.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal
Cos	experiments/backup/benchmarks/src/base/oscar.c	/^Cos (float x)$/;"	f
Cos	experiments/benchmarks/src/base/oscar.c	/^Cos (float x)$/;"	f
Cost	include/CostEstimator/InstructionCostEstimator.h	/^enum Cost {$/;"	g
CostAnalysis	include/CostEstimator/CostAnalysis.h	/^class CostAnalysis {$/;"	c
CostAnalysisKind	include/CostEstimator/CostEstimatorOptions.h	/^  enum CostAnalysisKind {$/;"	g	namespace:__anon4
CostEstimator	include/CostEstimator/CostEstimator.h	/^namespace CostEstimator {$/;"	n
CostEstimatorOptions	include/CostEstimator/CostEstimatorOptions.h	/^  typedef struct CostEstimatorOptions {$/;"	s	namespace:__anon4
CostEstimatorOptions	include/CostEstimator/CostEstimatorOptions.h	/^  } CostEstimatorOptions;$/;"	t	namespace:__anon4	typeref:struct:__anon4::CostEstimatorOptions
CostEstimatorOptionsSet	include/CostEstimator/CostEstimatorOptions.h	/^  enum CostEstimatorOptionsSet {$/;"	g	namespace:__anon4
CostModelAnalysis	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    CostModelAnalysis() : FunctionPass(ID), F(nullptr), TTI(nullptr) {$/;"	f	class:__anon1::CostModelAnalysis
CostModelAnalysis	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^  class CostModelAnalysis : public FunctionPass {$/;"	c	namespace:__anon1	file:
Count	experiments/backup/benchmarks/src/base/richards_benchmark.c	25;"	d	file:
Count	experiments/backup/benchmarks/src/base/richards_benchmark.c	29;"	d	file:
Count	experiments/benchmarks/src/base/richards_benchmark.c	25;"	d	file:
Count	experiments/benchmarks/src/base/richards_benchmark.c	29;"	d	file:
Count	include/Profiling/GCOV.h	/^    uint64_t Count;$/;"	m	struct:llvm::GCOVBlock::EdgeWeight
Count	include/Profiling/GCOV.h	/^  uint64_t Count;$/;"	m	struct:llvm::GCOVEdge
Count	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  uint64_t Count;$/;"	m	struct:formatBranchInfo	file:
CountIf	test/gtest/fused-src/gtest/gtest-all.cc	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal
CountIf	test/gtest/src/gtest-internal-inl.h	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal
Counter	include/Profiling/GCOV.h	/^  uint64_t Counter;$/;"	m	class:llvm::GCOVBlock
Counter	test/gtest/samples/sample4.h	/^  Counter() : counter_(0) {}$/;"	f	class:Counter
Counter	test/gtest/samples/sample4.h	/^class Counter {$/;"	c
CountingThreadFunc	test/gtest/test/gtest-port_test.cc	/^void CountingThreadFunc(pair<AtomicCounterWithMutex*, int> param) {$/;"	f	namespace:testing::internal
Create	test/gtest/fused-src/gtest/gtest-all.cc	/^bool DeathTest::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DeathTest
Create	test/gtest/fused-src/gtest/gtest-all.cc	/^bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DefaultDeathTestFactory
Create	test/gtest/src/gtest-death-test.cc	/^bool DeathTest::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DeathTest
Create	test/gtest/src/gtest-death-test.cc	/^bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DefaultDeathTestFactory
Create	test/gtest/test/gtest-death-test_test.cc	/^bool MockDeathTestFactory::Create(const char* \/*statement*\/,$/;"	f	class:MockDeathTestFactory
CreateCodePointFromUtf16SurrogatePair	test/gtest/fused-src/gtest/gtest-all.cc	/^inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal
CreateCodePointFromUtf16SurrogatePair	test/gtest/src/gtest.cc	/^inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal
CreateDirectoriesRecursively	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath
CreateDirectoriesRecursively	test/gtest/src/gtest-filepath.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath
CreateFolder	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath
CreateFolder	test/gtest/src/gtest-filepath.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath
CreateKey	test/gtest/fused-src/gtest/gtest.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:std::tr1::ThreadLocal
CreateKey	test/gtest/include/gtest/internal/gtest-port.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:testing::internal::ThreadLocal
CreateNode	experiments/backup/benchmarks/src/base/treesort.c	/^void CreateNode (struct node **t, int n) {$/;"	f
CreateNode	experiments/benchmarks/src/base/treesort.c	/^void CreateNode (struct node **t, int n) {$/;"	f
CreateOnTheFlyPrimeTable	test/gtest/samples/sample7_unittest.cc	/^PrimeTable* CreateOnTheFlyPrimeTable() {$/;"	f
CreatePreCalculatedPrimeTable	test/gtest/samples/sample7_unittest.cc	/^PrimeTable* CreatePreCalculatedPrimeTable() {$/;"	f
CreatePrimeTable	test/gtest/samples/sample6_unittest.cc	/^PrimeTable* CreatePrimeTable<OnTheFlyPrimeTable>() {$/;"	f
CreatePrimeTable	test/gtest/samples/sample6_unittest.cc	/^PrimeTable* CreatePrimeTable<PreCalculatedPrimeTable>() {$/;"	f
CreatePrimeTableFunc	test/gtest/samples/sample7_unittest.cc	/^typedef PrimeTable* CreatePrimeTableFunc();$/;"	t	file:
CreateProcess	test/gtest/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateTest	test/gtest/fused-src/gtest/gtest.h	/^  virtual Test* CreateTest() { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl
CreateTest	test/gtest/fused-src/gtest/gtest.h	/^  virtual Test* CreateTest() {$/;"	f	class:testing::internal::ParameterizedTestFactory
CreateTest	test/gtest/include/gtest/internal/gtest-internal.h	/^  virtual Test* CreateTest() { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl
CreateTest	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual Test* CreateTest() {$/;"	f	class:testing::internal::ParameterizedTestFactory
CreateTestFactory	test/gtest/fused-src/gtest/gtest.h	/^  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {$/;"	f	class:testing::internal::TestMetaFactory
CreateTestFactory	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {$/;"	f	class:testing::internal::TestMetaFactory
CreateTextFile	test/gtest/test/gtest-filepath_test.cc	/^  void CreateTextFile(const char* filename) {$/;"	f	class:testing::internal::__anon22::DirectoryCreationTest
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const T* Current() const { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator
Current	test/gtest/fused-src/gtest/gtest.h	/^    virtual const T* Current() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual const T* Current() const { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator
Current	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual const T* Current() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
CurrentOsStackTraceExceptTop	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl
CurrentOsStackTraceExceptTop	test/gtest/src/gtest.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl
CurrentTestInfoTest	test/gtest/test/gtest_unittest.cc	/^class CurrentTestInfoTest : public Test {$/;"	c	namespace:testing	file:
Cursor	include/Profiling/GCOV.h	/^  uint64_t Cursor;$/;"	m	class:llvm::GCOVBuffer
Cursor	test/gtest/scripts/pump.py	/^class Cursor:$/;"	c
CxxExceptionInConstructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  CxxExceptionInConstructorTest() {$/;"	f	class:CxxExceptionInConstructorTest
CxxExceptionInConstructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInConstructorTest : public Test {$/;"	c	file:
CxxExceptionInDestructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInDestructorTest : public Test {$/;"	c	file:
CxxExceptionInSetUpTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInSetUpTest : public Test {$/;"	c	file:
CxxExceptionInSetUpTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  CxxExceptionInSetUpTestCaseTest() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
CxxExceptionInSetUpTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInSetUpTestCaseTest : public Test {$/;"	c	file:
CxxExceptionInTearDownTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTearDownTest : public Test {$/;"	c	file:
CxxExceptionInTearDownTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTearDownTestCaseTest : public Test {$/;"	c	file:
CxxExceptionInTestBodyTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class CxxExceptionInTestBodyTest : public Test {$/;"	c	file:
D1	experiments/backup/benchmarks/src/base/flops-1.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-2.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-3.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-4.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-5.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-6.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-7.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops-8.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/backup/benchmarks/src/base/flops.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-1.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-2.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-3.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-4.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-5.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-6.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-7.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops-8.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D1	experiments/benchmarks/src/base/flops.c	/^double D1 = 0.3999999946405E-1;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-1.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-2.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-3.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-4.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-5.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-6.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-7.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops-8.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/backup/benchmarks/src/base/flops.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-1.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-2.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-3.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-4.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-5.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-6.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-7.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops-8.c	/^double D2 = 0.96E-3;$/;"	v
D2	experiments/benchmarks/src/base/flops.c	/^double D2 = 0.96E-3;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-1.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-2.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-3.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-4.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-5.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-6.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-7.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops-8.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/backup/benchmarks/src/base/flops.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-1.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-2.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-3.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-4.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-5.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-6.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-7.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops-8.c	/^double D3 = 0.1233153E-5;$/;"	v
D3	experiments/benchmarks/src/base/flops.c	/^double D3 = 0.1233153E-5;$/;"	v
DATAN	experiments/backup/benchmarks/src/base/whetstone.c	67;"	d	file:
DATAN	experiments/benchmarks/src/base/whetstone.c	67;"	d	file:
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	58;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	63;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	56;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	58;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	63;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	43;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/adi/adi.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	53;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	56;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	48;"	d
DATA_PRINTF_MODIFIER	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	43;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	57;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	62;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	52;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	52;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	42;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	52;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	52;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	55;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	47;"	d
DATA_TYPE	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	57;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	62;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	52;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	52;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	42;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	52;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/adi/adi.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	52;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	55;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	47;"	d
DATA_TYPE	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	42;"	d
DB1	test/DatabaseManagerTests.cpp	/^DatabaseManager *DB1;$/;"	v
DB2	test/DatabaseManagerTests.cpp	/^DatabaseManager *DB2;$/;"	v
DCOS	experiments/backup/benchmarks/src/base/whetstone.c	66;"	d	file:
DCOS	experiments/benchmarks/src/base/whetstone.c	66;"	d	file:
DEATH_TESTS	test/gtest/test/gtest_filter_unittest.py	/^  DEATH_TESTS = [$/;"	v
DEATH_TESTS	test/gtest/test/gtest_filter_unittest.py	/^  DEATH_TESTS = []$/;"	v
DEATH_TEST_STYLE_FLAG	test/gtest/test/gtest_help_test.py	/^DEATH_TEST_STYLE_FLAG = FLAG_PREFIX + 'death_test_style'$/;"	v
DEBUG_TYPE	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	34;"	d	file:
DEBUG_TYPE	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	24;"	d	file:
DEC	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	324;"	d	file:
DEC	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEFAULT_GTEST_ROOT_DIR	test/gtest/scripts/fuse_gtest_files.py	/^DEFAULT_GTEST_ROOT_DIR = os.path.join(os.path.dirname(__file__), '..')$/;"	v
DESTROY	experiments/backup/benchmarks/src/base/methcall.c	17;"	d	file:
DESTROY	experiments/backup/benchmarks/src/base/objinst.c	17;"	d	file:
DESTROY	experiments/benchmarks/src/base/methcall.c	17;"	d	file:
DESTROY	experiments/benchmarks/src/base/objinst.c	17;"	d	file:
DEXP	experiments/backup/benchmarks/src/base/whetstone.c	69;"	d	file:
DEXP	experiments/benchmarks/src/base/whetstone.c	69;"	d	file:
DIED	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DIED	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DISABLED_TESTS	test/gtest/test/gtest_filter_unittest.py	/^DISABLED_TESTS = [$/;"	v
DISABLED_TypedTest	test/gtest/test/gtest_unittest.cc	/^class DISABLED_TypedTest : public Test {$/;"	c	namespace:__anon14	file:
DISABLED_TypedTestP	test/gtest/test/gtest_unittest.cc	/^class DISABLED_TypedTestP : public Test {$/;"	c	namespace:__anon14	file:
DLL	experiments/backup/benchmarks/src/base/lists.c	/^typedef struct DLL {$/;"	s	file:
DLL	experiments/backup/benchmarks/src/base/lists.c	/^} DLL;$/;"	t	typeref:struct:DLL	file:
DLL	experiments/benchmarks/src/base/lists.c	/^typedef struct DLL {$/;"	s	file:
DLL	experiments/benchmarks/src/base/lists.c	/^} DLL;$/;"	t	typeref:struct:DLL	file:
DLOG	experiments/backup/benchmarks/src/base/whetstone.c	68;"	d	file:
DLOG	experiments/benchmarks/src/base/whetstone.c	68;"	d	file:
DOITGEN_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	9;"	d
DOITGEN_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	9;"	d
DOMPopupSearchResults	docs/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m	class:SearchBox
DOMPopupSearchResultsWindow	docs/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m	class:SearchBox
DOMSearchBox	docs/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m	class:SearchBox
DOMSearchClose	docs/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m	class:SearchBox
DOMSearchField	docs/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m	class:SearchBox
DOMSearchSelect	docs/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m	class:SearchBox
DOMSearchSelectWindow	docs/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m	class:SearchBox
DOT_DOT_REGEX	test/gtest/scripts/pump.py	/^DOT_DOT_REGEX = re.compile(r'\\.\\.')$/;"	v
DSIN	experiments/backup/benchmarks/src/base/whetstone.c	65;"	d	file:
DSIN	experiments/benchmarks/src/base/whetstone.c	65;"	d	file:
DSQRT	experiments/backup/benchmarks/src/base/whetstone.c	70;"	d	file:
DSQRT	experiments/benchmarks/src/base/whetstone.c	70;"	d	file:
DURBIN_H	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	9;"	d
DURBIN_H	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	9;"	d
DYNPROG_H	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	9;"	d
DYNPROG_H	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	9;"	d
DeadCodeElimination	include/GEOS.h	/^  DeadCodeElimination,$/;"	e	enum:OptimizationKind
DeadInstElimination	include/GEOS.h	/^  DeadInstElimination,$/;"	e	enum:OptimizationKind
DeadStoreElimination	include/GEOS.h	/^  DeadStoreElimination,$/;"	e	enum:OptimizationKind
DeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTest	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTest	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTest	test/gtest/src/gtest-death-test.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTestAbort	test/gtest/fused-src/gtest/gtest-all.cc	/^void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal
DeathTestAbort	test/gtest/src/gtest-death-test.cc	/^void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal
DeathTestAndMultiThreadsTest	test/gtest/test/gtest_output_test_.cc	/^class DeathTestAndMultiThreadsTest : public testing::Test {$/;"	c	file:
DeathTestFactory	test/gtest/fused-src/gtest/gtest.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestFactory	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::DeathTestImpl
DeathTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestImpl	test/gtest/src/gtest-death-test.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::DeathTestImpl
DeathTestImpl	test/gtest/src/gtest-death-test.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestOutcome	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestOutcome	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestSubroutine	test/gtest/test/gtest-death-test_test.cc	/^void DeathTestSubroutine() {$/;"	f
DeathTestThreadWarning	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal
DeathTestThreadWarning	test/gtest/src/gtest-death-test.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal
DeathTestUseFork	test/gtest/test/gtest_unittest.cc	/^  static Flags DeathTestUseFork(bool death_test_use_fork) {$/;"	f	struct:testing::Flags
DefaultDeathTestFactory	test/gtest/fused-src/gtest/gtest.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultDeathTestFactory	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultGlobalTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultGlobalTestPartResultReporter	test/gtest/src/gtest-internal-inl.h	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	test/gtest/src/gtest.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultPerThreadTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultPerThreadTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultPerThreadTestPartResultReporter	test/gtest/src/gtest-internal-inl.h	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultPerThreadTestPartResultReporter	test/gtest/src/gtest.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultPrintNonContainerTo	test/gtest/fused-src/gtest/gtest.h	/^void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing_internal
DefaultPrintNonContainerTo	test/gtest/include/gtest/gtest-printers.h	/^void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing_internal
DefaultPrintTo	test/gtest/fused-src/gtest/gtest.h	/^void DefaultPrintTo(IsContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultPrintTo	test/gtest/fused-src/gtest/gtest.h	/^void DefaultPrintTo(IsNotContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultPrintTo	test/gtest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(IsContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultPrintTo	test/gtest/include/gtest/gtest-printers.h	/^void DefaultPrintTo(IsNotContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
Deinit	test/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;"	f	class:FatalFailureInSetUpTest	file:
Deinit	test/gtest/test/gtest_output_test_.cc	/^  void Deinit() {$/;"	f	class:NonFatalFailureInSetUpTest	file:
Delete	test/gtest/fused-src/gtest/gtest-all.cc	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal
Delete	test/gtest/src/gtest-internal-inl.h	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal
DeleteFilesAndDir	test/gtest/test/gtest_xml_outfiles_test.py	/^  def DeleteFilesAndDir(self):$/;"	m	class:GTestXMLOutFilesTest
DeleteSelf_	test/gtest/fused-src/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test
DeleteSelf_	test/gtest/include/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test
DeleteThreadLocalValue	test/gtest/fused-src/gtest/gtest.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:std::tr1
DeleteThreadLocalValue	test/gtest/include/gtest/internal/gtest-port.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:testing::internal
DemoteRegisterToMemory	include/GEOS.h	/^  DemoteRegisterToMemory,$/;"	e	enum:OptimizationKind
Dequeue	test/gtest/samples/sample3-inl.h	/^  E* Dequeue() {$/;"	f	class:Queue
Derived	test/gtest/test/gtest-port_test.cc	/^  explicit Derived(int n) : Base(n) {}$/;"	f	class:testing::internal::Derived
Derived	test/gtest/test/gtest-port_test.cc	/^class Derived : public Base {$/;"	c	namespace:testing::internal	file:
DerivedTest	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_CASE_P(DerivedTest);$/;"	v
DerivedTest	test/gtest/test/gtest-typed-test_test.cc	/^class DerivedTest : public CommonTest<T> {$/;"	c	file:
DescriptorFromString	test/BBHashTests.cpp	/^BBHash* DescriptorFromString;$/;"	v
DescriptorOfBasicBlock	test/BBHashTests.cpp	/^BBHash* DescriptorOfBasicBlock;$/;"	v
DescriptorWithoutArguments	test/BBHashTests.cpp	/^BBHash* DescriptorWithoutArguments;$/;"	v
DestructorTracker	test/gtest/test/gtest-port_test.cc	/^  DestructorTracker() : index_(GetNewIndex()) {}$/;"	f	class:testing::internal::DestructorTracker
DestructorTracker	test/gtest/test/gtest-port_test.cc	/^  DestructorTracker(const DestructorTracker& \/* rhs *\/)$/;"	f	class:testing::internal::DestructorTracker
DestructorTracker	test/gtest/test/gtest-port_test.cc	/^class DestructorTracker {$/;"	c	namespace:testing::internal	file:
DieIf	test/gtest/test/gtest-death-test_test.cc	/^void DieIf(bool should_die) {$/;"	f
DieIf	test/gtest/test/gtest_output_test_.cc	/^void DieIf(bool should_die) {$/;"	f
DieIfLessThan	test/gtest/test/gtest-death-test_test.cc	/^bool DieIfLessThan(int x, int y) {$/;"	f
DieInDebugElse12	test/gtest/test/gtest-death-test_test.cc	/^int DieInDebugElse12(int* sideeffect) {$/;"	f
DieInside	test/gtest/test/gtest-death-test_test.cc	/^void DieInside(const ::std::string& function) {$/;"	f
DieWithEmbeddedNul	test/gtest/test/gtest-death-test_test.cc	/^void DieWithEmbeddedNul() {$/;"	f
DieWithMessage	test/gtest/test/gtest-death-test_test.cc	/^void DieWithMessage(const ::std::string& message) {$/;"	f
DirectoryCreationTest	test/gtest/test/gtest-filepath_test.cc	/^class DirectoryCreationTest : public Test {$/;"	c	namespace:testing::internal::__anon22	file:
DirectoryExists	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath
DirectoryExists	test/gtest/src/gtest-filepath.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath
DisableSigprofActionAndTimer	test/gtest/test/gtest-death-test_test.cc	/^void DisableSigprofActionAndTimer(struct sigaction* old_signal_action) {$/;"	f
DisabledTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^class DisabledTest : public Test {$/;"	c	file:
DisabledTestsTest	test/gtest/test/gtest_unittest.cc	/^class DisabledTestsTest : public Test {$/;"	c	namespace:__anon14	file:
Discr	experiments/backup/benchmarks/src/base/dry.c	/^	Enumeration		Discr;$/;"	m	struct:Record	file:
Discr	experiments/backup/benchmarks/src/base/fldry.c	/^	Enumeration		Discr;$/;"	m	struct:Record	file:
Discr	experiments/benchmarks/src/base/dry.c	/^	Enumeration		Discr;$/;"	m	struct:Record	file:
Discr	experiments/benchmarks/src/base/fldry.c	/^	Enumeration		Discr;$/;"	m	struct:Record	file:
DistanceBetweenSignAndMagnitudeNumbers	test/gtest/fused-src/gtest/gtest.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,$/;"	f	class:testing::internal::FloatingPoint
DistanceBetweenSignAndMagnitudeNumbers	test/gtest/include/gtest/internal/gtest-internal.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,$/;"	f	class:testing::internal::FloatingPoint
DoAssertNoFatalFailureOnFails	test/gtest/test/gtest_unittest.cc	/^  void DoAssertNoFatalFailureOnFails() {$/;"	f	class:__anon14::NoFatalFailureTest
DoExpectNoFatalFailureOnFails	test/gtest/test/gtest_unittest.cc	/^  void DoExpectNoFatalFailureOnFails() {$/;"	f	class:__anon14::NoFatalFailureTest
DoesNotAbortHelper	test/gtest/test/gtest_unittest.cc	/^void DoesNotAbortHelper(bool* aborted) {$/;"	f	namespace:__anon14
DogAdder	test/gtest/test/gtest-param-test_test.cc	/^  DogAdder(const DogAdder& other) : value_(other.value_.c_str()) {}$/;"	f	class:DogAdder
DogAdder	test/gtest/test/gtest-param-test_test.cc	/^  explicit DogAdder(const char* a_value) : value_(a_value) {}$/;"	f	class:DogAdder
DogAdder	test/gtest/test/gtest-param-test_test.cc	/^class DogAdder {$/;"	c	file:
Doit	experiments/backup/benchmarks/src/base/queens.c	/^void Doit () {$/;"	f
Doit	experiments/benchmarks/src/base/queens.c	/^void Doit () {$/;"	f
Double	test/gtest/fused-src/gtest/gtest.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal
Double	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal
Double	test/gtest/samples/sample3_unittest.cc	/^  static int Double(int n) {$/;"	f	class:QueueTest
DoubleLE	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
DoubleLE	test/gtest/src/gtest.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
DoubleNearPredFormat	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1,$/;"	f	namespace:testing::internal
DoubleNearPredFormat	test/gtest/src/gtest.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1,$/;"	f	namespace:testing::internal
DoubleTest	test/gtest/test/gtest_unittest.cc	/^typedef FloatingPointTest<double> DoubleTest;$/;"	t	namespace:__anon14	file:
DownCast_	test/gtest/fused-src/gtest/gtest.h	/^inline To DownCast_(From* f) {  \/\/ so we only accept pointers$/;"	f	namespace:std::tr1
DownCast_	test/gtest/include/gtest/internal/gtest-port.h	/^inline To DownCast_(From* f) {  \/\/ so we only accept pointers$/;"	f	namespace:testing::internal
Dst	include/Profiling/GCOV.h	/^    GCOVBlock *Dst;$/;"	m	struct:llvm::GCOVBlock::EdgeWeight
Dst	include/Profiling/GCOV.h	/^  GCOVBlock &Dst;$/;"	m	struct:llvm::GCOVEdge
DstEdges	include/Profiling/GCOV.h	/^  SmallVector<GCOVEdge *, 16> DstEdges;$/;"	m	class:llvm::GCOVBlock
DstEdgesAreSorted	include/Profiling/GCOV.h	/^  bool DstEdgesAreSorted;$/;"	m	class:llvm::GCOVBlock
E1	experiments/backup/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
E1	experiments/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-1.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-2.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-3.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-4.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-5.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-6.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-7.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops-8.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/backup/benchmarks/src/base/flops.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-1.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-2.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-3.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-4.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-5.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-6.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-7.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops-8.c	/^double E2 = 0.48E-3;$/;"	v
E2	experiments/benchmarks/src/base/flops.c	/^double E2 = 0.48E-3;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-1.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-2.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-3.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-4.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-5.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-6.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-7.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops-8.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/backup/benchmarks/src/base/flops.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-1.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-2.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-3.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-4.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-5.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-6.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-7.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops-8.c	/^double E3 = 0.411051E-6;$/;"	v
E3	experiments/benchmarks/src/base/flops.c	/^double E3 = 0.411051E-6;$/;"	v
EMPTY	experiments/backup/benchmarks/src/base/queens-mcgill.c	176;"	d	file:
EMPTY	experiments/benchmarks/src/base/queens-mcgill.c	176;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/CostAnalysis/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/CostEstimator/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/ProfileModule/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/CallCostAnalyzer/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/ExecutionFrequency/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Profiling/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/test/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/test/gtest/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tool/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tools/Makefile	/^EQUALS = =$/;"	m
EQ_REGEX	test/gtest/scripts/pump.py	/^EQ_REGEX = re.compile(r'=')$/;"	v
ESCAPE	experiments/backup/benchmarks/src/base/mandel.c	1;"	d	file:
ESCAPE	experiments/benchmarks/src/base/mandel.c	1;"	d	file:
EXECUTE_TEST	test/gtest/fused-src/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXECUTE_TEST	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXE_PATH	test/gtest/test/gtest_break_on_failure_unittest.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXE_PATH	test/gtest/test/gtest_catch_exceptions_test.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXE_PATH	test/gtest/test/gtest_list_tests_unittest.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath('gtest_list_tests_unittest_')$/;"	v
EXE_PATH	test/gtest/test/gtest_throw_on_failure_test.py	/^EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EXPECT_ANY_THROW	test/gtest/fused-src/gtest/gtest.h	19315;"	d
EXPECT_ANY_THROW	test/gtest/include/gtest/gtest.h	1902;"	d
EXPECT_DEATH	test/gtest/fused-src/gtest/gtest.h	8619;"	d
EXPECT_DEATH	test/gtest/include/gtest/gtest-death-test.h	184;"	d
EXPECT_DEATH_IF_SUPPORTED	test/gtest/fused-src/gtest/gtest.h	8716;"	d
EXPECT_DEATH_IF_SUPPORTED	test/gtest/fused-src/gtest/gtest.h	8721;"	d
EXPECT_DEATH_IF_SUPPORTED	test/gtest/include/gtest/gtest-death-test.h	281;"	d
EXPECT_DEATH_IF_SUPPORTED	test/gtest/include/gtest/gtest-death-test.h	286;"	d
EXPECT_DEBUG_DEATH	test/gtest/fused-src/gtest/gtest.h	8693;"	d
EXPECT_DEBUG_DEATH	test/gtest/fused-src/gtest/gtest.h	8701;"	d
EXPECT_DEBUG_DEATH	test/gtest/include/gtest/gtest-death-test.h	258;"	d
EXPECT_DEBUG_DEATH	test/gtest/include/gtest/gtest-death-test.h	266;"	d
EXPECT_DOUBLE_EQ	test/gtest/fused-src/gtest/gtest.h	19856;"	d
EXPECT_DOUBLE_EQ	test/gtest/include/gtest/gtest.h	2086;"	d
EXPECT_EQ	test/gtest/fused-src/gtest/gtest.h	19747;"	d
EXPECT_EQ	test/gtest/include/gtest/gtest.h	1977;"	d
EXPECT_EXIT	test/gtest/fused-src/gtest/gtest.h	8608;"	d
EXPECT_EXIT	test/gtest/include/gtest/gtest-death-test.h	173;"	d
EXPECT_FALSE	test/gtest/fused-src/gtest/gtest.h	19330;"	d
EXPECT_FALSE	test/gtest/include/gtest/gtest.h	1917;"	d
EXPECT_FATAL_FAILURE	test/gtest/fused-src/gtest/gtest-all.cc	211;"	d	file:
EXPECT_FATAL_FAILURE	test/gtest/include/gtest/gtest-spi.h	138;"	d
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	test/gtest/fused-src/gtest/gtest-all.cc	228;"	d	file:
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	test/gtest/include/gtest/gtest-spi.h	155;"	d
EXPECT_FLOAT_EQ	test/gtest/fused-src/gtest/gtest.h	19852;"	d
EXPECT_FLOAT_EQ	test/gtest/include/gtest/gtest.h	2082;"	d
EXPECT_GE	test/gtest/fused-src/gtest/gtest.h	19757;"	d
EXPECT_GE	test/gtest/include/gtest/gtest.h	1987;"	d
EXPECT_GT	test/gtest/fused-src/gtest/gtest.h	19759;"	d
EXPECT_GT	test/gtest/include/gtest/gtest.h	1989;"	d
EXPECT_HRESULT_FAILED	test/gtest/fused-src/gtest/gtest.h	19906;"	d
EXPECT_HRESULT_FAILED	test/gtest/include/gtest/gtest.h	2136;"	d
EXPECT_HRESULT_SUCCEEDED	test/gtest/fused-src/gtest/gtest.h	19900;"	d
EXPECT_HRESULT_SUCCEEDED	test/gtest/include/gtest/gtest.h	2130;"	d
EXPECT_LE	test/gtest/fused-src/gtest/gtest.h	19753;"	d
EXPECT_LE	test/gtest/include/gtest/gtest.h	1983;"	d
EXPECT_LT	test/gtest/fused-src/gtest/gtest.h	19755;"	d
EXPECT_LT	test/gtest/include/gtest/gtest.h	1985;"	d
EXPECT_NE	test/gtest/fused-src/gtest/gtest.h	19751;"	d
EXPECT_NE	test/gtest/include/gtest/gtest.h	1981;"	d
EXPECT_NEAR	test/gtest/fused-src/gtest/gtest.h	19868;"	d
EXPECT_NEAR	test/gtest/include/gtest/gtest.h	2098;"	d
EXPECT_NONFATAL_FAILURE	test/gtest/fused-src/gtest/gtest-all.cc	277;"	d	file:
EXPECT_NONFATAL_FAILURE	test/gtest/include/gtest/gtest-spi.h	204;"	d
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	test/gtest/fused-src/gtest/gtest-all.cc	291;"	d	file:
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	test/gtest/include/gtest/gtest-spi.h	218;"	d
EXPECT_NO_FATAL_FAILURE	test/gtest/fused-src/gtest/gtest.h	19926;"	d
EXPECT_NO_FATAL_FAILURE	test/gtest/include/gtest/gtest.h	2156;"	d
EXPECT_NO_THROW	test/gtest/fused-src/gtest/gtest.h	19313;"	d
EXPECT_NO_THROW	test/gtest/include/gtest/gtest.h	1900;"	d
EXPECT_PRED1	test/gtest/fused-src/gtest/gtest.h	19456;"	d
EXPECT_PRED1	test/gtest/include/gtest/gtest_pred_impl.h	115;"	d
EXPECT_PRED1Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test EXPECT_PRED1Test;$/;"	t	file:
EXPECT_PRED2	test/gtest/fused-src/gtest/gtest.h	19504;"	d
EXPECT_PRED2	test/gtest/include/gtest/gtest_pred_impl.h	163;"	d
EXPECT_PRED2Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test EXPECT_PRED2Test;$/;"	t	file:
EXPECT_PRED3	test/gtest/fused-src/gtest/gtest.h	19559;"	d
EXPECT_PRED3	test/gtest/include/gtest/gtest_pred_impl.h	218;"	d
EXPECT_PRED3Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test EXPECT_PRED3Test;$/;"	t	file:
EXPECT_PRED4	test/gtest/fused-src/gtest/gtest.h	19621;"	d
EXPECT_PRED4	test/gtest/include/gtest/gtest_pred_impl.h	280;"	d
EXPECT_PRED4Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test EXPECT_PRED4Test;$/;"	t	file:
EXPECT_PRED5	test/gtest/fused-src/gtest/gtest.h	19690;"	d
EXPECT_PRED5	test/gtest/include/gtest/gtest_pred_impl.h	349;"	d
EXPECT_PRED5Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test EXPECT_PRED5Test;$/;"	t	file:
EXPECT_PRED_FORMAT1	test/gtest/fused-src/gtest/gtest.h	19454;"	d
EXPECT_PRED_FORMAT1	test/gtest/include/gtest/gtest_pred_impl.h	113;"	d
EXPECT_PRED_FORMAT1Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate1Test EXPECT_PRED_FORMAT1Test;$/;"	t	file:
EXPECT_PRED_FORMAT2	test/gtest/fused-src/gtest/gtest.h	19502;"	d
EXPECT_PRED_FORMAT2	test/gtest/include/gtest/gtest_pred_impl.h	161;"	d
EXPECT_PRED_FORMAT2Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate2Test EXPECT_PRED_FORMAT2Test;$/;"	t	file:
EXPECT_PRED_FORMAT3	test/gtest/fused-src/gtest/gtest.h	19557;"	d
EXPECT_PRED_FORMAT3	test/gtest/include/gtest/gtest_pred_impl.h	216;"	d
EXPECT_PRED_FORMAT3Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate3Test EXPECT_PRED_FORMAT3Test;$/;"	t	file:
EXPECT_PRED_FORMAT4	test/gtest/fused-src/gtest/gtest.h	19619;"	d
EXPECT_PRED_FORMAT4	test/gtest/include/gtest/gtest_pred_impl.h	278;"	d
EXPECT_PRED_FORMAT4Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate4Test EXPECT_PRED_FORMAT4Test;$/;"	t	file:
EXPECT_PRED_FORMAT5	test/gtest/fused-src/gtest/gtest.h	19688;"	d
EXPECT_PRED_FORMAT5	test/gtest/include/gtest/gtest_pred_impl.h	347;"	d
EXPECT_PRED_FORMAT5Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^typedef Predicate5Test EXPECT_PRED_FORMAT5Test;$/;"	t	file:
EXPECT_PRINT_TO_STRING_	test/gtest/test/gtest-printers_test.cc	1412;"	d	file:
EXPECT_PRINT_TO_STRING_	test/gtest/test/gtest-printers_test.cc	1460;"	d	file:
EXPECT_STRCASEEQ	test/gtest/fused-src/gtest/gtest.h	19824;"	d
EXPECT_STRCASEEQ	test/gtest/include/gtest/gtest.h	2054;"	d
EXPECT_STRCASENE	test/gtest/fused-src/gtest/gtest.h	19826;"	d
EXPECT_STRCASENE	test/gtest/include/gtest/gtest.h	2056;"	d
EXPECT_STREQ	test/gtest/fused-src/gtest/gtest.h	19820;"	d
EXPECT_STREQ	test/gtest/include/gtest/gtest.h	2050;"	d
EXPECT_STRNE	test/gtest/fused-src/gtest/gtest.h	19822;"	d
EXPECT_STRNE	test/gtest/include/gtest/gtest.h	2052;"	d
EXPECT_THROW	test/gtest/fused-src/gtest/gtest.h	19311;"	d
EXPECT_THROW	test/gtest/include/gtest/gtest.h	1898;"	d
EXPECT_TRUE	test/gtest/fused-src/gtest/gtest.h	19327;"	d
EXPECT_TRUE	test/gtest/include/gtest/gtest.h	1914;"	d
EX_BINARY_OUTPUT	test/gtest/test/gtest_catch_exceptions_test.py	/^EX_BINARY_OUTPUT = gtest_test_utils.Subprocess($/;"	v
EX_EXE_PATH	test/gtest/test/gtest_catch_exceptions_test.py	/^EX_EXE_PATH = gtest_test_utils.GetTestExecutablePath($/;"	v
EarlyCSE	include/GEOS.h	/^  EarlyCSE,$/;"	e	enum:OptimizationKind
EdgeIterator	include/Profiling/GCOV.h	/^  typedef SmallVectorImpl<GCOVEdge *>::const_iterator EdgeIterator;$/;"	t	class:llvm::GCOVBlock
EdgeWeight	include/Profiling/GCOV.h	/^    EdgeWeight(GCOVBlock *D): Dst(D), Count(0) {}$/;"	f	struct:llvm::GCOVBlock::EdgeWeight
EdgeWeight	include/Profiling/GCOV.h	/^  struct EdgeWeight {$/;"	s	class:llvm::GCOVBlock
Edges	include/Profiling/GCOV.h	/^  SmallVector<std::unique_ptr<GCOVEdge>, 16> Edges;$/;"	m	class:llvm::GCOVFunction
ElseNode	test/gtest/scripts/pump.py	/^class ElseNode:$/;"	c
Empty	include/Profiling/papi.h	/^  long long int Empty;$/;"	v
EmptyTestEventListener	test/gtest/fused-src/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
EmptyTestEventListener	test/gtest/include/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
EnableIf	test/gtest/fused-src/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
EnableIf	test/gtest/include/gtest/internal/gtest-internal.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::RangeGenerator
End	test/gtest/fused-src/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
End	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
End	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::RangeGenerator
End	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
EndsWithCaseInsensitive	test/gtest/fused-src/gtest/gtest-all.cc	/^bool String::EndsWithCaseInsensitive($/;"	f	class:testing::internal::String
EndsWithCaseInsensitive	test/gtest/src/gtest.cc	/^bool String::EndsWithCaseInsensitive($/;"	f	class:testing::internal::String
Enqueue	test/gtest/samples/sample3-inl.h	/^  void Enqueue(const E& element) {$/;"	f	class:Queue
EnumComp	experiments/backup/benchmarks/src/base/dry.c	/^	Enumeration		EnumComp;$/;"	m	struct:Record	file:
EnumComp	experiments/backup/benchmarks/src/base/fldry.c	/^	Enumeration		EnumComp;$/;"	m	struct:Record	file:
EnumComp	experiments/benchmarks/src/base/dry.c	/^	Enumeration		EnumComp;$/;"	m	struct:Record	file:
EnumComp	experiments/benchmarks/src/base/fldry.c	/^	Enumeration		EnumComp;$/;"	m	struct:Record	file:
EnumWithPrintTo	test/gtest/test/gtest-printers_test.cc	/^enum EnumWithPrintTo {$/;"	g	file:
EnumWithStreaming	test/gtest/test/gtest-printers_test.cc	/^enum EnumWithStreaming {$/;"	g	file:
EnumWithoutPrinter	test/gtest/test/gtest-printers_test.cc	/^enum EnumWithoutPrinter {$/;"	g	file:
Enumeration	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	t	typeref:enum:__anon64	file:
Enumeration	experiments/backup/benchmarks/src/base/dry.c	/^typedef int	Enumeration;$/;"	t	file:
Enumeration	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	t	typeref:enum:__anon66	file:
Enumeration	experiments/backup/benchmarks/src/base/fldry.c	/^typedef extended	Enumeration;$/;"	t	file:
Enumeration	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	t	typeref:enum:__anon51	file:
Enumeration	experiments/benchmarks/src/base/dry.c	/^typedef int	Enumeration;$/;"	t	file:
Enumeration	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	t	typeref:enum:__anon53	file:
Enumeration	experiments/benchmarks/src/base/fldry.c	/^typedef extended	Enumeration;$/;"	t	file:
Env	test/gtest/scripts/pump.py	/^class Env:$/;"	c
Environment	test/gtest/fused-src/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
Environment	test/gtest/include/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
Environment	test/gtest/test/gtest-param-test_test.cc	/^  typedef TestGenerationEnvironment<PARAMETER_COUNT> Environment;$/;"	t	class:TestGenerationTest	file:
EnvironmentInvocationCatcher	test/gtest/test/gtest-listener_test.cc	/^class EnvironmentInvocationCatcher : public Environment {$/;"	c	namespace:testing::internal	file:
Eof	test/gtest/scripts/pump.py	/^def Eof():$/;"	f
EqFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult EqFailure(const char* expected_expression,$/;"	f	namespace:testing::internal
EqFailure	test/gtest/src/gtest.cc	/^AssertionResult EqFailure(const char* expected_expression,$/;"	f	namespace:testing::internal
EqHelper	test/gtest/fused-src/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqHelper	test/gtest/fused-src/gtest/gtest.h	/^class EqHelper<true> {$/;"	c	namespace:testing::internal
EqHelper	test/gtest/include/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqHelper	test/gtest/include/gtest/gtest.h	/^class EqHelper<true> {$/;"	c	namespace:testing::internal
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Equals	test/gtest/fused-src/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Equals	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
EqualsFormat	test/gtest/test/gtest_unittest.cc	/^AssertionResult EqualsFormat(const char* \/* expr1 *\/, const char* \/* expr2 *\/,$/;"	f	namespace:__anon14
Error	experiments/backup/benchmarks/src/base/towers.c	/^void Error (char *emsg) 	{$/;"	f
Error	experiments/benchmarks/src/base/towers.c	/^void Error (char *emsg) 	{$/;"	f
EscapeXml	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
EscapeXml	test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
EscapeXmlAttribute	test/gtest/fused-src/gtest/gtest-all.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EscapeXmlAttribute	test/gtest/src/gtest.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EscapeXmlText	test/gtest/fused-src/gtest/gtest-all.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EscapeXmlText	test/gtest/src/gtest.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EvalExp	test/gtest/scripts/pump.py	/^  def EvalExp(self, exp):$/;"	m	class:Env
EventForwardingEnabled	test/gtest/fused-src/gtest/gtest-all.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners
EventForwardingEnabled	test/gtest/src/gtest.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners
EventForwardingEnabled	test/gtest/test/gtest_unittest.cc	/^  static bool EventForwardingEnabled(const TestEventListeners& listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor
EventRecordingListener	test/gtest/test/gtest-listener_test.cc	/^  explicit EventRecordingListener(const char* name) : name_(name) {}$/;"	f	class:testing::internal::EventRecordingListener
EventRecordingListener	test/gtest/test/gtest-listener_test.cc	/^class EventRecordingListener : public TestEventListener {$/;"	c	namespace:testing::internal	file:
Events	include/Profiling/papi.h	/^  int Events[2];$/;"	v
ExecDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^  ExecDeathTest(const char* a_statement, const RE* a_regex,$/;"	f	class:testing::internal::ExecDeathTest
ExecDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTest	test/gtest/src/gtest-death-test.cc	/^  ExecDeathTest(const char* a_statement, const RE* a_regex,$/;"	f	class:testing::internal::ExecDeathTest
ExecDeathTest	test/gtest/src/gtest-death-test.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTestArgs	test/gtest/fused-src/gtest/gtest-all.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestArgs	test/gtest/src/gtest-death-test.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestChildMain	test/gtest/fused-src/gtest/gtest-all.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal
ExecDeathTestChildMain	test/gtest/src/gtest-death-test.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal
ExecDeathTestSpawnChild	test/gtest/fused-src/gtest/gtest-all.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal
ExecDeathTestSpawnChild	test/gtest/src/gtest-death-test.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal
ExitSummary	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal
ExitSummary	test/gtest/src/gtest-death-test.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal
ExitWithExceptionCode	test/gtest/test/gtest_break_on_failure_unittest_.cc	/^LONG WINAPI ExitWithExceptionCode($/;"	f	namespace:__anon31
ExitedUnsuccessfully	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal
ExitedUnsuccessfully	test/gtest/src/gtest-death-test.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal
ExitedWithCode	test/gtest/fused-src/gtest/gtest-all.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {$/;"	f	class:testing::ExitedWithCode
ExitedWithCode	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExitedWithCode	test/gtest/include/gtest/gtest-death-test.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExitedWithCode	test/gtest/src/gtest-death-test.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {$/;"	f	class:testing::ExitedWithCode
ExpNode	test/gtest/scripts/pump.py	/^class ExpNode:$/;"	c
ExpectDeathTestHelper	test/gtest/test/gtest-death-test_test.cc	/^void ExpectDeathTestHelper(bool* aborted) {$/;"	f
ExpectDebugDeathHelper	test/gtest/test/gtest-death-test_test.cc	/^void ExpectDebugDeathHelper(bool* aborted) {$/;"	f
ExpectFailureTest	test/gtest/test/gtest_output_test_.cc	/^class ExpectFailureTest : public testing::Test {$/;"	c	file:
ExpectFailureWithThreadsTest	test/gtest/test/gtest_output_test_.cc	/^class ExpectFailureWithThreadsTest : public ExpectFailureTest {$/;"	c	file:
ExpectFailureWithThreadsTest	test/gtest/test/gtest_unittest.cc	/^    ExpectFailureWithThreadsTest;$/;"	t	namespace:__anon14	file:
ExpectFatalFailureTest	test/gtest/test/gtest_unittest.cc	/^typedef ScopedFakeTestPartResultReporterTest ExpectFatalFailureTest;$/;"	t	namespace:__anon14	file:
ExpectKeyAndValueWereRecordedForId	test/gtest/test/gtest_stress_test.cc	/^void ExpectKeyAndValueWereRecordedForId($/;"	f	namespace:testing::__anon23
ExpectNonFatalFailureRecordingPropertyWithReservedKey	test/gtest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKey($/;"	f	namespace:__anon14
ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest	test/gtest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest($/;"	f	namespace:__anon14
ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestCase	test/gtest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestCase($/;"	f	namespace:__anon14
ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestCase	test/gtest/test/gtest_unittest.cc	/^void ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestCase($/;"	f	namespace:__anon14
ExpectNonfatalFailureTest	test/gtest/test/gtest_unittest.cc	/^typedef ScopedFakeTestPartResultReporterTest ExpectNonfatalFailureTest;$/;"	t	namespace:__anon14	file:
Exptab	experiments/backup/benchmarks/src/base/oscar.c	/^Exptab (int n, struct complex e[])$/;"	f
Exptab	experiments/benchmarks/src/base/oscar.c	/^Exptab (int n, struct complex e[])$/;"	f
ExternalGeneratorTest	test/gtest/test/gtest-param-test_test.cc	/^class ExternalGeneratorTest : public TestWithParam<int> {};$/;"	c	file:
ExternalInstantiationTest	test/gtest/test/gtest-param-test_test.h	/^class ExternalInstantiationTest : public ::testing::TestWithParam<int> {$/;"	c
ExternalUtilityThatCallsRecordProperty	test/gtest/test/gtest_xml_output_unittest_.cc	/^void ExternalUtilityThatCallsRecordProperty(const std::string& key, int value) {$/;"	f
ExternalUtilityThatCallsRecordProperty	test/gtest/test/gtest_xml_output_unittest_.cc	/^void ExternalUtilityThatCallsRecordProperty(const std::string& key,$/;"	f
ExtractSummary	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult
ExtractSummary	test/gtest/src/gtest-test-part.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult
F	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:G
F	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:function
F	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    Function *F;$/;"	m	class:__anon1::CostModelAnalysis	file:
F.set	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f
FAIL	test/gtest/fused-src/gtest/gtest.h	19290;"	d
FAIL	test/gtest/include/gtest/gtest.h	1877;"	d
FALSE	experiments/backup/benchmarks/src/SciMark2-C/scimark2.h	16;"	d
FALSE	experiments/backup/benchmarks/src/base/dry.c	157;"	d	file:
FALSE	experiments/backup/benchmarks/src/base/fbench.c	240;"	d	file:
FALSE	experiments/backup/benchmarks/src/base/fldry.c	159;"	d	file:
FALSE	experiments/backup/benchmarks/src/base/misr.c	41;"	d	file:
FALSE	experiments/backup/benchmarks/src/base/richards_benchmark.c	36;"	d	file:
FALSE	experiments/benchmarks/src/SciMark2-C/scimark2.h	16;"	d
FALSE	experiments/benchmarks/src/base/dry.c	157;"	d	file:
FALSE	experiments/benchmarks/src/base/fbench.c	240;"	d	file:
FALSE	experiments/benchmarks/src/base/fldry.c	159;"	d	file:
FALSE	experiments/benchmarks/src/base/misr.c	41;"	d	file:
FALSE	experiments/benchmarks/src/base/richards_benchmark.c	36;"	d	file:
FATAL_FAILURE	test/gtest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon21::FailureType	file:
FATAL_FAILURE	test/gtest/test/gtest_output_test_.cc	/^    FATAL_FAILURE,$/;"	e	enum:ExpectFailureTest::FailureMode	file:
FATAL_FAILURE	test/gtest/test/gtest_unittest.cc	/^    FATAL_FAILURE,$/;"	e	enum:__anon14::ScopedFakeTestPartResultReporterTest::FailureMode	file:
FClose	test/gtest/fused-src/gtest/gtest.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:std::tr1::posix
FClose	test/gtest/include/gtest/internal/gtest-port.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:testing::internal::posix
FDOpen	test/gtest/fused-src/gtest/gtest.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:std::tr1::posix
FDOpen	test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:testing::internal::posix
FDTD_2D_H	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	9;"	d
FDTD_2D_H	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	9;"	d
FDTD_AMPL_H	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	9;"	d
FDTD_AMPL_H	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	9;"	d
FFT_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int FFT_SIZE = 1024;  \/* must be a power of two *\/$/;"	v
FFT_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int FFT_SIZE = 1024;  \/* must be a power of two *\/$/;"	v
FFT_bitreverse	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_bitreverse(int N, double *data) {$/;"	f
FFT_bitreverse	experiments/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_bitreverse(int N, double *data) {$/;"	f
FFT_inverse	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_inverse(int N, double *data)$/;"	f
FFT_inverse	experiments/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_inverse(int N, double *data)$/;"	f
FFT_num_flops	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^double FFT_num_flops(int N)$/;"	f
FFT_num_flops	experiments/benchmarks/src/SciMark2-C/FFT.c	/^double FFT_num_flops(int N)$/;"	f
FFT_transform	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_transform(int N, double *data)$/;"	f
FFT_transform	experiments/benchmarks/src/SciMark2-C/FFT.c	/^void FFT_transform(int N, double *data)$/;"	f
FFT_transform_internal	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^static void FFT_transform_internal (int N, double *data, int direction) {$/;"	f	file:
FFT_transform_internal	experiments/benchmarks/src/SciMark2-C/FFT.c	/^static void FFT_transform_internal (int N, double *data, int direction) {$/;"	f	file:
FILE_HDR	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	154;"	d	file:
FILE_HDR	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	154;"	d	file:
FILTERED_TESTS	test/gtest/test/gtest_shuffle_test.py	/^FILTERED_TESTS = []$/;"	v
FILTER_ENV_VAR	test/gtest/test/gtest_filter_unittest.py	/^FILTER_ENV_VAR = 'GTEST_FILTER'$/;"	v
FILTER_FLAG	test/gtest/test/gtest_catch_exceptions_test.py	/^FILTER_FLAG = FLAG_PREFIX + 'filter'$/;"	v
FILTER_FLAG	test/gtest/test/gtest_filter_unittest.py	/^FILTER_FLAG = 'gtest_filter'$/;"	v
FLAG_PREFIX	test/gtest/test/gtest_catch_exceptions_test.py	/^FLAG_PREFIX = '--gtest_'$/;"	v
FLAG_PREFIX	test/gtest/test/gtest_help_test.py	/^FLAG_PREFIX = '--gtest_'$/;"	v
FLOYD_WARSHALL_H	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	9;"	d
FLOYD_WARSHALL_H	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	9;"	d
FOpen	test/gtest/fused-src/gtest/gtest.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:std::tr1::posix
FOpen	test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:testing::internal::posix
FRIEND_TEST	test/gtest/fused-src/gtest/gtest.h	17042;"	d
FRIEND_TEST	test/gtest/include/gtest/gtest_prod.h	55;"	d
FRIEND_TEST_Test2	test/gtest/test/gtest_unittest.cc	/^class FRIEND_TEST_Test2 : public Test {$/;"	c	namespace:__anon16	file:
FReopen	test/gtest/fused-src/gtest/gtest.h	/^inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:std::tr1::posix
FReopen	test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:testing::internal::posix
FULL	experiments/backup/benchmarks/src/sgefa/ge.h	/^struct FULL {		\/* Struct definition for the FULL matrix structure. *\/$/;"	s
FULL	experiments/benchmarks/src/sgefa/ge.h	/^struct FULL {		\/* Struct definition for the FULL matrix structure. *\/$/;"	s
FUSED_GTEST_ALL_CC	test/gtest/scripts/test/Makefile	/^FUSED_GTEST_ALL_CC = $(FUSED_GTEST_DIR)\/gtest\/gtest-all.cc$/;"	m
FUSED_GTEST_DIR	test/gtest/scripts/test/Makefile	/^FUSED_GTEST_DIR = output$/;"	m
FUSED_GTEST_H	test/gtest/scripts/test/Makefile	/^FUSED_GTEST_H = $(FUSED_GTEST_DIR)\/gtest\/gtest.h$/;"	m
Factorial	test/gtest/samples/sample1.cc	/^int Factorial(int n) {$/;"	f
Fail	test/gtest/test/gtest_throw_on_failure_ex_test.cc	/^void Fail(const char* msg) {$/;"	f
FailFatally	test/gtest/test/gtest_unittest.cc	/^static void FailFatally() { FAIL(); }$/;"	f	file:
FailFromInternalError	test/gtest/fused-src/gtest/gtest-all.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal
FailFromInternalError	test/gtest/src/gtest-death-test.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal
Failed	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl
Failed	test/gtest/fused-src/gtest/gtest-all.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult
Failed	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest
Failed	test/gtest/fused-src/gtest/gtest.h	/^  bool Failed() const { return failed_test_count() > 0; }$/;"	f	class:testing::TestCase
Failed	test/gtest/include/gtest/gtest.h	/^  bool Failed() const { return failed_test_count() > 0; }$/;"	f	class:testing::TestCase
Failed	test/gtest/src/gtest-internal-inl.h	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl
Failed	test/gtest/src/gtest.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult
Failed	test/gtest/src/gtest.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest
FailedTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^class FailedTest : public Test {$/;"	c	file:
FailingParamTest	test/gtest/test/gtest_output_test_.cc	/^class FailingParamTest : public testing::TestWithParam<int> {};$/;"	c	file:
FailingThread	test/gtest/test/gtest_stress_test.cc	/^void FailingThread(bool is_fatal) {$/;"	f	namespace:testing::__anon23
Fails	test/gtest/test/gtest_unittest.cc	/^  void Fails() {$/;"	f	class:__anon14::NoFatalFailureTest
FailsNonFatal	test/gtest/test/gtest_unittest.cc	/^  void FailsNonFatal() {$/;"	f	class:__anon14::NoFatalFailureTest
FailureMode	test/gtest/test/gtest_output_test_.cc	/^  enum FailureMode {$/;"	g	class:ExpectFailureTest	file:
FailureMode	test/gtest/test/gtest_unittest.cc	/^  enum FailureMode {$/;"	g	class:__anon14::ScopedFakeTestPartResultReporterTest	file:
FailureType	test/gtest/test/gtest_environment_test.cc	/^enum FailureType {$/;"	g	namespace:__anon21	file:
FakeSocketWriter	test/gtest/test/gtest_unittest.cc	/^  class FakeSocketWriter : public StreamingListener::AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListenerTest	file:
FalseHRESULTSuccess	test/gtest/test/gtest_unittest.cc	/^static HRESULT FalseHRESULTSuccess() {$/;"	f	namespace:__anon14
FatalFailure	test/gtest/test/gtest_output_test_.cc	/^void FatalFailure() {$/;"	f
FatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^  FatalFailureInFixtureConstructorTest() {$/;"	f	class:FatalFailureInFixtureConstructorTest
FatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^class FatalFailureInFixtureConstructorTest : public testing::Test {$/;"	c	file:
FatalFailureInSetUpTest	test/gtest/test/gtest_output_test_.cc	/^class FatalFailureInSetUpTest : public testing::Test {$/;"	c	file:
Fft	experiments/backup/benchmarks/src/base/oscar.c	/^Fft (int n, struct complex z[], struct complex w[], struct complex e[],$/;"	f
Fft	experiments/benchmarks/src/base/oscar.c	/^Fft (int n, struct complex z[], struct complex w[], struct complex e[],$/;"	f
FileCoverageList	include/Profiling/GCOV.h	/^      FileCoverageList;$/;"	t	class:llvm::FileInfo
FileCoverages	include/Profiling/GCOV.h	/^  FileCoverageList FileCoverages;$/;"	m	class:llvm::FileInfo
FileExists	test/gtest/test/gtest_premature_exit_test.cc	/^  static bool FileExists(const char* filepath) {$/;"	f	class:__anon29::PrematureExitTest
FileInfo	include/Profiling/GCOV.h	/^  FileInfo(const GCOVOptions &Options) :$/;"	f	class:llvm::FileInfo
FileInfo	include/Profiling/GCOV.h	/^class FileInfo {$/;"	c	namespace:llvm
FileNo	test/gtest/fused-src/gtest/gtest.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:std::tr1::posix
FileNo	test/gtest/fused-src/gtest/gtest.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:std::tr1::posix
FileNo	test/gtest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:testing::internal::posix
FileNo	test/gtest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:testing::internal::posix
FileOrDirectoryExists	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath
FileOrDirectoryExists	test/gtest/src/gtest-filepath.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/fused-src/gtest/gtest.h	/^  FilePath() : pathname_("") { }$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/fused-src/gtest/gtest.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/fused-src/gtest/gtest.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
FilePath	test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath() : pathname_("") { }$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/include/gtest/internal/gtest-filepath.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	test/gtest/include/gtest/internal/gtest-filepath.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
Filename	include/Profiling/GCOV.h	/^  StringRef Filename;$/;"	m	class:llvm::GCOVFunction
Filter	test/gtest/test/gtest_unittest.cc	/^  static Flags Filter(const char* filter) {$/;"	f	struct:testing::Flags
FilterFlag	test/gtest/test/gtest_shuffle_test.py	/^def FilterFlag(test_filter):$/;"	f
FilterMatchesTest	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string &test_case_name,$/;"	f	class:testing::internal::UnitTestOptions
FilterMatchesTest	test/gtest/src/gtest.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string &test_case_name,$/;"	f	class:testing::internal::UnitTestOptions
FilterTests	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl
FilterTests	test/gtest/src/gtest.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl
FinalSuccessChecker	test/gtest/test/gtest-unittest-api_test.cc	/^class FinalSuccessChecker : public Environment {$/;"	c	namespace:testing::internal	file:
FindChildElement	docs/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m	class:SearchResults
FindFirst	test/gtest/scripts/pump.py	/^def FindFirst(lines, token_table, cursor):$/;"	f
FindFirstInLine	test/gtest/scripts/pump.py	/^def FindFirstInLine(line, token_table):$/;"	f
FindLastPathSeparator	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath
FindLastPathSeparator	test/gtest/src/gtest-filepath.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath
FindTestCase	test/gtest/test/gtest-unittest-api_test.cc	/^  static const TestCase* FindTestCase(const char* name) {$/;"	f	class:testing::internal::UnitTestHelper
First	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  bool First = true;$/;"	m	struct:MachineAST	file:
Fit	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int Fit (int i, int j) {$/;"	f
Fit	experiments/benchmarks/src/base/puzzle-stanford.c	/^int Fit (int i, int j) {$/;"	f
FixtureConstructorExecuted	test/gtest/test/gtest-param-test_test.cc	/^  void FixtureConstructorExecuted() { fixture_constructor_count_++; }$/;"	f	class:TestGenerationEnvironment
FlagToEnvVar	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal
FlagToEnvVar	test/gtest/src/gtest-port.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal
Flags	test/gtest/test/gtest_unittest.cc	/^  Flags() : also_run_disabled_tests(false),$/;"	f	struct:testing::Flags
Flags	test/gtest/test/gtest_unittest.cc	/^struct Flags {$/;"	s	namespace:testing	file:
FlattenCFG	include/GEOS.h	/^  FlattenCFG,$/;"	e	enum:OptimizationKind
Float	experiments/backup/benchmarks/src/base/ffbench.c	139;"	d	file:
Float	experiments/benchmarks/src/base/ffbench.c	139;"	d	file:
Float	test/gtest/fused-src/gtest/gtest.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal
Float	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal
FloatLE	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
FloatLE	test/gtest/src/gtest.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
FloatTest	test/gtest/test/gtest_unittest.cc	/^typedef FloatingPointTest<float> FloatTest;$/;"	t	namespace:__anon14	file:
Floating	test/gtest/test/gtest_unittest.cc	/^  typedef typename testing::internal::FloatingPoint<RawType> Floating;$/;"	t	class:__anon14::FloatingPointTest	file:
FloatingPoint	test/gtest/fused-src/gtest/gtest.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	test/gtest/fused-src/gtest/gtest.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPoint	test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	test/gtest/include/gtest/internal/gtest-internal.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPointLE	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult FloatingPointLE(const char* expr1,$/;"	f	namespace:testing::internal
FloatingPointLE	test/gtest/src/gtest.cc	/^AssertionResult FloatingPointLE(const char* expr1,$/;"	f	namespace:testing::internal
FloatingPointTest	test/gtest/test/gtest_unittest.cc	/^class FloatingPointTest : public Test {$/;"	c	namespace:__anon14	file:
FloatingPointUnion	test/gtest/fused-src/gtest/gtest.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
FloatingPointUnion	test/gtest/include/gtest/internal/gtest-internal.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
FlushInfoLog	test/gtest/fused-src/gtest/gtest.h	/^inline void FlushInfoLog() { fflush(NULL); }$/;"	f	namespace:std::tr1
FlushInfoLog	test/gtest/include/gtest/internal/gtest-port.h	/^inline void FlushInfoLog() { fflush(NULL); }$/;"	f	namespace:testing::internal
Foo	test/gtest/test/gtest-printers_test.cc	/^struct Foo {$/;"	s	namespace:testing::gtest_printers_test	file:
Foo	test/gtest/test/gtest_unittest.cc	/^  Foo() {}$/;"	f	class:__anon16::Foo
Foo	test/gtest/test/gtest_unittest.cc	/^class Foo {$/;"	c	namespace:__anon16	file:
FooEnvironment	test/gtest/test/gtest_output_test_.cc	/^class FooEnvironment : public testing::Environment {$/;"	c	file:
FooTest	test/gtest/test/gtest_filter_unittest_.cc	/^class FooTest : public testing::Test {$/;"	c	namespace:__anon24	file:
FooTest	test/gtest/test/gtest_list_tests_unittest_.cc	/^class FooTest : public testing::Test {$/;"	c	file:
ForEach	test/gtest/fused-src/gtest/gtest-all.cc	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal
ForEach	test/gtest/src/gtest-internal-inl.h	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal
ForNode	test/gtest/scripts/pump.py	/^class ForNode:$/;"	c
ForkingDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
ForkingDeathTest	test/gtest/src/gtest-death-test.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	test/gtest/src/gtest-death-test.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
Format	test/gtest/fused-src/gtest/gtest.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison
Format	test/gtest/fused-src/gtest/gtest.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison
Format	test/gtest/include/gtest/gtest.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison
Format	test/gtest/include/gtest/gtest.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison
FormatBool	test/gtest/fused-src/gtest/gtest-all.cc	/^  string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener	file:
FormatBool	test/gtest/src/gtest-internal-inl.h	/^  string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener
FormatByte	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String
FormatByte	test/gtest/src/gtest.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String
FormatCompilerIndependentFileLocation	test/gtest/fused-src/gtest/gtest-all.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation($/;"	f	namespace:testing::internal
FormatCompilerIndependentFileLocation	test/gtest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation($/;"	f	namespace:testing::internal
FormatCountableNoun	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FormatCountableNoun(int count,$/;"	f	namespace:testing
FormatCountableNoun	test/gtest/src/gtest.cc	/^static std::string FormatCountableNoun(int count,$/;"	f	namespace:testing
FormatCxxExceptionMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal
FormatCxxExceptionMessage	test/gtest/src/gtest.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal
FormatDeathTestOutput	test/gtest/fused-src/gtest/gtest-all.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal
FormatDeathTestOutput	test/gtest/src/gtest-death-test.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal
FormatEpochTimeInMillisAsIso8601	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatEpochTimeInMillisAsIso8601	test/gtest/src/gtest.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatEpochTimeInMillisAsIso8601Test	test/gtest/test/gtest_unittest.cc	/^class FormatEpochTimeInMillisAsIso8601Test : public Test {$/;"	c	namespace:__anon14	file:
FormatFileLocation	test/gtest/fused-src/gtest/gtest-all.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal
FormatFileLocation	test/gtest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal
FormatForComparison	test/gtest/fused-src/gtest/gtest.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	test/gtest/fused-src/gtest/gtest.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparison	test/gtest/include/gtest/gtest.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	test/gtest/include/gtest/gtest.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparisonFailureMessage	test/gtest/fused-src/gtest/gtest.h	/^std::string FormatForComparisonFailureMessage($/;"	f	namespace:testing::internal
FormatForComparisonFailureMessage	test/gtest/include/gtest/gtest.h	/^std::string FormatForComparisonFailureMessage($/;"	f	namespace:testing::internal
FormatHexInt	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String
FormatHexInt	test/gtest/src/gtest.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String
FormatIntWidth2	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String
FormatIntWidth2	test/gtest/src/gtest.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String
FormatRegexSyntaxError	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal
FormatRegexSyntaxError	test/gtest/src/gtest-port.cc	/^std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal
FormatSehExceptionMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing
FormatSehExceptionMessage	test/gtest/src/gtest.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing
FormatTestCaseCount	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FormatTestCaseCount(int test_case_count) {$/;"	f	namespace:testing
FormatTestCaseCount	test/gtest/src/gtest.cc	/^static std::string FormatTestCaseCount(int test_case_count) {$/;"	f	namespace:testing
FormatTestCount	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing
FormatTestCount	test/gtest/src/gtest.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing
FormatTimeInMillisAsSeconds	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatTimeInMillisAsSeconds	test/gtest/src/gtest.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatWordList	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing
FormatWordList	test/gtest/src/gtest.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing
Freq	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^int    *Freq;$/;"	v
FullMatch	test/gtest/fused-src/gtest/gtest-all.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
FullMatch	test/gtest/fused-src/gtest/gtest.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FullMatch	test/gtest/fused-src/gtest/gtest.h	/^  static bool FullMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FullMatch	test/gtest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE
FullMatch	test/gtest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(const ::string& str, const RE& re) {$/;"	f	class:testing::internal::RE
FullMatch	test/gtest/src/gtest-port.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
Func1	experiments/backup/benchmarks/src/base/dry.c	/^Enumeration Func1(CharPar1, CharPar2)$/;"	f
Func1	experiments/backup/benchmarks/src/base/fldry.c	/^Enumeration Func1(CharPar1, CharPar2)$/;"	f
Func1	experiments/benchmarks/src/base/dry.c	/^Enumeration Func1(CharPar1, CharPar2)$/;"	f
Func1	experiments/benchmarks/src/base/fldry.c	/^Enumeration Func1(CharPar1, CharPar2)$/;"	f
Func2	experiments/backup/benchmarks/src/base/dry.c	/^boolean Func2(StrParI1, StrParI2)$/;"	f
Func2	experiments/backup/benchmarks/src/base/fldry.c	/^boolean Func2(StrParI1, StrParI2)$/;"	f
Func2	experiments/benchmarks/src/base/dry.c	/^boolean Func2(StrParI1, StrParI2)$/;"	f
Func2	experiments/benchmarks/src/base/fldry.c	/^boolean Func2(StrParI1, StrParI2)$/;"	f
Func3	experiments/backup/benchmarks/src/base/dry.c	/^boolean Func3(EnumParIn)$/;"	f
Func3	experiments/backup/benchmarks/src/base/fldry.c	/^boolean Func3(EnumParIn)$/;"	f
Func3	experiments/benchmarks/src/base/dry.c	/^boolean Func3(EnumParIn)$/;"	f
Func3	experiments/benchmarks/src/base/fldry.c	/^boolean Func3(EnumParIn)$/;"	f
FuncCoverage	include/Profiling/GCOV.h	/^  bool FuncCoverage;$/;"	m	struct:llvm::GCOVOptions
FuncCoverageMap	include/Profiling/GCOV.h	/^  typedef MapVector<const GCOVFunction *, GCOVCoverage> FuncCoverageMap;$/;"	t	class:llvm::FileInfo
FuncCoverages	include/Profiling/GCOV.h	/^  FuncCoverageMap FuncCoverages;$/;"	m	class:llvm::FileInfo
FuncToMachine	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::unordered_map<std::string, MachineFunction*> FuncToMachine;$/;"	m	struct:MachineAST	file:
FunctionLines	include/Profiling/GCOV.h	/^  typedef DenseMap<uint32_t, FunctionVector> FunctionLines;$/;"	t	class:llvm::FileInfo
FunctionVector	include/Profiling/GCOV.h	/^  typedef SmallVector<const GCOVFunction *, 1> FunctionVector;$/;"	t	class:llvm::FileInfo
Functions	include/Profiling/GCOV.h	/^    FunctionLines Functions;$/;"	m	struct:llvm::FileInfo::LineData
Functions	include/Profiling/GCOV.h	/^  SmallVector<std::unique_ptr<GCOVFunction>, 16> Functions;$/;"	m	class:llvm::GCOVFile
FuseGTest	test/gtest/scripts/fuse_gtest_files.py	/^def FuseGTest(gtest_root, output_dir):$/;"	f
FuseGTestAllCc	test/gtest/scripts/fuse_gtest_files.py	/^def FuseGTestAllCc(gtest_root, output_dir):$/;"	f
FuseGTestAllCcToFile	test/gtest/scripts/fuse_gtest_files.py	/^def FuseGTestAllCcToFile(gtest_root, output_file):$/;"	f
FuseGTestH	test/gtest/scripts/fuse_gtest_files.py	/^def FuseGTestH(gtest_root, output_dir):$/;"	f
GAME_HC	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^	 GAME_HC = 1,$/;"	e	enum:__anon54	file:
GAME_HC	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^	 GAME_HC = 1,$/;"	e	enum:__anon41	file:
GAME_HH	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^	 GAME_HH$/;"	e	enum:__anon54	file:
GAME_HH	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^	 GAME_HH$/;"	e	enum:__anon41	file:
GCNOInitialized	include/Profiling/GCOV.h	/^  bool GCNOInitialized;$/;"	m	class:llvm::GCOVFile
GCOV	include/Profiling/GCOV.h	/^namespace GCOV {$/;"	n	namespace:llvm
GCOVBlock	include/Profiling/GCOV.h	/^  GCOVBlock(GCOVFunction &P, uint32_t N) : Parent(P), Number(N), Counter(0),$/;"	f	class:llvm::GCOVBlock
GCOVBlock	include/Profiling/GCOV.h	/^class GCOVBlock {$/;"	c	namespace:llvm
GCOVBuffer	include/Profiling/GCOV.h	/^  GCOVBuffer(MemoryBuffer *B) : Buffer(B), Cursor(0) {}$/;"	f	class:llvm::GCOVBuffer
GCOVBuffer	include/Profiling/GCOV.h	/^class GCOVBuffer {$/;"	c	namespace:llvm
GCOVCoverage	include/Profiling/GCOV.h	/^    GCOVCoverage(StringRef Name) :$/;"	f	struct:llvm::FileInfo::GCOVCoverage
GCOVCoverage	include/Profiling/GCOV.h	/^  struct GCOVCoverage {$/;"	s	class:llvm::FileInfo
GCOVEdge	include/Profiling/GCOV.h	/^  GCOVEdge(GCOVBlock &S, GCOVBlock &D) : Src(S), Dst(D), Count(0) {}$/;"	f	struct:llvm::GCOVEdge
GCOVEdge	include/Profiling/GCOV.h	/^struct GCOVEdge {$/;"	s	namespace:llvm
GCOVFile	include/Profiling/GCOV.h	/^  GCOVFile() : GCNOInitialized(false), Checksum(0), Functions(), RunCount(0),$/;"	f	class:llvm::GCOVFile
GCOVFile	include/Profiling/GCOV.h	/^class GCOVFile {$/;"	c	namespace:llvm
GCOVFunction	include/Profiling/GCOV.h	/^  GCOVFunction(GCOVFile &P) : Parent(P), Ident(0), LineNumber(0) {}$/;"	f	class:llvm::GCOVFunction
GCOVFunction	include/Profiling/GCOV.h	/^class GCOVFunction {$/;"	c	namespace:llvm
GCOVOptions	include/Profiling/GCOV.h	/^  GCOVOptions(bool A, bool B, bool C, bool F, bool P, bool U, bool L, bool N)$/;"	f	struct:llvm::GCOVOptions
GCOVOptions	include/Profiling/GCOV.h	/^struct GCOVOptions {$/;"	s	namespace:llvm
GCOVVersion	include/Profiling/GCOV.h	/^  enum GCOVVersion {$/;"	g	namespace:llvm::GCOV
GEMM_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	9;"	d
GEMM_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	9;"	d
GEMVER_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	9;"	d
GEMVER_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	9;"	d
GENGOLDEN_FLAG	test/gtest/test/gtest_output_test.py	/^GENGOLDEN_FLAG = '--gengolden'$/;"	v
GEOS	include/GEOS.h	/^namespace GEOS {$/;"	n
GESUMMV_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	9;"	d
GESUMMV_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	9;"	d
GOLDEN_NAME	test/gtest/test/gtest_output_test.py	/^GOLDEN_NAME = 'gtest_output_test_golden_lin.txt'$/;"	v
GOLDEN_PATH	test/gtest/test/gtest_output_test.py	/^GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)$/;"	v
GRAMSCHMIDT_H	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	9;"	d
GRAMSCHMIDT_H	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	9;"	d
GTEST_0_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1624;"	d
GTEST_0_TUPLE_	test/gtest/fused-src/gtest/gtest.h	698;"	d
GTEST_0_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	57;"	d
GTEST_0_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	983;"	d
GTEST_0_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1636;"	d
GTEST_0_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	721;"	d
GTEST_0_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	80;"	d
GTEST_0_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	995;"	d
GTEST_10_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1634;"	d
GTEST_10_TUPLE_	test/gtest/fused-src/gtest/gtest.h	717;"	d
GTEST_10_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	76;"	d
GTEST_10_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	993;"	d
GTEST_10_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1646;"	d
GTEST_10_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	738;"	d
GTEST_10_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1005;"	d
GTEST_10_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	97;"	d
GTEST_1_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_1_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_1_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1625;"	d
GTEST_1_TUPLE_	test/gtest/fused-src/gtest/gtest.h	699;"	d
GTEST_1_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_1_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_1_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	58;"	d
GTEST_1_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	984;"	d
GTEST_1_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1637;"	d
GTEST_1_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	722;"	d
GTEST_1_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	81;"	d
GTEST_1_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	996;"	d
GTEST_2_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_2_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_2_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1626;"	d
GTEST_2_TUPLE_	test/gtest/fused-src/gtest/gtest.h	701;"	d
GTEST_2_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_2_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_2_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	60;"	d
GTEST_2_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	985;"	d
GTEST_2_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1638;"	d
GTEST_2_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	723;"	d
GTEST_2_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	82;"	d
GTEST_2_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	997;"	d
GTEST_3_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_3_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_3_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1627;"	d
GTEST_3_TUPLE_	test/gtest/fused-src/gtest/gtest.h	703;"	d
GTEST_3_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_3_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_3_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	62;"	d
GTEST_3_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	986;"	d
GTEST_3_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1639;"	d
GTEST_3_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	724;"	d
GTEST_3_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	83;"	d
GTEST_3_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	998;"	d
GTEST_4_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_4_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_4_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1628;"	d
GTEST_4_TUPLE_	test/gtest/fused-src/gtest/gtest.h	705;"	d
GTEST_4_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_4_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_4_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	64;"	d
GTEST_4_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	987;"	d
GTEST_4_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1640;"	d
GTEST_4_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	725;"	d
GTEST_4_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	84;"	d
GTEST_4_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	999;"	d
GTEST_5_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_5_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_5_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1629;"	d
GTEST_5_TUPLE_	test/gtest/fused-src/gtest/gtest.h	707;"	d
GTEST_5_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_5_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_5_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	66;"	d
GTEST_5_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	988;"	d
GTEST_5_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1641;"	d
GTEST_5_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	727;"	d
GTEST_5_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1000;"	d
GTEST_5_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	86;"	d
GTEST_6_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_6_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_6_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1630;"	d
GTEST_6_TUPLE_	test/gtest/fused-src/gtest/gtest.h	709;"	d
GTEST_6_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_6_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_6_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	68;"	d
GTEST_6_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	989;"	d
GTEST_6_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1642;"	d
GTEST_6_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	729;"	d
GTEST_6_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1001;"	d
GTEST_6_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	88;"	d
GTEST_7_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_7_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_7_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1631;"	d
GTEST_7_TUPLE_	test/gtest/fused-src/gtest/gtest.h	711;"	d
GTEST_7_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_7_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_7_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	70;"	d
GTEST_7_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	990;"	d
GTEST_7_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1643;"	d
GTEST_7_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	731;"	d
GTEST_7_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1002;"	d
GTEST_7_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	90;"	d
GTEST_8_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_8_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_8_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1632;"	d
GTEST_8_TUPLE_	test/gtest/fused-src/gtest/gtest.h	713;"	d
GTEST_8_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_8_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_8_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	72;"	d
GTEST_8_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	991;"	d
GTEST_8_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1644;"	d
GTEST_8_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	733;"	d
GTEST_8_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1003;"	d
GTEST_8_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	92;"	d
GTEST_9_TUPLE_	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_9_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_9_TUPLE_	test/gtest/fused-src/gtest/gtest.h	1633;"	d
GTEST_9_TUPLE_	test/gtest/fused-src/gtest/gtest.h	715;"	d
GTEST_9_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	/^class GTEST_9_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_9_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	74;"	d
GTEST_9_TUPLE_	test/gtest/include/gtest/internal/gtest-tuple.h	992;"	d
GTEST_9_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	1645;"	d
GTEST_9_TYPENAMES_	test/gtest/fused-src/gtest/gtest.h	735;"	d
GTEST_9_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	1004;"	d
GTEST_9_TYPENAMES_	test/gtest/include/gtest/internal/gtest-tuple.h	94;"	d
GTEST_ADD_REFERENCE_	test/gtest/fused-src/gtest/gtest.h	7720;"	d
GTEST_ADD_REFERENCE_	test/gtest/include/gtest/internal/gtest-internal.h	760;"	d
GTEST_ADD_REF_	test/gtest/fused-src/gtest/gtest.h	1650;"	d
GTEST_ADD_REF_	test/gtest/fused-src/gtest/gtest.h	775;"	d
GTEST_ADD_REF_	test/gtest/include/gtest/internal/gtest-tuple.h	1009;"	d
GTEST_ADD_REF_	test/gtest/include/gtest/internal/gtest-tuple.h	134;"	d
GTEST_ALL_CC_OUTPUT	test/gtest/scripts/fuse_gtest_files.py	/^GTEST_ALL_CC_OUTPUT = 'gtest\/gtest-all.cc'$/;"	v
GTEST_ALL_CC_SEED	test/gtest/scripts/fuse_gtest_files.py	/^GTEST_ALL_CC_SEED = 'src\/gtest-all.cc'$/;"	v
GTEST_AMBIGUOUS_ELSE_BLOCKER_	test/gtest/fused-src/gtest/gtest.h	1804;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	test/gtest/include/gtest/internal/gtest-port.h	697;"	d
GTEST_API_	test/gtest/fused-src/gtest/gtest.h	1867;"	d
GTEST_API_	test/gtest/fused-src/gtest/gtest.h	1875;"	d
GTEST_API_	test/gtest/include/gtest/internal/gtest-port.h	760;"	d
GTEST_API_	test/gtest/include/gtest/internal/gtest-port.h	768;"	d
GTEST_ASSERT_	test/gtest/fused-src/gtest/gtest.h	19416;"	d
GTEST_ASSERT_	test/gtest/include/gtest/gtest_pred_impl.h	75;"	d
GTEST_ASSERT_EQ	test/gtest/fused-src/gtest/gtest.h	19762;"	d
GTEST_ASSERT_EQ	test/gtest/include/gtest/gtest.h	1992;"	d
GTEST_ASSERT_GE	test/gtest/fused-src/gtest/gtest.h	19772;"	d
GTEST_ASSERT_GE	test/gtest/include/gtest/gtest.h	2002;"	d
GTEST_ASSERT_GT	test/gtest/fused-src/gtest/gtest.h	19774;"	d
GTEST_ASSERT_GT	test/gtest/include/gtest/gtest.h	2004;"	d
GTEST_ASSERT_LE	test/gtest/fused-src/gtest/gtest.h	19768;"	d
GTEST_ASSERT_LE	test/gtest/include/gtest/gtest.h	1998;"	d
GTEST_ASSERT_LT	test/gtest/fused-src/gtest/gtest.h	19770;"	d
GTEST_ASSERT_LT	test/gtest/include/gtest/gtest.h	2000;"	d
GTEST_ASSERT_NE	test/gtest/fused-src/gtest/gtest.h	19766;"	d
GTEST_ASSERT_NE	test/gtest/include/gtest/gtest.h	1996;"	d
GTEST_ATTRIBUTE_UNUSED_	test/gtest/fused-src/gtest/gtest-all.cc	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver	file:
GTEST_ATTRIBUTE_UNUSED_	test/gtest/fused-src/gtest/gtest.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	test/gtest/fused-src/gtest/gtest.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	m	namespace:testing::internal	typeref:class:testing::internal::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	test/gtest/fused-src/gtest/gtest.h	1821;"	d
GTEST_ATTRIBUTE_UNUSED_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	test/gtest/include/gtest/internal/gtest-internal.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	m	namespace:testing::internal	typeref:class:testing::internal::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	test/gtest/include/gtest/internal/gtest-port.h	714;"	d
GTEST_ATTRIBUTE_UNUSED_	test/gtest/src/gtest-internal-inl.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver
GTEST_ATTRIBUTE_UNUSED_	test/gtest/test/gtest_unittest.cc	/^static bool dummy1 GTEST_ATTRIBUTE_UNUSED_ = StaticAssertTypeEq<bool, bool>();$/;"	v	file:
GTEST_ATTRIBUTE_UNUSED_	test/gtest/test/gtest_unittest.cc	/^static bool dummy2 GTEST_ATTRIBUTE_UNUSED_ =$/;"	v	file:
GTEST_BIND_	test/gtest/fused-src/gtest/gtest.h	5332;"	d
GTEST_BIND_	test/gtest/include/gtest/internal/gtest-type-util.h	1640;"	d
GTEST_BY_REF_	test/gtest/fused-src/gtest/gtest.h	1649;"	d
GTEST_BY_REF_	test/gtest/fused-src/gtest/gtest.h	765;"	d
GTEST_BY_REF_	test/gtest/include/gtest/internal/gtest-tuple.h	1008;"	d
GTEST_BY_REF_	test/gtest/include/gtest/internal/gtest-tuple.h	124;"	d
GTEST_CAN_COMPARE_NULL	test/gtest/fused-src/gtest/gtest.h	2706;"	d
GTEST_CAN_COMPARE_NULL	test/gtest/include/gtest/internal/gtest-port.h	1599;"	d
GTEST_CAN_STREAM_RESULTS_	test/gtest/fused-src/gtest/gtest.h	1790;"	d
GTEST_CAN_STREAM_RESULTS_	test/gtest/include/gtest/internal/gtest-port.h	683;"	d
GTEST_CASE_NAMESPACE_	test/gtest/fused-src/gtest/gtest.h	17419;"	d
GTEST_CASE_NAMESPACE_	test/gtest/include/gtest/gtest-typed-test.h	199;"	d
GTEST_CHECK_	test/gtest/fused-src/gtest/gtest.h	2167;"	d
GTEST_CHECK_	test/gtest/include/gtest/internal/gtest-port.h	1060;"	d
GTEST_CHECK_INT_EQ_	test/gtest/test/gtest_repeat_test.cc	63;"	d	file:
GTEST_CHECK_POSIX_SUCCESS_	test/gtest/fused-src/gtest/gtest.h	2179;"	d
GTEST_CHECK_POSIX_SUCCESS_	test/gtest/include/gtest/internal/gtest-port.h	1072;"	d
GTEST_COMPILE_ASSERT_	test/gtest/fused-src/gtest/gtest.h	1922;"	d
GTEST_COMPILE_ASSERT_	test/gtest/include/gtest/internal/gtest-port.h	815;"	d
GTEST_CONCAT_TOKEN_	test/gtest/fused-src/gtest/gtest.h	7033;"	d
GTEST_CONCAT_TOKEN_	test/gtest/include/gtest/internal/gtest-internal.h	73;"	d
GTEST_CONCAT_TOKEN_IMPL_	test/gtest/fused-src/gtest/gtest.h	7034;"	d
GTEST_CONCAT_TOKEN_IMPL_	test/gtest/include/gtest/internal/gtest-internal.h	74;"	d
GTEST_DEATH_TEST_	test/gtest/fused-src/gtest/gtest.h	8342;"	d
GTEST_DEATH_TEST_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	185;"	d
GTEST_DEATH_TEST_CHECK_	test/gtest/fused-src/gtest/gtest-all.cc	6766;"	d	file:
GTEST_DEATH_TEST_CHECK_	test/gtest/src/gtest-death-test.cc	272;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	test/gtest/fused-src/gtest/gtest-all.cc	6783;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	test/gtest/src/gtest-death-test.cc	289;"	d	file:
GTEST_DECLARE_STATIC_MUTEX_	test/gtest/fused-src/gtest/gtest.h	2487;"	d
GTEST_DECLARE_STATIC_MUTEX_	test/gtest/fused-src/gtest/gtest.h	2660;"	d
GTEST_DECLARE_STATIC_MUTEX_	test/gtest/include/gtest/internal/gtest-port.h	1380;"	d
GTEST_DECLARE_STATIC_MUTEX_	test/gtest/include/gtest/internal/gtest-port.h	1553;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/fused-src/gtest/gtest.h	1648;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/fused-src/gtest/gtest.h	690;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/fused-src/gtest/gtest.h	692;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/include/gtest/internal/gtest-tuple.h	1007;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/include/gtest/internal/gtest-tuple.h	49;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	test/gtest/include/gtest/internal/gtest-tuple.h	51;"	d
GTEST_DECLARE_bool_	test/gtest/fused-src/gtest/gtest.h	3019;"	d
GTEST_DECLARE_bool_	test/gtest/include/gtest/internal/gtest-port.h	1912;"	d
GTEST_DECLARE_int32_	test/gtest/fused-src/gtest/gtest.h	3020;"	d
GTEST_DECLARE_int32_	test/gtest/include/gtest/internal/gtest-port.h	1913;"	d
GTEST_DECLARE_string_	test/gtest/fused-src/gtest/gtest.h	3022;"	d
GTEST_DECLARE_string_	test/gtest/include/gtest/internal/gtest-port.h	1915;"	d
GTEST_DEFAULT_OUTPUT_FILE	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_DEFAULT_OUTPUT_FILE = "test_detail.xml"$/;"	v
GTEST_DEFAULT_OUTPUT_FILE	test/gtest/test/gtest_xml_test_utils.py	/^GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'$/;"	v
GTEST_DEFINE_STATIC_MUTEX_	test/gtest/fused-src/gtest/gtest.h	2496;"	d
GTEST_DEFINE_STATIC_MUTEX_	test/gtest/fused-src/gtest/gtest.h	2663;"	d
GTEST_DEFINE_STATIC_MUTEX_	test/gtest/include/gtest/internal/gtest-port.h	1389;"	d
GTEST_DEFINE_STATIC_MUTEX_	test/gtest/include/gtest/internal/gtest-port.h	1556;"	d
GTEST_DEFINE_bool_	test/gtest/fused-src/gtest/gtest.h	3026;"	d
GTEST_DEFINE_bool_	test/gtest/include/gtest/internal/gtest-port.h	1919;"	d
GTEST_DEFINE_int32_	test/gtest/fused-src/gtest/gtest.h	3028;"	d
GTEST_DEFINE_int32_	test/gtest/include/gtest/internal/gtest-port.h	1921;"	d
GTEST_DEFINE_string_	test/gtest/fused-src/gtest/gtest.h	3030;"	d
GTEST_DEFINE_string_	test/gtest/include/gtest/internal/gtest-port.h	1923;"	d
GTEST_DEV_EMAIL_	test/gtest/fused-src/gtest/gtest.h	311;"	d
GTEST_DEV_EMAIL_	test/gtest/include/gtest/internal/gtest-port.h	215;"	d
GTEST_DIR	test/gtest/make/Makefile	/^GTEST_DIR = ..$/;"	m
GTEST_DISALLOW_ASSIGN_	test/gtest/fused-src/gtest/gtest.h	1828;"	d
GTEST_DISALLOW_ASSIGN_	test/gtest/include/gtest/internal/gtest-port.h	721;"	d
GTEST_DISALLOW_COPY_AND_ASSIGN_	test/gtest/fused-src/gtest/gtest.h	1833;"	d
GTEST_DISALLOW_COPY_AND_ASSIGN_	test/gtest/include/gtest/internal/gtest-port.h	726;"	d
GTEST_ELLIPSIS_NEEDS_POD_	test/gtest/fused-src/gtest/gtest.h	2704;"	d
GTEST_ELLIPSIS_NEEDS_POD_	test/gtest/include/gtest/internal/gtest-port.h	1597;"	d
GTEST_ENV_HAS_STD_TUPLE_	test/gtest/fused-src/gtest/gtest.h	625;"	d
GTEST_ENV_HAS_STD_TUPLE_	test/gtest/include/gtest/internal/gtest-port.h	529;"	d
GTEST_ENV_HAS_TR1_TUPLE_	test/gtest/fused-src/gtest/gtest.h	618;"	d
GTEST_ENV_HAS_TR1_TUPLE_	test/gtest/include/gtest/internal/gtest-port.h	522;"	d
GTEST_ERROR	test/gtest/fused-src/gtest/gtest.h	/^  GTEST_ERROR,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_ERROR	test/gtest/include/gtest/internal/gtest-port.h	/^  GTEST_ERROR,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_EXCLUSIVE_LOCK_REQUIRED_	test/gtest/fused-src/gtest/gtest.h	3034;"	d
GTEST_EXCLUSIVE_LOCK_REQUIRED_	test/gtest/include/gtest/internal/gtest-port.h	1927;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	test/gtest/fused-src/gtest/gtest.h	8318;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	test/gtest/fused-src/gtest/gtest.h	8335;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	161;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	178;"	d
GTEST_EXECUTE_STATEMENT_	test/gtest/fused-src/gtest/gtest.h	8381;"	d
GTEST_EXECUTE_STATEMENT_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	224;"	d
GTEST_FAIL	test/gtest/fused-src/gtest/gtest.h	19285;"	d
GTEST_FAIL	test/gtest/include/gtest/gtest.h	1872;"	d
GTEST_FATAL	test/gtest/fused-src/gtest/gtest.h	/^  GTEST_FATAL$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_FATAL	test/gtest/include/gtest/internal/gtest-port.h	/^  GTEST_FATAL$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_FATAL_FAILURE_	test/gtest/fused-src/gtest/gtest.h	7991;"	d
GTEST_FATAL_FAILURE_	test/gtest/include/gtest/internal/gtest-internal.h	1031;"	d
GTEST_FILTER_FLAG	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_FILTER_FLAG = '--gtest_filter'$/;"	v
GTEST_FLAG	test/gtest/fused-src/gtest/gtest.h	3016;"	d
GTEST_FLAG	test/gtest/include/gtest/internal/gtest-port.h	1909;"	d
GTEST_FLAG_PREFIX_	test/gtest/fused-src/gtest/gtest.h	312;"	d
GTEST_FLAG_PREFIX_	test/gtest/include/gtest/internal/gtest-port.h	216;"	d
GTEST_FLAG_PREFIX_DASH_	test/gtest/fused-src/gtest/gtest.h	313;"	d
GTEST_FLAG_PREFIX_DASH_	test/gtest/include/gtest/internal/gtest-port.h	217;"	d
GTEST_FLAG_PREFIX_UPPER_	test/gtest/fused-src/gtest/gtest.h	314;"	d
GTEST_FLAG_PREFIX_UPPER_	test/gtest/include/gtest/internal/gtest-port.h	218;"	d
GTEST_GCC_VER_	test/gtest/fused-src/gtest/gtest.h	321;"	d
GTEST_GCC_VER_	test/gtest/include/gtest/internal/gtest-port.h	225;"	d
GTEST_HAS_ALT_PATH_SEP_	test/gtest/fused-src/gtest/gtest.h	2750;"	d
GTEST_HAS_ALT_PATH_SEP_	test/gtest/fused-src/gtest/gtest.h	2755;"	d
GTEST_HAS_ALT_PATH_SEP_	test/gtest/include/gtest/internal/gtest-port.h	1643;"	d
GTEST_HAS_ALT_PATH_SEP_	test/gtest/include/gtest/internal/gtest-port.h	1648;"	d
GTEST_HAS_CLONE	test/gtest/fused-src/gtest/gtest.h	1723;"	d
GTEST_HAS_CLONE	test/gtest/include/gtest/internal/gtest-port.h	616;"	d
GTEST_HAS_COMBINE	test/gtest/fused-src/gtest/gtest.h	1781;"	d
GTEST_HAS_COMBINE	test/gtest/include/gtest/internal/gtest-port.h	674;"	d
GTEST_HAS_CXXABI_H_	test/gtest/fused-src/gtest/gtest.h	1887;"	d
GTEST_HAS_CXXABI_H_	test/gtest/include/gtest/internal/gtest-port.h	780;"	d
GTEST_HAS_DEATH_TEST	test/gtest/fused-src/gtest/gtest.h	1757;"	d
GTEST_HAS_DEATH_TEST	test/gtest/include/gtest/internal/gtest-port.h	650;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	444;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	447;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	452;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	455;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	459;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	463;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	348;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	351;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	356;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	359;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	363;"	d
GTEST_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	367;"	d
GTEST_HAS_GETTIMEOFDAY_	test/gtest/fused-src/gtest/gtest-all.cc	327;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	test/gtest/src/gtest.cc	111;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	test/gtest/src/gtest.cc	57;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	test/gtest/src/gtest.cc	70;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	test/gtest/src/gtest.cc	74;"	d	file:
GTEST_HAS_GETTIMEOFDAY_	test/gtest/src/gtest.cc	98;"	d	file:
GTEST_HAS_GLOBAL_STRING	test/gtest/fused-src/gtest/gtest.h	480;"	d
GTEST_HAS_GLOBAL_STRING	test/gtest/include/gtest/internal/gtest-port.h	384;"	d
GTEST_HAS_GLOBAL_WSTRING	test/gtest/fused-src/gtest/gtest.h	501;"	d
GTEST_HAS_GLOBAL_WSTRING	test/gtest/include/gtest/internal/gtest-port.h	405;"	d
GTEST_HAS_HASH_MAP_	test/gtest/test/gtest-printers_test.cc	55;"	d	file:
GTEST_HAS_HASH_SET_	test/gtest/test/gtest-printers_test.cc	57;"	d	file:
GTEST_HAS_PARAM_TEST	test/gtest/fused-src/gtest/gtest.h	1764;"	d
GTEST_HAS_PARAM_TEST	test/gtest/include/gtest/internal/gtest-port.h	657;"	d
GTEST_HAS_POSIX_RE	test/gtest/fused-src/gtest/gtest.h	404;"	d
GTEST_HAS_POSIX_RE	test/gtest/fused-src/gtest/gtest.h	406;"	d
GTEST_HAS_POSIX_RE	test/gtest/include/gtest/internal/gtest-port.h	308;"	d
GTEST_HAS_POSIX_RE	test/gtest/include/gtest/internal/gtest-port.h	310;"	d
GTEST_HAS_PTHREAD	test/gtest/fused-src/gtest/gtest.h	575;"	d
GTEST_HAS_PTHREAD	test/gtest/include/gtest/internal/gtest-port.h	479;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	513;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	515;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	528;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	530;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	533;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	541;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	548;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	550;"	d
GTEST_HAS_RTTI	test/gtest/fused-src/gtest/gtest.h	556;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	417;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	419;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	432;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	434;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	437;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	445;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	452;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	454;"	d
GTEST_HAS_RTTI	test/gtest/include/gtest/internal/gtest-port.h	460;"	d
GTEST_HAS_SEH	test/gtest/fused-src/gtest/gtest.h	1856;"	d
GTEST_HAS_SEH	test/gtest/include/gtest/internal/gtest-port.h	749;"	d
GTEST_HAS_STD_STRING	test/gtest/fused-src/gtest/gtest.h	470;"	d
GTEST_HAS_STD_STRING	test/gtest/include/gtest/internal/gtest-port.h	374;"	d
GTEST_HAS_STD_WSTRING	test/gtest/fused-src/gtest/gtest.h	493;"	d
GTEST_HAS_STD_WSTRING	test/gtest/include/gtest/internal/gtest-port.h	397;"	d
GTEST_HAS_STREAM_REDIRECTION	test/gtest/fused-src/gtest/gtest.h	1742;"	d
GTEST_HAS_STREAM_REDIRECTION	test/gtest/include/gtest/internal/gtest-port.h	635;"	d
GTEST_HAS_TR1_TUPLE	test/gtest/fused-src/gtest/gtest.h	594;"	d
GTEST_HAS_TR1_TUPLE	test/gtest/fused-src/gtest/gtest.h	597;"	d
GTEST_HAS_TR1_TUPLE	test/gtest/include/gtest/internal/gtest-port.h	498;"	d
GTEST_HAS_TR1_TUPLE	test/gtest/include/gtest/internal/gtest-port.h	501;"	d
GTEST_HAS_TYPED_TEST	test/gtest/fused-src/gtest/gtest.h	1772;"	d
GTEST_HAS_TYPED_TEST	test/gtest/include/gtest/internal/gtest-port.h	665;"	d
GTEST_HAS_TYPED_TEST_P	test/gtest/fused-src/gtest/gtest.h	1773;"	d
GTEST_HAS_TYPED_TEST_P	test/gtest/include/gtest/internal/gtest-port.h	666;"	d
GTEST_HEADERS	test/gtest/make/Makefile	/^GTEST_HEADERS = $(GTEST_DIR)\/include\/gtest\/*.h \\$/;"	m
GTEST_H_OUTPUT	test/gtest/scripts/fuse_gtest_files.py	/^GTEST_H_OUTPUT = 'gtest\/gtest.h'$/;"	v
GTEST_H_SEED	test/gtest/scripts/fuse_gtest_files.py	/^GTEST_H_SEED = 'include\/gtest\/gtest.h'$/;"	v
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	1620;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	404;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	6569;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	6570;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	8280;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	8281;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	9416;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/fused-src/gtest/gtest-all.cc	9417;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-death-test.cc	74;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-death-test.cc	76;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-port.cc	69;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-port.cc	71;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-test-part.cc	41;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest-test-part.cc	43;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest.cc	134;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/src/gtest.cc	136;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-death-test_test.cc	65;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-death-test_test.cc	67;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-filepath_test.cc	49;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-filepath_test.cc	51;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-options_test.cc	54;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-options_test.cc	56;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-param-test_test.cc	48;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-param-test_test.cc	50;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-port_test.cc	54;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest-port_test.cc	56;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_color_test_.cc	45;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_color_test_.cc	47;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_env_var_test_.cc	39;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_env_var_test_.cc	41;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_environment_test.cc	38;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_environment_test.cc	40;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_output_test_.cc	46;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_output_test_.cc	48;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_repeat_test.cc	43;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_repeat_test.cc	45;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_stress_test.cc	43;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_stress_test.cc	45;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_unittest.cc	75;"	d	file:
GTEST_IMPLEMENTATION_	test/gtest/test/gtest_unittest.cc	77;"	d	file:
GTEST_IMPL_CMP_HELPER_	test/gtest/fused-src/gtest/gtest-all.cc	2616;"	d	file:
GTEST_IMPL_CMP_HELPER_	test/gtest/fused-src/gtest/gtest-all.cc	2645;"	d	file:
GTEST_IMPL_CMP_HELPER_	test/gtest/fused-src/gtest/gtest.h	18971;"	d
GTEST_IMPL_CMP_HELPER_	test/gtest/fused-src/gtest/gtest.h	19000;"	d
GTEST_IMPL_CMP_HELPER_	test/gtest/include/gtest/gtest.h	1558;"	d
GTEST_IMPL_CMP_HELPER_	test/gtest/include/gtest/gtest.h	1587;"	d
GTEST_IMPL_CMP_HELPER_	test/gtest/src/gtest.cc	1132;"	d	file:
GTEST_IMPL_CMP_HELPER_	test/gtest/src/gtest.cc	1161;"	d	file:
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	test/gtest/fused-src/gtest/gtest.h	18787;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	test/gtest/fused-src/gtest/gtest.h	18801;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	test/gtest/include/gtest/gtest.h	1374;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	test/gtest/include/gtest/gtest.h	1388;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	test/gtest/fused-src/gtest/gtest.h	18806;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	test/gtest/fused-src/gtest/gtest.h	18833;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	test/gtest/include/gtest/gtest.h	1393;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	test/gtest/include/gtest/gtest.h	1420;"	d
GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	test/gtest/fused-src/gtest/gtest.h	8157;"	d
GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	test/gtest/include/gtest/gtest-death-test.h	39;"	d
GTEST_INCLUDE_GTEST_GTEST_H_	test/gtest/fused-src/gtest/gtest.h	52;"	d
GTEST_INCLUDE_GTEST_GTEST_H_	test/gtest/include/gtest/gtest.h	52;"	d
GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	test/gtest/fused-src/gtest/gtest.h	3120;"	d
GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	test/gtest/include/gtest/gtest-message.h	47;"	d
GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	test/gtest/fused-src/gtest/gtest.h	8771;"	d
GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	test/gtest/include/gtest/gtest-param-test.h	42;"	d
GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	test/gtest/fused-src/gtest/gtest.h	19377;"	d
GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	test/gtest/include/gtest/gtest_pred_impl.h	36;"	d
GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	test/gtest/fused-src/gtest/gtest.h	9289;"	d
GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	test/gtest/include/gtest/gtest-printers.h	96;"	d
GTEST_INCLUDE_GTEST_GTEST_PROD_H_	test/gtest/fused-src/gtest/gtest.h	17022;"	d
GTEST_INCLUDE_GTEST_GTEST_PROD_H_	test/gtest/include/gtest/gtest_prod.h	35;"	d
GTEST_INCLUDE_GTEST_GTEST_SPI_H_	test/gtest/fused-src/gtest/gtest-all.cc	110;"	d	file:
GTEST_INCLUDE_GTEST_GTEST_SPI_H_	test/gtest/include/gtest/gtest-spi.h	36;"	d
GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	test/gtest/fused-src/gtest/gtest.h	17079;"	d
GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	test/gtest/include/gtest/gtest-test-part.h	34;"	d
GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	test/gtest/fused-src/gtest/gtest.h	17255;"	d
GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	test/gtest/include/gtest/gtest-typed-test.h	33;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	test/gtest/fused-src/gtest/gtest.h	8196;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	38;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	test/gtest/fused-src/gtest/gtest.h	3529;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	test/gtest/include/gtest/internal/gtest-filepath.h	41;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	test/gtest/fused-src/gtest/gtest.h	95;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	test/gtest/include/gtest/internal/gtest-internal.h	38;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_	test/gtest/fused-src/gtest/gtest.h	9030;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_	test/gtest/include/gtest/internal/gtest-linked_ptr.h	69;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_	test/gtest/fused-src/gtest/gtest.h	10665;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	47;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	test/gtest/fused-src/gtest/gtest.h	8953;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	test/gtest/include/gtest/internal/gtest-param-util.h	35;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	test/gtest/fused-src/gtest/gtest.h	137;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	test/gtest/include/gtest/internal/gtest-port.h	41;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	test/gtest/fused-src/gtest/gtest.h	3364;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	test/gtest/include/gtest/internal/gtest-string.h	42;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_	test/gtest/fused-src/gtest/gtest.h	680;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_	test/gtest/include/gtest/internal/gtest-tuple.h	39;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	test/gtest/fused-src/gtest/gtest.h	3738;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	test/gtest/include/gtest/internal/gtest-type-util.h	45;"	d
GTEST_INFO	test/gtest/fused-src/gtest/gtest.h	/^  GTEST_INFO,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_INFO	test/gtest/include/gtest/internal/gtest-port.h	/^  GTEST_INFO,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_IS_NULL_LITERAL_	test/gtest/fused-src/gtest/gtest.h	7090;"	d
GTEST_IS_NULL_LITERAL_	test/gtest/fused-src/gtest/gtest.h	7092;"	d
GTEST_IS_NULL_LITERAL_	test/gtest/include/gtest/internal/gtest-internal.h	130;"	d
GTEST_IS_NULL_LITERAL_	test/gtest/include/gtest/internal/gtest-internal.h	132;"	d
GTEST_IS_THREADSAFE	test/gtest/fused-src/gtest/gtest.h	2643;"	d
GTEST_IS_THREADSAFE	test/gtest/fused-src/gtest/gtest.h	2687;"	d
GTEST_IS_THREADSAFE	test/gtest/include/gtest/internal/gtest-port.h	1536;"	d
GTEST_IS_THREADSAFE	test/gtest/include/gtest/internal/gtest-port.h	1580;"	d
GTEST_LANG_CXX11	test/gtest/fused-src/gtest/gtest.h	375;"	d
GTEST_LANG_CXX11	test/gtest/fused-src/gtest/gtest.h	377;"	d
GTEST_LANG_CXX11	test/gtest/include/gtest/internal/gtest-port.h	279;"	d
GTEST_LANG_CXX11	test/gtest/include/gtest/internal/gtest-port.h	281;"	d
GTEST_LIST_TESTS_FLAG	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'$/;"	v
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest-all.cc	/^        GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest-all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest-all.cc	/^    const std::string& os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) {$/;"	f	class:testing::internal::linked_ptr_internal
GTEST_LOCK_EXCLUDED_	test/gtest/fused-src/gtest/gtest.h	3035;"	d
GTEST_LOCK_EXCLUDED_	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^      GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) {$/;"	f	class:testing::internal::linked_ptr_internal
GTEST_LOCK_EXCLUDED_	test/gtest/include/gtest/internal/gtest-port.h	1928;"	d
GTEST_LOCK_EXCLUDED_	test/gtest/src/gtest.cc	/^        GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	test/gtest/src/gtest.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	test/gtest/src/gtest.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	test/gtest/src/gtest.cc	/^    const std::string& os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOG_	test/gtest/fused-src/gtest/gtest.h	2146;"	d
GTEST_LOG_	test/gtest/include/gtest/internal/gtest-port.h	1039;"	d
GTEST_MAIN_CC	test/gtest/scripts/test/Makefile	/^GTEST_MAIN_CC = ..\/..\/src\/gtest_main.cc$/;"	m
GTEST_MESSAGE_	test/gtest/fused-src/gtest/gtest.h	7988;"	d
GTEST_MESSAGE_	test/gtest/include/gtest/internal/gtest-internal.h	1028;"	d
GTEST_MESSAGE_AT_	test/gtest/fused-src/gtest/gtest.h	7984;"	d
GTEST_MESSAGE_AT_	test/gtest/include/gtest/internal/gtest-internal.h	1024;"	d
GTEST_MUST_USE_RESULT_	test/gtest/fused-src/gtest/gtest.h	/^  int Run() GTEST_MUST_USE_RESULT_;$/;"	m	class:testing::UnitTest
GTEST_MUST_USE_RESULT_	test/gtest/fused-src/gtest/gtest.h	1843;"	d
GTEST_MUST_USE_RESULT_	test/gtest/include/gtest/gtest.h	/^  int Run() GTEST_MUST_USE_RESULT_;$/;"	m	class:testing::UnitTest
GTEST_MUST_USE_RESULT_	test/gtest/include/gtest/internal/gtest-port.h	736;"	d
GTEST_NAME_	test/gtest/fused-src/gtest/gtest.h	315;"	d
GTEST_NAME_	test/gtest/include/gtest/internal/gtest-port.h	219;"	d
GTEST_NEEDS_IS_POINTER_	test/gtest/fused-src/gtest/gtest.h	2714;"	d
GTEST_NEEDS_IS_POINTER_	test/gtest/include/gtest/internal/gtest-port.h	1607;"	d
GTEST_NONFATAL_FAILURE_	test/gtest/fused-src/gtest/gtest.h	7994;"	d
GTEST_NONFATAL_FAILURE_	test/gtest/include/gtest/internal/gtest-internal.h	1034;"	d
GTEST_NO_INLINE_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string CurrentOsStackTraceExceptTop(int skip_count) GTEST_NO_INLINE_;$/;"	m	class:testing::internal::UnitTestImpl	file:
GTEST_NO_INLINE_	test/gtest/fused-src/gtest/gtest-all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) GTEST_NO_INLINE_;$/;"	m	namespace:testing::internal	file:
GTEST_NO_INLINE_	test/gtest/fused-src/gtest/gtest.h	1880;"	d
GTEST_NO_INLINE_	test/gtest/include/gtest/internal/gtest-port.h	773;"	d
GTEST_NO_INLINE_	test/gtest/src/gtest-death-test.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) GTEST_NO_INLINE_;$/;"	m	namespace:testing::internal	file:
GTEST_NO_INLINE_	test/gtest/src/gtest-internal-inl.h	/^  std::string CurrentOsStackTraceExceptTop(int skip_count) GTEST_NO_INLINE_;$/;"	m	class:testing::internal::UnitTestImpl
GTEST_OS_AIX	test/gtest/fused-src/gtest/gtest.h	357;"	d
GTEST_OS_AIX	test/gtest/include/gtest/internal/gtest-port.h	261;"	d
GTEST_OS_CYGWIN	test/gtest/fused-src/gtest/gtest.h	327;"	d
GTEST_OS_CYGWIN	test/gtest/include/gtest/internal/gtest-port.h	231;"	d
GTEST_OS_HPUX	test/gtest/fused-src/gtest/gtest.h	359;"	d
GTEST_OS_HPUX	test/gtest/include/gtest/internal/gtest-port.h	263;"	d
GTEST_OS_IOS	test/gtest/fused-src/gtest/gtest.h	342;"	d
GTEST_OS_IOS	test/gtest/include/gtest/internal/gtest-port.h	246;"	d
GTEST_OS_IOS_SIMULATOR	test/gtest/fused-src/gtest/gtest.h	344;"	d
GTEST_OS_IOS_SIMULATOR	test/gtest/include/gtest/internal/gtest-port.h	248;"	d
GTEST_OS_LINUX	test/gtest/fused-src/gtest/gtest.h	348;"	d
GTEST_OS_LINUX	test/gtest/include/gtest/internal/gtest-port.h	252;"	d
GTEST_OS_LINUX_ANDROID	test/gtest/fused-src/gtest/gtest.h	350;"	d
GTEST_OS_LINUX_ANDROID	test/gtest/include/gtest/internal/gtest-port.h	254;"	d
GTEST_OS_MAC	test/gtest/fused-src/gtest/gtest.h	340;"	d
GTEST_OS_MAC	test/gtest/include/gtest/internal/gtest-port.h	244;"	d
GTEST_OS_NACL	test/gtest/fused-src/gtest/gtest.h	361;"	d
GTEST_OS_NACL	test/gtest/include/gtest/internal/gtest-port.h	265;"	d
GTEST_OS_OPENBSD	test/gtest/fused-src/gtest/gtest.h	363;"	d
GTEST_OS_OPENBSD	test/gtest/include/gtest/internal/gtest-port.h	267;"	d
GTEST_OS_QNX	test/gtest/fused-src/gtest/gtest.h	365;"	d
GTEST_OS_QNX	test/gtest/include/gtest/internal/gtest-port.h	269;"	d
GTEST_OS_SOLARIS	test/gtest/fused-src/gtest/gtest.h	355;"	d
GTEST_OS_SOLARIS	test/gtest/include/gtest/internal/gtest-port.h	259;"	d
GTEST_OS_SYMBIAN	test/gtest/fused-src/gtest/gtest.h	329;"	d
GTEST_OS_SYMBIAN	test/gtest/include/gtest/internal/gtest-port.h	233;"	d
GTEST_OS_WINDOWS	test/gtest/fused-src/gtest/gtest.h	331;"	d
GTEST_OS_WINDOWS	test/gtest/include/gtest/internal/gtest-port.h	235;"	d
GTEST_OS_WINDOWS_DESKTOP	test/gtest/fused-src/gtest/gtest.h	337;"	d
GTEST_OS_WINDOWS_DESKTOP	test/gtest/include/gtest/internal/gtest-port.h	241;"	d
GTEST_OS_WINDOWS_MINGW	test/gtest/fused-src/gtest/gtest.h	335;"	d
GTEST_OS_WINDOWS_MINGW	test/gtest/include/gtest/internal/gtest-port.h	239;"	d
GTEST_OS_WINDOWS_MOBILE	test/gtest/fused-src/gtest/gtest.h	333;"	d
GTEST_OS_WINDOWS_MOBILE	test/gtest/include/gtest/internal/gtest-port.h	237;"	d
GTEST_OS_ZOS	test/gtest/fused-src/gtest/gtest.h	353;"	d
GTEST_OS_ZOS	test/gtest/include/gtest/internal/gtest-port.h	257;"	d
GTEST_OUTPUT_1_TEST	test/gtest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_1_TEST = "gtest_xml_outfile1_test_"$/;"	v
GTEST_OUTPUT_2_TEST	test/gtest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_2_TEST = "gtest_xml_outfile2_test_"$/;"	v
GTEST_OUTPUT_FLAG	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_OUTPUT_FLAG         = "--gtest_output"$/;"	v
GTEST_OUTPUT_FLAG	test/gtest/test/gtest_xml_test_utils.py	/^GTEST_OUTPUT_FLAG         = '--gtest_output'$/;"	v
GTEST_OUTPUT_SUBDIR	test/gtest/test/gtest_xml_outfiles_test.py	/^GTEST_OUTPUT_SUBDIR = "xml_outfiles"$/;"	v
GTEST_OUTPUT_VAR_NAME	test/gtest/test/gtest_test_utils.py	/^GTEST_OUTPUT_VAR_NAME = 'GTEST_OUTPUT'$/;"	v
GTEST_PATH_MAX_	test/gtest/fused-src/gtest/gtest-all.cc	7887;"	d	file:
GTEST_PATH_MAX_	test/gtest/src/gtest-filepath.cc	52;"	d	file:
GTEST_PATH_MAX_	test/gtest/src/gtest-filepath.cc	54;"	d	file:
GTEST_PATH_MAX_	test/gtest/src/gtest-filepath.cc	56;"	d	file:
GTEST_PATH_MAX_	test/gtest/src/gtest-filepath.cc	58;"	d	file:
GTEST_PATH_SEP_	test/gtest/fused-src/gtest/gtest.h	2749;"	d
GTEST_PATH_SEP_	test/gtest/fused-src/gtest/gtest.h	2754;"	d
GTEST_PATH_SEP_	test/gtest/include/gtest/internal/gtest-port.h	1642;"	d
GTEST_PATH_SEP_	test/gtest/include/gtest/internal/gtest-port.h	1647;"	d
GTEST_PRED1_	test/gtest/fused-src/gtest/gtest.h	19447;"	d
GTEST_PRED1_	test/gtest/include/gtest/gtest_pred_impl.h	106;"	d
GTEST_PRED2_	test/gtest/fused-src/gtest/gtest.h	19493;"	d
GTEST_PRED2_	test/gtest/include/gtest/gtest_pred_impl.h	152;"	d
GTEST_PRED3_	test/gtest/fused-src/gtest/gtest.h	19546;"	d
GTEST_PRED3_	test/gtest/include/gtest/gtest_pred_impl.h	205;"	d
GTEST_PRED4_	test/gtest/fused-src/gtest/gtest.h	19606;"	d
GTEST_PRED4_	test/gtest/include/gtest/gtest_pred_impl.h	265;"	d
GTEST_PRED5_	test/gtest/fused-src/gtest/gtest.h	19673;"	d
GTEST_PRED5_	test/gtest/include/gtest/gtest_pred_impl.h	332;"	d
GTEST_PRED_FORMAT1_	test/gtest/fused-src/gtest/gtest.h	19441;"	d
GTEST_PRED_FORMAT1_	test/gtest/include/gtest/gtest_pred_impl.h	100;"	d
GTEST_PRED_FORMAT2_	test/gtest/fused-src/gtest/gtest.h	19487;"	d
GTEST_PRED_FORMAT2_	test/gtest/include/gtest/gtest_pred_impl.h	146;"	d
GTEST_PRED_FORMAT3_	test/gtest/fused-src/gtest/gtest.h	19540;"	d
GTEST_PRED_FORMAT3_	test/gtest/include/gtest/gtest_pred_impl.h	199;"	d
GTEST_PRED_FORMAT4_	test/gtest/fused-src/gtest/gtest.h	19600;"	d
GTEST_PRED_FORMAT4_	test/gtest/include/gtest/gtest_pred_impl.h	259;"	d
GTEST_PRED_FORMAT5_	test/gtest/fused-src/gtest/gtest.h	19667;"	d
GTEST_PRED_FORMAT5_	test/gtest/include/gtest/gtest_pred_impl.h	326;"	d
GTEST_PROGRAM_NAME	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_PROGRAM_NAME = "gtest_xml_output_unittest_"$/;"	v
GTEST_PROGRAM_PATH	test/gtest/test/gtest_xml_output_unittest.py	/^GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)$/;"	v
GTEST_PROJECT_URL_	test/gtest/fused-src/gtest/gtest.h	316;"	d
GTEST_PROJECT_URL_	test/gtest/include/gtest/internal/gtest-port.h	220;"	d
GTEST_REFERENCE_TO_CONST_	test/gtest/fused-src/gtest/gtest.h	7732;"	d
GTEST_REFERENCE_TO_CONST_	test/gtest/include/gtest/internal/gtest-internal.h	772;"	d
GTEST_REGISTERED_TEST_NAMES_	test/gtest/fused-src/gtest/gtest.h	17433;"	d
GTEST_REGISTERED_TEST_NAMES_	test/gtest/include/gtest/gtest-typed-test.h	213;"	d
GTEST_REMOVE_CONST_	test/gtest/fused-src/gtest/gtest.h	7703;"	d
GTEST_REMOVE_CONST_	test/gtest/include/gtest/internal/gtest-internal.h	743;"	d
GTEST_REMOVE_REFERENCE_	test/gtest/fused-src/gtest/gtest.h	7672;"	d
GTEST_REMOVE_REFERENCE_	test/gtest/include/gtest/internal/gtest-internal.h	712;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	test/gtest/fused-src/gtest/gtest.h	7707;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	test/gtest/include/gtest/internal/gtest-internal.h	747;"	d
GTEST_REPEATER_METHOD_	test/gtest/fused-src/gtest/gtest-all.cc	4441;"	d	file:
GTEST_REPEATER_METHOD_	test/gtest/fused-src/gtest/gtest-all.cc	4472;"	d	file:
GTEST_REPEATER_METHOD_	test/gtest/src/gtest.cc	2957;"	d	file:
GTEST_REPEATER_METHOD_	test/gtest/src/gtest.cc	2988;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	test/gtest/fused-src/gtest/gtest-all.cc	4451;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	test/gtest/fused-src/gtest/gtest-all.cc	4473;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	test/gtest/src/gtest.cc	2967;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	test/gtest/src/gtest.cc	2989;"	d	file:
GTEST_SAMPLES_PRIME_TABLES_H_	test/gtest/samples/prime_tables.h	38;"	d
GTEST_SAMPLES_SAMPLE1_H_	test/gtest/samples/sample1.h	35;"	d
GTEST_SAMPLES_SAMPLE2_H_	test/gtest/samples/sample2.h	35;"	d
GTEST_SAMPLES_SAMPLE3_INL_H_	test/gtest/samples/sample3-inl.h	35;"	d
GTEST_SAMPLES_SAMPLE4_H_	test/gtest/samples/sample4.h	35;"	d
GTEST_SNPRINTF_	test/gtest/fused-src/gtest/gtest.h	2935;"	d
GTEST_SNPRINTF_	test/gtest/include/gtest/internal/gtest-port.h	1828;"	d
GTEST_SPI_H_SEED	test/gtest/scripts/fuse_gtest_files.py	/^GTEST_SPI_H_SEED = 'include\/gtest\/gtest-spi.h'$/;"	v
GTEST_SRCS_	test/gtest/make/Makefile	/^GTEST_SRCS_ = $(GTEST_DIR)\/src\/*.cc $(GTEST_DIR)\/src\/*.h $(GTEST_HEADERS)$/;"	m
GTEST_SRC_GTEST_INTERNAL_INL_H_	test/gtest/fused-src/gtest/gtest-all.cc	442;"	d	file:
GTEST_SRC_GTEST_INTERNAL_INL_H_	test/gtest/src/gtest-internal-inl.h	38;"	d
GTEST_SUCCEED	test/gtest/fused-src/gtest/gtest.h	19294;"	d
GTEST_SUCCEED	test/gtest/include/gtest/gtest.h	1881;"	d
GTEST_SUCCESS_	test/gtest/fused-src/gtest/gtest.h	7997;"	d
GTEST_SUCCESS_	test/gtest/include/gtest/internal/gtest-internal.h	1037;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	test/gtest/fused-src/gtest/gtest.h	8003;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	test/gtest/include/gtest/internal/gtest-internal.h	1043;"	d
GTEST_TEMPLATE_	test/gtest/fused-src/gtest/gtest.h	5314;"	d
GTEST_TEMPLATE_	test/gtest/include/gtest/internal/gtest-type-util.h	1622;"	d
GTEST_TEST	test/gtest/fused-src/gtest/gtest.h	20005;"	d
GTEST_TEST	test/gtest/include/gtest/gtest.h	2235;"	d
GTEST_TEST	test/gtest/test/gtest_unittest.cc	/^GTEST_TEST(AlternativeNameTest, Works) {  \/\/ GTEST_TEST is the same as TEST.$/;"	f
GTEST_TEST_	test/gtest/fused-src/gtest/gtest.h	8096;"	d
GTEST_TEST_	test/gtest/include/gtest/internal/gtest-internal.h	1136;"	d
GTEST_TEST_ANY_THROW_	test/gtest/fused-src/gtest/gtest.h	8046;"	d
GTEST_TEST_ANY_THROW_	test/gtest/include/gtest/internal/gtest-internal.h	1086;"	d
GTEST_TEST_BOOLEAN_	test/gtest/fused-src/gtest/gtest.h	8068;"	d
GTEST_TEST_BOOLEAN_	test/gtest/include/gtest/internal/gtest-internal.h	1108;"	d
GTEST_TEST_CLASS_NAME_	test/gtest/fused-src/gtest/gtest.h	8092;"	d
GTEST_TEST_CLASS_NAME_	test/gtest/include/gtest/internal/gtest-internal.h	1132;"	d
GTEST_TEST_GTEST_PARAM_TEST_TEST_H_	test/gtest/test/gtest-param-test_test.h	38;"	d
GTEST_TEST_GTEST_TYPED_TEST_TEST_H_	test/gtest/test/gtest-typed-test_test.h	33;"	d
GTEST_TEST_NO_FATAL_FAILURE_	test/gtest/fused-src/gtest/gtest.h	8077;"	d
GTEST_TEST_NO_FATAL_FAILURE_	test/gtest/include/gtest/internal/gtest-internal.h	1117;"	d
GTEST_TEST_NO_THROW_	test/gtest/fused-src/gtest/gtest.h	8032;"	d
GTEST_TEST_NO_THROW_	test/gtest/include/gtest/internal/gtest-internal.h	1072;"	d
GTEST_TEST_PARSING_FLAGS_	test/gtest/test/gtest_unittest.cc	5528;"	d	file:
GTEST_TEST_PRODUCTION_H_	test/gtest/test/production.h	35;"	d
GTEST_TEST_THROW_	test/gtest/fused-src/gtest/gtest.h	8006;"	d
GTEST_TEST_THROW_	test/gtest/include/gtest/internal/gtest-internal.h	1046;"	d
GTEST_TUPLE_ELEMENT_	test/gtest/fused-src/gtest/gtest.h	1434;"	d
GTEST_TUPLE_ELEMENT_	test/gtest/fused-src/gtest/gtest.h	1651;"	d
GTEST_TUPLE_ELEMENT_	test/gtest/include/gtest/internal/gtest-tuple.h	1010;"	d
GTEST_TUPLE_ELEMENT_	test/gtest/include/gtest/internal/gtest-tuple.h	793;"	d
GTEST_TYPED_TEST_CASE_P_STATE_	test/gtest/fused-src/gtest/gtest.h	17426;"	d
GTEST_TYPED_TEST_CASE_P_STATE_	test/gtest/include/gtest/gtest-typed-test.h	206;"	d
GTEST_TYPE_PARAMS_	test/gtest/fused-src/gtest/gtest.h	17380;"	d
GTEST_TYPE_PARAMS_	test/gtest/include/gtest/gtest-typed-test.h	160;"	d
GTEST_UNSUPPORTED_DEATH_TEST_	test/gtest/fused-src/gtest/gtest.h	8458;"	d
GTEST_UNSUPPORTED_DEATH_TEST_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	301;"	d
GTEST_USES_POSIX_RE	test/gtest/fused-src/gtest/gtest.h	418;"	d
GTEST_USES_POSIX_RE	test/gtest/include/gtest/internal/gtest-port.h	322;"	d
GTEST_USES_SIMPLE_RE	test/gtest/fused-src/gtest/gtest.h	424;"	d
GTEST_USES_SIMPLE_RE	test/gtest/fused-src/gtest/gtest.h	430;"	d
GTEST_USES_SIMPLE_RE	test/gtest/include/gtest/internal/gtest-port.h	328;"	d
GTEST_USES_SIMPLE_RE	test/gtest/include/gtest/internal/gtest-port.h	334;"	d
GTEST_USE_OWN_TR1_TUPLE	test/gtest/fused-src/gtest/gtest.h	629;"	d
GTEST_USE_OWN_TR1_TUPLE	test/gtest/fused-src/gtest/gtest.h	631;"	d
GTEST_USE_OWN_TR1_TUPLE	test/gtest/include/gtest/internal/gtest-port.h	533;"	d
GTEST_USE_OWN_TR1_TUPLE	test/gtest/include/gtest/internal/gtest-port.h	535;"	d
GTEST_USE_UNPROTECTED_COMMA_	test/gtest/test/gtest_unittest.cc	1245;"	d	file:
GTEST_WARNING	test/gtest/fused-src/gtest/gtest.h	/^  GTEST_WARNING,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_WARNING	test/gtest/include/gtest/internal/gtest-port.h	/^  GTEST_WARNING,$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_WIDE_STRING_USES_UTF16_	test/gtest/fused-src/gtest/gtest.h	1785;"	d
GTEST_WIDE_STRING_USES_UTF16_	test/gtest/include/gtest/internal/gtest-port.h	678;"	d
GTODay	experiments/backup/benchmarks/src/base/flops-1.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-2.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-3.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-4.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-5.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-6.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-7.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops-8.c	109;"	d	file:
GTODay	experiments/backup/benchmarks/src/base/flops.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-1.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-2.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-3.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-4.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-5.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-6.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-7.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops-8.c	109;"	d	file:
GTODay	experiments/benchmarks/src/base/flops.c	109;"	d	file:
GTestBreakOnFailureUnitTest	test/gtest/test/gtest_break_on_failure_unittest.py	/^class GTestBreakOnFailureUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestColor	test/gtest/fused-src/gtest/gtest-all.cc	/^enum GTestColor {$/;"	g	namespace:testing::internal	file:
GTestColor	test/gtest/src/gtest.cc	/^enum GTestColor {$/;"	g	namespace:testing::internal	file:
GTestColorTest	test/gtest/test/gtest_color_test.py	/^class GTestColorTest(gtest_test_utils.TestCase):$/;"	c
GTestEnvVarTest	test/gtest/test/gtest_env_var_test.py	/^class GTestEnvVarTest(gtest_test_utils.TestCase):$/;"	c
GTestFilterUnitTest	test/gtest/test/gtest_filter_unittest.py	/^class GTestFilterUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestFlagSaver	test/gtest/fused-src/gtest/gtest-all.cc	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	test/gtest/fused-src/gtest/gtest-all.cc	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal	file:
GTestFlagSaver	test/gtest/src/gtest-internal-inl.h	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	test/gtest/src/gtest-internal-inl.h	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal
GTestFlagSaverTest	test/gtest/test/gtest_unittest.cc	/^class GTestFlagSaverTest : public Test {$/;"	c	namespace:__anon14	file:
GTestHelpTest	test/gtest/test/gtest_help_test.py	/^class GTestHelpTest(gtest_test_utils.TestCase):$/;"	c
GTestIsInitialized	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool GTestIsInitialized() { return g_init_gtest_count != 0; }$/;"	f	namespace:testing::internal
GTestIsInitialized	test/gtest/src/gtest.cc	/^static bool GTestIsInitialized() { return g_init_gtest_count != 0; }$/;"	f	namespace:testing::internal
GTestListTestsUnitTest	test/gtest/test/gtest_list_tests_unittest.py	/^class GTestListTestsUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestLog	test/gtest/fused-src/gtest/gtest-all.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLog	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:std::tr1
GTestLog	test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:testing::internal
GTestLog	test/gtest/src/gtest-port.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLogSeverity	test/gtest/fused-src/gtest/gtest.h	/^enum GTestLogSeverity {$/;"	g	namespace:std::tr1
GTestLogSeverity	test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity {$/;"	g	namespace:testing::internal
GTestMutexLock	test/gtest/fused-src/gtest/gtest.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	test/gtest/fused-src/gtest/gtest.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	test/gtest/fused-src/gtest/gtest.h	/^class GTestMutexLock {$/;"	c	namespace:std::tr1
GTestMutexLock	test/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	test/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	test/gtest/include/gtest/internal/gtest-port.h	/^class GTestMutexLock {$/;"	c	namespace:testing::internal
GTestOutputTest	test/gtest/test/gtest_output_test.py	/^class GTestOutputTest(gtest_test_utils.TestCase):$/;"	c
GTestShouldProcessSEH	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions
GTestShouldProcessSEH	test/gtest/src/gtest.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions
GTestShuffleUnitTest	test/gtest/test/gtest_shuffle_test.py	/^class GTestShuffleUnitTest(gtest_test_utils.TestCase):$/;"	c
GTestUninitializedTest	test/gtest/test/gtest_uninitialized_test.py	/^class GTestUninitializedTest(gtest_test_utils.TestCase):$/;"	c
GTestXMLOutFilesTest	test/gtest/test/gtest_xml_outfiles_test.py	/^class GTestXMLOutFilesTest(gtest_xml_test_utils.GTestXMLTestCase):$/;"	c
GTestXMLOutputUnitTest	test/gtest/test/gtest_xml_output_unittest.py	/^class GTestXMLOutputUnitTest(gtest_xml_test_utils.GTestXMLTestCase):$/;"	c
GTestXMLTestCase	test/gtest/test/gtest_xml_test_utils.py	/^class GTestXMLTestCase(gtest_test_utils.TestCase):$/;"	c
GVN	include/GEOS.h	/^  GVN,$/;"	e	enum:OptimizationKind
GameList	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList(GameList *p) {prev = p; next = 0;};$/;"	f	class:GameList
GameList	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^class GameList : public HexxagonBoard$/;"	c
GameList	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList(GameList *p) {prev = p; next = 0;};$/;"	f	class:GameList
GameList	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^class GameList : public HexxagonBoard$/;"	c
Generate	test/gtest/fused-src/gtest/gtest-all.cc	/^UInt32 Random::Generate(UInt32 range) {$/;"	f	class:testing::internal::Random
Generate	test/gtest/src/gtest.cc	/^UInt32 Random::Generate(UInt32 range) {$/;"	f	class:testing::internal::Random
GenerateFatalFailureInAnotherThread	test/gtest/test/gtest_stress_test.cc	/^void GenerateFatalFailureInAnotherThread(bool is_fatal) {$/;"	f	namespace:testing::__anon23
GenerateUniqueFileName	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
GenerateUniqueFileName	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
GeneratorCreationFunc	test/gtest/fused-src/gtest/gtest.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
GeneratorCreationFunc	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
GeneratorEvaluationTest	test/gtest/test/gtest-param-test_test.cc	/^class GeneratorEvaluationTest : public TestWithParam<int> {$/;"	c	file:
Get	test/gtest/fused-src/gtest/gtest-all.cc	/^  HANDLE Get() const { return handle_; }$/;"	f	class:testing::internal::AutoHandle
Get	test/gtest/src/gtest-internal-inl.h	/^  HANDLE Get() const { return handle_; }$/;"	f	class:testing::internal::AutoHandle
GetAbsolutePathOf	test/gtest/test/gtest-options_test.cc	/^FilePath GetAbsolutePathOf(const FilePath& relative_path) {$/;"	f	namespace:testing::internal::__anon18
GetAbsolutePathToOutputFile	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions
GetAbsolutePathToOutputFile	test/gtest/src/gtest.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions
GetAnsiColorCode	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal
GetAnsiColorCode	test/gtest/src/gtest.cc	/^const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal
GetArgvsForDeathTestChildProcess	test/gtest/fused-src/gtest/gtest-all.cc	/^  GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	file:
GetArgvsForDeathTestChildProcess	test/gtest/src/gtest-death-test.cc	/^  GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	file:
GetBoolAssertionFailureMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal
GetBoolAssertionFailureMessage	test/gtest/src/gtest.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal
GetBuildDir	test/gtest/test/gtest_test_utils.py	/^def GetBuildDir():$/;"	f
GetCapturedStderr	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal
GetCapturedStderr	test/gtest/src/gtest-port.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal
GetCapturedStdout	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal
GetCapturedStdout	test/gtest/src/gtest-port.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal
GetCapturedStream	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal
GetCapturedStream	test/gtest/src/gtest-port.cc	/^std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal
GetCapturedString	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream
GetCapturedString	test/gtest/src/gtest-port.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream
GetCharPtrValue	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^void Widget::GetCharPtrValue(char* buffer, size_t max_size) const {$/;"	f	class:Widget
GetColorAttribute	test/gtest/fused-src/gtest/gtest-all.cc	/^WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal
GetColorAttribute	test/gtest/src/gtest.cc	/^WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal
GetCommandOutput	test/gtest/test/gtest_output_test.py	/^def GetCommandOutput(env_cmd):$/;"	f
GetCurrentDir	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath
GetCurrentDir	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath
GetCurrentExecutableName	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal
GetCurrentExecutableName	test/gtest/src/gtest.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal
GetCurrentOsStackTraceExceptTop	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/,$/;"	f	namespace:testing::internal
GetCurrentOsStackTraceExceptTop	test/gtest/src/gtest.cc	/^std::string GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/,$/;"	f	namespace:testing::internal
GetDefaultFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing
GetDefaultFilter	test/gtest/src/gtest.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing
GetElementOr	test/gtest/fused-src/gtest/gtest-all.cc	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal
GetElementOr	test/gtest/src/gtest-internal-inl.h	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal
GetEnv	test/gtest/fused-src/gtest/gtest.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:std::tr1::posix
GetEnv	test/gtest/include/gtest/internal/gtest-port.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:testing::internal::posix
GetEnviron	test/gtest/fused-src/gtest/gtest-all.cc	/^inline char** GetEnviron() { return environ; }$/;"	f	namespace:testing::internal
GetEnviron	test/gtest/fused-src/gtest/gtest-all.cc	/^inline char** GetEnviron() {$/;"	f	namespace:testing::internal
GetEnviron	test/gtest/src/gtest-death-test.cc	/^inline char** GetEnviron() { return environ; }$/;"	f	namespace:testing::internal
GetEnviron	test/gtest/src/gtest-death-test.cc	/^inline char** GetEnviron() {$/;"	f	namespace:testing::internal
GetEventDescription	test/gtest/test/gtest_unittest.cc	/^  std::string GetEventDescription(const char* method) {$/;"	f	class:SequenceTestingListener	file:
GetExitStatus	test/gtest/test/gtest_test_utils.py	/^def GetExitStatus(exit_code):$/;"	f
GetFileSize	test/gtest/fused-src/gtest/gtest-all.cc	/^size_t CapturedStream::GetFileSize(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
GetFileSize	test/gtest/src/gtest-port.cc	/^size_t CapturedStream::GetFileSize(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
GetFlag	test/gtest/test/gtest_env_var_test.py	/^def GetFlag(flag):$/;"	f
GetFlag	test/gtest/test/gtest_test_utils.py	/^def GetFlag(flag):$/;"	f
GetFloatValue	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^float Widget::GetFloatValue() const {$/;"	f	class:Widget
GetFullMethodName	test/gtest/test/gtest-listener_test.cc	/^  std::string GetFullMethodName(const char* name) {$/;"	f	class:testing::internal::EventRecordingListener	file:
GetGlobalTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl
GetGlobalTestPartResultReporter	test/gtest/src/gtest.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl
GetInjectableArgvs	test/gtest/fused-src/gtest/gtest-all.cc	/^const ::std::vector<testing::internal::string>& GetInjectableArgvs() {$/;"	f	namespace:testing::internal
GetInjectableArgvs	test/gtest/src/gtest-port.cc	/^const ::std::vector<testing::internal::string>& GetInjectableArgvs() {$/;"	f	namespace:testing::internal
GetInstance	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest
GetInstance	test/gtest/src/gtest.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest
GetIntValue	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^int Widget::GetIntValue() const {$/;"	f	class:Widget
GetLastErrnoDescription	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal
GetLastErrnoDescription	test/gtest/src/gtest-death-test.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal
GetLastLine	test/gtest/scripts/pump.py	/^  def GetLastLine(self):$/;"	m	class:Output
GetMutableTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestCase* GetMutableTestCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl
GetMutableTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^TestCase* UnitTest::GetMutableTestCase(int i) {$/;"	f	class:testing::UnitTest
GetMutableTestCase	test/gtest/src/gtest-internal-inl.h	/^  TestCase* GetMutableTestCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl
GetMutableTestCase	test/gtest/src/gtest.cc	/^TestCase* UnitTest::GetMutableTestCase(int i) {$/;"	f	class:testing::UnitTest
GetMutableTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^TestInfo* TestCase::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestCase
GetMutableTestInfo	test/gtest/src/gtest.cc	/^TestInfo* TestCase::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestCase
GetNewIndex	test/gtest/test/gtest-port_test.cc	/^  static int GetNewIndex() {$/;"	f	class:testing::internal::DestructorTracker	file:
GetNextPrime	test/gtest/samples/prime_tables.h	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:OnTheFlyPrimeTable
GetNextPrime	test/gtest/samples/prime_tables.h	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:PreCalculatedPrimeTable
GetNextPrime	test/gtest/samples/sample8_unittest.cc	/^  virtual int GetNextPrime(int p) const {$/;"	f	class:HybridPrimeTable
GetNextRandomSeed	test/gtest/fused-src/gtest/gtest-all.cc	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal
GetNextRandomSeed	test/gtest/src/gtest-internal-inl.h	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal
GetOrCreateValue	test/gtest/fused-src/gtest/gtest.h	/^  T* GetOrCreateValue() const {$/;"	f	class:std::tr1::ThreadLocal
GetOrCreateValue	test/gtest/include/gtest/internal/gtest-port.h	/^  T* GetOrCreateValue() const {$/;"	f	class:testing::internal::ThreadLocal
GetOutputFormat	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions
GetOutputFormat	test/gtest/src/gtest.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions
GetOutputOfAllCommands	test/gtest/test/gtest_output_test.py	/^def GetOutputOfAllCommands():$/;"	f
GetParam	test/gtest/fused-src/gtest/gtest.h	/^  const ParamType& GetParam() const {$/;"	f	class:testing::WithParamInterface
GetParam	test/gtest/include/gtest/gtest.h	/^  const ParamType& GetParam() const {$/;"	f	class:testing::WithParamInterface
GetPrefixUntilComma	test/gtest/fused-src/gtest/gtest.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal
GetPrefixUntilComma	test/gtest/include/gtest/internal/gtest-internal.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal
GetRandomSeedFromFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {$/;"	f	namespace:testing::internal
GetRandomSeedFromFlag	test/gtest/src/gtest-internal-inl.h	/^inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {$/;"	f	namespace:testing::internal
GetRange	test/gtest/scripts/pump.py	/^  def GetRange(self, identifier):$/;"	m	class:Env
GetRepeater	test/gtest/test/gtest_unittest.cc	/^  static TestEventListener* GetRepeater(TestEventListeners* listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor
GetReservedAttributesForElement	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing
GetReservedAttributesForElement	test/gtest/src/gtest.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing
GetShellCommandOutput	test/gtest/test/gtest_output_test.py	/^def GetShellCommandOutput(env_cmd):$/;"	f
GetSortedTestCases	test/gtest/test/gtest-unittest-api_test.cc	/^  static TestCase const** const GetSortedTestCases() {$/;"	f	class:testing::internal::UnitTestHelper
GetSortedTests	test/gtest/test/gtest-unittest-api_test.cc	/^  static TestInfo const** const GetSortedTests(const TestCase* test_case) {$/;"	f	class:testing::internal::UnitTestHelper
GetSourceDir	test/gtest/test/gtest_test_utils.py	/^def GetSourceDir():$/;"	f
GetStatusFileDescriptor	test/gtest/fused-src/gtest/gtest-all.cc	/^int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal
GetStatusFileDescriptor	test/gtest/src/gtest-death-test.cc	/^int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal
GetStream	test/gtest/fused-src/gtest/gtest.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:std::tr1::GTestLog
GetStream	test/gtest/include/gtest/internal/gtest-port.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:testing::internal::GTestLog
GetString	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message
GetString	test/gtest/src/gtest.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message
GetStringValue	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^std::string Widget::GetStringValue() const {$/;"	f	class:Widget
GetTempDir	test/gtest/test/gtest_test_utils.py	/^def GetTempDir():$/;"	f
GetTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestCase* GetTestCase(int i) const {$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest
GetTestCase	test/gtest/src/gtest-internal-inl.h	/^  const TestCase* GetTestCase(int i) const {$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	test/gtest/src/gtest.cc	/^TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	test/gtest/src/gtest.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest
GetTestCaseName	test/gtest/fused-src/gtest/gtest.h	/^  virtual const string& GetTestCaseName() const { return test_case_name_; }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCaseName	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual const string& GetTestCaseName() const { return test_case_name_; }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCasePatternHolder	test/gtest/fused-src/gtest/gtest.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
GetTestCasePatternHolder	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
GetTestCaseTypeId	test/gtest/fused-src/gtest/gtest.h	/^  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCaseTypeId	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCases	test/gtest/test/gtest_shuffle_test.py	/^def GetTestCases(tests):$/;"	f
GetTestExecutablePath	test/gtest/test/gtest_test_utils.py	/^def GetTestExecutablePath(executable_name, build_dir=None):$/;"	f
GetTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestInfo* TestCase::GetTestInfo(int i) const {$/;"	f	class:testing::TestCase
GetTestInfo	test/gtest/src/gtest.cc	/^const TestInfo* TestCase::GetTestInfo(int i) const {$/;"	f	class:testing::TestCase
GetTestInfo	test/gtest/test/gtest_unittest.cc	/^  static const TestInfo* GetTestInfo(const char* test_name) {$/;"	f	class:testing::TestInfoTest
GetTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray
GetTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult
GetTestPartResult	test/gtest/src/gtest-test-part.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray
GetTestPartResult	test/gtest/src/gtest.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult
GetTestPartResultReporterForCurrentThread	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl
GetTestPartResultReporterForCurrentThread	test/gtest/src/gtest.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl
GetTestProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult
GetTestProperty	test/gtest/src/gtest.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult
GetTestResult	test/gtest/test/gtest_unittest.cc	/^  static const TestResult* GetTestResult($/;"	f	class:testing::TestInfoTest
GetTestTypeId	test/gtest/fused-src/gtest/gtest-all.cc	/^TypeId GetTestTypeId() {$/;"	f	namespace:testing::internal
GetTestTypeId	test/gtest/src/gtest.cc	/^TypeId GetTestTypeId() {$/;"	f	namespace:testing::internal
GetTestsForAllIterations	test/gtest/test/gtest_shuffle_test.py	/^def GetTestsForAllIterations(extra_env, args):$/;"	f
GetThreadCount	test/gtest/fused-src/gtest/gtest-all.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal
GetThreadCount	test/gtest/src/gtest-port.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal
GetTimeInMillis	test/gtest/fused-src/gtest/gtest-all.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal
GetTimeInMillis	test/gtest/src/gtest.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal
GetTypeId	test/gtest/fused-src/gtest/gtest.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal
GetTypeId	test/gtest/include/gtest/internal/gtest-internal.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal
GetTypeName	test/gtest/fused-src/gtest/gtest.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal
GetTypeName	test/gtest/include/gtest/internal/gtest-type-util.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal
GetUnitTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal
GetUnitTestImpl	test/gtest/src/gtest-internal-inl.h	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal
GetValue	test/gtest/scripts/pump.py	/^  def GetValue(self, identifier):$/;"	m	class:Env
Getelement	experiments/backup/benchmarks/src/base/towers.c	/^int Getelement () {$/;"	f
Getelement	experiments/benchmarks/src/base/towers.c	/^int Getelement () {$/;"	f
GlobalFunction	test/gtest/test/gtest-death-test_test.cc	/^void GlobalFunction() { DieInside("GlobalFunction"); }$/;"	f
GoogleTestFailureException	test/gtest/fused-src/gtest/gtest-all.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
GoogleTestFailureException	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureException	test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureException	test/gtest/src/gtest.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
GreaterThan	test/gtest/test/gtest_unittest.cc	/^bool GreaterThan(T1 x1, T2 x2) {$/;"	f	namespace:__anon14
H	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:G
H	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:M
HEADER	test/gtest/scripts/gen_gtest_pred_impl.py	/^HEADER = os.path.join(SCRIPT_DIR, '..\/include\/gtest\/gtest_pred_impl.h')$/;"	v
HELP_REGEX	test/gtest/test/gtest_help_test.py	/^HELP_REGEX = re.compile($/;"	v
HEX	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
HEX	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HOLDBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	48;"	d	file:
HOLDBIT	experiments/benchmarks/src/base/richards_benchmark.c	48;"	d	file:
HONOR_SHARDING_PROTOCOL	test/gtest/fused-src/gtest/gtest-all.cc	/^    HONOR_SHARDING_PROTOCOL,$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
HONOR_SHARDING_PROTOCOL	test/gtest/src/gtest-internal-inl.h	/^    HONOR_SHARDING_PROTOCOL,$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
HRESULTFailureHelper	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult HRESULTFailureHelper(const char* expr,$/;"	f	namespace:testing::internal::__anon37
HRESULTFailureHelper	test/gtest/src/gtest.cc	/^AssertionResult HRESULTFailureHelper(const char* expr,$/;"	f	namespace:testing::internal::__anon10
HUGEsp	experiments/backup/benchmarks/src/sgefa/blas.c	21;"	d	file:
HUGEsp	experiments/benchmarks/src/sgefa/blas.c	21;"	d	file:
HZ	experiments/backup/benchmarks/src/base/dry.c	107;"	d	file:
HZ	experiments/backup/benchmarks/src/base/fldry.c	108;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	705;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	773;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	803;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	840;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	868;"	d	file:
HZ	experiments/backup/benchmarks/src/base/flops.c	893;"	d	file:
HZ	experiments/benchmarks/src/base/dry.c	107;"	d	file:
HZ	experiments/benchmarks/src/base/fldry.c	108;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	705;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	773;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	803;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	840;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	868;"	d	file:
HZ	experiments/benchmarks/src/base/flops.c	893;"	d	file:
HandleExceptionsInMethodIfSupported	test/gtest/fused-src/gtest/gtest-all.cc	/^Result HandleExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleExceptionsInMethodIfSupported	test/gtest/src/gtest.cc	/^Result HandleExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleSehExceptionsInMethodIfSupported	test/gtest/fused-src/gtest/gtest-all.cc	/^Result HandleSehExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleSehExceptionsInMethodIfSupported	test/gtest/src/gtest.cc	/^Result HandleSehExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HasFailure	test/gtest/fused-src/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test
HasFailure	test/gtest/include/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test
HasFailureHelper	test/gtest/test/gtest_unittest.cc	/^static bool HasFailureHelper() { return testing::Test::HasFailure(); }$/;"	f	file:
HasFatalFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test
HasFatalFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult
HasFatalFailure	test/gtest/src/gtest.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test
HasFatalFailure	test/gtest/src/gtest.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult
HasGoogleTestFlagPrefix	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal
HasGoogleTestFlagPrefix	test/gtest/src/gtest.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal
HasNewFatalFailureHelper	test/gtest/fused-src/gtest/gtest-all.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNewFatalFailureHelper	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNewFatalFailureHelper	test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNewFatalFailureHelper	test/gtest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNonfatalFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test
HasNonfatalFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult
HasNonfatalFailure	test/gtest/src/gtest.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test
HasNonfatalFailure	test/gtest/src/gtest.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult
HasNonfatalFailureHelper	test/gtest/test/gtest_unittest.cc	/^static bool HasNonfatalFailureHelper() {$/;"	f	file:
HasOneFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal
HasOneFailure	test/gtest/src/gtest.cc	/^AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal
HasPrefix	test/gtest/test/gtest-printers_test.cc	/^AssertionResult HasPrefix(const StringType& str, const StringType& prefix) {$/;"	f	namespace:testing::gtest_printers_test
HasSameFixtureClass	test/gtest/fused-src/gtest/gtest-all.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test
HasSameFixtureClass	test/gtest/src/gtest.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types1
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types10
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types11
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types12
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types13
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types14
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types15
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types16
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types17
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types18
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types19
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types2
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types20
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types21
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types22
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types23
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types24
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types25
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types26
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types27
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types28
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types29
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types3
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types30
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types31
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types32
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types33
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types34
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types35
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types36
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types37
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types38
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types39
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types4
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types40
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types41
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types42
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types43
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types44
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types45
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types46
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types47
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types48
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types49
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types5
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types50
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types6
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types7
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types8
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types9
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates1
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates10
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates11
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates12
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates13
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates14
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates15
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates16
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates17
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates18
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates19
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates2
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates20
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates21
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates22
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates23
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates24
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates25
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates26
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates27
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates28
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates29
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates3
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates30
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates31
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates32
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates33
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates34
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates35
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates36
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates37
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates38
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates39
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates4
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates40
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates41
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates42
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates43
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates44
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates45
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates46
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates47
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates48
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates49
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates5
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates50
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates6
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates7
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates8
Head	test/gtest/fused-src/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates9
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types1
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types10
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types11
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types12
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types13
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types14
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types15
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types16
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types17
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types18
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types19
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types2
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types20
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types21
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types22
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types23
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types24
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types25
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types26
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types27
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types28
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types29
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types3
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types30
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types31
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types32
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types33
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types34
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types35
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types36
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types37
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types38
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types39
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types4
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types40
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types41
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types42
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types43
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types44
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types45
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types46
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types47
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types48
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types49
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types5
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types50
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types6
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types7
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types8
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types9
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates1
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates10
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates11
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates12
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates13
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates14
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates15
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates16
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates17
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates18
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates19
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates2
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates20
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates21
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates22
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates23
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates24
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates25
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates26
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates27
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates28
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates29
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates3
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates30
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates31
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates32
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates33
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates34
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates35
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates36
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates37
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates38
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates39
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates4
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates40
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates41
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates42
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates43
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates44
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates45
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates46
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates47
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates48
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates49
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates5
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates50
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates6
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates7
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates8
Head	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates9
Head	test/gtest/samples/sample3-inl.h	/^  QueueNode<E>* Head() { return head_; }$/;"	f	class:Queue
Head	test/gtest/samples/sample3-inl.h	/^  const QueueNode<E>* Head() const { return head_; }$/;"	f	class:Queue
HeaderPreamble	test/gtest/scripts/gen_gtest_pred_impl.py	/^def HeaderPreamble(n):$/;"	f
HexxagonBoard	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonBoard::HexxagonBoard(const HexxagonBoard &copy)$/;"	f	class:HexxagonBoard
HexxagonBoard	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	HexxagonBoard(void) {};$/;"	f	class:HexxagonBoard
HexxagonBoard	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^class HexxagonBoard$/;"	c
HexxagonBoard	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonBoard::HexxagonBoard(const HexxagonBoard &copy)$/;"	f	class:HexxagonBoard
HexxagonBoard	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	HexxagonBoard(void) {};$/;"	f	class:HexxagonBoard
HexxagonBoard	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^class HexxagonBoard$/;"	c
HexxagonGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^HexxagonGame::HexxagonGame()$/;"	f	class:HexxagonGame
HexxagonGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^class HexxagonGame$/;"	c
HexxagonGame	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^HexxagonGame::HexxagonGame()$/;"	f	class:HexxagonGame
HexxagonGame	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^class HexxagonGame$/;"	c
HexxagonMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove() {};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove(int f, int t) {from = f; to = t;};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove(int t) {from = t; to = t;};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^class HexxagonMove$/;"	c
HexxagonMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove() {};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove(int f, int t) {from = f; to = t;};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove(int t) {from = t; to = t;};$/;"	f	class:HexxagonMove
HexxagonMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^class HexxagonMove$/;"	c
HexxagonMoveList	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMoveList() { moves = new HexxagonMove[NO_MOVES_BEGIN]; nr_moves = 0; };$/;"	f	class:HexxagonMoveList
HexxagonMoveList	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^class HexxagonMoveList$/;"	c
HexxagonMoveList	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMoveList() { moves = new HexxagonMove[NO_MOVES_BEGIN]; nr_moves = 0; };$/;"	f	class:HexxagonMoveList
HexxagonMoveList	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^class HexxagonMoveList$/;"	c
High	include/CostEstimator/InstructionCostEstimator.h	/^  High = 4,$/;"	e	enum:Cost
Holdcountval	experiments/backup/benchmarks/src/base/richards_benchmark.c	27;"	d	file:
Holdcountval	experiments/backup/benchmarks/src/base/richards_benchmark.c	31;"	d	file:
Holdcountval	experiments/benchmarks/src/base/richards_benchmark.c	27;"	d	file:
Holdcountval	experiments/benchmarks/src/base/richards_benchmark.c	31;"	d	file:
HybridPrimeTable	test/gtest/samples/sample8_unittest.cc	/^  HybridPrimeTable(bool force_on_the_fly, int max_precalculated)$/;"	f	class:HybridPrimeTable
HybridPrimeTable	test/gtest/samples/sample8_unittest.cc	/^class HybridPrimeTable : public PrimeTable {$/;"	c	file:
I	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:G
I	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:function
I	experiments/backup/benchmarks/src/base/mandel.c	12;"	d	file:
I	experiments/benchmarks/src/base/mandel.c	12;"	d	file:
IA	experiments/backup/benchmarks/src/base/heapsort.c	12;"	d	file:
IA	experiments/backup/benchmarks/src/base/huffbench.c	/^static const long IA   = 16807;$/;"	v	file:
IA	experiments/backup/benchmarks/src/base/lpbench.c	/^static const long IA   = 16807;$/;"	v	file:
IA	experiments/backup/benchmarks/src/base/random.c	13;"	d	file:
IA	experiments/benchmarks/src/base/heapsort.c	12;"	d	file:
IA	experiments/benchmarks/src/base/huffbench.c	/^static const long IA   = 16807;$/;"	v	file:
IA	experiments/benchmarks/src/base/lpbench.c	/^static const long IA   = 16807;$/;"	v	file:
IA	experiments/benchmarks/src/base/random.c	13;"	d	file:
IC	experiments/backup/benchmarks/src/base/heapsort.c	13;"	d	file:
IC	experiments/backup/benchmarks/src/base/random.c	14;"	d	file:
IC	experiments/benchmarks/src/base/heapsort.c	13;"	d	file:
IC	experiments/benchmarks/src/base/random.c	14;"	d	file:
ID	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  static char ID;$/;"	m	struct:MachineAST	file:
ID	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^char MachineAST::ID = 0;$/;"	m	class:MachineAST	file:
ID	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^char MachineFunctionAnalysis::ID = 0;$/;"	m	class:MachineFunctionAnalysis	file:
ID	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:__anon1::CostModelAnalysis	file:
ID	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^char CostModelAnalysis::ID = 0;$/;"	m	class:CostModelAnalysis	file:
ID	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      static char ID; $/;"	m	struct:__anon3::CallCost	file:
ID	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^char CallCost::ID = 0;$/;"	m	class:CallCost	file:
ID	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^int     ID;$/;"	v
ID	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^  static char ID;$/;"	m	struct:StaticProfiling	file:
ID	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^char StaticProfiling::ID = 0;$/;"	m	class:StaticProfiling	file:
ID_REGEX	test/gtest/scripts/pump.py	/^ID_REGEX = re.compile(r'[_A-Za-z]\\w*')$/;"	v
ID_VOID_MAIN	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IF	experiments/backup/benchmarks/src/base/whetstone.c	71;"	d	file:
IF	experiments/benchmarks/src/base/whetstone.c	71;"	d	file:
IGNORE_SHARDING_PROTOCOL	test/gtest/fused-src/gtest/gtest-all.cc	/^    IGNORE_SHARDING_PROTOCOL$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
IGNORE_SHARDING_PROTOCOL	test/gtest/src/gtest-internal-inl.h	/^    IGNORE_SHARDING_PROTOCOL$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
IM	experiments/backup/benchmarks/src/base/heapsort.c	11;"	d	file:
IM	experiments/backup/benchmarks/src/base/huffbench.c	/^static const long IM   = 2147483647;$/;"	v	file:
IM	experiments/backup/benchmarks/src/base/lpbench.c	/^static const long IM   = 2147483647;$/;"	v	file:
IM	experiments/backup/benchmarks/src/base/random.c	12;"	d	file:
IM	experiments/benchmarks/src/base/heapsort.c	11;"	d	file:
IM	experiments/benchmarks/src/base/huffbench.c	/^static const long IM   = 2147483647;$/;"	v	file:
IM	experiments/benchmarks/src/base/lpbench.c	/^static const long IM   = 2147483647;$/;"	v	file:
IM	experiments/benchmarks/src/base/random.c	12;"	d	file:
IMAGE_SIZE	experiments/backup/benchmarks/src/base/mandel.c	3;"	d	file:
IMAGE_SIZE	experiments/backup/benchmarks/src/base/mandel.c	5;"	d	file:
IMAGE_SIZE	experiments/benchmarks/src/base/mandel.c	3;"	d	file:
IMAGE_SIZE	experiments/benchmarks/src/base/mandel.c	5;"	d	file:
IMMEDS	experiments/backup/benchmarks/src/aha/aha.h	37;"	d
IMMEDS	experiments/benchmarks/src/aha/aha.h	37;"	d
INCLUDE_GTEST_FILE_REGEX	test/gtest/scripts/fuse_gtest_files.py	/^INCLUDE_GTEST_FILE_REGEX = re.compile(r'^\\s*#\\s*include\\s*"(gtest\/.+)"')$/;"	v
INCLUDE_SRC_FILE_REGEX	test/gtest/scripts/fuse_gtest_files.py	/^INCLUDE_SRC_FILE_REGEX = re.compile(r'^\\s*#\\s*include\\s*"(src\/.+)"')$/;"	v
INCORRECT_FLAG_VARIANTS	test/gtest/test/gtest_help_test.py	/^INCORRECT_FLAG_VARIANTS = [re.sub('^--', '-', LIST_TESTS_FLAG),$/;"	v
INF	experiments/backup/benchmarks/src/base/misr.c	37;"	d	file:
INF	experiments/benchmarks/src/base/misr.c	37;"	d	file:
INSTANTIATE_TEST_CASE_P	test/gtest/fused-src/gtest/gtest.h	16972;"	d
INSTANTIATE_TEST_CASE_P	test/gtest/include/gtest/gtest-param-test.h	1406;"	d
INSTANTIATE_TYPED_TEST_CASE_P	test/gtest/fused-src/gtest/gtest.h	17470;"	d
INSTANTIATE_TYPED_TEST_CASE_P	test/gtest/include/gtest/gtest-typed-test.h	250;"	d
INTERCEPT_ALL_THREADS	test/gtest/fused-src/gtest/gtest-all.cc	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTERCEPT_ALL_THREADS	test/gtest/include/gtest/gtest-spi.h	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERCEPT_ONLY_CURRENT_THREAD	test/gtest/fused-src/gtest/gtest-all.cc	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTERCEPT_ONLY_CURRENT_THREAD	test/gtest/include/gtest/gtest-spi.h	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERNAL_FLAG_FOR_TESTING	test/gtest/test/gtest_help_test.py	/^INTERNAL_FLAG_FOR_TESTING = FLAG_PREFIX + 'internal_flag_for_testing'$/;"	v
IN_PROGRESS	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
IN_PROGRESS	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
IQ	experiments/backup/benchmarks/src/base/huffbench.c	/^static const long IQ   = 127773;$/;"	v	file:
IQ	experiments/backup/benchmarks/src/base/lpbench.c	/^static const long IQ   = 127773;$/;"	v	file:
IQ	experiments/benchmarks/src/base/huffbench.c	/^static const long IQ   = 127773;$/;"	v	file:
IQ	experiments/benchmarks/src/base/lpbench.c	/^static const long IQ   = 127773;$/;"	v	file:
IR	experiments/backup/benchmarks/src/base/huffbench.c	/^static const long IR   = 2836;$/;"	v	file:
IR	experiments/backup/benchmarks/src/base/lpbench.c	/^static const long IR   = 2836;$/;"	v	file:
IR	experiments/benchmarks/src/base/huffbench.c	/^static const long IR   = 2836;$/;"	v	file:
IR	experiments/benchmarks/src/base/lpbench.c	/^static const long IR   = 2836;$/;"	v	file:
ITERATIONS	experiments/backup/benchmarks/src/base/dt.c	/^  ITERATIONS = 131072,$/;"	e	enum:__anon65	file:
ITERATIONS	experiments/backup/benchmarks/src/base/fbench.c	281;"	d	file:
ITERATIONS	experiments/benchmarks/src/base/dt.c	/^  ITERATIONS = 131072,$/;"	e	enum:__anon52	file:
ITERATIONS	experiments/benchmarks/src/base/fbench.c	281;"	d	file:
I_DEVA	experiments/backup/benchmarks/src/base/richards_benchmark.c	44;"	d	file:
I_DEVA	experiments/benchmarks/src/base/richards_benchmark.c	44;"	d	file:
I_DEVB	experiments/backup/benchmarks/src/base/richards_benchmark.c	45;"	d	file:
I_DEVB	experiments/benchmarks/src/base/richards_benchmark.c	45;"	d	file:
I_HANDLERA	experiments/backup/benchmarks/src/base/richards_benchmark.c	42;"	d	file:
I_HANDLERA	experiments/benchmarks/src/base/richards_benchmark.c	42;"	d	file:
I_HANDLERB	experiments/backup/benchmarks/src/base/richards_benchmark.c	43;"	d	file:
I_HANDLERB	experiments/benchmarks/src/base/richards_benchmark.c	43;"	d	file:
I_IDLE	experiments/backup/benchmarks/src/base/richards_benchmark.c	40;"	d	file:
I_IDLE	experiments/benchmarks/src/base/richards_benchmark.c	40;"	d	file:
I_WORK	experiments/backup/benchmarks/src/base/richards_benchmark.c	41;"	d	file:
I_WORK	experiments/benchmarks/src/base/richards_benchmark.c	41;"	d	file:
IdToKey	test/gtest/test/gtest_stress_test.cc	/^std::string IdToKey(int id, const char* suffix) {$/;"	f	namespace:testing::__anon23
IdToString	test/gtest/test/gtest_stress_test.cc	/^std::string IdToString(int id) {$/;"	f	namespace:testing::__anon23
Ident	include/Profiling/GCOV.h	/^  uint32_t Ident;$/;"	m	class:llvm::GCOVFunction
Ident1	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon64	file:
Ident1	experiments/backup/benchmarks/src/base/dry.c	126;"	d	file:
Ident1	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon66	file:
Ident1	experiments/backup/benchmarks/src/base/fldry.c	127;"	d	file:
Ident1	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon51	file:
Ident1	experiments/benchmarks/src/base/dry.c	126;"	d	file:
Ident1	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon53	file:
Ident1	experiments/benchmarks/src/base/fldry.c	127;"	d	file:
Ident2	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon64	file:
Ident2	experiments/backup/benchmarks/src/base/dry.c	127;"	d	file:
Ident2	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon66	file:
Ident2	experiments/backup/benchmarks/src/base/fldry.c	128;"	d	file:
Ident2	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon51	file:
Ident2	experiments/benchmarks/src/base/dry.c	127;"	d	file:
Ident2	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon53	file:
Ident2	experiments/benchmarks/src/base/fldry.c	128;"	d	file:
Ident3	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon64	file:
Ident3	experiments/backup/benchmarks/src/base/dry.c	128;"	d	file:
Ident3	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon66	file:
Ident3	experiments/backup/benchmarks/src/base/fldry.c	129;"	d	file:
Ident3	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon51	file:
Ident3	experiments/benchmarks/src/base/dry.c	128;"	d	file:
Ident3	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon53	file:
Ident3	experiments/benchmarks/src/base/fldry.c	129;"	d	file:
Ident4	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon64	file:
Ident4	experiments/backup/benchmarks/src/base/dry.c	129;"	d	file:
Ident4	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon66	file:
Ident4	experiments/backup/benchmarks/src/base/fldry.c	130;"	d	file:
Ident4	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon51	file:
Ident4	experiments/benchmarks/src/base/dry.c	129;"	d	file:
Ident4	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon53	file:
Ident4	experiments/benchmarks/src/base/fldry.c	130;"	d	file:
Ident5	experiments/backup/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon64	file:
Ident5	experiments/backup/benchmarks/src/base/dry.c	130;"	d	file:
Ident5	experiments/backup/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon66	file:
Ident5	experiments/backup/benchmarks/src/base/fldry.c	131;"	d	file:
Ident5	experiments/benchmarks/src/base/dry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon51	file:
Ident5	experiments/benchmarks/src/base/dry.c	130;"	d	file:
Ident5	experiments/benchmarks/src/base/fldry.c	/^typedef enum	{Ident1, Ident2 = 10000, Ident3, Ident4, Ident5} Enumeration;$/;"	e	enum:__anon53	file:
Ident5	experiments/benchmarks/src/base/fldry.c	131;"	d	file:
IfNode	test/gtest/scripts/pump.py	/^class IfNode:$/;"	c
Im	experiments/backup/benchmarks/src/base/ffbench.c	249;"	d	file:
Im	experiments/benchmarks/src/base/ffbench.c	249;"	d	file:
ImplementationForArity	test/gtest/scripts/gen_gtest_pred_impl.py	/^def ImplementationForArity(n):$/;"	f
Implementations	test/gtest/samples/sample6_unittest.cc	/^typedef Types<OnTheFlyPrimeTable, PreCalculatedPrimeTable> Implementations;$/;"	t	file:
ImplicitCast_	test/gtest/fused-src/gtest/gtest.h	/^inline To ImplicitCast_(To x) { return x; }$/;"	f	namespace:std::tr1
ImplicitCast_	test/gtest/include/gtest/internal/gtest-port.h	/^inline To ImplicitCast_(To x) { return x; }$/;"	f	namespace:testing::internal
ImplicitlyConvertible	test/gtest/fused-src/gtest/gtest.h	/^class ImplicitlyConvertible {$/;"	c	namespace:testing::internal
ImplicitlyConvertible	test/gtest/include/gtest/internal/gtest-internal.h	/^class ImplicitlyConvertible {$/;"	c	namespace:testing::internal
InDeathTestChild	test/gtest/fused-src/gtest/gtest-all.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal
InDeathTestChild	test/gtest/src/gtest-death-test.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal
Increment	test/gtest/samples/sample4.cc	/^int Counter::Increment() {$/;"	f	class:Counter
Increment	test/gtest/test/gtest-port_test.cc	/^  void Increment() {$/;"	f	class:testing::internal::AtomicCounterWithMutex
InductionVariableSimplify	include/GEOS.h	/^  InductionVariableSimplify,$/;"	e	enum:OptimizationKind
Infinity	test/gtest/fused-src/gtest/gtest.h	/^  static RawType Infinity() {$/;"	f	class:testing::internal::FloatingPoint
Infinity	test/gtest/include/gtest/internal/gtest-internal.h	/^  static RawType Infinity() {$/;"	f	class:testing::internal::FloatingPoint
Init	experiments/backup/benchmarks/src/base/towers.c	/^void Init (int s, int n) {$/;"	f
Init	experiments/benchmarks/src/base/towers.c	/^void Init (int s, int n) {$/;"	f
Init	test/gtest/fused-src/gtest/gtest-all.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE
Init	test/gtest/fused-src/gtest/gtest-all.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
Init	test/gtest/fused-src/gtest/gtest.h	/^  void Init(const Element* array, size_t a_size, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
Init	test/gtest/include/gtest/internal/gtest-internal.h	/^  void Init(const Element* array, size_t a_size, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
Init	test/gtest/src/gtest-port.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE
Init	test/gtest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
Init	test/gtest/test/gtest_output_test_.cc	/^  void Init() {$/;"	f	class:FatalFailureInFixtureConstructorTest	file:
InitDeathTestSubprocessControlInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl
InitDeathTestSubprocessControlInfo	test/gtest/src/gtest-internal-inl.h	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl
InitGoogleTest	test/gtest/fused-src/gtest/gtest-all.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleTest	test/gtest/fused-src/gtest/gtest-all.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleTest	test/gtest/src/gtest.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleTest	test/gtest/src/gtest.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InitGoogleTestImpl	test/gtest/src/gtest.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InitGoogleTestTest	test/gtest/test/gtest_unittest.cc	/^class InitGoogleTestTest : public Test {$/;"	c	namespace:testing	file:
Initarr	experiments/backup/benchmarks/src/base/quicksort.c	/^void Initarr() {$/;"	f
Initarr	experiments/benchmarks/src/base/quicksort.c	/^void Initarr() {$/;"	f
Initialize	experiments/backup/benchmarks/src/base/perm.c	/^void Initialize () {$/;"	f
Initialize	experiments/benchmarks/src/base/perm.c	/^void Initialize () {$/;"	f
Initmatrix	experiments/backup/benchmarks/src/base/intmm.c	/^void Initmatrix (int m[rowsize+1][rowsize+1]) {$/;"	f
Initmatrix	experiments/benchmarks/src/base/intmm.c	/^void Initmatrix (int m[rowsize+1][rowsize+1]) {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/bubblesort.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/intmm.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/oscar.c	/^Initrand ()$/;"	f
Initrand	experiments/backup/benchmarks/src/base/perm.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/queens.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/quicksort.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/realmm.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/towers.c	/^void Initrand () {$/;"	f
Initrand	experiments/backup/benchmarks/src/base/treesort.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/bubblesort.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/intmm.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/oscar.c	/^Initrand ()$/;"	f
Initrand	experiments/benchmarks/src/base/perm.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/puzzle-stanford.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/queens.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/quicksort.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/realmm.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/towers.c	/^void Initrand () {$/;"	f
Initrand	experiments/benchmarks/src/base/treesort.c	/^void Initrand () {$/;"	f
Innerproduct	experiments/backup/benchmarks/src/base/intmm.c	/^void Innerproduct( int *result, int a[rowsize+1][rowsize+1], int b[rowsize+1][rowsize+1], int row, int column) {$/;"	f
Innerproduct	experiments/benchmarks/src/base/intmm.c	/^void Innerproduct( int *result, int a[rowsize+1][rowsize+1], int b[rowsize+1][rowsize+1], int row, int column) {$/;"	f
Insert	experiments/backup/benchmarks/src/base/treesort.c	/^void Insert(int n, struct node *t) {$/;"	f
Insert	experiments/benchmarks/src/base/treesort.c	/^void Insert(int n, struct node *t) {$/;"	f
Instance	test/gtest/test/gtest-param-test_test.cc	/^  static TestGenerationEnvironment* Instance() {$/;"	f	class:TestGenerationEnvironment
InstantiationContainer	test/gtest/fused-src/gtest/gtest.h	/^      InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
InstantiationContainer	test/gtest/include/gtest/internal/gtest-param-util.h	/^      InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
InstantiationInMultipleTranslaionUnitsTest	test/gtest/test/gtest-param-test_test.h	/^class InstantiationInMultipleTranslaionUnitsTest$/;"	c
InstructionCombining	include/GEOS.h	/^  InstructionCombining,$/;"	e	enum:OptimizationKind
InstructionCostEstimator	include/CostEstimator/InstructionCostEstimator.h	/^class InstructionCostEstimator {$/;"	c
InstructionNamer	include/GEOS.h	/^  InstructionNamer,$/;"	e	enum:OptimizationKind
InstructionSimplifier	include/GEOS.h	/^  InstructionSimplifier,$/;"	e	enum:OptimizationKind
Int	experiments/backup/benchmarks/src/base/fannkuch.c	14;"	d	file:
Int	experiments/benchmarks/src/base/fannkuch.c	14;"	d	file:
Int	test/gtest/fused-src/gtest/gtest.h	/^  typedef __int64 Int;$/;"	t	class:std::tr1::TypeWithSize
Int	test/gtest/fused-src/gtest/gtest.h	/^  typedef int Int;$/;"	t	class:std::tr1::TypeWithSize
Int	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef __int64 Int;$/;"	t	class:testing::internal::TypeWithSize
Int	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef int Int;$/;"	t	class:testing::internal::TypeWithSize
Int32	test/gtest/fused-src/gtest/gtest.h	/^typedef TypeWithSize<4>::Int Int32;$/;"	t	namespace:std::tr1
Int32	test/gtest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<4>::Int Int32;$/;"	t	namespace:testing::internal
Int32FromEnvOrDie	test/gtest/fused-src/gtest/gtest-all.cc	/^Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {$/;"	f	namespace:testing::internal
Int32FromEnvOrDie	test/gtest/src/gtest.cc	/^Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {$/;"	f	namespace:testing::internal
Int32FromGTestEnv	test/gtest/fused-src/gtest/gtest-all.cc	/^Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {$/;"	f	namespace:testing::internal
Int32FromGTestEnv	test/gtest/src/gtest-port.cc	/^Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {$/;"	f	namespace:testing::internal
Int64	test/gtest/fused-src/gtest/gtest.h	/^typedef TypeWithSize<8>::Int Int64;$/;"	t	namespace:std::tr1
Int64	test/gtest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::Int Int64;$/;"	t	namespace:testing::internal
IntAfterTypedTestCaseP	test/gtest/test/gtest-typed-test_test.cc	/^typedef int IntAfterTypedTestCaseP;$/;"	t	file:
IntAlias	test/gtest/test/gtest_unittest.cc	/^typedef int IntAlias;$/;"	t	file:
IntBeforeRegisterTypedTestCaseP	test/gtest/test/gtest-typed-test_test.cc	/^typedef int IntBeforeRegisterTypedTestCaseP;$/;"	t	file:
IntComp	experiments/backup/benchmarks/src/base/dry.c	/^	OneToFifty		IntComp;$/;"	m	struct:Record	file:
IntComp	experiments/backup/benchmarks/src/base/fldry.c	/^	OneToFifty		IntComp;$/;"	m	struct:Record	file:
IntComp	experiments/benchmarks/src/base/dry.c	/^	OneToFifty		IntComp;$/;"	m	struct:Record	file:
IntComp	experiments/benchmarks/src/base/fldry.c	/^	OneToFifty		IntComp;$/;"	m	struct:Record	file:
IntGlob	experiments/backup/benchmarks/src/base/dry.c	/^int		IntGlob;$/;"	v
IntGlob	experiments/backup/benchmarks/src/base/fldry.c	/^extended		IntGlob;$/;"	v
IntGlob	experiments/benchmarks/src/base/dry.c	/^int		IntGlob;$/;"	v
IntGlob	experiments/benchmarks/src/base/fldry.c	/^extended		IntGlob;$/;"	v
IntSet	test/gtest/test/gtest-typed-test_test.cc	/^  typedef std::set<int> IntSet;$/;"	t	class:CommonTest	file:
IntWrapper	test/gtest/test/gtest-param-test_test.cc	/^  IntWrapper(const IntWrapper& other) : value_(other.value_) {}$/;"	f	class:IntWrapper
IntWrapper	test/gtest/test/gtest-param-test_test.cc	/^  explicit IntWrapper(int a_value) : value_(a_value) {}$/;"	f	class:IntWrapper
IntWrapper	test/gtest/test/gtest-param-test_test.cc	/^class IntWrapper {$/;"	c	file:
IntegerFunctionTest	test/gtest/samples/sample5_unittest.cc	/^class IntegerFunctionTest : public QuickTest {$/;"	c	file:
InterceptMode	test/gtest/fused-src/gtest/gtest-all.cc	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter	file:
InterceptMode	test/gtest/include/gtest/gtest-spi.h	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter
InternalRunDeathTestFlag	test/gtest/fused-src/gtest/gtest.h	/^  InternalRunDeathTestFlag(const std::string& a_file,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	test/gtest/fused-src/gtest/gtest.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
InternalRunDeathTestFlag	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  InternalRunDeathTestFlag(const std::string& a_file,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
Intmm	experiments/backup/benchmarks/src/base/intmm.c	/^void Intmm (int run) {$/;"	f
Intmm	experiments/benchmarks/src/base/intmm.c	/^void Intmm (int run) {$/;"	f
InvokeWithModifiedEnv	test/gtest/test/gtest_filter_unittest.py	/^def InvokeWithModifiedEnv(extra_env, function, *args, **kwargs):$/;"	f
IsAProtocolMessage	test/gtest/fused-src/gtest/gtest.h	/^struct IsAProtocolMessage$/;"	s	namespace:testing::internal
IsAProtocolMessage	test/gtest/include/gtest/internal/gtest-internal.h	/^struct IsAProtocolMessage$/;"	s	namespace:testing::internal
IsATTY	test/gtest/fused-src/gtest/gtest.h	/^inline int IsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:std::tr1::posix
IsATTY	test/gtest/fused-src/gtest/gtest.h	/^inline int IsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsATTY	test/gtest/fused-src/gtest/gtest.h	/^inline int IsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsATTY	test/gtest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:testing::internal::posix
IsATTY	test/gtest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:testing::internal::posix
IsATTY	test/gtest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:testing::internal::posix
IsAbsolutePath	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath
IsAbsolutePath	test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath
IsAlNum	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:std::tr1
IsAlNum	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:testing::internal
IsAlpha	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:std::tr1
IsAlpha	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:testing::internal
IsAsciiDigit	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal
IsAsciiDigit	test/gtest/src/gtest-port.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal
IsAsciiPunct	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal
IsAsciiPunct	test/gtest/src/gtest-port.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal
IsAsciiWhiteSpace	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal
IsAsciiWhiteSpace	test/gtest/src/gtest-port.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal
IsAsciiWordChar	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal
IsAsciiWordChar	test/gtest/src/gtest-port.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal
IsContainer	test/gtest/fused-src/gtest/gtest.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal
IsContainer	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal
IsContainerTest	test/gtest/fused-src/gtest/gtest.h	/^IsContainer IsContainerTest(int \/* dummy *\/,$/;"	f	namespace:testing::internal
IsContainerTest	test/gtest/fused-src/gtest/gtest.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) { return '\\0'; }$/;"	f	namespace:testing::internal
IsContainerTest	test/gtest/include/gtest/internal/gtest-internal.h	/^IsContainer IsContainerTest(int \/* dummy *\/,$/;"	f	namespace:testing::internal
IsContainerTest	test/gtest/include/gtest/internal/gtest-internal.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) { return '\\0'; }$/;"	f	namespace:testing::internal
IsDigit	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:std::tr1
IsDigit	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:testing::internal
IsDir	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsDir(const StatStruct& st) {$/;"	f	namespace:std::tr1::posix
IsDir	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsDir(const StatStruct& st) {$/;"	f	namespace:testing::internal::posix
IsDirectory	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath
IsDirectory	test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath
IsEmpty	test/gtest/fused-src/gtest/gtest.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath
IsEmpty	test/gtest/include/gtest/internal/gtest-filepath.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath
IsEven	test/gtest/test/gtest_unittest.cc	/^bool IsEven(int n) {$/;"	f	namespace:__anon14
IsEvenFunctor	test/gtest/test/gtest_unittest.cc	/^struct IsEvenFunctor {$/;"	s	namespace:__anon14	file:
IsHRESULTFailure	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHRESULTFailure	test/gtest/src/gtest.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHRESULTSuccess	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHRESULTSuccess	test/gtest/src/gtest.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHeaderGuardIncludeOrOneLineIWYUPragma	test/gtest/scripts/pump.py	/^def IsHeaderGuardIncludeOrOneLineIWYUPragma(line):$/;"	f
IsInPreprocessorDirective	test/gtest/scripts/pump.py	/^def IsInPreprocessorDirective(prev_lines, cur_line):$/;"	f
IsInSet	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal
IsInSet	test/gtest/src/gtest-port.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal
IsLower	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:std::tr1
IsLower	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:testing::internal
IsMultiLineIWYUPragma	test/gtest/scripts/pump.py	/^def IsMultiLineIWYUPragma(line):$/;"	f
IsNegative	test/gtest/test/gtest_unittest.cc	/^bool IsNegative(T x) {$/;"	f	namespace:__anon14
IsNegativeFormat	test/gtest/test/gtest_unittest.cc	/^AssertionResult IsNegativeFormat(const char* \/* expr *\/, T x) {$/;"	f	namespace:__anon14
IsNormalizableWhitespace	test/gtest/fused-src/gtest/gtest-all.cc	/^  static bool IsNormalizableWhitespace(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsNormalizableWhitespace	test/gtest/src/gtest.cc	/^  static bool IsNormalizableWhitespace(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsNotContainer	test/gtest/fused-src/gtest/gtest.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal
IsNotContainer	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal
IsNotSubstring	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult IsNotSubstring($/;"	f	namespace:testing
IsNotSubstring	test/gtest/src/gtest.cc	/^AssertionResult IsNotSubstring($/;"	f	namespace:testing
IsNull	test/gtest/test/gtest-unittest-api_test.cc	/^AssertionResult IsNull(const char* str) {$/;"	f	namespace:testing::internal
IsPathSeparator	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal
IsPathSeparator	test/gtest/src/gtest-filepath.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal
IsPositive	test/gtest/test/gtest_unittest.cc	/^bool IsPositive(double x) {$/;"	f	namespace:__anon14
IsPositive	test/gtest/test/gtest_unittest.cc	/^static bool IsPositive(int n) { return n > 0; }$/;"	f	namespace:__anon14
IsPositiveFormat	test/gtest/test/gtest_unittest.cc	/^AssertionResult IsPositiveFormat(const char* \/* expr *\/, double x) {$/;"	f	namespace:__anon14
IsPositiveFormat	test/gtest/test/gtest_unittest.cc	/^AssertionResult IsPositiveFormat(const char* \/* expr *\/, int n) {$/;"	f	namespace:__anon14
IsPositiveUncopyable	test/gtest/test/gtest_unittest.cc	/^bool IsPositiveUncopyable(const Uncopyable& x) {$/;"	f	namespace:__anon14
IsPrime	test/gtest/samples/prime_tables.h	/^  virtual bool IsPrime(int n) const {$/;"	f	class:OnTheFlyPrimeTable
IsPrime	test/gtest/samples/prime_tables.h	/^  virtual bool IsPrime(int n) const {$/;"	f	class:PreCalculatedPrimeTable
IsPrime	test/gtest/samples/sample1.cc	/^bool IsPrime(int n) {$/;"	f
IsPrime	test/gtest/samples/sample8_unittest.cc	/^  virtual bool IsPrime(int n) const {$/;"	f	class:HybridPrimeTable
IsPrintableAscii	test/gtest/fused-src/gtest/gtest-all.cc	/^inline bool IsPrintableAscii(wchar_t c) {$/;"	f	namespace:testing::internal
IsPrintableAscii	test/gtest/src/gtest-printers.cc	/^inline bool IsPrintableAscii(wchar_t c) {$/;"	f	namespace:testing::internal
IsRepeat	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal
IsRepeat	test/gtest/src/gtest-port.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal
IsRootDirectory	test/gtest/fused-src/gtest/gtest-all.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath
IsRootDirectory	test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath
IsSingleLineComment	test/gtest/scripts/pump.py	/^def IsSingleLineComment(cur_line):$/;"	f
IsSpace	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:std::tr1
IsSpace	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:testing::internal
IsSubstring	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult IsSubstring($/;"	f	namespace:testing
IsSubstring	test/gtest/src/gtest.cc	/^AssertionResult IsSubstring($/;"	f	namespace:testing
IsSubstringImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult IsSubstringImpl($/;"	f	namespace:testing::__anon36
IsSubstringImpl	test/gtest/src/gtest.cc	/^AssertionResult IsSubstringImpl($/;"	f	namespace:testing::__anon9
IsSubstringPred	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsSubstringPred(const StringType& needle,$/;"	f	namespace:testing::__anon36
IsSubstringPred	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anon36
IsSubstringPred	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anon36
IsSubstringPred	test/gtest/src/gtest.cc	/^bool IsSubstringPred(const StringType& needle,$/;"	f	namespace:testing::__anon9
IsSubstringPred	test/gtest/src/gtest.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anon9
IsSubstringPred	test/gtest/src/gtest.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anon9
IsTrue	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal
IsTrue	test/gtest/src/gtest.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal
IsUpper	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:std::tr1
IsUpper	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:testing::internal
IsUtf16SurrogatePair	test/gtest/fused-src/gtest/gtest-all.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal
IsUtf16SurrogatePair	test/gtest/src/gtest.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal
IsValidEscape	test/gtest/fused-src/gtest/gtest-all.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal
IsValidEscape	test/gtest/src/gtest-port.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal
IsValidXmlCharacter	test/gtest/fused-src/gtest/gtest-all.cc	/^  static bool IsValidXmlCharacter(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsValidXmlCharacter	test/gtest/src/gtest.cc	/^  static bool IsValidXmlCharacter(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsXDigit	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:std::tr1
IsXDigit	test/gtest/fused-src/gtest/gtest.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:std::tr1
IsXDigit	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:testing::internal
IsXDigit	test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:testing::internal
Iter	test/gtest/scripts/gen_gtest_pred_impl.py	/^def Iter(n, format, sep=''):$/;"	f
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator10
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator2
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator3
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator4
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator5
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator6
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator7
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator8
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator9
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	test/gtest/fused-src/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator10
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator2
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator3
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator4
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator5
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator6
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator7
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator8
Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator9
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
IteratorTraits	test/gtest/fused-src/gtest/gtest.h	/^struct IteratorTraits {$/;"	s	namespace:std::tr1
IteratorTraits	test/gtest/fused-src/gtest/gtest.h	/^struct IteratorTraits<T*> {$/;"	s	namespace:std::tr1
IteratorTraits	test/gtest/fused-src/gtest/gtest.h	/^struct IteratorTraits<const T*> {$/;"	s	namespace:std::tr1
IteratorTraits	test/gtest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits {$/;"	s	namespace:testing::internal
IteratorTraits	test/gtest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits<T*> {$/;"	s	namespace:testing::internal
IteratorTraits	test/gtest/include/gtest/internal/gtest-port.h	/^struct IteratorTraits<const T*> {$/;"	s	namespace:testing::internal
J	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:G.H
J	experiments/backup/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
J	experiments/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
JACOBI_1D_IMPER_H	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	9;"	d
JACOBI_1D_IMPER_H	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	9;"	d
JACOBI_2D_IMPER_H	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	9;"	d
JACOBI_2D_IMPER_H	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	9;"	d
Join	test/gtest/fused-src/gtest/gtest.h	/^  void Join() {$/;"	f	class:std::tr1::ThreadWithParam
Join	test/gtest/include/gtest/internal/gtest-port.h	/^  void Join() {$/;"	f	class:testing::internal::ThreadWithParam
JumpThreading	include/GEOS.h	/^  JumpThreading,$/;"	e	enum:OptimizationKind
K	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:H
K	experiments/backup/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
K	experiments/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
KERNEL_H	experiments/backup/benchmarks/src/SciMark2-C/kernel.h	2;"	d
KERNEL_H	experiments/benchmarks/src/SciMark2-C/kernel.h	2;"	d
K_DEV	experiments/backup/benchmarks/src/base/richards_benchmark.c	62;"	d	file:
K_DEV	experiments/benchmarks/src/base/richards_benchmark.c	62;"	d	file:
K_WORK	experiments/backup/benchmarks/src/base/richards_benchmark.c	63;"	d	file:
K_WORK	experiments/benchmarks/src/base/richards_benchmark.c	63;"	d	file:
KilledBySignal	test/gtest/fused-src/gtest/gtest-all.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {$/;"	f	class:testing::KilledBySignal
KilledBySignal	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KilledBySignal	test/gtest/include/gtest/gtest-death-test.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KilledBySignal	test/gtest/src/gtest-death-test.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {$/;"	f	class:testing::KilledBySignal
KilledExitStatus	test/gtest/test/gtest-death-test_test.cc	/^static int KilledExitStatus(int signum) {$/;"	f	file:
L	experiments/backup/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
L	experiments/benchmarks/src/base/whetstone.c	/^int J,K,L;$/;"	v
L	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  const unsigned L = 64; $/;"	m	struct:MachineAST	file:
L	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned L, W; $/;"	m	struct:AbstractCacheState	file:
LCSSA	include/GEOS.h	/^  LCSSA,$/;"	e	enum:OptimizationKind
LENGTH	experiments/backup/benchmarks/src/base/ary3.c	19;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/fib2.c	20;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/hash.c	13;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/heapsort.c	60;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/lists.c	221;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/matrix.c	52;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/methcall.c	70;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/nestedloop.c	12;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/objinst.c	70;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/random.c	25;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/reedsolomon.c	421;"	d	file:
LENGTH	experiments/backup/benchmarks/src/base/sieve.c	12;"	d	file:
LENGTH	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	21;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	26;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	31;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	36;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	41;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	21;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	27;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	33;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	39;"	d
LENGTH	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	45;"	d
LENGTH	experiments/benchmarks/src/base/ary3.c	19;"	d	file:
LENGTH	experiments/benchmarks/src/base/fib2.c	20;"	d	file:
LENGTH	experiments/benchmarks/src/base/hash.c	13;"	d	file:
LENGTH	experiments/benchmarks/src/base/heapsort.c	60;"	d	file:
LENGTH	experiments/benchmarks/src/base/lists.c	221;"	d	file:
LENGTH	experiments/benchmarks/src/base/matrix.c	52;"	d	file:
LENGTH	experiments/benchmarks/src/base/methcall.c	70;"	d	file:
LENGTH	experiments/benchmarks/src/base/nestedloop.c	12;"	d	file:
LENGTH	experiments/benchmarks/src/base/objinst.c	70;"	d	file:
LENGTH	experiments/benchmarks/src/base/random.c	25;"	d	file:
LENGTH	experiments/benchmarks/src/base/reedsolomon.c	421;"	d	file:
LENGTH	experiments/benchmarks/src/base/sieve.c	12;"	d	file:
LENGTH	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	21;"	d
LENGTH	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	26;"	d
LENGTH	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	31;"	d
LENGTH	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	36;"	d
LENGTH	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	41;"	d
LENGTH	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	21;"	d
LENGTH	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	27;"	d
LENGTH	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	33;"	d
LENGTH	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	39;"	d
LENGTH	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	45;"	d
LEVEL	experiments/backup/benchmarks/src/.hexxagon/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LEVEL	experiments/benchmarks/src/.hexxagon/Makefile	/^LEVEL = ..\/..\/..$/;"	m
LG_FFT_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_FFT_SIZE = 1048576;  \/* must be a power of two *\/$/;"	v
LG_FFT_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_FFT_SIZE = 1048576;  \/* must be a power of two *\/$/;"	v
LG_LU_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_LU_SIZE = 1000;$/;"	v
LG_LU_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_LU_SIZE = 1000;$/;"	v
LG_SOR_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SOR_SIZE =1000;  \/*  NxN grid  *\/$/;"	v
LG_SOR_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SOR_SIZE =1000;  \/*  NxN grid  *\/$/;"	v
LG_SPARSE_SIZE_M	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SPARSE_SIZE_M = 100000;$/;"	v
LG_SPARSE_SIZE_M	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SPARSE_SIZE_M = 100000;$/;"	v
LG_SPARSE_SIZE_nz	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SPARSE_SIZE_nz =1000000;$/;"	v
LG_SPARSE_SIZE_nz	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LG_SPARSE_SIZE_nz =1000000;$/;"	v
LICM	include/GEOS.h	/^  LICM,$/;"	e	enum:OptimizationKind
LIST_TESTS_FLAG	test/gtest/test/gtest_catch_exceptions_test.py	/^LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'$/;"	v
LIST_TESTS_FLAG	test/gtest/test/gtest_filter_unittest.py	/^LIST_TESTS_FLAG = '--gtest_list_tests'$/;"	v
LIST_TESTS_FLAG	test/gtest/test/gtest_help_test.py	/^LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'$/;"	v
LIST_TESTS_FLAG	test/gtest/test/gtest_list_tests_unittest.py	/^LIST_TESTS_FLAG = 'gtest_list_tests'$/;"	v
LIVED	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LIVED	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LLVMModule	include/ProfileModule/ProfileModule.h	/^    llvm::Module *LLVMModule;$/;"	m	class:ProfileModule
LLVM_SUPPORT_GCOV_H	include/Profiling/GCOV.h	16;"	d
LOOPS	experiments/backup/benchmarks/src/base/dry.c	91;"	d	file:
LOOPS	experiments/backup/benchmarks/src/base/dry.c	93;"	d	file:
LOOPS	experiments/backup/benchmarks/src/base/fldry.c	92;"	d	file:
LOOPS	experiments/backup/benchmarks/src/base/fldry.c	94;"	d	file:
LOOPS	experiments/benchmarks/src/base/dry.c	91;"	d	file:
LOOPS	experiments/benchmarks/src/base/dry.c	93;"	d	file:
LOOPS	experiments/benchmarks/src/base/fldry.c	92;"	d	file:
LOOPS	experiments/benchmarks/src/base/fldry.c	94;"	d	file:
LUDCMP_H	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	9;"	d
LUDCMP_H	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	9;"	d
LU_H	experiments/backup/benchmarks/src/SciMark2-C/LU.h	2;"	d
LU_H	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	9;"	d
LU_H	experiments/benchmarks/src/SciMark2-C/LU.h	2;"	d
LU_H	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	9;"	d
LU_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int LU_SIZE = 100;$/;"	v
LU_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int LU_SIZE = 100;$/;"	v
LU_copy_matrix	experiments/backup/benchmarks/src/SciMark2-C/LU.c	/^void LU_copy_matrix(int M, int N, double **lu, double **A)$/;"	f
LU_copy_matrix	experiments/benchmarks/src/SciMark2-C/LU.c	/^void LU_copy_matrix(int M, int N, double **lu, double **A)$/;"	f
LU_factor	experiments/backup/benchmarks/src/SciMark2-C/LU.c	/^int LU_factor(int M, int N, double **A,  int *pivot)$/;"	f
LU_factor	experiments/benchmarks/src/SciMark2-C/LU.c	/^int LU_factor(int M, int N, double **A,  int *pivot)$/;"	f
LU_num_flops	experiments/backup/benchmarks/src/SciMark2-C/LU.c	/^double LU_num_flops(int N)$/;"	f
LU_num_flops	experiments/benchmarks/src/SciMark2-C/LU.c	/^double LU_num_flops(int N)$/;"	f
Last	test/gtest/samples/sample3-inl.h	/^  QueueNode<E>* Last() { return last_; }$/;"	f	class:Queue
Last	test/gtest/samples/sample3-inl.h	/^  const QueueNode<E>* Last() const { return last_; }$/;"	f	class:Queue
LastLine	include/Profiling/GCOV.h	/^    uint32_t LastLine;$/;"	m	struct:llvm::FileInfo::LineData
LastMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest
LastMessage	test/gtest/src/gtest-death-test.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest
LeakChecker	test/gtest/samples/sample10_unittest.cc	/^class LeakChecker : public EmptyTestEventListener {$/;"	c	namespace:__anon35	file:
Length	test/gtest/samples/sample2.h	/^  size_t Length() const {$/;"	f	class:MyString
LessByName	test/gtest/test/gtest-unittest-api_test.cc	/^struct LessByName {$/;"	s	namespace:testing::internal	file:
LineConsumer	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  LineConsumer(StringRef Filename) {$/;"	f	class:__anon2::LineConsumer
LineConsumer	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^class LineConsumer {$/;"	c	namespace:__anon2	file:
LineData	include/Profiling/GCOV.h	/^    LineData() : LastLine(0) {}$/;"	f	struct:llvm::FileInfo::LineData
LineData	include/Profiling/GCOV.h	/^  struct LineData {$/;"	s	class:llvm::FileInfo
LineInfo	include/Profiling/GCOV.h	/^  StringMap<LineData> LineInfo;$/;"	m	class:llvm::FileInfo
LineNumber	include/Profiling/GCOV.h	/^  uint32_t LineNumber;$/;"	m	class:llvm::GCOVFunction
LineSize	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned LineSize;$/;"	m	class:CacheSet	file:
Lines	include/Profiling/GCOV.h	/^  SmallVector<uint32_t, 16> Lines;$/;"	m	class:llvm::GCOVBlock
LinesExec	include/Profiling/GCOV.h	/^    uint32_t LinesExec;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
LinkedPtrTest	test/gtest/test/gtest-linked_ptr_test.cc	/^  LinkedPtrTest() {$/;"	f	class:__anon25::LinkedPtrTest
LinkedPtrTest	test/gtest/test/gtest-linked_ptr_test.cc	/^class LinkedPtrTest : public testing::Test {$/;"	c	namespace:__anon25	file:
ListTests	test/gtest/test/gtest_unittest.cc	/^  static Flags ListTests(bool list_tests) {$/;"	f	struct:testing::Flags
ListTestsMatchingFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl
ListTestsMatchingFilter	test/gtest/src/gtest.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl
ListenerTest	test/gtest/test/gtest-listener_test.cc	/^class ListenerTest : public Test {$/;"	c	namespace:testing::internal	file:
LiteralDollarNode	test/gtest/scripts/pump.py	/^class LiteralDollarNode:$/;"	c
LoadCombine	include/GEOS.h	/^  LoadCombine$/;"	e	enum:OptimizationKind
Lock	test/gtest/fused-src/gtest/gtest.h	/^  void Lock() {$/;"	f	class:std::tr1::MutexBase
Lock	test/gtest/fused-src/gtest/gtest.h	/^  void Lock() {}$/;"	f	class:std::tr1::Mutex
Lock	test/gtest/include/gtest/internal/gtest-port.h	/^  void Lock() {$/;"	f	class:testing::internal::MutexBase
Lock	test/gtest/include/gtest/internal/gtest-port.h	/^  void Lock() {}$/;"	f	class:testing::internal::Mutex
LogToStderr	test/gtest/fused-src/gtest/gtest.h	/^inline void LogToStderr() {}$/;"	f	namespace:std::tr1
LogToStderr	test/gtest/include/gtest/internal/gtest-port.h	/^inline void LogToStderr() {}$/;"	f	namespace:testing::internal
LogicalLines	include/Profiling/GCOV.h	/^    uint32_t LogicalLines;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
LongFileNames	include/Profiling/GCOV.h	/^  bool LongFileNames;$/;"	m	struct:llvm::GCOVOptions
LoopDeletion	include/GEOS.h	/^  LoopDeletion,$/;"	e	enum:OptimizationKind
LoopIdiom	include/GEOS.h	/^  LoopIdiom,$/;"	e	enum:OptimizationKind
LoopInstSimplify	include/GEOS.h	/^  LoopInstSimplify,$/;"	e	enum:OptimizationKind
LoopReroll	include/GEOS.h	/^  LoopReroll,$/;"	e	enum:OptimizationKind
LoopRotate	include/GEOS.h	/^  LoopRotate,$/;"	e	enum:OptimizationKind
LoopSimplify	include/GEOS.h	/^  LoopSimplify,$/;"	e	enum:OptimizationKind
LoopStrengthReduce	include/GEOS.h	/^  LoopStrengthReduce,$/;"	e	enum:OptimizationKind
LoopUnroll	include/GEOS.h	/^  LoopUnroll,$/;"	e	enum:OptimizationKind
LoopUnswitch	include/GEOS.h	/^  LoopUnswitch,$/;"	e	enum:OptimizationKind
Low	include/CostEstimator/InstructionCostEstimator.h	/^  Low = 1,$/;"	e	enum:Cost
LowerAtomic	include/GEOS.h	/^  LowerAtomic,$/;"	e	enum:OptimizationKind
LowerExpectInstrinsics	include/GEOS.h	/^  LowerExpectInstrinsics,$/;"	e	enum:OptimizationKind
LowerInvoke	include/GEOS.h	/^  LowerInvoke,$/;"	e	enum:OptimizationKind
LowerSwitch	include/GEOS.h	/^  LowerSwitch,$/;"	e	enum:OptimizationKind
M	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:H
M	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	21;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	26;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	31;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	36;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	41;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	21;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	26;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	31;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	36;"	d
M	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	41;"	d
M	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	21;"	d
M	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	26;"	d
M	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	31;"	d
M	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	36;"	d
M	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	41;"	d
M	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	21;"	d
M	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	26;"	d
M	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	31;"	d
M	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	36;"	d
M	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	41;"	d
MASK	experiments/backup/benchmarks/src/base/huffbench.c	/^static const long MASK = 123459876;$/;"	v	file:
MASK	experiments/backup/benchmarks/src/base/lpbench.c	/^static const long MASK = 123459876;$/;"	v	file:
MASK	experiments/benchmarks/src/base/huffbench.c	/^static const long MASK = 123459876;$/;"	v	file:
MASK	experiments/benchmarks/src/base/lpbench.c	/^static const long MASK = 123459876;$/;"	v	file:
MAST	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^MachineAST *MAST = nullptr;$/;"	v
MATPRINT	experiments/backup/benchmarks/src/sgefa/driver.c	13;"	d	file:
MATPRINT	experiments/benchmarks/src/sgefa/driver.c	13;"	d	file:
MAX	experiments/backup/benchmarks/src/base/oourafft.c	11;"	d	file:
MAX	experiments/benchmarks/src/base/oourafft.c	11;"	d	file:
MAXCOL	experiments/backup/benchmarks/src/sgefa/ge.h	29;"	d
MAXCOL	experiments/benchmarks/src/sgefa/ge.h	29;"	d
MAXDIAGS	experiments/backup/benchmarks/src/base/queens-mcgill.c	175;"	d	file:
MAXDIAGS	experiments/benchmarks/src/base/queens-mcgill.c	175;"	d	file:
MAXFILES	experiments/backup/benchmarks/src/base/queens-mcgill.c	174;"	d	file:
MAXFILES	experiments/benchmarks/src/base/queens-mcgill.c	174;"	d	file:
MAXGRID	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	22;"	d
MAXGRID	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	28;"	d
MAXGRID	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	34;"	d
MAXGRID	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	40;"	d
MAXGRID	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	46;"	d
MAXGRID	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	22;"	d
MAXGRID	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	28;"	d
MAXGRID	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	34;"	d
MAXGRID	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	40;"	d
MAXGRID	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	46;"	d
MAXINT	experiments/backup/benchmarks/src/base/richards_benchmark.c	37;"	d	file:
MAXINT	experiments/benchmarks/src/base/richards_benchmark.c	37;"	d	file:
MAXNEG	experiments/backup/benchmarks/src/aha/aha.h	25;"	d
MAXNEG	experiments/benchmarks/src/aha/aha.h	25;"	d
MAXNUMI	experiments/backup/benchmarks/src/aha/aha.h	158;"	d
MAXNUMI	experiments/benchmarks/src/aha/aha.h	158;"	d
MAXPOS	experiments/backup/benchmarks/src/aha/aha.h	26;"	d
MAXPOS	experiments/benchmarks/src/aha/aha.h	26;"	d
MAXQUEENS	experiments/backup/benchmarks/src/base/queens-mcgill.c	172;"	d	file:
MAXQUEENS	experiments/benchmarks/src/base/queens-mcgill.c	172;"	d	file:
MAXRANKS	experiments/backup/benchmarks/src/base/queens-mcgill.c	173;"	d	file:
MAXRANKS	experiments/benchmarks/src/base/queens-mcgill.c	173;"	d	file:
MAX_ITER	experiments/backup/benchmarks/src/base/mandel.c	9;"	d	file:
MAX_ITER	experiments/benchmarks/src/base/mandel.c	9;"	d	file:
MAX_REG_LN	experiments/backup/benchmarks/src/base/misr.c	38;"	d	file:
MAX_REG_LN	experiments/benchmarks/src/base/misr.c	38;"	d	file:
MAX_TIME	experiments/backup/benchmarks/src/base/flops.c	1042;"	d	file:
MAX_TIME	experiments/benchmarks/src/base/flops.c	1042;"	d	file:
MDIG	experiments/backup/benchmarks/src/SciMark2-C/Random.c	12;"	d	file:
MDIG	experiments/benchmarks/src/SciMark2-C/Random.c	12;"	d	file:
MFCost	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::unordered_map<std::string, double> MFCost;$/;"	m	struct:MachineAST	file:
MR	experiments/backup/benchmarks/src/base/himenobmtxpa.c	43;"	d	file:
MR	experiments/benchmarks/src/base/himenobmtxpa.c	43;"	d	file:
MVT_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	9;"	d
MVT_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	9;"	d
MachineAST	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  MachineAST(const ProfileModule *P, const TargetMachine &tm) : $/;"	f	struct:MachineAST
MachineAST	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^struct MachineAST : public FunctionPass {$/;"	s	file:
MachineFunctionAnalysis	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^MachineFunctionAnalysis::MachineFunctionAnalysis(const TargetMachine &tm) :$/;"	f	class:MachineFunctionAnalysis
MacroLogicDeathTest	test/gtest/test/gtest-death-test_test.cc	/^class MacroLogicDeathTest : public testing::Test {$/;"	c	file:
Main	test/gtest/test/gtest_test_utils.py	/^def Main():$/;"	f
MakeAndRegisterTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal
MakeAndRegisterTestInfo	test/gtest/src/gtest.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal
MakeConnection	test/gtest/fused-src/gtest/gtest-all.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
MakeConnection	test/gtest/src/gtest.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
MakeFileName	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
MakeFileName	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
MakeToken	test/gtest/scripts/pump.py	/^def MakeToken(lines, start, end, token_type):$/;"	f
Makenull	experiments/backup/benchmarks/src/base/towers.c	/^void Makenull (int s) {$/;"	f
Makenull	experiments/benchmarks/src/base/towers.c	/^void Makenull (int s) {$/;"	f
ManyAsserts	test/gtest/test/gtest_stress_test.cc	/^void ManyAsserts(int id) {$/;"	f	namespace:testing::__anon23
Map	test/gtest/samples/sample3-inl.h	/^  Queue* Map(F function) const {$/;"	f	class:Queue
MapTester	test/gtest/samples/sample3_unittest.cc	/^  void MapTester(const Queue<int> * q) {$/;"	f	class:QueueTest
Mark	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^enum Mark { Temporary, Permanent, None};$/;"	g	file:
Mat	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^struct Mat {$/;"	s	file:
Mat	experiments/benchmarks/src/base/himenobmtxpa.c	/^struct Mat {$/;"	s	file:
MatchRegexAnywhere	test/gtest/fused-src/gtest/gtest-all.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRegexAnywhere	test/gtest/src/gtest-port.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRegexAtHead	test/gtest/fused-src/gtest/gtest-all.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRegexAtHead	test/gtest/src/gtest-port.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRepetitionAndRegexAtHead	test/gtest/fused-src/gtest/gtest-all.cc	/^bool MatchRepetitionAndRegexAtHead($/;"	f	namespace:testing::internal
MatchRepetitionAndRegexAtHead	test/gtest/src/gtest-port.cc	/^bool MatchRepetitionAndRegexAtHead($/;"	f	namespace:testing::internal
MatchesFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTestOptions::MatchesFilter($/;"	f	class:testing::internal::UnitTestOptions
MatchesFilter	test/gtest/src/gtest.cc	/^bool UnitTestOptions::MatchesFilter($/;"	f	class:testing::internal::UnitTestOptions
Matrix	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^typedef struct Mat Matrix;$/;"	t	typeref:struct:Mat	file:
Matrix	experiments/benchmarks/src/base/himenobmtxpa.c	/^typedef struct Mat Matrix;$/;"	t	typeref:struct:Mat	file:
Max	test/gtest/fused-src/gtest/gtest.h	/^inline double FloatingPoint<double>::Max() { return DBL_MAX; }$/;"	f	class:testing::internal::FloatingPoint
Max	test/gtest/fused-src/gtest/gtest.h	/^inline float FloatingPoint<float>::Max() { return FLT_MAX; }$/;"	f	class:testing::internal::FloatingPoint
Max	test/gtest/include/gtest/internal/gtest-internal.h	/^inline double FloatingPoint<double>::Max() { return DBL_MAX; }$/;"	f	class:testing::internal::FloatingPoint
Max	test/gtest/include/gtest/internal/gtest-internal.h	/^inline float FloatingPoint<float>::Max() { return FLT_MAX; }$/;"	f	class:testing::internal::FloatingPoint
MayDie	test/gtest/test/gtest-death-test_test.cc	/^  explicit MayDie(bool should_die) : should_die_(should_die) {}$/;"	f	class:MayDie
MayDie	test/gtest/test/gtest-death-test_test.cc	/^class MayDie {$/;"	c	file:
Medium	include/CostEstimator/InstructionCostEstimator.h	/^  Medium = 1,$/;"	e	enum:Cost
MemCpyOpt	include/GEOS.h	/^  MemCpyOpt,$/;"	e	enum:OptimizationKind
MemberFunction	test/gtest/test/gtest-death-test_test.cc	/^  void MemberFunction() const {$/;"	f	class:MayDie
MemberFunction	test/gtest/test/gtest-death-test_test.cc	/^  void MemberFunction() {$/;"	f	class:TestForDeathTest
MergedLoadStoreMotion	include/GEOS.h	/^  MergedLoadStoreMotion,$/;"	e	enum:OptimizationKind
Message	test/gtest/fused-src/gtest/gtest-all.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	test/gtest/fused-src/gtest/gtest.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	test/gtest/fused-src/gtest/gtest.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
Message	test/gtest/include/gtest/gtest-message.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	test/gtest/include/gtest/gtest-message.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	test/gtest/include/gtest/gtest-message.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
Message	test/gtest/src/gtest.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	test/gtest/test/gtest_unittest.cc	/^class Message {};$/;"	c	namespace:my_namespace::testing	file:
Min0	experiments/backup/benchmarks/src/base/oscar.c	/^Min0 (int arg1, int arg2)$/;"	f
Min0	experiments/benchmarks/src/base/oscar.c	/^Min0 (int arg1, int arg2)$/;"	f
MixedUpTestCaseTest	test/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;"	c	namespace:bar	file:
MixedUpTestCaseTest	test/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseTest : public testing::Test {$/;"	c	namespace:foo	file:
MixedUpTestCaseWithSameTestNameTest	test/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;"	c	namespace:bar	file:
MixedUpTestCaseWithSameTestNameTest	test/gtest/test/gtest_output_test_.cc	/^class MixedUpTestCaseWithSameTestNameTest : public testing::Test {$/;"	c	namespace:foo	file:
Mm	experiments/backup/benchmarks/src/base/realmm.c	/^void Mm (int run)    {$/;"	f
Mm	experiments/benchmarks/src/base/realmm.c	/^void Mm (int run)    {$/;"	f
MockDeathTest	test/gtest/test/gtest-death-test_test.cc	/^  MockDeathTest(MockDeathTestFactory *parent,$/;"	f	class:MockDeathTest
MockDeathTest	test/gtest/test/gtest-death-test_test.cc	/^class MockDeathTest : public DeathTest {$/;"	c	file:
MockDeathTestFactory	test/gtest/test/gtest-death-test_test.cc	/^MockDeathTestFactory::MockDeathTestFactory()$/;"	f	class:MockDeathTestFactory
MockDeathTestFactory	test/gtest/test/gtest-death-test_test.cc	/^class MockDeathTestFactory : public DeathTestFactory {$/;"	c	file:
MonteCarlo_integrate	experiments/backup/benchmarks/src/SciMark2-C/MonteCarlo.c	/^    double MonteCarlo_integrate(int Num_samples)$/;"	f
MonteCarlo_integrate	experiments/benchmarks/src/SciMark2-C/MonteCarlo.c	/^    double MonteCarlo_integrate(int Num_samples)$/;"	f
MonteCarlo_num_flops	experiments/backup/benchmarks/src/SciMark2-C/MonteCarlo.c	/^    double MonteCarlo_num_flops(int Num_samples)$/;"	f
MonteCarlo_num_flops	experiments/benchmarks/src/SciMark2-C/MonteCarlo.c	/^    double MonteCarlo_num_flops(int Num_samples)$/;"	f
Move	experiments/backup/benchmarks/src/base/towers.c	/^void Move (int s1, int s2) {$/;"	f
Move	experiments/benchmarks/src/base/towers.c	/^void Move (int s1, int s2) {$/;"	f
MultipleInstantiationTest	test/gtest/test/gtest-param-test_test.cc	/^class MultipleInstantiationTest : public TestWithParam<int> {};$/;"	c	file:
Mutex	test/gtest/fused-src/gtest/gtest.h	/^  Mutex() {$/;"	f	class:std::tr1::Mutex
Mutex	test/gtest/fused-src/gtest/gtest.h	/^  Mutex() {}$/;"	f	class:std::tr1::Mutex
Mutex	test/gtest/fused-src/gtest/gtest.h	/^class Mutex : public MutexBase {$/;"	c	namespace:std::tr1
Mutex	test/gtest/fused-src/gtest/gtest.h	/^class Mutex {$/;"	c	namespace:std::tr1
Mutex	test/gtest/include/gtest/internal/gtest-port.h	/^  Mutex() {$/;"	f	class:testing::internal::Mutex
Mutex	test/gtest/include/gtest/internal/gtest-port.h	/^  Mutex() {}$/;"	f	class:testing::internal::Mutex
Mutex	test/gtest/include/gtest/internal/gtest-port.h	/^class Mutex : public MutexBase {$/;"	c	namespace:testing::internal
Mutex	test/gtest/include/gtest/internal/gtest-port.h	/^class Mutex {$/;"	c	namespace:testing::internal
MutexBase	test/gtest/fused-src/gtest/gtest.h	/^class MutexBase {$/;"	c	namespace:std::tr1
MutexBase	test/gtest/include/gtest/internal/gtest-port.h	/^class MutexBase {$/;"	c	namespace:testing::internal
MutexLock	test/gtest/fused-src/gtest/gtest.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:std::tr1
MutexLock	test/gtest/include/gtest/internal/gtest-port.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:testing::internal
MyArray	test/gtest/test/gtest_list_tests_unittest_.cc	/^class MyArray {$/;"	c	file:
MyContainers	test/gtest/test/gtest-typed-test_test.cc	/^typedef Types<std::vector<double>, std::set<char> > MyContainers;$/;"	t	file:
MyEnvironment	test/gtest/test/gtest_environment_test.cc	/^  MyEnvironment() { Reset(); }$/;"	f	class:__anon21::MyEnvironment
MyEnvironment	test/gtest/test/gtest_environment_test.cc	/^class MyEnvironment : public testing::Environment {$/;"	c	namespace:__anon21	file:
MyEnvironment	test/gtest/test/gtest_repeat_test.cc	/^  MyEnvironment() {}$/;"	f	class:__anon33::MyEnvironment
MyEnvironment	test/gtest/test/gtest_repeat_test.cc	/^class MyEnvironment : public testing::Environment {$/;"	c	namespace:__anon33	file:
MyFunction	test/gtest/test/gtest-printers_test.cc	/^void MyFunction(int \/* n *\/) {}$/;"	f	namespace:testing::gtest_printers_test
MyMethod	test/gtest/test/gtest-printers_test.cc	/^  int MyMethod(char x) { return x + 1; }$/;"	f	struct:testing::gtest_printers_test::Foo
MyParamTest	test/gtest/test/gtest_repeat_test.cc	/^class MyParamTest : public testing::TestWithParam<int> {};$/;"	c	namespace:__anon33	file:
MyString	test/gtest/samples/sample2.h	/^  MyString() : c_string_(NULL) {}$/;"	f	class:MyString
MyString	test/gtest/samples/sample2.h	/^  MyString(const MyString& string) : c_string_(NULL) {$/;"	f	class:MyString
MyString	test/gtest/samples/sample2.h	/^  explicit MyString(const char* a_c_string) : c_string_(NULL) {$/;"	f	class:MyString
MyString	test/gtest/samples/sample2.h	/^class MyString {$/;"	c
MyTwoTypes	test/gtest/test/gtest-typed-test_test.cc	/^typedef Types<short, long> MyTwoTypes;$/;"	t	file:
MyType	test/gtest/test/gtest_list_tests_unittest_.cc	/^  explicit MyType(const std::string& a_value) : value_(a_value) {}$/;"	f	class:MyType
MyType	test/gtest/test/gtest_list_tests_unittest_.cc	/^class MyType {$/;"	c	file:
MyTypeInNameSpace1	test/gtest/test/gtest_unittest.cc	/^  explicit MyTypeInNameSpace1(int an_x): Base(an_x) {}$/;"	f	class:namespace1::MyTypeInNameSpace1
MyTypeInNameSpace1	test/gtest/test/gtest_unittest.cc	/^class MyTypeInNameSpace1 : public Base {$/;"	c	namespace:namespace1	file:
MyTypeInNameSpace2	test/gtest/test/gtest_unittest.cc	/^  explicit MyTypeInNameSpace2(int an_x): Base(an_x) {}$/;"	f	class:namespace2::MyTypeInNameSpace2
MyTypeInNameSpace2	test/gtest/test/gtest_unittest.cc	/^class MyTypeInNameSpace2 : public ::Base {$/;"	c	namespace:namespace2	file:
MyTypeInUnnamedNameSpace	test/gtest/test/gtest_unittest.cc	/^  explicit MyTypeInUnnamedNameSpace(int an_x): Base(an_x) {}$/;"	f	class:__anon17::MyTypeInUnnamedNameSpace
MyTypeInUnnamedNameSpace	test/gtest/test/gtest_unittest.cc	/^class MyTypeInUnnamedNameSpace : public Base {$/;"	c	namespace:__anon17	file:
MyTypes	test/gtest/test/gtest_list_tests_unittest_.cc	/^                       int*, MyArray<bool, 42> > MyTypes;$/;"	t	file:
MyVirtualMethod	test/gtest/test/gtest-printers_test.cc	/^  virtual char MyVirtualMethod(int \/* n *\/) { return 'a'; }$/;"	f	struct:testing::gtest_printers_test::Foo
N	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int N   =  600;$/;"	v	file:
N	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int N   = 1000;$/;"	v	file:
N	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int N   = 2000;$/;"	v	file:
N	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int N   = 400;$/;"	v	file:
N	experiments/backup/benchmarks/src/base/oourafft.c	20;"	d	file:
N	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	25;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	30;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	35;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	40;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	25;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	30;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	35;"	d
N	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	40;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	21;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	26;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	31;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	41;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	21;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	26;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	31;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	41;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	21;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	26;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	31;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	41;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	21;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	26;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	31;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	36;"	d
N	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	41;"	d
N	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	20;"	d
N	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	24;"	d
N	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	28;"	d
N	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	32;"	d
N	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	36;"	d
N	experiments/benchmarks/src/base/lpbench.c	/^static const int N   =  600;$/;"	v	file:
N	experiments/benchmarks/src/base/lpbench.c	/^static const int N   = 1000;$/;"	v	file:
N	experiments/benchmarks/src/base/lpbench.c	/^static const int N   = 2000;$/;"	v	file:
N	experiments/benchmarks/src/base/lpbench.c	/^static const int N   = 400;$/;"	v	file:
N	experiments/benchmarks/src/base/oourafft.c	20;"	d	file:
N	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	20;"	d
N	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	25;"	d
N	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	30;"	d
N	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	35;"	d
N	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	40;"	d
N	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	20;"	d
N	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	25;"	d
N	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	30;"	d
N	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	35;"	d
N	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	40;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	36;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	20;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	24;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	28;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	32;"	d
N	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	36;"	d
N	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	20;"	d
N	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	24;"	d
N	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	28;"	d
N	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	32;"	d
N	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	36;"	d
N	experiments/benchmarks/src/polybench/stencils/adi/adi.h	21;"	d
N	experiments/benchmarks/src/polybench/stencils/adi/adi.h	26;"	d
N	experiments/benchmarks/src/polybench/stencils/adi/adi.h	31;"	d
N	experiments/benchmarks/src/polybench/stencils/adi/adi.h	36;"	d
N	experiments/benchmarks/src/polybench/stencils/adi/adi.h	41;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	21;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	26;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	31;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	36;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	41;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	21;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	26;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	31;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	36;"	d
N	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	41;"	d
N	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	21;"	d
N	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	26;"	d
N	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	31;"	d
N	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	36;"	d
N	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	41;"	d
N	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	20;"	d
N	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	24;"	d
N	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	28;"	d
N	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	32;"	d
N	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	36;"	d
NARGS	experiments/backup/benchmarks/src/aha/aha.h	4;"	d
NARGS	experiments/benchmarks/src/aha/aha.h	4;"	d
NBODIES	experiments/backup/benchmarks/src/base/n-body.c	87;"	d	file:
NBODIES	experiments/benchmarks/src/base/n-body.c	87;"	d	file:
NBSM	experiments/backup/benchmarks/src/aha/aha.h	27;"	d
NBSM	experiments/benchmarks/src/aha/aha.h	27;"	d
NDATA	experiments/backup/benchmarks/src/base/chomp.c	4;"	d	file:
NDATA	experiments/benchmarks/src/base/chomp.c	4;"	d	file:
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	27;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	34;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	41;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	48;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	28;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	36;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	44;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	52;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	26;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	32;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	38;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	44;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	25;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	30;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	35;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	40;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	25;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	30;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	35;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	40;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	25;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	30;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	35;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	40;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	24;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	28;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	32;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	36;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	20;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	25;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	30;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	35;"	d
NI	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	40;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	27;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	34;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	41;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	48;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	28;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	36;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	44;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	52;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	26;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	32;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	38;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	44;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	25;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	30;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	35;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	40;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	25;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	30;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	35;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	40;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	25;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	30;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	35;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	40;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	24;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	28;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	32;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	36;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	20;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	25;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	30;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	35;"	d
NI	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	40;"	d
NIM	experiments/backup/benchmarks/src/aha/aha.h	43;"	d
NIM	experiments/benchmarks/src/aha/aha.h	43;"	d
NITER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	20;"	d
NITER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	26;"	d
NITER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	32;"	d
NITER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	38;"	d
NITER	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	44;"	d
NITER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	20;"	d
NITER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	26;"	d
NITER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	32;"	d
NITER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	38;"	d
NITER	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	44;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	28;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	35;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	42;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	49;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	29;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	37;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	45;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	53;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	27;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	33;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	39;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	45;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	26;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	31;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	36;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	41;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	26;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	31;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	36;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	41;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	26;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	31;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	36;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	41;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	21;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	26;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	31;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	36;"	d
NJ	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	41;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	28;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	35;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	42;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	49;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	29;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	37;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	45;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	53;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	27;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	33;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	39;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	45;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	26;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	31;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	36;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	41;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	26;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	31;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	36;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	41;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	26;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	31;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	36;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	41;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	21;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	26;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	31;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	36;"	d
NJ	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	41;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	22;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	29;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	36;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	43;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	50;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	22;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	30;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	38;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	46;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	54;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	22;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	28;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	34;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	40;"	d
NK	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	46;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	22;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	29;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	36;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	43;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	50;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	22;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	30;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	38;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	46;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	54;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	22;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	28;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	34;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	40;"	d
NK	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	46;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	23;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	30;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	37;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	44;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	51;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	23;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	31;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	39;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	47;"	d
NL	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	55;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	23;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	30;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	37;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	44;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	51;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	23;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	31;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	39;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	47;"	d
NL	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	55;"	d
NLIST	experiments/backup/benchmarks/src/base/chomp.c	5;"	d	file:
NLIST	experiments/benchmarks/src/base/chomp.c	5;"	d	file:
NLOOPS1	experiments/backup/benchmarks/src/base/puzzle.c	5;"	d	file:
NLOOPS1	experiments/benchmarks/src/base/puzzle.c	5;"	d	file:
NLOOPS2	experiments/backup/benchmarks/src/base/puzzle.c	6;"	d	file:
NLOOPS2	experiments/benchmarks/src/base/puzzle.c	6;"	d	file:
NM	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	24;"	d
NM	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	32;"	d
NM	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	40;"	d
NM	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	48;"	d
NM	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	56;"	d
NM	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	24;"	d
NM	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	32;"	d
NM	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	40;"	d
NM	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	48;"	d
NM	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	56;"	d
NM1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NM1 =  599; \/\/ N - 1$/;"	v	file:
NM1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NM1 =  999; \/\/ N - 1$/;"	v	file:
NM1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NM1 = 1999; \/\/ N - 1$/;"	v	file:
NM1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NM1 = 399; \/\/ N - 1$/;"	v	file:
NM1	experiments/benchmarks/src/base/lpbench.c	/^static const int NM1 =  599; \/\/ N - 1$/;"	v	file:
NM1	experiments/benchmarks/src/base/lpbench.c	/^static const int NM1 =  999; \/\/ N - 1$/;"	v	file:
NM1	experiments/benchmarks/src/base/lpbench.c	/^static const int NM1 = 1999; \/\/ N - 1$/;"	v	file:
NM1	experiments/benchmarks/src/base/lpbench.c	/^static const int NM1 = 399; \/\/ N - 1$/;"	v	file:
NOENUM	experiments/backup/benchmarks/src/base/dry.c	97;"	d	file:
NOENUM	experiments/backup/benchmarks/src/base/fldry.c	98;"	d	file:
NOENUM	experiments/benchmarks/src/base/dry.c	97;"	d	file:
NOENUM	experiments/benchmarks/src/base/fldry.c	98;"	d	file:
NONFATAL_FAILURE	test/gtest/test/gtest_output_test_.cc	/^    NONFATAL_FAILURE$/;"	e	enum:ExpectFailureTest::FailureMode	file:
NONFATAL_FAILURE	test/gtest/test/gtest_unittest.cc	/^    NONFATAL_FAILURE$/;"	e	enum:__anon14::ScopedFakeTestPartResultReporterTest::FailureMode	file:
NON_FATAL_FAILURE	test/gtest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon21::FailureType	file:
NOSTRUCTASSIGN	experiments/backup/benchmarks/src/base/dry.c	98;"	d	file:
NOSTRUCTASSIGN	experiments/backup/benchmarks/src/base/fldry.c	99;"	d	file:
NOSTRUCTASSIGN	experiments/benchmarks/src/base/dry.c	98;"	d	file:
NOSTRUCTASSIGN	experiments/benchmarks/src/base/fldry.c	99;"	d	file:
NOTHOLDBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	51;"	d	file:
NOTHOLDBIT	experiments/benchmarks/src/base/richards_benchmark.c	51;"	d	file:
NOTPKTBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	49;"	d	file:
NOTPKTBIT	experiments/benchmarks/src/base/richards_benchmark.c	49;"	d	file:
NOTWAITBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	50;"	d	file:
NOTWAITBIT	experiments/benchmarks/src/base/richards_benchmark.c	50;"	d	file:
NO_FAILURE	test/gtest/test/gtest_environment_test.cc	/^  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURE$/;"	e	enum:__anon21::FailureType	file:
NO_MOVES_BEGIN	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	28;"	d
NO_MOVES_BEGIN	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	28;"	d
NP	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	22;"	d
NP	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	28;"	d
NP	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	34;"	d
NP	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	40;"	d
NP	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	46;"	d
NP	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	22;"	d
NP	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	28;"	d
NP	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	34;"	d
NP	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	40;"	d
NP	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	46;"	d
NP1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NP1 =  601; \/\/ N + 1$/;"	v	file:
NP1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NP1 = 1001; \/\/ N + 1$/;"	v	file:
NP1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NP1 = 2001; \/\/ N + 1$/;"	v	file:
NP1	experiments/backup/benchmarks/src/base/lpbench.c	/^static const int NP1 = 401; \/\/ N + 1$/;"	v	file:
NP1	experiments/benchmarks/src/base/lpbench.c	/^static const int NP1 =  601; \/\/ N + 1$/;"	v	file:
NP1	experiments/benchmarks/src/base/lpbench.c	/^static const int NP1 = 1001; \/\/ N + 1$/;"	v	file:
NP1	experiments/benchmarks/src/base/lpbench.c	/^static const int NP1 = 2001; \/\/ N + 1$/;"	v	file:
NP1	experiments/benchmarks/src/base/lpbench.c	/^static const int NP1 = 401; \/\/ N + 1$/;"	v	file:
NPLAY	experiments/backup/benchmarks/src/base/chomp.c	6;"	d	file:
NPLAY	experiments/benchmarks/src/base/chomp.c	6;"	d	file:
NQ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	20;"	d
NQ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	26;"	d
NQ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	32;"	d
NQ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	38;"	d
NQ	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	44;"	d
NQ	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	20;"	d
NQ	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	26;"	d
NQ	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	32;"	d
NQ	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	38;"	d
NQ	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	44;"	d
NR	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	21;"	d
NR	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	27;"	d
NR	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	33;"	d
NR	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	39;"	d
NR	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	45;"	d
NR	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	21;"	d
NR	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	27;"	d
NR	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	33;"	d
NR	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	39;"	d
NR	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	45;"	d
NSHIM	experiments/backup/benchmarks/src/aha/aha.h	44;"	d
NSHIM	experiments/benchmarks/src/aha/aha.h	44;"	d
NTRIALX	experiments/backup/benchmarks/src/aha/aha.h	165;"	d
NTRIALX	experiments/benchmarks/src/aha/aha.h	165;"	d
NTRIALY	experiments/backup/benchmarks/src/aha/aha.h	166;"	d
NTRIALY	experiments/benchmarks/src/aha/aha.h	166;"	d
NULL	experiments/backup/benchmarks/src/SciMark2-C/Random.c	7;"	d	file:
NULL	experiments/backup/benchmarks/src/SciMark2-C/array.c	6;"	d	file:
NULL	experiments/backup/benchmarks/src/SciMark2-C/scimark2.h	8;"	d
NULL	experiments/backup/benchmarks/src/base/fldry.c	157;"	d	file:
NULL	experiments/benchmarks/src/SciMark2-C/Random.c	7;"	d	file:
NULL	experiments/benchmarks/src/SciMark2-C/array.c	6;"	d	file:
NULL	experiments/benchmarks/src/SciMark2-C/scimark2.h	8;"	d
NULL	experiments/benchmarks/src/base/fldry.c	157;"	d	file:
NUM_INSNS_IN_ISA	experiments/backup/benchmarks/src/aha/aha.h	176;"	d
NUM_INSNS_IN_ISA	experiments/benchmarks/src/aha/aha.h	176;"	d
NUM_LOOPS	experiments/backup/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =        2;$/;"	v	file:
NUM_LOOPS	experiments/backup/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =        5;$/;"	v	file:
NUM_LOOPS	experiments/backup/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =       30;$/;"	v	file:
NUM_LOOPS	experiments/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =        2;$/;"	v	file:
NUM_LOOPS	experiments/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =        5;$/;"	v	file:
NUM_LOOPS	experiments/benchmarks/src/base/huffbench.c	/^static const int NUM_LOOPS =       30;$/;"	v	file:
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	20;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	25;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	30;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	35;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	40;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	20;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	25;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	30;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	35;"	d
NX	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	40;"	d
NX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	21;"	d
NX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	27;"	d
NX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	33;"	d
NX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	39;"	d
NX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	45;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	20;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	25;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	30;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	35;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	40;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	20;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	25;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	30;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	35;"	d
NX	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	40;"	d
NX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	21;"	d
NX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	27;"	d
NX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	33;"	d
NX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	39;"	d
NX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	45;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	21;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	26;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	31;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	36;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	41;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	21;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	26;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	31;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	36;"	d
NY	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	41;"	d
NY	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	22;"	d
NY	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	28;"	d
NY	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	34;"	d
NY	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	40;"	d
NY	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	46;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	21;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	26;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	31;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	36;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	41;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	21;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	26;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	31;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	36;"	d
NY	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	41;"	d
NY	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	22;"	d
NY	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	28;"	d
NY	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	34;"	d
NY	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	40;"	d
NY	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	46;"	d
Name	include/Profiling/GCOV.h	/^    StringRef Name;$/;"	m	struct:llvm::FileInfo::GCOVCoverage
Name	include/Profiling/GCOV.h	/^  StringRef Name;$/;"	m	class:llvm::GCOVFunction
NamedEnum	test/gtest/test/gtest_unittest.cc	/^enum NamedEnum {$/;"	g	namespace:__anon14	file:
NamingTest	test/gtest/test/gtest-param-test_test.cc	/^class NamingTest : public TestWithParam<int> {};$/;"	c	file:
NativeArray	test/gtest/fused-src/gtest/gtest.h	/^  NativeArray(const Element* array, size_t count, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
NativeArray	test/gtest/fused-src/gtest/gtest.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	test/gtest/fused-src/gtest/gtest.h	/^class NativeArray {$/;"	c	namespace:testing::internal
NativeArray	test/gtest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const Element* array, size_t count, RelationToSource relation) {$/;"	f	class:testing::internal::NativeArray
NativeArray	test/gtest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	test/gtest/include/gtest/internal/gtest-internal.h	/^class NativeArray {$/;"	c	namespace:testing::internal
Nav	docs/html/search/search.js	/^    this.Nav = function(evt,itemIndex) $/;"	m	class:SearchResults
NavChild	docs/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m	class:SearchResults
NavNext	docs/html/search/search.js	/^    this.NavNext = function(index)$/;"	m	class:SearchResults
NavPrev	docs/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m	class:SearchResults
NextFnNum	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned NextFnNum = 0;$/;"	m	struct:MachineAST	file:
NextRecord	experiments/backup/benchmarks/src/base/dry.c	321;"	d	file:
NextRecord	experiments/backup/benchmarks/src/base/dry.c	339;"	d	file:
NextRecord	experiments/backup/benchmarks/src/base/fldry.c	329;"	d	file:
NextRecord	experiments/backup/benchmarks/src/base/fldry.c	347;"	d	file:
NextRecord	experiments/benchmarks/src/base/dry.c	321;"	d	file:
NextRecord	experiments/benchmarks/src/base/dry.c	339;"	d	file:
NextRecord	experiments/benchmarks/src/base/fldry.c	329;"	d	file:
NextRecord	experiments/benchmarks/src/base/fldry.c	347;"	d	file:
NoDefaultContructor	test/gtest/test/gtest-port_test.cc	/^  NoDefaultContructor(const NoDefaultContructor&) {}$/;"	f	class:testing::internal::NoDefaultContructor
NoDefaultContructor	test/gtest/test/gtest-port_test.cc	/^  explicit NoDefaultContructor(const char*) {}$/;"	f	class:testing::internal::NoDefaultContructor
NoDefaultContructor	test/gtest/test/gtest-port_test.cc	/^class NoDefaultContructor {$/;"	c	namespace:testing::internal	file:
NoExecDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^  NoExecDeathTest(const char* a_statement, const RE* a_regex) :$/;"	f	class:testing::internal::NoExecDeathTest
NoExecDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NoExecDeathTest	test/gtest/src/gtest-death-test.cc	/^  NoExecDeathTest(const char* a_statement, const RE* a_regex) :$/;"	f	class:testing::internal::NoExecDeathTest
NoExecDeathTest	test/gtest/src/gtest-death-test.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NoFatalFailureTest	test/gtest/test/gtest_unittest.cc	/^class NoFatalFailureTest : public Test {$/;"	c	namespace:__anon14	file:
NoOutput	include/Profiling/GCOV.h	/^  bool NoOutput;$/;"	m	struct:llvm::GCOVOptions
NonArchSensitive	include/CostEstimator/CostEstimatorOptions.h	/^     NonArchSensitive, ArchSensitive$/;"	e	enum:__anon4::CostEstimatorOptionsSet
NonContainer	test/gtest/test/gtest_unittest.cc	/^class NonContainer {};$/;"	c	file:
NonFatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^  NonFatalFailureInFixtureConstructorTest() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest
NonFatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInFixtureConstructorTest : public testing::Test {$/;"	c	file:
NonFatalFailureInSetUpTest	test/gtest/test/gtest_output_test_.cc	/^class NonFatalFailureInSetUpTest : public testing::Test {$/;"	c	file:
NonParameterizedBaseTest	test/gtest/test/gtest-param-test_test.cc	/^  NonParameterizedBaseTest() : n_(17) { }$/;"	f	class:NonParameterizedBaseTest
NonParameterizedBaseTest	test/gtest/test/gtest-param-test_test.cc	/^class NonParameterizedBaseTest : public ::testing::Test {$/;"	c	file:
NonVoidFunction	test/gtest/test/gtest-death-test_test.cc	/^int NonVoidFunction() {$/;"	f
NonVoidFunction	test/gtest/test/gtest_unittest.cc	/^int NonVoidFunction() {$/;"	f	namespace:__anon14
None	include/CostEstimator/InstructionCostEstimator.h	/^  None = 0$/;"	e	enum:Cost
None	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^enum Mark { Temporary, Permanent, None};$/;"	e	enum:Mark	file:
None	test/gtest/fused-src/gtest/gtest.h	/^struct None {};$/;"	s	namespace:testing::internal
None	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct None {};$/;"	s	namespace:testing::internal
NoneT	test/gtest/fused-src/gtest/gtest.h	/^struct NoneT {};$/;"	s	namespace:testing::internal
NoneT	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct NoneT {};$/;"	s	namespace:testing::internal
NormalExitStatus	test/gtest/test/gtest-death-test_test.cc	/^static int NormalExitStatus(int exit_code) {$/;"	f	file:
Normalize	test/gtest/fused-src/gtest/gtest-all.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath
Normalize	test/gtest/src/gtest-filepath.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath
NormalizeOutput	test/gtest/test/gtest_output_test.py	/^def NormalizeOutput(output):$/;"	f
NormalizeToCurrentPlatform	test/gtest/test/gtest_output_test.py	/^def NormalizeToCurrentPlatform(test_output):$/;"	f
NormalizeXml	test/gtest/test/gtest_xml_test_utils.py	/^  def NormalizeXml(self, element):$/;"	m	class:GTestXMLTestCase
Not	experiments/backup/benchmarks/src/aha/aha.h	/^int Not(int x, int y, int z) {return ~x;}$/;"	f
Not	experiments/benchmarks/src/aha/aha.h	/^int Not(int x, int y, int z) {return ~x;}$/;"	f
Notification	test/gtest/fused-src/gtest/gtest.h	/^  Notification() : notified_(false) {$/;"	f	class:std::tr1::Notification
Notification	test/gtest/fused-src/gtest/gtest.h	/^class Notification {$/;"	c	namespace:std::tr1
Notification	test/gtest/include/gtest/internal/gtest-port.h	/^  Notification() : notified_(false) {$/;"	f	class:testing::internal::Notification
Notification	test/gtest/include/gtest/internal/gtest-port.h	/^class Notification {$/;"	c	namespace:testing::internal
Notify	test/gtest/fused-src/gtest/gtest.h	/^  void Notify() {$/;"	f	class:std::tr1::Notification
Notify	test/gtest/include/gtest/internal/gtest-port.h	/^  void Notify() {$/;"	f	class:testing::internal::Notification
NthToggle	experiments/backup/benchmarks/src/base/methcall.c	/^typedef struct NthToggle {$/;"	s	file:
NthToggle	experiments/backup/benchmarks/src/base/methcall.c	/^} NthToggle;$/;"	t	typeref:struct:NthToggle	file:
NthToggle	experiments/backup/benchmarks/src/base/objinst.c	/^typedef struct NthToggle {$/;"	s	file:
NthToggle	experiments/backup/benchmarks/src/base/objinst.c	/^} NthToggle;$/;"	t	typeref:struct:NthToggle	file:
NthToggle	experiments/benchmarks/src/base/methcall.c	/^typedef struct NthToggle {$/;"	s	file:
NthToggle	experiments/benchmarks/src/base/methcall.c	/^} NthToggle;$/;"	t	typeref:struct:NthToggle	file:
NthToggle	experiments/benchmarks/src/base/objinst.c	/^typedef struct NthToggle {$/;"	s	file:
NthToggle	experiments/benchmarks/src/base/objinst.c	/^} NthToggle;$/;"	t	typeref:struct:NthToggle	file:
Number	include/Profiling/GCOV.h	/^  uint32_t Number;$/;"	m	class:llvm::GCOVBlock
NumericTest	test/gtest/test/gtest-typed-test_test.cc	/^class NumericTest : public Test {$/;"	c	namespace:library1	file:
NumericTest	test/gtest/test/gtest-typed-test_test.cc	/^class NumericTest : public Test {$/;"	c	namespace:library2	file:
NumericTypes	test/gtest/test/gtest-typed-test_test.cc	/^typedef Types<int, double> NumericTypes;$/;"	t	namespace:library2	file:
NumericTypes	test/gtest/test/gtest-typed-test_test.cc	/^typedef Types<int, long> NumericTypes;$/;"	t	namespace:library1	file:
NumericTypes	test/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<int, double> NumericTypes;$/;"	t	file:
NumericTypes	test/gtest/test/gtest_unittest.cc	/^typedef testing::Types<int, double> NumericTypes;$/;"	t	namespace:__anon14	file:
ONE	experiments/backup/benchmarks/src/SciMark2-C/Random.c	15;"	d	file:
ONE	experiments/benchmarks/src/SciMark2-C/Random.c	15;"	d	file:
OPTIONAL_WHITE_SPACES_REGEX	test/gtest/scripts/pump.py	/^OPTIONAL_WHITE_SPACES_REGEX = re.compile(r'\\s*')$/;"	v
OVERSEE_TEST	test/gtest/fused-src/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
OVERSEE_TEST	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
OkHRESULTSuccess	test/gtest/test/gtest_unittest.cc	/^static HRESULT OkHRESULTSuccess() {$/;"	f	namespace:__anon14
OnEnvironmentsSetUpEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpEnd	test/gtest/src/gtest.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnEnvironmentsSetUpStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpStart	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnEnvironmentsTearDownEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownEnd	test/gtest/src/gtest.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnEnvironmentsTearDownStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownStart	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnSearchFieldChange	docs/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m	class:SearchBox
OnSearchFieldFocus	docs/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m	class:SearchBox
OnSearchSelectHide	docs/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m	class:SearchBox
OnSearchSelectKey	docs/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m	class:SearchBox
OnSearchSelectShow	docs/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m	class:SearchBox
OnSelectItem	docs/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m	class:SearchBox
OnTestCaseEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseEnd	test/gtest/src/gtest-internal-inl.h	/^  void OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseEnd	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestCaseStart	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseStart	test/gtest/src/gtest-internal-inl.h	/^  void OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseStart	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestEnd	test/gtest/samples/sample10_unittest.cc	/^  virtual void OnTestEnd(const TestInfo& \/* test_info *\/) {$/;"	f	class:__anon35::LeakChecker	file:
OnTestEnd	test/gtest/samples/sample9_unittest.cc	/^  virtual void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:__anon34::TersePrinter	file:
OnTestEnd	test/gtest/src/gtest-internal-inl.h	/^  void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestEnd	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestIterationEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestIterationEnd(const UnitTest& unit_test, int \/* iteration *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OnTestIterationEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationEnd	test/gtest/src/gtest-internal-inl.h	/^  void OnTestIterationEnd(const UnitTest& unit_test, int \/* iteration *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationEnd	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationEnd	test/gtest/src/gtest.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationEnd	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OnTestIterationEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::internal::EventRecordingListener
OnTestIterationEnd	test/gtest/test/gtest_unittest.cc	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:SequenceTestingListener
OnTestIterationStart	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/, int iteration) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationStart	test/gtest/src/gtest-internal-inl.h	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/, int iteration) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationStart	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationStart	test/gtest/src/gtest.cc	/^void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::internal::EventRecordingListener
OnTestIterationStart	test/gtest/test/gtest_shuffle_test_.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/* unit_test *\/,$/;"	f	class:__anon30::TestNamePrinter
OnTestIterationStart	test/gtest/test/gtest_unittest.cc	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:SequenceTestingListener
OnTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::internal::StreamingListener
OnTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestPartResult	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestPartResult	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestPartResult	test/gtest/samples/sample9_unittest.cc	/^  virtual void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:__anon34::TersePrinter	file:
OnTestPartResult	test/gtest/src/gtest-internal-inl.h	/^  void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::internal::StreamingListener
OnTestPartResult	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestPartResult	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestProgramEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramEnd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramEnd	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramEnd	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramEnd	test/gtest/samples/sample9_unittest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:__anon34::TersePrinter	file:
OnTestProgramEnd	test/gtest/src/gtest-internal-inl.h	/^  void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramEnd	test/gtest/src/gtest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramEnd	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestProgramEnd	test/gtest/test/gtest_unittest.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {$/;"	f	class:SequenceTestingListener
OnTestProgramStart	test/gtest/fused-src/gtest/gtest-all.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramStart	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramStart	test/gtest/samples/sample9_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {}$/;"	f	class:__anon34::TersePrinter	file:
OnTestProgramStart	test/gtest/src/gtest-internal-inl.h	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramStart	test/gtest/src/gtest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestProgramStart	test/gtest/test/gtest_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:SequenceTestingListener
OnTestProgramStart	test/gtest/test/gtest_unittest.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {$/;"	f	class:TestListener
OnTestStart	test/gtest/fused-src/gtest/gtest-all.cc	/^  void OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestStart	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestStart	test/gtest/fused-src/gtest/gtest.h	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestStart	test/gtest/include/gtest/gtest.h	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestStart	test/gtest/samples/sample10_unittest.cc	/^  virtual void OnTestStart(const TestInfo& \/* test_info *\/) {$/;"	f	class:__anon35::LeakChecker	file:
OnTestStart	test/gtest/samples/sample9_unittest.cc	/^  virtual void OnTestStart(const TestInfo& test_info) {$/;"	f	class:__anon34::TersePrinter	file:
OnTestStart	test/gtest/src/gtest-internal-inl.h	/^  void OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestStart	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestStart	test/gtest/test/gtest-listener_test.cc	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {$/;"	f	class:testing::internal::EventRecordingListener
OnTestStart	test/gtest/test/gtest_shuffle_test_.cc	/^  virtual void OnTestStart(const TestInfo& test_info) {$/;"	f	class:__anon30::TestNamePrinter
OnTheFlyPrimeTable	test/gtest/samples/prime_tables.h	/^class OnTheFlyPrimeTable : public PrimeTable {$/;"	c
OneTo	test/gtest/scripts/gen_gtest_pred_impl.py	/^def OneTo(n):$/;"	f
OneToFifty	experiments/backup/benchmarks/src/base/dry.c	/^typedef int	OneToFifty;$/;"	t	file:
OneToFifty	experiments/backup/benchmarks/src/base/fldry.c	/^typedef extended	OneToFifty;$/;"	t	file:
OneToFifty	experiments/benchmarks/src/base/dry.c	/^typedef int	OneToFifty;$/;"	t	file:
OneToFifty	experiments/benchmarks/src/base/fldry.c	/^typedef extended	OneToFifty;$/;"	t	file:
OneToThirty	experiments/backup/benchmarks/src/base/dry.c	/^typedef int	OneToThirty;$/;"	t	file:
OneToThirty	experiments/backup/benchmarks/src/base/fldry.c	/^typedef extended	OneToThirty;$/;"	t	file:
OneToThirty	experiments/benchmarks/src/base/dry.c	/^typedef int	OneToThirty;$/;"	t	file:
OneToThirty	experiments/benchmarks/src/base/fldry.c	/^typedef extended	OneToThirty;$/;"	t	file:
OptimizationKind	include/GEOS.h	/^enum OptimizationKind {$/;"	g
Options	include/Profiling/GCOV.h	/^  const GCOVOptions &Options;$/;"	m	class:llvm::FileInfo
Options	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  const GCOVOptions &Options;$/;"	m	struct:formatBranchInfo	file:
Or	experiments/backup/benchmarks/src/aha/aha.h	/^int Or (int x, int y, int z) {return x | y;}$/;"	f
Or	experiments/benchmarks/src/aha/aha.h	/^int Or (int x, int y, int z) {return x | y;}$/;"	f
OsStackTraceGetter	test/gtest/fused-src/gtest/gtest-all.cc	/^  OsStackTraceGetter() : caller_frame_(NULL) {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	test/gtest/fused-src/gtest/gtest-all.cc	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OsStackTraceGetter	test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetter() : caller_frame_(NULL) {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	test/gtest/src/gtest-internal-inl.h	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
OsStackTraceGetterInterface	test/gtest/fused-src/gtest/gtest-all.cc	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	test/gtest/fused-src/gtest/gtest-all.cc	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OsStackTraceGetterInterface	test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	test/gtest/src/gtest-internal-inl.h	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
Oscar	experiments/backup/benchmarks/src/base/oscar.c	/^Oscar ()$/;"	f
Oscar	experiments/benchmarks/src/base/oscar.c	/^Oscar ()$/;"	f
Output	test/gtest/scripts/pump.py	/^class Output:$/;"	c
Output	test/gtest/test/gtest_unittest.cc	/^  static Flags Output(const char* output) {$/;"	f	struct:testing::Flags
OutputXmlAttribute	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlAttribute	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlCDataSection	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlCDataSection	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlTestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlTestInfo	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
Outputs	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::unordered_map<MachineBasicBlock*, AbstractCacheState*> Outputs;$/;"	m	struct:MachineAST	file:
P0	experiments/backup/benchmarks/src/base/whetstone.c	/^P0(void)$/;"	f
P0	experiments/benchmarks/src/base/whetstone.c	/^P0(void)$/;"	f
P3	experiments/backup/benchmarks/src/base/whetstone.c	/^P3(double X, double Y, double *Z)$/;"	f
P3	experiments/benchmarks/src/base/whetstone.c	/^P3(double X, double Y, double *Z)$/;"	f
PA	experiments/backup/benchmarks/src/base/whetstone.c	/^PA(double E[])$/;"	f
PA	experiments/benchmarks/src/base/whetstone.c	/^PA(double E[])$/;"	f
PAPI_CLOCKRATE	include/Profiling/papi.h	222;"	d
PAPI_CPUS	include/Profiling/papi.h	217;"	d
PAPI_DEBUG	include/Profiling/papi.h	208;"	d
PAPI_DEFDOM	include/Profiling/papi.h	210;"	d
PAPI_DEFGRN	include/Profiling/papi.h	213;"	d
PAPI_DERIVED	include/Profiling/papi.h	238;"	d
PAPI_DOMAIN	include/Profiling/papi.h	212;"	d
PAPI_DOM_ALL	include/Profiling/papi.h	102;"	d
PAPI_DOM_HWSPEC	include/Profiling/papi.h	105;"	d
PAPI_DOM_KERNEL	include/Profiling/papi.h	100;"	d
PAPI_DOM_MAX	include/Profiling/papi.h	104;"	d
PAPI_DOM_MIN	include/Profiling/papi.h	99;"	d
PAPI_DOM_OTHER	include/Profiling/papi.h	101;"	d
PAPI_DOM_USER	include/Profiling/papi.h	98;"	d
PAPI_EBUG	include/Profiling/papi.h	71;"	d
PAPI_ECLOST	include/Profiling/papi.h	70;"	d
PAPI_ECNFLCT	include/Profiling/papi.h	73;"	d
PAPI_EINVAL	include/Profiling/papi.h	65;"	d
PAPI_EISRUN	include/Profiling/papi.h	76;"	d
PAPI_EMISC	include/Profiling/papi.h	80;"	d
PAPI_ENOCNTR	include/Profiling/papi.h	79;"	d
PAPI_ENOEVNT	include/Profiling/papi.h	72;"	d
PAPI_ENOEVST	include/Profiling/papi.h	77;"	d
PAPI_ENOMEM	include/Profiling/papi.h	66;"	d
PAPI_ENOTPRESET	include/Profiling/papi.h	78;"	d
PAPI_ENOTRUN	include/Profiling/papi.h	75;"	d
PAPI_ENUM_ALL	include/Profiling/papi.h	/^   PAPI_ENUM_ALL = 0,			\/* Always enumerate all events *\/$/;"	e	enum:__anon6
PAPI_EPERM	include/Profiling/papi.h	81;"	d
PAPI_ESBSTR	include/Profiling/papi.h	68;"	d
PAPI_ESYS	include/Profiling/papi.h	67;"	d
PAPI_EXEINFO	include/Profiling/papi.h	225;"	d
PAPI_GET_PAGESIZE	include/Profiling/papi.h	186;"	d
PAPI_GET_RESSIZE	include/Profiling/papi.h	185;"	d
PAPI_GET_SIZE	include/Profiling/papi.h	184;"	d
PAPI_GRANUL	include/Profiling/papi.h	214;"	d
PAPI_GRN_MAX	include/Profiling/papi.h	144;"	d
PAPI_GRN_MIN	include/Profiling/papi.h	139;"	d
PAPI_GRN_PROC	include/Profiling/papi.h	140;"	d
PAPI_GRN_PROCG	include/Profiling/papi.h	141;"	d
PAPI_GRN_SYS	include/Profiling/papi.h	142;"	d
PAPI_GRN_SYS_CPU	include/Profiling/papi.h	143;"	d
PAPI_GRN_THR	include/Profiling/papi.h	138;"	d
PAPI_HIGH_LEVEL_INITED	include/Profiling/papi.h	85;"	d
PAPI_HIGH_LEVEL_TLS	include/Profiling/papi.h	117;"	d
PAPI_HUGE_STR_LEN	include/Profiling/papi.h	236;"	d
PAPI_HWINFO	include/Profiling/papi.h	224;"	d
PAPI_INHERIT	include/Profiling/papi.h	215;"	d
PAPI_INHERIT_ALL	include/Profiling/papi.h	205;"	d
PAPI_INHERIT_NONE	include/Profiling/papi.h	206;"	d
PAPI_INIT_SLOTS	include/Profiling/papi.h	231;"	d
PAPI_LIB_VERSION	include/Profiling/papi.h	228;"	d
PAPI_LOW_LEVEL_INITED	include/Profiling/papi.h	84;"	d
PAPI_MAX_CPUS	include/Profiling/papi.h	226;"	d
PAPI_MAX_HWCTRS	include/Profiling/papi.h	223;"	d
PAPI_MAX_INFO_TERMS	include/Profiling/papi.h	504;"	d
PAPI_MAX_MEM_HIERARCHY_LEVELS	include/Profiling/papi.h	397;"	d
PAPI_MAX_STR_LEN	include/Profiling/papi.h	235;"	d
PAPI_MH_CACHE_REPLACEMENT_POLICY	include/Profiling/papi.h	410;"	d
PAPI_MH_CACHE_TYPE	include/Profiling/papi.h	403;"	d
PAPI_MH_CACHE_WRITE_POLICY	include/Profiling/papi.h	406;"	d
PAPI_MH_TYPE_DATA	include/Profiling/papi.h	400;"	d
PAPI_MH_TYPE_EMPTY	include/Profiling/papi.h	398;"	d
PAPI_MH_TYPE_INST	include/Profiling/papi.h	399;"	d
PAPI_MH_TYPE_LRU	include/Profiling/papi.h	408;"	d
PAPI_MH_TYPE_PSEUDO_LRU	include/Profiling/papi.h	409;"	d
PAPI_MH_TYPE_UNIFIED	include/Profiling/papi.h	402;"	d
PAPI_MH_TYPE_UNKNOWN	include/Profiling/papi.h	407;"	d
PAPI_MH_TYPE_VECTOR	include/Profiling/papi.h	401;"	d
PAPI_MH_TYPE_WB	include/Profiling/papi.h	405;"	d
PAPI_MH_TYPE_WT	include/Profiling/papi.h	404;"	d
PAPI_MIN_STR_LEN	include/Profiling/papi.h	234;"	d
PAPI_MPX_DEF_DEG	include/Profiling/papi.h	164;"	d
PAPI_MPX_DEF_US	include/Profiling/papi.h	163;"	d
PAPI_MULTIPLEX	include/Profiling/papi.h	209;"	d
PAPI_MULTIPLEXING	include/Profiling/papi.h	174;"	d
PAPI_NOT_INIT	include/Profiling/papi.h	171;"	d
PAPI_NOT_INITED	include/Profiling/papi.h	83;"	d
PAPI_NULL	include/Profiling/papi.h	94;"	d
PAPI_NUMCTRS	include/Profiling/papi.h	219;"	d
PAPI_NUM_ERRORS	include/Profiling/papi.h	178;"	d
PAPI_NUM_LOCK	include/Profiling/papi.h	127;"	d
PAPI_NUM_TLS	include/Profiling/papi.h	118;"	d
PAPI_OK	include/Profiling/papi.h	64;"	d
PAPI_OVERFLOWING	include/Profiling/papi.h	172;"	d
PAPI_OVERFLOW_FORCE_SW	include/Profiling/papi.h	200;"	d
PAPI_OVERFLOW_HARDWARE	include/Profiling/papi.h	201;"	d
PAPI_PAUSED	include/Profiling/papi.h	170;"	d
PAPI_PENT4_ENUM_BITS	include/Profiling/papi.h	/^   PAPI_PENT4_ENUM_BITS,		\/* all individual bits for given group *\/$/;"	e	enum:__anon6
PAPI_PENT4_ENUM_COMBOS	include/Profiling/papi.h	/^   PAPI_PENT4_ENUM_COMBOS,		\/* all combinations of mask bits for given group *\/$/;"	e	enum:__anon6
PAPI_PENT4_ENUM_GROUPS	include/Profiling/papi.h	/^   PAPI_PENT4_ENUM_GROUPS = 0x100,      \/* 45 groups + custom + user *\/$/;"	e	enum:__anon6
PAPI_PRELOAD	include/Profiling/papi.h	221;"	d
PAPI_PRESET_ENUM_AVAIL	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_AVAIL, 		\/* Enumerate events that exist here *\/$/;"	e	enum:__anon6
PAPI_PRESET_ENUM_BR	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_BR,			\/* branch related preset events *\/$/;"	e	enum:__anon6
PAPI_PRESET_ENUM_FP	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_FP,			\/* Floating Point related preset events *\/$/;"	e	enum:__anon6
PAPI_PRESET_ENUM_INS	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_INS,		\/* Instruction related preset events *\/$/;"	e	enum:__anon6
PAPI_PRESET_ENUM_MEM	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_MEM,		\/* memory related preset events *\/$/;"	e	enum:__anon6
PAPI_PRESET_ENUM_TLB	include/Profiling/papi.h	/^   PAPI_PRESET_ENUM_TLB,		\/* Translation Lookaside Buffer events *\/$/;"	e	enum:__anon6
PAPI_PROFIL	include/Profiling/papi.h	220;"	d
PAPI_PROFILING	include/Profiling/papi.h	173;"	d
PAPI_PROFIL_BUCKETS	include/Profiling/papi.h	197;"	d
PAPI_PROFIL_BUCKET_16	include/Profiling/papi.h	193;"	d
PAPI_PROFIL_BUCKET_32	include/Profiling/papi.h	194;"	d
PAPI_PROFIL_BUCKET_64	include/Profiling/papi.h	195;"	d
PAPI_PROFIL_COMPRESS	include/Profiling/papi.h	192;"	d
PAPI_PROFIL_FORCE_SW	include/Profiling/papi.h	196;"	d
PAPI_PROFIL_POSIX	include/Profiling/papi.h	189;"	d
PAPI_PROFIL_RANDOM	include/Profiling/papi.h	190;"	d
PAPI_PROFIL_WEIGHTED	include/Profiling/papi.h	191;"	d
PAPI_PWR4_ENUM_GROUPS	include/Profiling/papi.h	/^   PAPI_PWR4_ENUM_GROUPS = 0x200	\/* Enumerate groups an event belongs to *\/$/;"	e	enum:__anon6
PAPI_QUIET	include/Profiling/papi.h	179;"	d
PAPI_RUNNING	include/Profiling/papi.h	169;"	d
PAPI_SHLIBINFO	include/Profiling/papi.h	227;"	d
PAPI_STOPPED	include/Profiling/papi.h	168;"	d
PAPI_SUBSTRATE_SUPPORT	include/Profiling/papi.h	229;"	d
PAPI_THREADS	include/Profiling/papi.h	218;"	d
PAPI_THREAD_LEVEL_INITED	include/Profiling/papi.h	86;"	d
PAPI_USR1_LOCK	include/Profiling/papi.h	125;"	d
PAPI_USR1_TLS	include/Profiling/papi.h	115;"	d
PAPI_USR2_LOCK	include/Profiling/papi.h	126;"	d
PAPI_USR2_TLS	include/Profiling/papi.h	116;"	d
PAPI_VENDOR_AMD	include/Profiling/papi.h	133;"	d
PAPI_VENDOR_CYRIX	include/Profiling/papi.h	134;"	d
PAPI_VENDOR_INTEL	include/Profiling/papi.h	132;"	d
PAPI_VENDOR_UNKNOWN	include/Profiling/papi.h	131;"	d
PAPI_VERB_ECONT	include/Profiling/papi.h	180;"	d
PAPI_VERB_ESTOP	include/Profiling/papi.h	181;"	d
PAPI_VERSION	include/Profiling/papi.h	43;"	d
PAPI_VERSION_MAJOR	include/Profiling/papi.h	38;"	d
PAPI_VERSION_MINOR	include/Profiling/papi.h	39;"	d
PAPI_VERSION_NUMBER	include/Profiling/papi.h	37;"	d
PAPI_VERSION_REVISION	include/Profiling/papi.h	40;"	d
PAPI_VER_CURRENT	include/Profiling/papi.h	44;"	d
PAPI_address_map_t	include/Profiling/papi.h	/^   } PAPI_address_map_t;$/;"	t	typeref:struct:_papi_address_map
PAPI_debug_handler_t	include/Profiling/papi.h	/^   typedef int (*PAPI_debug_handler_t) (int code);$/;"	t
PAPI_debug_option_t	include/Profiling/papi.h	/^   } PAPI_debug_option_t;$/;"	t	typeref:struct:_papi_debug_option
PAPI_dmem_t	include/Profiling/papi.h	/^   } PAPI_dmem_t;$/;"	t	typeref:struct:_dmem_t
PAPI_domain_option_t	include/Profiling/papi.h	/^   } PAPI_domain_option_t;$/;"	t	typeref:struct:_papi_domain_option
PAPI_event_info_t	include/Profiling/papi.h	/^   } PAPI_event_info_t;$/;"	t	typeref:struct:event_info
PAPI_exe_info_t	include/Profiling/papi.h	/^   } PAPI_exe_info_t;$/;"	t	typeref:struct:_papi_program_info
PAPI_granularity_option_t	include/Profiling/papi.h	/^   } PAPI_granularity_option_t;$/;"	t	typeref:struct:_papi_granularity_option
PAPI_hw_info_t	include/Profiling/papi.h	/^   } PAPI_hw_info_t;$/;"	t	typeref:struct:_papi_hw_info
PAPI_inherit_option_t	include/Profiling/papi.h	/^   } PAPI_inherit_option_t;$/;"	t	typeref:struct:_papi_inherit_option
PAPI_mh_cache_info_t	include/Profiling/papi.h	/^   } PAPI_mh_cache_info_t;$/;"	t	typeref:struct:_papi_mh_cache_info
PAPI_mh_info_t	include/Profiling/papi.h	/^   } PAPI_mh_info_t;$/;"	t	typeref:struct:_papi_mh_info
PAPI_mh_level_t	include/Profiling/papi.h	/^   } PAPI_mh_level_t;$/;"	t	typeref:struct:_papi_mh_level_info
PAPI_mh_tlb_info_t	include/Profiling/papi.h	/^   } PAPI_mh_tlb_info_t;$/;"	t	typeref:struct:_papi_mh_tlb_info
PAPI_multiplex_option_t	include/Profiling/papi.h	/^   } PAPI_multiplex_option_t;$/;"	t	typeref:struct:_papi_multiplex_option
PAPI_option_t	include/Profiling/papi.h	/^   } PAPI_option_t;$/;"	t	typeref:union:__anon7
PAPI_overflow_handler_t	include/Profiling/papi.h	/^   typedef void (*PAPI_overflow_handler_t) (int EventSet, void *address,$/;"	t
PAPI_overflow_option_t	include/Profiling/papi.h	/^   } PAPI_overflow_option_t;$/;"	t	typeref:struct:_papi_overflow_option
PAPI_preload_info_t	include/Profiling/papi.h	/^   } PAPI_preload_info_t;$/;"	t	typeref:struct:_papi_preload_option
PAPI_shlib_info_t	include/Profiling/papi.h	/^   } PAPI_shlib_info_t;$/;"	t	typeref:struct:_papi_shared_lib_info
PAPI_sprofil_t	include/Profiling/papi.h	/^   } PAPI_sprofil_t;$/;"	t	typeref:struct:_papi_sprofil
PAPI_substrate_info_t	include/Profiling/papi.h	/^   } PAPI_substrate_info_t;$/;"	t	typeref:struct:_papi_substrate_option
PARAMETER_COUNT	test/gtest/test/gtest-param-test_test.cc	/^    PARAMETER_COUNT =$/;"	e	enum:TestGenerationTest::__anon20	file:
PARAM_TESTS	test/gtest/test/gtest_filter_unittest.py	/^PARAM_TESTS = [$/;"	v
PARAM_TEST_REGEX	test/gtest/test/gtest_filter_unittest.py	/^PARAM_TEST_REGEX = re.compile(r'\/ParamTest')$/;"	v
PI	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	7;"	d	file:
PI	experiments/benchmarks/src/SciMark2-C/FFT.c	7;"	d	file:
PKTBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	46;"	d	file:
PKTBIT	experiments/benchmarks/src/base/richards_benchmark.c	46;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	257;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PM	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^PassManager PM;$/;"	v
POLYBENCH_1D	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	61;"	d
POLYBENCH_1D	experiments/benchmarks/src/polybench/utilities/polybench.h	61;"	d
POLYBENCH_1D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	102;"	d
POLYBENCH_1D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	86;"	d
POLYBENCH_1D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	102;"	d
POLYBENCH_1D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	86;"	d
POLYBENCH_2D	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	62;"	d
POLYBENCH_2D	experiments/benchmarks/src/polybench/utilities/polybench.h	62;"	d
POLYBENCH_2D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	104;"	d
POLYBENCH_2D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	89;"	d
POLYBENCH_2D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	104;"	d
POLYBENCH_2D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	89;"	d
POLYBENCH_3D	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	63;"	d
POLYBENCH_3D	experiments/benchmarks/src/polybench/utilities/polybench.h	63;"	d
POLYBENCH_3D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	106;"	d
POLYBENCH_3D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	92;"	d
POLYBENCH_3D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	106;"	d
POLYBENCH_3D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	92;"	d
POLYBENCH_4D	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	64;"	d
POLYBENCH_4D	experiments/benchmarks/src/polybench/utilities/polybench.h	64;"	d
POLYBENCH_4D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	108;"	d
POLYBENCH_4D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	95;"	d
POLYBENCH_4D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	108;"	d
POLYBENCH_4D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	95;"	d
POLYBENCH_5D	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	65;"	d
POLYBENCH_5D	experiments/benchmarks/src/polybench/utilities/polybench.h	65;"	d
POLYBENCH_5D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	110;"	d
POLYBENCH_5D_ARRAY_DECL	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	98;"	d
POLYBENCH_5D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	110;"	d
POLYBENCH_5D_ARRAY_DECL	experiments/benchmarks/src/polybench/utilities/polybench.h	98;"	d
POLYBENCH_ALLOC_1D_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	73;"	d
POLYBENCH_ALLOC_1D_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	73;"	d
POLYBENCH_ALLOC_2D_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	75;"	d
POLYBENCH_ALLOC_2D_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	75;"	d
POLYBENCH_ALLOC_3D_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	77;"	d
POLYBENCH_ALLOC_3D_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	77;"	d
POLYBENCH_ALLOC_4D_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	79;"	d
POLYBENCH_ALLOC_4D_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	79;"	d
POLYBENCH_ALLOC_5D_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	81;"	d
POLYBENCH_ALLOC_5D_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	81;"	d
POLYBENCH_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	52;"	d
POLYBENCH_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	56;"	d
POLYBENCH_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	52;"	d
POLYBENCH_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	56;"	d
POLYBENCH_C99_SELECT	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	37;"	d
POLYBENCH_C99_SELECT	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	40;"	d
POLYBENCH_C99_SELECT	experiments/benchmarks/src/polybench/utilities/polybench.h	37;"	d
POLYBENCH_C99_SELECT	experiments/benchmarks/src/polybench/utilities/polybench.h	40;"	d
POLYBENCH_CACHE_SIZE_KB	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	12;"	d	file:
POLYBENCH_CACHE_SIZE_KB	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	29;"	d	file:
POLYBENCH_CACHE_SIZE_KB	experiments/benchmarks/src/polybench/utilities/instrument.c	12;"	d	file:
POLYBENCH_CACHE_SIZE_KB	experiments/benchmarks/src/polybench/utilities/polybench.c	29;"	d	file:
POLYBENCH_DCE_ONLY_CODE	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	117;"	d
POLYBENCH_DCE_ONLY_CODE	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	119;"	d
POLYBENCH_DCE_ONLY_CODE	experiments/benchmarks/src/polybench/utilities/polybench.h	117;"	d
POLYBENCH_DCE_ONLY_CODE	experiments/benchmarks/src/polybench/utilities/polybench.h	119;"	d
POLYBENCH_DECL_VAR	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	54;"	d
POLYBENCH_DECL_VAR	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	58;"	d
POLYBENCH_DECL_VAR	experiments/benchmarks/src/polybench/utilities/polybench.h	54;"	d
POLYBENCH_DECL_VAR	experiments/benchmarks/src/polybench/utilities/polybench.h	58;"	d
POLYBENCH_FREE_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	53;"	d
POLYBENCH_FREE_ARRAY	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	57;"	d
POLYBENCH_FREE_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	53;"	d
POLYBENCH_FREE_ARRAY	experiments/benchmarks/src/polybench/utilities/polybench.h	57;"	d
POLYBENCH_H	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	24;"	d
POLYBENCH_H	experiments/benchmarks/src/polybench/utilities/polybench.h	24;"	d
POLYBENCH_MAX_NB_PAPI_COUNTERS	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	38;"	d	file:
POLYBENCH_MAX_NB_PAPI_COUNTERS	experiments/benchmarks/src/polybench/utilities/polybench.c	38;"	d	file:
POLYBENCH_PADDING_FACTOR	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	31;"	d
POLYBENCH_PADDING_FACTOR	experiments/benchmarks/src/polybench/utilities/polybench.h	31;"	d
POLYBENCH_THREAD_MONITOR	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	24;"	d	file:
POLYBENCH_THREAD_MONITOR	experiments/benchmarks/src/polybench/utilities/polybench.c	24;"	d	file:
POUT	experiments/backup/benchmarks/src/base/whetstone.c	/^POUT(long N, long J, long K, double X1, double X2, double X3, double X4)$/;"	f
POUT	experiments/benchmarks/src/base/whetstone.c	/^POUT(long N, long J, long K, double X1, double X2, double X3, double X4)$/;"	f
PREMATURE_EXIT_FILE_ENV_VAR	test/gtest/test/gtest_test_utils.py	/^PREMATURE_EXIT_FILE_ENV_VAR = 'TEST_PREMATURE_EXIT_FILE'$/;"	v
PRINTOUT	experiments/backup/benchmarks/src/base/whetstone.c	1;"	d	file:
PRINTOUT	experiments/benchmarks/src/base/whetstone.c	1;"	d	file:
PROFILEMODULE_H	include/ProfileModule/ProfileModule.h	15;"	d
PROG	experiments/backup/benchmarks/src/.hexxagon/Makefile	/^PROG = hexxagon$/;"	m
PROG	experiments/benchmarks/src/.hexxagon/Makefile	/^PROG = hexxagon$/;"	m
PROGRAM_PATH	test/gtest/test/gtest_help_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')$/;"	v
PROGRAM_PATH	test/gtest/test/gtest_output_test.py	/^PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_output_test_')$/;"	v
ParamGenerator	test/gtest/fused-src/gtest/gtest.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	test/gtest/fused-src/gtest/gtest.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	test/gtest/fused-src/gtest/gtest.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	test/gtest/fused-src/gtest/gtest.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamIterator	test/gtest/fused-src/gtest/gtest.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	test/gtest/fused-src/gtest/gtest.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	test/gtest/fused-src/gtest/gtest.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIteratorInterface	test/gtest/fused-src/gtest/gtest.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamIteratorInterface	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamTest	test/gtest/test/gtest_filter_unittest_.cc	/^class ParamTest : public testing::TestWithParam<int> {$/;"	c	namespace:__anon24	file:
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator10
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator9
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator8
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator7
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator6
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator5
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator4
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2, T3> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator3
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::tr1::tuple<T1, T2> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator2
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::TestMetaFactory
ParamType	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory
ParamType	test/gtest/include/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator10
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator9
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator8
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator7
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator6
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4, T5> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator5
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3, T4> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator4
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2, T3> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator3
ParamType	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  typedef ::std::tr1::tuple<T1, T2> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator2
ParamType	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface
ParamType	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
ParamType	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::TestMetaFactory
ParamType	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory
ParameterizedDeathTest	test/gtest/test/gtest-param-test_test.cc	/^class ParameterizedDeathTest : public ::testing::TestWithParam<int> { };$/;"	c	file:
ParameterizedDerivedTest	test/gtest/test/gtest-param-test_test.cc	/^  ParameterizedDerivedTest() : count_(0) { }$/;"	f	class:ParameterizedDerivedTest
ParameterizedDerivedTest	test/gtest/test/gtest-param-test_test.cc	/^class ParameterizedDerivedTest : public NonParameterizedBaseTest,$/;"	c	file:
ParameterizedTestCaseInfo	test/gtest/fused-src/gtest/gtest.h	/^  explicit ParameterizedTestCaseInfo(const char* name)$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo	test/gtest/fused-src/gtest/gtest.h	/^class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfo	test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestCaseInfo(const char* name)$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfoBase	test/gtest/fused-src/gtest/gtest.h	/^  ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase	test/gtest/fused-src/gtest/gtest.h	/^class ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfoBase	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseRegistry	test/gtest/fused-src/gtest/gtest.h	/^  ParameterizedTestCaseRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ParameterizedTestCaseRegistry	test/gtest/fused-src/gtest/gtest.h	/^class ParameterizedTestCaseRegistry {$/;"	c	namespace:testing::internal
ParameterizedTestCaseRegistry	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ParameterizedTestCaseRegistry	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestCaseRegistry {$/;"	c	namespace:testing::internal
ParameterizedTestFactory	test/gtest/fused-src/gtest/gtest.h	/^  explicit ParameterizedTestFactory(ParamType parameter) :$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	test/gtest/fused-src/gtest/gtest.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
ParameterizedTestFactory	test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestFactory(ParamType parameter) :$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
Parent	include/Profiling/GCOV.h	/^  GCOVFile &Parent;$/;"	m	class:llvm::GCOVFunction
Parent	include/Profiling/GCOV.h	/^  GCOVFunction &Parent;$/;"	m	class:llvm::GCOVBlock
Parse	test/gtest/scripts/pump.py	/^  def Parse(pos):$/;"	f	function:ParseExpTokenInParens
ParseAtomicCodeNode	test/gtest/scripts/pump.py	/^def ParseAtomicCodeNode(tokens):$/;"	f
ParseBoolFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ParseBoolFlag(const char* str, const char* flag, bool* value) {$/;"	f	namespace:testing::internal
ParseBoolFlag	test/gtest/src/gtest.cc	/^bool ParseBoolFlag(const char* str, const char* flag, bool* value) {$/;"	f	namespace:testing::internal
ParseCodeNode	test/gtest/scripts/pump.py	/^def ParseCodeNode(tokens):$/;"	f
ParseElseNode	test/gtest/scripts/pump.py	/^def ParseElseNode(tokens):$/;"	f
ParseExpNode	test/gtest/scripts/pump.py	/^def ParseExpNode(token):$/;"	f
ParseExpTokenInParens	test/gtest/scripts/pump.py	/^def ParseExpTokenInParens(lines, pos):$/;"	f
ParseFlagValue	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* ParseFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseFlagValue	test/gtest/src/gtest.cc	/^const char* ParseFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	test/gtest/fused-src/gtest/gtest-all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	test/gtest/fused-src/gtest/gtest-all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnlyImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnlyImpl	test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
ParseInParens	test/gtest/scripts/pump.py	/^  def ParseInParens(pos):$/;"	f	function:ParseExpTokenInParens
ParseInt32	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ParseInt32(const Message& src_text, const char* str, Int32* value) {$/;"	f	namespace:testing::internal
ParseInt32	test/gtest/src/gtest-port.cc	/^bool ParseInt32(const Message& src_text, const char* str, Int32* value) {$/;"	f	namespace:testing::internal
ParseInt32Flag	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {$/;"	f	namespace:testing::internal
ParseInt32Flag	test/gtest/src/gtest.cc	/^bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {$/;"	f	namespace:testing::internal
ParseInternalRunDeathTestFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal
ParseInternalRunDeathTestFlag	test/gtest/src/gtest-death-test.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal
ParseNaturalNumber	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal
ParseNaturalNumber	test/gtest/src/gtest-internal-inl.h	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal
ParseStringFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ParseStringFlag(const char* str, const char* flag, std::string* value) {$/;"	f	namespace:testing::internal
ParseStringFlag	test/gtest/src/gtest.cc	/^bool ParseStringFlag(const char* str, const char* flag, std::string* value) {$/;"	f	namespace:testing::internal
ParseToAST	test/gtest/scripts/pump.py	/^def ParseToAST(pump_src_text):$/;"	f
ParseToken	test/gtest/scripts/pump.py	/^def ParseToken(lines, pos, regex, token_type):$/;"	f
PartialMatch	test/gtest/fused-src/gtest/gtest-all.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
PartialMatch	test/gtest/fused-src/gtest/gtest.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
PartialMatch	test/gtest/fused-src/gtest/gtest.h	/^  static bool PartialMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
PartialMatch	test/gtest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE
PartialMatch	test/gtest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(const ::string& str, const RE& re) {$/;"	f	class:testing::internal::RE
PartialMatch	test/gtest/src/gtest-port.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
PartiallyInlineLibCalls	include/GEOS.h	/^  PartiallyInlineLibCalls,$/;"	e	enum:OptimizationKind
Passed	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl
Passed	test/gtest/fused-src/gtest/gtest-all.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl
Passed	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest
Passed	test/gtest/fused-src/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestCase
Passed	test/gtest/fused-src/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestResult
Passed	test/gtest/include/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestCase
Passed	test/gtest/include/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestResult
Passed	test/gtest/src/gtest-death-test.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl
Passed	test/gtest/src/gtest-internal-inl.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl
Passed	test/gtest/src/gtest.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest
Passed	test/gtest/test/gtest-death-test_test.cc	/^  virtual bool Passed(bool exit_status_ok) {$/;"	f	class:MockDeathTest
PassedArgument	test/gtest/test/gtest-death-test_test.cc	/^  bool PassedArgument(int n) const { return passed_args_[n]; }$/;"	f	class:MockDeathTestFactory
PassedCalls	test/gtest/test/gtest-death-test_test.cc	/^  int PassedCalls() const { return passed_args_.size(); }$/;"	f	class:MockDeathTestFactory
Passes	experiments/backup/benchmarks/src/base/ffbench.c	142;"	d	file:
Passes	experiments/benchmarks/src/base/ffbench.c	142;"	d	file:
PatternMatchesString	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTestOptions::PatternMatchesString(const char *pattern,$/;"	f	class:testing::internal::UnitTestOptions
PatternMatchesString	test/gtest/src/gtest.cc	/^bool UnitTestOptions::PatternMatchesString(const char *pattern,$/;"	f	class:testing::internal::UnitTestOptions
PeekToken	test/gtest/scripts/pump.py	/^def PeekToken(a_list):$/;"	f
Perm	experiments/backup/benchmarks/src/base/perm.c	/^void Perm ()    {   \/* Perm *\/$/;"	f
Perm	experiments/benchmarks/src/base/perm.c	/^void Perm ()    {   \/* Perm *\/$/;"	f
Permanent	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^enum Mark { Temporary, Permanent, None};$/;"	e	enum:Mark	file:
Permute	experiments/backup/benchmarks/src/base/perm.c	/^void Permute (int n) {   \/* permute *\/$/;"	f
Permute	experiments/benchmarks/src/base/perm.c	/^void Permute (int n) {   \/* permute *\/$/;"	f
Place	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int Place (int i, int j) {$/;"	f
Place	experiments/benchmarks/src/base/puzzle-stanford.c	/^int Place (int i, int j) {$/;"	f
PointerPrintable	test/gtest/test/gtest-printers_test.cc	/^struct PointerPrintable {$/;"	s	namespace:foo	file:
Pop	experiments/backup/benchmarks/src/base/towers.c	/^int Pop (int s)	{$/;"	f
Pop	experiments/benchmarks/src/base/towers.c	/^int Pop (int s)	{$/;"	f
Pop	test/gtest/scripts/pump.py	/^  def Pop(token_type=None):$/;"	f	function:ParseAtomicCodeNode
Pop	test/gtest/scripts/pump.py	/^  def Pop(token_type=None):$/;"	f	function:ParseElseNode
PopFront	test/gtest/scripts/pump.py	/^def PopFront(a_list):$/;"	f
PopRange	test/gtest/scripts/pump.py	/^  def PopRange(self):$/;"	m	class:Env
PopToken	test/gtest/scripts/pump.py	/^def PopToken(a_list, token_type=None):$/;"	f
PopVariable	test/gtest/scripts/pump.py	/^  def PopVariable(self):$/;"	m	class:Env
PostFlagParsingInit	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl
PostFlagParsingInit	test/gtest/src/gtest.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl
PreCalculatedPrimeTable	test/gtest/samples/prime_tables.h	/^  explicit PreCalculatedPrimeTable(int max)$/;"	f	class:PreCalculatedPrimeTable
PreCalculatedPrimeTable	test/gtest/samples/prime_tables.h	/^class PreCalculatedPrimeTable : public PrimeTable {$/;"	c
PredFormatFunction1	test/gtest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction1(const char* e1,$/;"	f
PredFormatFunction2	test/gtest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction2(const char* e1,$/;"	f
PredFormatFunction3	test/gtest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction3(const char* e1,$/;"	f
PredFormatFunction4	test/gtest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction4(const char* e1,$/;"	f
PredFormatFunction5	test/gtest/test/gtest_pred_impl_unittest.cc	/^testing::AssertionResult PredFormatFunction5(const char* e1,$/;"	f
PredFormatFunctor1	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor1 {$/;"	s	file:
PredFormatFunctor2	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor2 {$/;"	s	file:
PredFormatFunctor3	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor3 {$/;"	s	file:
PredFormatFunctor4	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor4 {$/;"	s	file:
PredFormatFunctor5	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFormatFunctor5 {$/;"	s	file:
PredFunction1	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1(T1 v1) {$/;"	f
PredFunction1Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1Bool(Bool v1) {$/;"	f
PredFunction1Int	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction1Int(int v1) {$/;"	f
PredFunction2	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2(T1 v1, T2 v2) {$/;"	f
PredFunction2Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2Bool(Bool v1, Bool v2) {$/;"	f
PredFunction2Int	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction2Int(int v1, int v2) {$/;"	f
PredFunction3	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3(T1 v1, T2 v2, T3 v3) {$/;"	f
PredFunction3Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3Bool(Bool v1, Bool v2, Bool v3) {$/;"	f
PredFunction3Int	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction3Int(int v1, int v2, int v3) {$/;"	f
PredFunction4	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f
PredFunction4Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4Bool(Bool v1, Bool v2, Bool v3, Bool v4) {$/;"	f
PredFunction4Int	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction4Int(int v1, int v2, int v3, int v4) {$/;"	f
PredFunction5	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) {$/;"	f
PredFunction5Bool	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5Bool(Bool v1, Bool v2, Bool v3, Bool v4, Bool v5) {$/;"	f
PredFunction5Int	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool PredFunction5Int(int v1, int v2, int v3, int v4, int v5) {$/;"	f
PredFunctor1	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor1 {$/;"	s	file:
PredFunctor2	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor2 {$/;"	s	file:
PredFunctor3	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor3 {$/;"	s	file:
PredFunctor4	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor4 {$/;"	s	file:
PredFunctor5	test/gtest/test/gtest_pred_impl_unittest.cc	/^struct PredFunctor5 {$/;"	s	file:
Predicate	test/gtest/scripts/gen_gtest_pred_impl.py	/^class Predicate%(n)sTest : public testing::Test {$/;"	c
Predicate1Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^class Predicate1Test : public testing::Test {$/;"	c	file:
Predicate2Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^class Predicate2Test : public testing::Test {$/;"	c	file:
Predicate3Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^class Predicate3Test : public testing::Test {$/;"	c	file:
Predicate4Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^class Predicate4Test : public testing::Test {$/;"	c	file:
Predicate5Test	test/gtest/test/gtest_pred_impl_unittest.cc	/^class Predicate5Test : public testing::Test {$/;"	c	file:
PrematureExitDeathTest	test/gtest/test/gtest_premature_exit_test.cc	/^typedef PrematureExitTest PrematureExitDeathTest;$/;"	t	namespace:__anon29	file:
PrematureExitFileExists	test/gtest/test/gtest_premature_exit_test.cc	/^  bool PrematureExitFileExists() const {$/;"	f	class:__anon29::PrematureExitTest
PrematureExitTest	test/gtest/test/gtest_premature_exit_test.cc	/^  PrematureExitTest() {$/;"	f	class:__anon29::PrematureExitTest
PrematureExitTest	test/gtest/test/gtest_premature_exit_test.cc	/^class PrematureExitTest : public Test {$/;"	c	namespace:__anon29	file:
PreservePaths	include/Profiling/GCOV.h	/^  bool PreservePaths;$/;"	m	struct:llvm::GCOVOptions
PrettyUnitTestResultPrinter	test/gtest/fused-src/gtest/gtest-all.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrettyUnitTestResultPrinter	test/gtest/fused-src/gtest/gtest-all.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
PrettyUnitTestResultPrinter	test/gtest/src/gtest.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrettyUnitTestResultPrinter	test/gtest/src/gtest.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
PrimeTable	test/gtest/samples/prime_tables.h	/^class PrimeTable {$/;"	c
PrimeTableImplementations	test/gtest/samples/sample6_unittest.cc	/^    PrimeTableImplementations;$/;"	t	file:
PrimeTableTest	test/gtest/samples/sample6_unittest.cc	/^  PrimeTableTest() : table_(CreatePrimeTable<T>()) {}$/;"	f	class:PrimeTableTest
PrimeTableTest	test/gtest/samples/sample6_unittest.cc	/^class PrimeTableTest : public testing::Test {$/;"	c	file:
PrimeTableTest	test/gtest/samples/sample7_unittest.cc	/^class PrimeTableTest : public TestWithParam<CreatePrimeTableFunc*> {$/;"	c	file:
PrimeTableTest	test/gtest/samples/sample8_unittest.cc	/^class PrimeTableTest : public TestWithParam< ::std::tr1::tuple<bool, int> > {$/;"	c	file:
PrimeTableTest2	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST_CASE_P(PrimeTableTest2);$/;"	v
PrimeTableTest2	test/gtest/samples/sample6_unittest.cc	/^class PrimeTableTest2 : public PrimeTableTest<T> {$/;"	c	file:
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	test/gtest/samples/sample4.cc	/^void Counter::Print() const {$/;"	f	class:Counter
Print	test/gtest/test/gtest-printers_test.cc	/^string Print(const T& value) {$/;"	f	namespace:testing::gtest_printers_test
PrintAsCharLiteralTo	test/gtest/fused-src/gtest/gtest-all.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsCharLiteralTo	test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	test/gtest/fused-src/gtest/gtest-all.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	test/gtest/fused-src/gtest/gtest-all.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal
PrintByRef	test/gtest/test/gtest-printers_test.cc	/^string PrintByRef(const T& value) {$/;"	f	namespace:testing::gtest_printers_test
PrintByteSegmentInObjectTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anon40
PrintByteSegmentInObjectTo	test/gtest/src/gtest-printers.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anon8
PrintBytesInObjectTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal2
PrintBytesInObjectTo	test/gtest/src/gtest-printers.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal2
PrintBytesInObjectToImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anon40
PrintBytesInObjectToImpl	test/gtest/src/gtest-printers.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anon8
PrintCharAndCodeTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintCharAndCodeTo	test/gtest/src/gtest-printers.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintCharsAsStringTo	test/gtest/fused-src/gtest/gtest-all.cc	/^static void PrintCharsAsStringTo($/;"	f	namespace:testing::internal
PrintCharsAsStringTo	test/gtest/src/gtest-printers.cc	/^static void PrintCharsAsStringTo($/;"	f	namespace:testing::internal
PrintColorEncoded	test/gtest/fused-src/gtest/gtest-all.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal
PrintColorEncoded	test/gtest/src/gtest.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal
PrintFailedTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintFailedTests	test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintFlag	test/gtest/test/gtest_env_var_test_.cc	/^void PrintFlag(const char* flag) {$/;"	f	namespace:testing
PrintFullTestCommentIfPresent	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal
PrintFullTestCommentIfPresent	test/gtest/src/gtest.cc	/^void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal
PrintOnOneLine	test/gtest/fused-src/gtest/gtest-all.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal
PrintOnOneLine	test/gtest/src/gtest.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal
PrintPointer	test/gtest/test/gtest-printers_test.cc	/^static string PrintPointer(const void *p) {$/;"	f	namespace:testing::gtest_printers_test
PrintPrefixTo	test/gtest/fused-src/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintPrefixTo	test/gtest/fused-src/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintPrefixTo	test/gtest/include/gtest/gtest-printers.h	/^  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintPrefixTo	test/gtest/include/gtest/gtest-printers.h	/^  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintRawArrayTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintRawArrayTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintStringTo(const ::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	test/gtest/src/gtest-printers.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	test/gtest/src/gtest-printers.cc	/^void PrintStringTo(const ::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTestName	test/gtest/fused-src/gtest/gtest-all.cc	/^  static void PrintTestName(const char * test_case, const char * test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintTestName	test/gtest/src/gtest.cc	/^  static void PrintTestName(const char * test_case, const char * test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal
PrintTestPartResult	test/gtest/src/gtest.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal
PrintTestPartResultToString	test/gtest/fused-src/gtest/gtest-all.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal
PrintTestPartResultToString	test/gtest/src/gtest.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal
PrintTime	test/gtest/test/gtest_unittest.cc	/^  static Flags PrintTime(bool print_time) {$/;"	f	struct:testing::Flags
PrintTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintTo(const char* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintTo(const wchar_t* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintTo(signed char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintTo(wchar_t wc, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const ::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const ::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo($/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo($/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/src/gtest-printers.cc	/^void PrintTo(const char* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/src/gtest-printers.cc	/^void PrintTo(const wchar_t* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/src/gtest-printers.cc	/^void PrintTo(signed char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/src/gtest-printers.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/src/gtest-printers.cc	/^void PrintTo(wchar_t wc, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	test/gtest/test/gtest-printers_test.cc	/^void PrintTo(EnumWithPrintTo e, std::ostream* os) {$/;"	f
PrintTo	test/gtest/test/gtest-printers_test.cc	/^void PrintTo(const PrintableViaPrintTo& x, ::std::ostream* os) {$/;"	f	namespace:foo
PrintTo	test/gtest/test/gtest-printers_test.cc	/^void PrintTo(const PrintableViaPrintToTemplate<T>& x, ::std::ostream* os) {$/;"	f	namespace:foo
PrintTo	test/gtest/test/gtest_list_tests_unittest_.cc	/^void PrintTo(const MyType& x, std::ostream* os) {$/;"	f
PrintToString	test/gtest/fused-src/gtest/gtest.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing
PrintToString	test/gtest/include/gtest/gtest-printers.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing
PrintTupleTo	test/gtest/fused-src/gtest/gtest.h	/^void PrintTupleTo(const T& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTupleTo	test/gtest/include/gtest/gtest-printers.h	/^void PrintTupleTo(const T& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintValue	test/gtest/fused-src/gtest/gtest.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal2::TypeWithoutFormatter
PrintValue	test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal2::TypeWithoutFormatter
PrintValue	test/gtest/test/gtest-param-test_test.cc	/^::std::string PrintValue($/;"	f
PrintValue	test/gtest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const T& value) {$/;"	f
PrintValue	test/gtest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const tuple<T1, T2, T3>& value) {$/;"	f
PrintValue	test/gtest/test/gtest-param-test_test.cc	/^::std::string PrintValue(const tuple<T1, T2>& value) {$/;"	f
PrintWideStringTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintWideStringTo	test/gtest/fused-src/gtest/gtest-all.cc	/^void PrintWideStringTo(const ::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintWideStringTo	test/gtest/src/gtest-printers.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintWideStringTo	test/gtest/src/gtest-printers.cc	/^void PrintWideStringTo(const ::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintXmlTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintXmlTestCase	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintXmlUnitTest	test/gtest/fused-src/gtest/gtest-all.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintXmlUnitTest	test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintableViaPrintTo	test/gtest/test/gtest-printers_test.cc	/^  PrintableViaPrintTo() : value() {}$/;"	f	struct:foo::PrintableViaPrintTo
PrintableViaPrintTo	test/gtest/test/gtest-printers_test.cc	/^struct PrintableViaPrintTo {$/;"	s	namespace:foo	file:
PrintableViaPrintToTemplate	test/gtest/test/gtest-printers_test.cc	/^  explicit PrintableViaPrintToTemplate(const T& a_value) : value_(a_value) {}$/;"	f	class:foo::PrintableViaPrintToTemplate
PrintableViaPrintToTemplate	test/gtest/test/gtest-printers_test.cc	/^class PrintableViaPrintToTemplate {$/;"	c	namespace:foo	file:
Printcomplex	experiments/backup/benchmarks/src/base/oscar.c	/^Printcomplex (struct complex zarray[], int start, int finish, int increment)$/;"	f
Printcomplex	experiments/benchmarks/src/base/oscar.c	/^Printcomplex (struct complex zarray[], int start, int finish, int increment)$/;"	f
PrivateCode	test/gtest/test/production.cc	/^PrivateCode::PrivateCode() : x_(0) {}$/;"	f	class:PrivateCode
PrivateCode	test/gtest/test/production.h	/^class PrivateCode {$/;"	c
PrivateCodeFixtureTest	test/gtest/test/gtest_prod_test.cc	/^typedef testing::Test PrivateCodeFixtureTest;$/;"	t	file:
Proc0	experiments/backup/benchmarks/src/base/dry.c	/^Proc0()$/;"	f
Proc0	experiments/backup/benchmarks/src/base/fldry.c	/^Proc0()$/;"	f
Proc0	experiments/benchmarks/src/base/dry.c	/^Proc0()$/;"	f
Proc0	experiments/benchmarks/src/base/fldry.c	/^Proc0()$/;"	f
Proc1	experiments/backup/benchmarks/src/base/dry.c	/^Proc1(PtrParIn)$/;"	f
Proc1	experiments/backup/benchmarks/src/base/fldry.c	/^Proc1(PtrParIn)$/;"	f
Proc1	experiments/benchmarks/src/base/dry.c	/^Proc1(PtrParIn)$/;"	f
Proc1	experiments/benchmarks/src/base/fldry.c	/^Proc1(PtrParIn)$/;"	f
Proc2	experiments/backup/benchmarks/src/base/dry.c	/^Proc2(IntParIO)$/;"	f
Proc2	experiments/backup/benchmarks/src/base/fldry.c	/^Proc2(IntParIO)$/;"	f
Proc2	experiments/benchmarks/src/base/dry.c	/^Proc2(IntParIO)$/;"	f
Proc2	experiments/benchmarks/src/base/fldry.c	/^Proc2(IntParIO)$/;"	f
Proc3	experiments/backup/benchmarks/src/base/dry.c	/^Proc3(PtrParOut)$/;"	f
Proc3	experiments/backup/benchmarks/src/base/fldry.c	/^Proc3(PtrParOut)$/;"	f
Proc3	experiments/benchmarks/src/base/dry.c	/^Proc3(PtrParOut)$/;"	f
Proc3	experiments/benchmarks/src/base/fldry.c	/^Proc3(PtrParOut)$/;"	f
Proc4	experiments/backup/benchmarks/src/base/dry.c	/^Proc4()$/;"	f
Proc4	experiments/backup/benchmarks/src/base/fldry.c	/^Proc4()$/;"	f
Proc4	experiments/benchmarks/src/base/dry.c	/^Proc4()$/;"	f
Proc4	experiments/benchmarks/src/base/fldry.c	/^Proc4()$/;"	f
Proc5	experiments/backup/benchmarks/src/base/dry.c	/^Proc5()$/;"	f
Proc5	experiments/backup/benchmarks/src/base/fldry.c	/^Proc5()$/;"	f
Proc5	experiments/benchmarks/src/base/dry.c	/^Proc5()$/;"	f
Proc5	experiments/benchmarks/src/base/fldry.c	/^Proc5()$/;"	f
Proc6	experiments/backup/benchmarks/src/base/dry.c	/^Proc6(EnumParIn, EnumParOut)$/;"	f
Proc6	experiments/backup/benchmarks/src/base/fldry.c	/^Proc6(EnumParIn, EnumParOut)$/;"	f
Proc6	experiments/benchmarks/src/base/dry.c	/^Proc6(EnumParIn, EnumParOut)$/;"	f
Proc6	experiments/benchmarks/src/base/fldry.c	/^Proc6(EnumParIn, EnumParOut)$/;"	f
Proc7	experiments/backup/benchmarks/src/base/dry.c	/^Proc7(IntParI1, IntParI2, IntParOut)$/;"	f
Proc7	experiments/backup/benchmarks/src/base/fldry.c	/^Proc7(IntParI1, IntParI2, IntParOut)$/;"	f
Proc7	experiments/benchmarks/src/base/dry.c	/^Proc7(IntParI1, IntParI2, IntParOut)$/;"	f
Proc7	experiments/benchmarks/src/base/fldry.c	/^Proc7(IntParI1, IntParI2, IntParOut)$/;"	f
Proc8	experiments/backup/benchmarks/src/base/dry.c	/^Proc8(Array1Par, Array2Par, IntParI1, IntParI2)$/;"	f
Proc8	experiments/backup/benchmarks/src/base/fldry.c	/^Proc8(Array1Par, Array2Par, IntParI1, IntParI2)$/;"	f
Proc8	experiments/benchmarks/src/base/dry.c	/^Proc8(Array1Par, Array2Par, IntParI1, IntParI2)$/;"	f
Proc8	experiments/benchmarks/src/base/fldry.c	/^Proc8(Array1Par, Array2Par, IntParI1, IntParI2)$/;"	f
ProcessFile	test/gtest/scripts/fuse_gtest_files.py	/^  def ProcessFile(gtest_header_path):$/;"	f	function:FuseGTestH
ProcessFile	test/gtest/scripts/fuse_gtest_files.py	/^  def ProcessFile(gtest_source_file):$/;"	f	function:FuseGTestAllCcToFile
ProcessKeys	docs/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m	class:SearchResults
Profile	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  const ProfileModule *Profile;$/;"	m	struct:MachineAST	file:
Profile	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^  ProfileModule *Profile;$/;"	m	struct:StaticProfiling	file:
ProfileModule	include/ProfileModule/ProfileModule.h	/^class ProfileModule {$/;"	c
ProfileModule	src/ProfileModule/ProfileModule.cpp	/^ProfileModule::ProfileModule(Module* M) {$/;"	f	class:ProfileModule
ProgramCount	include/Profiling/GCOV.h	/^  uint32_t ProgramCount;$/;"	m	class:llvm::FileInfo
ProgramCount	include/Profiling/GCOV.h	/^  uint32_t ProgramCount;$/;"	m	class:llvm::GCOVFile
PromoteMemoryToRegister	include/GEOS.h	/^  PromoteMemoryToRegister,$/;"	e	enum:OptimizationKind
PropertyOne	test/gtest/test/gtest_xml_outfile1_test_.cc	/^class PropertyOne : public testing::Test {$/;"	c	file:
PropertyRecordingTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^class PropertyRecordingTest : public Test {$/;"	c	file:
PropertyTwo	test/gtest/test/gtest_xml_outfile2_test_.cc	/^class PropertyTwo : public testing::Test {$/;"	c	file:
ProtectedFixtureMethodsTest	test/gtest/test/gtest_unittest.cc	/^class ProtectedFixtureMethodsTest : public Test {$/;"	c	file:
PtrComp	experiments/backup/benchmarks/src/base/dry.c	/^	struct Record		*PtrComp;$/;"	m	struct:Record	typeref:struct:Record::Record	file:
PtrComp	experiments/backup/benchmarks/src/base/fldry.c	/^	struct Record		*PtrComp;$/;"	m	struct:Record	typeref:struct:Record::Record	file:
PtrComp	experiments/benchmarks/src/base/dry.c	/^	struct Record		*PtrComp;$/;"	m	struct:Record	typeref:struct:Record::Record	file:
PtrComp	experiments/benchmarks/src/base/fldry.c	/^	struct Record		*PtrComp;$/;"	m	struct:Record	typeref:struct:Record::Record	file:
PtrGlb	experiments/backup/benchmarks/src/base/dry.c	/^RecordPtr	PtrGlb;$/;"	v
PtrGlb	experiments/backup/benchmarks/src/base/fldry.c	/^RecordPtr	PtrGlb;$/;"	v
PtrGlb	experiments/benchmarks/src/base/dry.c	/^RecordPtr	PtrGlb;$/;"	v
PtrGlb	experiments/benchmarks/src/base/fldry.c	/^RecordPtr	PtrGlb;$/;"	v
PtrGlbNext	experiments/backup/benchmarks/src/base/dry.c	/^RecordPtr	PtrGlbNext;$/;"	v
PtrGlbNext	experiments/backup/benchmarks/src/base/fldry.c	/^RecordPtr	PtrGlbNext;$/;"	v
PtrGlbNext	experiments/benchmarks/src/base/dry.c	/^RecordPtr	PtrGlbNext;$/;"	v
PtrGlbNext	experiments/benchmarks/src/base/fldry.c	/^RecordPtr	PtrGlbNext;$/;"	v
Push	experiments/backup/benchmarks/src/base/towers.c	/^void Push(int i, int s)	{$/;"	f
Push	experiments/benchmarks/src/base/towers.c	/^void Push(int i, int s)	{$/;"	f
PushFront	test/gtest/scripts/pump.py	/^def PushFront(a_list, elem):$/;"	f
PushRange	test/gtest/scripts/pump.py	/^  def PushRange(self, var, lower, upper):$/;"	m	class:Env
PushVariable	test/gtest/scripts/pump.py	/^  def PushVariable(self, var, value):$/;"	m	class:Env
Puzzle	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^void Puzzle ()  {$/;"	f
Puzzle	experiments/benchmarks/src/base/puzzle-stanford.c	/^void Puzzle ()  {$/;"	f
Qpktcountval	experiments/backup/benchmarks/src/base/richards_benchmark.c	26;"	d	file:
Qpktcountval	experiments/backup/benchmarks/src/base/richards_benchmark.c	30;"	d	file:
Qpktcountval	experiments/benchmarks/src/base/richards_benchmark.c	26;"	d	file:
Qpktcountval	experiments/benchmarks/src/base/richards_benchmark.c	30;"	d	file:
Queens	experiments/backup/benchmarks/src/base/queens.c	/^void Queens (int run) {$/;"	f
Queens	experiments/benchmarks/src/base/queens.c	/^void Queens (int run) {$/;"	f
Queue	test/gtest/samples/sample3-inl.h	/^  Queue() : head_(NULL), last_(NULL), size_(0) {}$/;"	f	class:Queue
Queue	test/gtest/samples/sample3-inl.h	/^class Queue {$/;"	c
QueueNode	test/gtest/samples/sample3-inl.h	/^  explicit QueueNode(const E& an_element) : element_(an_element), next_(NULL) {}$/;"	f	class:QueueNode
QueueNode	test/gtest/samples/sample3-inl.h	/^class QueueNode {$/;"	c
QueueTest	test/gtest/samples/sample3_unittest.cc	/^class QueueTest : public testing::Test {$/;"	c	file:
QueueTest	test/gtest/samples/sample5_unittest.cc	/^class QueueTest : public QuickTest {$/;"	c	file:
Quick	experiments/backup/benchmarks/src/base/quicksort.c	/^void Quick (int run) {$/;"	f
Quick	experiments/benchmarks/src/base/quicksort.c	/^void Quick (int run) {$/;"	f
QuickTest	test/gtest/samples/sample5_unittest.cc	/^class QuickTest : public testing::Test {$/;"	c	file:
Quicksort	experiments/backup/benchmarks/src/base/quicksort.c	/^void Quicksort( int a[], int l, int r) {$/;"	f
Quicksort	experiments/benchmarks/src/base/quicksort.c	/^void Quicksort( int a[], int l, int r) {$/;"	f
R	experiments/backup/benchmarks/src/base/salsa20.c	14;"	d	file:
R	experiments/benchmarks/src/base/salsa20.c	14;"	d	file:
RANDOM_SEED	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int RANDOM_SEED = 101010;$/;"	v
RANDOM_SEED	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int RANDOM_SEED = 101010;$/;"	v
RAND_MAX	experiments/backup/benchmarks/src/base/puzzle.c	10;"	d	file:
RAND_MAX	experiments/backup/benchmarks/src/base/puzzle.c	12;"	d	file:
RAND_MAX	experiments/benchmarks/src/base/puzzle.c	10;"	d	file:
RAND_MAX	experiments/benchmarks/src/base/puzzle.c	12;"	d	file:
RE	test/gtest/fused-src/gtest/gtest.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	test/gtest/fused-src/gtest/gtest.h	/^  RE(const ::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	test/gtest/fused-src/gtest/gtest.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:std::tr1::RE
RE	test/gtest/fused-src/gtest/gtest.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ RE {$/;"	c	namespace:std::tr1
RE	test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const ::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:testing::internal::RE
RE	test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ RE {$/;"	c	namespace:testing::internal
REG	experiments/backup/benchmarks/src/base/dry.c	160;"	d	file:
REG	experiments/backup/benchmarks/src/base/fldry.c	162;"	d	file:
REG	experiments/benchmarks/src/base/dry.c	160;"	d	file:
REG	experiments/benchmarks/src/base/fldry.c	162;"	d	file:
REGISTER_TYPED_TEST_CASE_P	test/gtest/fused-src/gtest/gtest.h	17459;"	d
REGISTER_TYPED_TEST_CASE_P	test/gtest/include/gtest/gtest-typed-test.h	239;"	d
REG_DETECT_H	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	9;"	d
REG_DETECT_H	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	9;"	d
REQUIRES_EH_SUPPORT	experiments/backup/benchmarks/src/.hexxagon/Makefile	/^REQUIRES_EH_SUPPORT = 1$/;"	m
REQUIRES_EH_SUPPORT	experiments/benchmarks/src/.hexxagon/Makefile	/^REQUIRES_EH_SUPPORT = 1$/;"	m
RESOLUTION_DEFAULT	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  double RESOLUTION_DEFAULT = 2.0;  \/* secs (normally 2.0) *\/$/;"	v
RESOLUTION_DEFAULT	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  double RESOLUTION_DEFAULT = 2.0;  \/* secs (normally 2.0) *\/$/;"	v
REST_OF_LINE_REGEX	test/gtest/scripts/pump.py	/^REST_OF_LINE_REGEX = re.compile(r'.*?(?=$|\\$\\$)')$/;"	v
RETURNED	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
RETURNED	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
RETest	test/gtest/test/gtest-port_test.cc	/^class RETest : public ::testing::Test {};$/;"	c	namespace:testing::internal	file:
RI0	experiments/backup/benchmarks/src/aha/aha.h	47;"	d
RI0	experiments/benchmarks/src/aha/aha.h	47;"	d
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/examples/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/CostAnalysis/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/CostEstimator/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/ProfileModule/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/CallCostAnalyzer/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/ExecutionFrequency/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Profiling/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/test/gtest/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tool/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tools/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RMV_TIMER	experiments/backup/benchmarks/src/base/flops.c	1041;"	d	file:
RMV_TIMER	experiments/benchmarks/src/base/flops.c	1041;"	d	file:
RND	experiments/backup/benchmarks/src/base/oourafft.c	10;"	d	file:
RND	experiments/benchmarks/src/base/oourafft.c	10;"	d	file:
RStripNewLineFromToken	test/gtest/scripts/pump.py	/^def RStripNewLineFromToken(token):$/;"	f
RUN_ALL_TESTS	test/gtest/fused-src/gtest/gtest.h	/^inline int RUN_ALL_TESTS() {$/;"	f
RUN_ALL_TESTS	test/gtest/include/gtest/gtest.h	/^inline int RUN_ALL_TESTS() {$/;"	f
RX	experiments/backup/benchmarks/src/aha/aha.h	45;"	d
RX	experiments/benchmarks/src/aha/aha.h	45;"	d
RY	experiments/backup/benchmarks/src/aha/aha.h	46;"	d
RY	experiments/benchmarks/src/aha/aha.h	46;"	d
Rand	experiments/backup/benchmarks/src/base/bubblesort.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/intmm.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/oscar.c	/^Rand ()$/;"	f
Rand	experiments/backup/benchmarks/src/base/perm.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/queens.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/quicksort.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/realmm.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/towers.c	/^int Rand () {$/;"	f
Rand	experiments/backup/benchmarks/src/base/treesort.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/bubblesort.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/intmm.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/oscar.c	/^Rand ()$/;"	f
Rand	experiments/benchmarks/src/base/perm.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/puzzle-stanford.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/queens.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/quicksort.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/realmm.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/towers.c	/^int Rand () {$/;"	f
Rand	experiments/benchmarks/src/base/treesort.c	/^int Rand () {$/;"	f
Random	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^Random_struct, *Random;$/;"	t	typeref:struct:__anon58
Random	experiments/benchmarks/src/SciMark2-C/Random.h	/^Random_struct, *Random;$/;"	t	typeref:struct:__anon45
Random	test/gtest/fused-src/gtest/gtest.h	/^  explicit Random(UInt32 seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
Random	test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit Random(UInt32 seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
RandomMatrix	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^double **RandomMatrix(int M, int N, Random R)$/;"	f
RandomMatrix	experiments/benchmarks/src/SciMark2-C/Random.c	/^double **RandomMatrix(int M, int N, Random R)$/;"	f
RandomSeed	test/gtest/test/gtest_unittest.cc	/^  static Flags RandomSeed(Int32 random_seed) {$/;"	f	struct:testing::Flags
RandomSeedFlag	test/gtest/test/gtest_shuffle_test.py	/^def RandomSeedFlag(n):$/;"	f
RandomVector	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^double *RandomVector(int N, Random R)$/;"	f
RandomVector	experiments/benchmarks/src/SciMark2-C/Random.c	/^double *RandomVector(int N, Random R)$/;"	f
Random_delete	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^void Random_delete(Random R)$/;"	f
Random_delete	experiments/benchmarks/src/SciMark2-C/Random.c	/^void Random_delete(Random R)$/;"	f
Random_nextDouble	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^double Random_nextDouble(Random R) $/;"	f
Random_nextDouble	experiments/benchmarks/src/SciMark2-C/Random.c	/^double Random_nextDouble(Random R) $/;"	f
Random_struct	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^Random_struct, *Random;$/;"	t	typeref:struct:__anon58
Random_struct	experiments/benchmarks/src/SciMark2-C/Random.h	/^Random_struct, *Random;$/;"	t	typeref:struct:__anon45
Range	test/gtest/fused-src/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing
Range	test/gtest/fused-src/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing
Range	test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing
Range	test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing
RangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RangeIsShuffled	test/gtest/test/gtest_unittest.cc	/^  static bool RangeIsShuffled(const TestingVector& vector, int begin, int end) {$/;"	f	class:__anon14::VectorShuffleTest
RangeIsUnshuffled	test/gtest/test/gtest_unittest.cc	/^  static bool RangeIsUnshuffled($/;"	f	class:__anon14::VectorShuffleTest
RangeNode	test/gtest/scripts/pump.py	/^class RangeNode:$/;"	c
RawCodeNode	test/gtest/scripts/pump.py	/^class RawCodeNode:$/;"	c
Re	experiments/backup/benchmarks/src/base/ffbench.c	248;"	d	file:
Re	experiments/benchmarks/src/base/ffbench.c	248;"	d	file:
ReactionToSharding	test/gtest/fused-src/gtest/gtest-all.cc	/^  enum ReactionToSharding {$/;"	g	class:testing::internal::UnitTestImpl	file:
ReactionToSharding	test/gtest/src/gtest-internal-inl.h	/^  enum ReactionToSharding {$/;"	g	class:testing::internal::UnitTestImpl
Read	test/gtest/fused-src/gtest/gtest.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
Read	test/gtest/include/gtest/internal/gtest-port.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix
ReadAndInterpretStatusByte	test/gtest/fused-src/gtest/gtest-all.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl
ReadAndInterpretStatusByte	test/gtest/src/gtest-death-test.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl
ReadEntireFile	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string CapturedStream::ReadEntireFile(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
ReadEntireFile	test/gtest/src/gtest-port.cc	/^std::string CapturedStream::ReadEntireFile(FILE* file) {$/;"	f	class:testing::internal::CapturedStream
Reassociate	include/GEOS.h	/^  Reassociate,$/;"	e	enum:OptimizationKind
Record	experiments/backup/benchmarks/src/base/dry.c	/^struct	Record$/;"	s	file:
Record	experiments/backup/benchmarks/src/base/fldry.c	/^struct	Record$/;"	s	file:
Record	experiments/benchmarks/src/base/dry.c	/^struct	Record$/;"	s	file:
Record	experiments/benchmarks/src/base/fldry.c	/^struct	Record$/;"	s	file:
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest
RecordProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl
RecordProperty	test/gtest/src/gtest-internal-inl.h	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor
RecordProperty	test/gtest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test
RecordProperty	test/gtest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test
RecordProperty	test/gtest/src/gtest.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
RecordProperty	test/gtest/src/gtest.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest
RecordProperty	test/gtest/src/gtest.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl
RecordPtr	experiments/backup/benchmarks/src/base/dry.c	/^typedef RecordType *	RecordPtr;$/;"	t	file:
RecordPtr	experiments/backup/benchmarks/src/base/fldry.c	/^typedef RecordType *	RecordPtr;$/;"	t	file:
RecordPtr	experiments/benchmarks/src/base/dry.c	/^typedef RecordType *	RecordPtr;$/;"	t	file:
RecordPtr	experiments/benchmarks/src/base/fldry.c	/^typedef RecordType *	RecordPtr;$/;"	t	file:
RecordType	experiments/backup/benchmarks/src/base/dry.c	/^typedef struct Record 	RecordType;$/;"	t	typeref:struct:Record	file:
RecordType	experiments/backup/benchmarks/src/base/fldry.c	/^typedef struct Record 	RecordType;$/;"	t	typeref:struct:Record	file:
RecordType	experiments/benchmarks/src/base/dry.c	/^typedef struct Record 	RecordType;$/;"	t	typeref:struct:Record	file:
RecordType	experiments/benchmarks/src/base/fldry.c	/^typedef struct Record 	RecordType;$/;"	t	typeref:struct:Record	file:
Register	test/gtest/fused-src/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	test/gtest/fused-src/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	test/gtest/fused-src/gtest/gtest.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	test/gtest/fused-src/gtest/gtest.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, const char* \/*case_name*\/,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* prefix, const char* case_name,$/;"	f	class:testing::internal::TypeParameterizedTestCase
RegisterParameterizedTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl
RegisterParameterizedTests	test/gtest/src/gtest.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl
RegisterTests	test/gtest/fused-src/gtest/gtest.h	/^  virtual void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
RegisterTests	test/gtest/fused-src/gtest/gtest.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
RegisterTests	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
RegisterTests	test/gtest/include/gtest/internal/gtest-param-util.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ReinterpretBits	test/gtest/fused-src/gtest/gtest.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint
ReinterpretBits	test/gtest/include/gtest/internal/gtest-internal.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint
RelationToSource	test/gtest/fused-src/gtest/gtest.h	/^enum RelationToSource {$/;"	g	namespace:testing::internal
RelationToSource	test/gtest/include/gtest/internal/gtest-internal.h	/^enum RelationToSource {$/;"	g	namespace:testing::internal
Release	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Release	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Release	test/gtest/src/gtest.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Release	test/gtest/src/gtest.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Remaining	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  StringRef Remaining;$/;"	m	class:__anon2::LineConsumer	file:
Remove	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^void Remove (int i, int j) {$/;"	f
Remove	experiments/benchmarks/src/base/puzzle-stanford.c	/^void Remove (int i, int j) {$/;"	f
RemoveConst	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst<T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst<const T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T[N]> {$/;"	s	namespace:testing::internal
RemoveDirectoryName	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath
RemoveDirectoryName	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath
RemoveExtension	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath
RemoveExtension	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath
RemoveFileName	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath
RemoveFileName	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath
RemoveInvalidXmlCharacters	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
RemoveInvalidXmlCharacters	test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
RemoveLocations	test/gtest/test/gtest_output_test.py	/^def RemoveLocations(test_output):$/;"	f
RemoveMatchingTests	test/gtest/test/gtest_output_test.py	/^def RemoveMatchingTests(test_output, pattern):$/;"	f
RemoveReference	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveStackTraceDetails	test/gtest/test/gtest_output_test.py	/^def RemoveStackTraceDetails(output):$/;"	f
RemoveStackTraces	test/gtest/test/gtest_output_test.py	/^def RemoveStackTraces(output):$/;"	f
RemoveTestCounts	test/gtest/test/gtest_output_test.py	/^def RemoveTestCounts(output):$/;"	f
RemoveTime	test/gtest/test/gtest_output_test.py	/^def RemoveTime(output):$/;"	f
RemoveTrailingPathSeparator	test/gtest/fused-src/gtest/gtest-all.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath
RemoveTrailingPathSeparator	test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath
RemoveTypeInfoDetails	test/gtest/test/gtest_output_test.py	/^def RemoveTypeInfoDetails(test_output):$/;"	f
RemoveUnsupportedTests	test/gtest/test/gtest_output_test.py	/^  def RemoveUnsupportedTests(self, test_output):$/;"	m	class:GTestOutputTest
Remove_timer	experiments/backup/benchmarks/src/base/flops.c	/^static void     Remove_timer( )$/;"	f	file:
Remove_timer	experiments/benchmarks/src/base/flops.c	/^static void     Remove_timer( )$/;"	f	file:
Repeat	test/gtest/test/gtest_unittest.cc	/^  static Flags Repeat(Int32 repeat) {$/;"	f	struct:testing::Flags
RepeatFlag	test/gtest/test/gtest_shuffle_test.py	/^def RepeatFlag(n):$/;"	f
ReplaceDeathTestFactory	test/gtest/test/gtest-death-test_test.cc	/^  explicit ReplaceDeathTestFactory(DeathTestFactory* new_factory)$/;"	f	class:testing::internal::ReplaceDeathTestFactory
ReplaceDeathTestFactory	test/gtest/test/gtest-death-test_test.cc	/^class ReplaceDeathTestFactory {$/;"	c	namespace:testing::internal	file:
ReportFailureInUnknownLocation	test/gtest/fused-src/gtest/gtest-all.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal
ReportFailureInUnknownLocation	test/gtest/src/gtest.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal
ReportInvalidTestCaseType	test/gtest/fused-src/gtest/gtest-all.cc	/^void ReportInvalidTestCaseType(const char* test_case_name,$/;"	f	namespace:testing::internal
ReportInvalidTestCaseType	test/gtest/src/gtest.cc	/^void ReportInvalidTestCaseType(const char* test_case_name,$/;"	f	namespace:testing::internal
ReportTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
ReportTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
ReportTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper
ReportTestPartResult	test/gtest/fused-src/gtest/gtest-all.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ReportTestPartResult	test/gtest/src/gtest-test-part.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper
ReportTestPartResult	test/gtest/src/gtest.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
ReportTestPartResult	test/gtest/src/gtest.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
ReportTestPartResult	test/gtest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter
Reseed	test/gtest/fused-src/gtest/gtest.h	/^  void Reseed(UInt32 seed) { state_ = seed; }$/;"	f	class:testing::internal::Random
Reseed	test/gtest/include/gtest/internal/gtest-internal.h	/^  void Reseed(UInt32 seed) { state_ = seed; }$/;"	f	class:testing::internal::Random
Reset	test/gtest/fused-src/gtest/gtest-all.cc	/^  void Reset() { Reset(INVALID_HANDLE_VALUE); }$/;"	f	class:testing::internal::AutoHandle
Reset	test/gtest/fused-src/gtest/gtest-all.cc	/^  void Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle
Reset	test/gtest/src/gtest-internal-inl.h	/^  void Reset() { Reset(INVALID_HANDLE_VALUE); }$/;"	f	class:testing::internal::AutoHandle
Reset	test/gtest/src/gtest-internal-inl.h	/^  void Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle
Reset	test/gtest/test/gtest_environment_test.cc	/^  void Reset() {$/;"	f	class:__anon21::MyEnvironment
ResetCounts	test/gtest/test/gtest_repeat_test.cc	/^void ResetCounts() {$/;"	f	namespace:__anon33
ResultIsEven	test/gtest/test/gtest_unittest.cc	/^AssertionResult ResultIsEven(int n) {$/;"	f	namespace:__anon14
ResultIsEvenNoExplanation	test/gtest/test/gtest_unittest.cc	/^AssertionResult ResultIsEvenNoExplanation(int n) {$/;"	f	namespace:__anon14
RetrieveThreadLocalValue	test/gtest/test/gtest-port_test.cc	/^void RetrieveThreadLocalValue($/;"	f	namespace:testing::internal
ReturnSentinel	test/gtest/fused-src/gtest/gtest.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) { }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	test/gtest/fused-src/gtest/gtest.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
ReturnSentinel	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) { }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
RmDir	test/gtest/fused-src/gtest/gtest.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:std::tr1::posix
RmDir	test/gtest/include/gtest/internal/gtest-port.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:testing::internal::posix
Run	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest
Run	test/gtest/fused-src/gtest/gtest-all.cc	/^void Test::Run() {$/;"	f	class:testing::Test
Run	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestCase::Run() {$/;"	f	class:testing::TestCase
Run	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo
Run	test/gtest/fused-src/gtest/gtest.h	/^  virtual void Run() {$/;"	f	class:std::tr1::ThreadWithParam
Run	test/gtest/include/gtest/internal/gtest-port.h	/^  virtual void Run() {$/;"	f	class:testing::internal::ThreadWithParam
Run	test/gtest/src/gtest.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest
Run	test/gtest/src/gtest.cc	/^void Test::Run() {$/;"	f	class:testing::Test
Run	test/gtest/src/gtest.cc	/^void TestCase::Run() {$/;"	f	class:testing::TestCase
Run	test/gtest/src/gtest.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo
Run	test/gtest/test/gtest_break_on_failure_unittest.py	/^def Run(command):$/;"	f
Run	test/gtest/test/gtest_list_tests_unittest.py	/^def Run(args):$/;"	f
Run	test/gtest/test/gtest_throw_on_failure_test.py	/^def Run(command):$/;"	f
RunAllTests	test/gtest/fused-src/gtest/gtest-all.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl
RunAllTests	test/gtest/src/gtest.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl
RunAllTests	test/gtest/test/gtest_environment_test.cc	/^int RunAllTests(MyEnvironment* env, FailureType failure) {$/;"	f	namespace:__anon21
RunAllTests	test/gtest/test/gtest_output_test_.cc	/^int RunAllTests() {$/;"	f
RunAndExtractTestList	test/gtest/test/gtest_filter_unittest.py	/^def RunAndExtractTestList(args = None):$/;"	f
RunAndReturnOutput	test/gtest/test/gtest_filter_unittest.py	/^def RunAndReturnOutput(args = None):$/;"	f
RunAndReturnOutput	test/gtest/test/gtest_shuffle_test.py	/^def RunAndReturnOutput(extra_env, args):$/;"	f
RunAndVerify	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def RunAndVerify(self, env_var_value, flag_value, expect_seg_fault):$/;"	m	class:GTestBreakOnFailureUnitTest
RunAndVerify	test/gtest/test/gtest_filter_unittest.py	/^  def RunAndVerify(self, gtest_filter, tests_to_run):$/;"	m	class:GTestFilterUnitTest
RunAndVerify	test/gtest/test/gtest_list_tests_unittest.py	/^  def RunAndVerify(self, flag_value, expected_output_re, other_flag):$/;"	m	class:GTestListTestsUnitTest
RunAndVerify	test/gtest/test/gtest_throw_on_failure_test.py	/^  def RunAndVerify(self, env_var_value, flag_value, should_fail):$/;"	m	class:ThrowOnFailureTest
RunAndVerifyAllowingDisabled	test/gtest/test/gtest_filter_unittest.py	/^  def RunAndVerifyAllowingDisabled(self, gtest_filter, tests_to_run):$/;"	m	class:GTestFilterUnitTest
RunAndVerifyWithSharding	test/gtest/test/gtest_filter_unittest.py	/^  def RunAndVerifyWithSharding(self, gtest_filter, total_shards, tests_to_run,$/;"	m	class:GTestFilterUnitTest
RunAtomicCode	test/gtest/scripts/pump.py	/^def RunAtomicCode(env, node, output):$/;"	f
RunCode	test/gtest/scripts/pump.py	/^def RunCode(env, code_node, output):$/;"	f
RunCount	include/Profiling/GCOV.h	/^  uint32_t RunCount;$/;"	m	class:llvm::FileInfo
RunCount	include/Profiling/GCOV.h	/^  uint32_t RunCount;$/;"	m	class:llvm::GCOVFile
RunFromThread	test/gtest/test/gtest-port_test.cc	/^void RunFromThread(void (func)(T), T param) {$/;"	f	namespace:testing::internal
RunReturningDeathTest	test/gtest/test/gtest-death-test_test.cc	/^  static void RunReturningDeathTest(bool* flag) {$/;"	f	class:MacroLogicDeathTest
RunSetUpTestCase	test/gtest/fused-src/gtest/gtest.h	/^  void RunSetUpTestCase() { (*set_up_tc_)(); }$/;"	f	class:testing::TestCase
RunSetUpTestCase	test/gtest/include/gtest/gtest.h	/^  void RunSetUpTestCase() { (*set_up_tc_)(); }$/;"	f	class:testing::TestCase
RunTearDownTestCase	test/gtest/fused-src/gtest/gtest.h	/^  void RunTearDownTestCase() { (*tear_down_tc_)(); }$/;"	f	class:testing::TestCase
RunTearDownTestCase	test/gtest/include/gtest/gtest.h	/^  void RunTearDownTestCase() { (*tear_down_tc_)(); }$/;"	f	class:testing::TestCase
RunWithFlag	test/gtest/test/gtest_help_test.py	/^def RunWithFlag(flag):$/;"	f
RunWithSharding	test/gtest/test/gtest_filter_unittest.py	/^def RunWithSharding(total_shards, shard_index, command):$/;"	f
S	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  const unsigned S = 64;$/;"	m	struct:MachineAST	file:
SAMPLE_DIR	test/gtest/scripts/test/Makefile	/^SAMPLE_DIR = ..\/..\/samples$/;"	m
SCALE	experiments/backup/benchmarks/src/sgefa/driver.c	16;"	d	file:
SCALE	experiments/benchmarks/src/sgefa/driver.c	16;"	d	file:
SCCP	include/GEOS.h	/^  SCCP,$/;"	e	enum:OptimizationKind
SCIMARK2_H	experiments/backup/benchmarks/src/SciMark2-C/scimark2.h	3;"	d
SCIMARK2_H	experiments/benchmarks/src/SciMark2-C/scimark2.h	3;"	d
SCOPED_TRACE	test/gtest/fused-src/gtest/gtest.h	19940;"	d
SCOPED_TRACE	test/gtest/include/gtest/gtest.h	2170;"	d
SCRIPT_DIR	test/gtest/scripts/gen_gtest_pred_impl.py	/^SCRIPT_DIR = os.path.dirname(sys.argv[0])$/;"	v
SCRN	experiments/backup/benchmarks/src/base/ffbench.c	325;"	d	file:
SCRN	experiments/benchmarks/src/base/ffbench.c	325;"	d	file:
SCRX	experiments/backup/benchmarks/src/base/ffbench.c	323;"	d	file:
SCRX	experiments/benchmarks/src/base/ffbench.c	323;"	d	file:
SCRY	experiments/backup/benchmarks/src/base/ffbench.c	324;"	d	file:
SCRY	experiments/benchmarks/src/base/ffbench.c	324;"	d	file:
SCR_INFINITY	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	SCR_INFINITY = 32000$/;"	e	enum:__anon55
SCR_INFINITY	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	SCR_INFINITY = 32000$/;"	e	enum:__anon42
SCR_WIN	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	SCR_WIN = 20000,$/;"	e	enum:__anon55
SCR_WIN	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	SCR_WIN = 20000,$/;"	e	enum:__anon42
SEED	experiments/backup/benchmarks/src/SciMark2-C/MonteCarlo.c	/^static const int SEED = 113;$/;"	v	file:
SEED	experiments/benchmarks/src/SciMark2-C/MonteCarlo.c	/^static const int SEED = 113;$/;"	v	file:
SEIDEL_2D_H	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	9;"	d
SEIDEL_2D_H	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	9;"	d
SGEFASid	experiments/backup/benchmarks/src/sgefa/sgefa.c	/^static char SGEFASid[] = "@(#)sgefa.c	1.1  2\/4\/86";$/;"	v	file:
SGEFASid	experiments/benchmarks/src/sgefa/sgefa.c	/^static char SGEFASid[] = "@(#)sgefa.c	1.1  2\/4\/86";$/;"	v	file:
SGESLSid	experiments/backup/benchmarks/src/sgefa/sgesl.c	/^static char SGESLSid[] = "@(#)sgesl.c	1.1  2\/4\/86";$/;"	v	file:
SGESLSid	experiments/benchmarks/src/sgefa/sgesl.c	/^static char SGESLSid[] = "@(#)sgesl.c	1.1  2\/4\/86";$/;"	v	file:
SHARDED_TESTS	test/gtest/test/gtest_shuffle_test.py	/^SHARDED_TESTS = []$/;"	v
SHARD_INDEX_ENV_VAR	test/gtest/test/gtest_filter_unittest.py	/^SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'$/;"	v
SHARD_INDEX_ENV_VAR	test/gtest/test/gtest_shuffle_test.py	/^SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'$/;"	v
SHARD_STATUS_FILE_ENV_VAR	test/gtest/test/gtest_filter_unittest.py	/^SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'$/;"	v
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/CostAnalysis/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/CostEstimator/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/ProfileModule/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/CallCostAnalyzer/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/ExecutionFrequency/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Profiling/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/test/gtest/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tool/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tools/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIMMEDS	experiments/backup/benchmarks/src/aha/aha.h	38;"	d
SHIMMEDS	experiments/benchmarks/src/aha/aha.h	38;"	d
SHUFFLED_ACTIVE_TESTS	test/gtest/test/gtest_shuffle_test.py	/^SHUFFLED_ACTIVE_TESTS = []$/;"	v
SHUFFLED_ALL_TESTS	test/gtest/test/gtest_shuffle_test.py	/^SHUFFLED_ALL_TESTS = []$/;"	v
SHUFFLED_FILTERED_TESTS	test/gtest/test/gtest_shuffle_test.py	/^SHUFFLED_FILTERED_TESTS = []$/;"	v
SHUFFLED_SHARDED_TESTS	test/gtest/test/gtest_shuffle_test.py	/^SHUFFLED_SHARDED_TESTS = []$/;"	v
SIZE	experiments/backup/benchmarks/src/base/lists.c	10;"	d	file:
SIZE	experiments/backup/benchmarks/src/base/matrix.c	10;"	d	file:
SIZE	experiments/benchmarks/src/base/lists.c	10;"	d	file:
SIZE	experiments/benchmarks/src/base/matrix.c	10;"	d	file:
SIZE	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^int     SIZE;$/;"	v
SIZE	test/BBHashTests.cpp	1;"	d	file:
SMALL	experiments/backup/benchmarks/src/sgefa/driver.c	12;"	d	file:
SMALL	experiments/benchmarks/src/sgefa/driver.c	12;"	d	file:
SMALLsp	experiments/backup/benchmarks/src/sgefa/blas.c	18;"	d	file:
SMALLsp	experiments/benchmarks/src/sgefa/blas.c	18;"	d	file:
SOR_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int SOR_SIZE =100; \/* NxN grid *\/$/;"	v
SOR_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int SOR_SIZE =100; \/* NxN grid *\/$/;"	v
SOR_execute	experiments/backup/benchmarks/src/SciMark2-C/SOR.c	/^    void SOR_execute(int M, int N, double omega, double **G, int $/;"	f
SOR_execute	experiments/benchmarks/src/SciMark2-C/SOR.c	/^    void SOR_execute(int M, int N, double omega, double **G, int $/;"	f
SOR_num_flops	experiments/backup/benchmarks/src/SciMark2-C/SOR.c	/^    double SOR_num_flops(int M, int N, int num_iterations)$/;"	f
SOR_num_flops	experiments/benchmarks/src/SciMark2-C/SOR.c	/^    double SOR_num_flops(int M, int N, int num_iterations)$/;"	f
SPARSE_COMPROW_H	experiments/backup/benchmarks/src/SciMark2-C/SparseCompRow.h	3;"	d
SPARSE_COMPROW_H	experiments/benchmarks/src/SciMark2-C/SparseCompRow.h	3;"	d
SPARSE_SIZE_M	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int SPARSE_SIZE_M = 1000;$/;"	v
SPARSE_SIZE_M	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int SPARSE_SIZE_M = 1000;$/;"	v
SPARSE_SIZE_nz	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int SPARSE_SIZE_nz = 5000;$/;"	v
SPARSE_SIZE_nz	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int SPARSE_SIZE_nz = 5000;$/;"	v
SROA	include/GEOS.h	/^  SROA,$/;"	e	enum:OptimizationKind
STACK_TRACE_TEMPLATE	test/gtest/test/gtest_xml_output_unittest.py	/^  STACK_TRACE_TEMPLATE = ''$/;"	v
STACK_TRACE_TEMPLATE	test/gtest/test/gtest_xml_output_unittest.py	/^  STACK_TRACE_TEMPLATE = '\\nStack trace:\\n*'$/;"	v
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	13;"	d
STANDARD_DATASET	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/datamining/correlation/correlation.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/datamining/covariance/covariance.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/adi/adi.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	13;"	d
STANDARD_DATASET	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	13;"	d
START_X	experiments/backup/benchmarks/src/base/mandel.c	7;"	d	file:
START_X	experiments/benchmarks/src/base/mandel.c	7;"	d	file:
START_Y	experiments/backup/benchmarks/src/base/mandel.c	8;"	d	file:
START_Y	experiments/benchmarks/src/base/mandel.c	8;"	d	file:
STATE	experiments/backup/benchmarks/src/base/salsa20.c	/^uint32_t STATE[16];$/;"	v
STATE	experiments/benchmarks/src/base/salsa20.c	/^uint32_t STATE[16];$/;"	v
STDIN_FILENAME	experiments/backup/benchmarks/src/.hexxagon/Makefile	/^STDIN_FILENAME=$(PROJ_SRC_DIR)\/input$/;"	m
STDIN_FILENAME	experiments/benchmarks/src/.hexxagon/Makefile	/^STDIN_FILENAME=$(PROJ_SRC_DIR)\/input$/;"	m
STREAM_RESULT_TO_FLAG	test/gtest/test/gtest_help_test.py	/^STREAM_RESULT_TO_FLAG = FLAG_PREFIX + 'stream_result_to'$/;"	v
STUFF	experiments/backup/benchmarks/src/base/strcat.c	10;"	d	file:
STUFF	experiments/benchmarks/src/base/strcat.c	10;"	d	file:
SUCCEED	test/gtest/fused-src/gtest/gtest.h	19299;"	d
SUCCEED	test/gtest/include/gtest/gtest.h	1886;"	d
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/examples/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Branch/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Cache/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Call/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Instruction/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Instruction/StaticCost/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Instruction/TTI/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/CostAnalysis/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/CostEstimator/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/ProfileModule/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/CallCostAnalyzer/CallCostPass/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/CallCostAnalyzer/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/ExecutionFrequency/GCOV/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/ExecutionFrequency/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/ExecutionFrequency/Static/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Profiling/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/test/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/test/gtest/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tool/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tools/Makefile	/^SUFFIXES =$/;"	m
SUPPORTS_DEATH_TESTS	test/gtest/test/gtest_filter_unittest.py	/^SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess($/;"	v
SUPPORTS_DEATH_TESTS	test/gtest/test/gtest_help_test.py	/^SUPPORTS_DEATH_TESTS = "DeathTest" in gtest_test_utils.Subprocess($/;"	v
SUPPORTS_DEATH_TESTS	test/gtest/test/gtest_output_test.py	/^SUPPORTS_DEATH_TESTS = 'DeathTest' in test_list$/;"	v
SUPPORTS_SEH_EXCEPTIONS	test/gtest/test/gtest_catch_exceptions_test.py	/^SUPPORTS_SEH_EXCEPTIONS = 'ThrowsSehException' in TEST_LIST$/;"	v
SUPPORTS_STACK_TRACES	test/gtest/test/gtest_output_test.py	/^SUPPORTS_STACK_TRACES = False$/;"	v
SUPPORTS_STACK_TRACES	test/gtest/test/gtest_xml_output_unittest.py	/^SUPPORTS_STACK_TRACES = False$/;"	v
SUPPORTS_THREADS	test/gtest/test/gtest_output_test.py	/^SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_list$/;"	v
SUPPORTS_TYPED_TESTS	test/gtest/test/gtest_output_test.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in test_list$/;"	v
SUPPORTS_TYPED_TESTS	test/gtest/test/gtest_xml_output_unittest.py	/^SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess($/;"	v
SWAP	experiments/backup/benchmarks/src/base/ffbench.c	155;"	d	file:
SWAP	experiments/backup/benchmarks/src/base/ffbench.c	225;"	d	file:
SWAP	experiments/benchmarks/src/base/ffbench.c	155;"	d	file:
SWAP	experiments/benchmarks/src/base/ffbench.c	225;"	d	file:
SYMM_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	9;"	d
SYMM_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.h	9;"	d
SYR2K_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	9;"	d
SYR2K_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.h	9;"	d
SYRK_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	9;"	d
SYRK_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.h	9;"	d
S_HOLD	experiments/backup/benchmarks/src/base/richards_benchmark.c	57;"	d	file:
S_HOLD	experiments/benchmarks/src/base/richards_benchmark.c	57;"	d	file:
S_HOLDPKT	experiments/backup/benchmarks/src/base/richards_benchmark.c	58;"	d	file:
S_HOLDPKT	experiments/benchmarks/src/base/richards_benchmark.c	58;"	d	file:
S_HOLDWAIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	59;"	d	file:
S_HOLDWAIT	experiments/benchmarks/src/base/richards_benchmark.c	59;"	d	file:
S_HOLDWAITPKT	experiments/backup/benchmarks/src/base/richards_benchmark.c	60;"	d	file:
S_HOLDWAITPKT	experiments/benchmarks/src/base/richards_benchmark.c	60;"	d	file:
S_RUN	experiments/backup/benchmarks/src/base/richards_benchmark.c	53;"	d	file:
S_RUN	experiments/benchmarks/src/base/richards_benchmark.c	53;"	d	file:
S_RUNPKT	experiments/backup/benchmarks/src/base/richards_benchmark.c	54;"	d	file:
S_RUNPKT	experiments/benchmarks/src/base/richards_benchmark.c	54;"	d	file:
S_WAIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	55;"	d	file:
S_WAIT	experiments/benchmarks/src/base/richards_benchmark.c	55;"	d	file:
S_WAITPKT	experiments/backup/benchmarks/src/base/richards_benchmark.c	56;"	d	file:
S_WAITPKT	experiments/benchmarks/src/base/richards_benchmark.c	56;"	d	file:
SampleProfilePass	include/GEOS.h	/^  SampleProfilePass,$/;"	e	enum:OptimizationKind
ScalarReplAggregates	include/GEOS.h	/^  ScalarReplAggregates,$/;"	e	enum:OptimizationKind
ScalarizerPass	include/GEOS.h	/^  ScalarizerPass,$/;"	e	enum:OptimizationKind
ScopedFakeTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedFakeTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing	file:
ScopedFakeTestPartResultReporter	test/gtest/include/gtest/gtest-spi.h	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing
ScopedFakeTestPartResultReporter	test/gtest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedFakeTestPartResultReporterTest	test/gtest/test/gtest_output_test_.cc	/^typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;$/;"	t	file:
ScopedFakeTestPartResultReporterTest	test/gtest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterTest : public Test {$/;"	c	namespace:__anon14	file:
ScopedFakeTestPartResultReporterWithThreadsTest	test/gtest/test/gtest_unittest.cc	/^class ScopedFakeTestPartResultReporterWithThreadsTest$/;"	c	namespace:__anon14	file:
ScopedPrematureExitFile	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile
ScopedPrematureExitFile	test/gtest/fused-src/gtest/gtest-all.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedPrematureExitFile	test/gtest/src/gtest.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile
ScopedPrematureExitFile	test/gtest/src/gtest.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedTrace	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing::internal
ScopedTrace	test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing::internal
Search	docs/html/search/search.js	/^    this.Search = function(search)$/;"	m	class:SearchResults
Search	docs/html/search/search.js	/^  this.Search = function()$/;"	m	class:SearchBox
SearchBox	docs/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchResults	docs/html/search/search.js	/^function SearchResults(name)$/;"	c
SehExceptionInConstructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  SehExceptionInConstructorTest() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInConstructorTest
SehExceptionInConstructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInConstructorTest : public Test {$/;"	c	file:
SehExceptionInDestructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInDestructorTest : public Test {$/;"	c	file:
SehExceptionInSetUpTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInSetUpTest : public Test {$/;"	c	file:
SehExceptionInSetUpTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInSetUpTestCaseTest : public Test {$/;"	c	file:
SehExceptionInTearDownTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInTearDownTest : public Test {$/;"	c	file:
SehExceptionInTearDownTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^class SehExceptionInTearDownTestCaseTest : public Test {$/;"	c	file:
SelectItemCount	docs/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m	class:SearchBox
SelectItemSet	docs/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m	class:SearchBox
Send	test/gtest/fused-src/gtest/gtest-all.cc	/^    virtual void Send(const string& message) {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
Send	test/gtest/src/gtest-internal-inl.h	/^    virtual void Send(const string& message) {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
Send	test/gtest/test/gtest_unittest.cc	/^    virtual void Send(const string& message) { output_ += message; }$/;"	f	class:testing::internal::StreamingListenerTest::FakeSocketWriter
SendLn	test/gtest/fused-src/gtest/gtest-all.cc	/^    void SendLn(const string& message) {$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
SendLn	test/gtest/fused-src/gtest/gtest-all.cc	/^  void SendLn(const string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener	file:
SendLn	test/gtest/src/gtest-internal-inl.h	/^    void SendLn(const string& message) {$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
SendLn	test/gtest/src/gtest-internal-inl.h	/^  void SendLn(const string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener
SeparateConstOffsetFromGEP	include/GEOS.h	/^  SeparateConstOffsetFromGEP,$/;"	e	enum:OptimizationKind
SeparateInstanceTest	test/gtest/test/gtest-param-test_test.cc	/^  SeparateInstanceTest() : count_(0) {}$/;"	f	class:SeparateInstanceTest
SeparateInstanceTest	test/gtest/test/gtest-param-test_test.cc	/^class SeparateInstanceTest : public TestWithParam<int> {$/;"	c	file:
SequenceTestingListener	test/gtest/test/gtest_unittest.cc	/^  SequenceTestingListener(std::vector<std::string>* vector, const char* id)$/;"	f	class:SequenceTestingListener
SequenceTestingListener	test/gtest/test/gtest_unittest.cc	/^class SequenceTestingListener : public EmptyTestEventListener {$/;"	c	file:
Set	test/gtest/fused-src/gtest/gtest.h	/^  void Set(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
Set	test/gtest/include/gtest/internal/gtest-filepath.h	/^  void Set(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
Set	test/gtest/samples/sample2.cc	/^void MyString::Set(const char* a_c_string) {$/;"	f	class:MyString
SetDefaultResultPrinter	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultResultPrinter	test/gtest/src/gtest.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultResultPrinter	test/gtest/test/gtest_unittest.cc	/^  static void SetDefaultResultPrinter(TestEventListeners* listeners,$/;"	f	class:testing::internal::TestEventListenersAccessor
SetDefaultXmlGenerator	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultXmlGenerator	test/gtest/src/gtest.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultXmlGenerator	test/gtest/test/gtest_unittest.cc	/^  static void SetDefaultXmlGenerator(TestEventListeners* listeners,$/;"	f	class:testing::internal::TestEventListenersAccessor
SetEnv	test/gtest/test/gtest_unittest.cc	/^static void SetEnv(const char* name, const char* value) {$/;"	f	namespace:__anon14
SetEnvVar	test/gtest/test/gtest_break_on_failure_unittest.py	/^SetEnvVar = gtest_test_utils.SetEnvVar$/;"	v
SetEnvVar	test/gtest/test/gtest_catch_exceptions_test.py	/^SetEnvVar = gtest_test_utils.SetEnvVar$/;"	v
SetEnvVar	test/gtest/test/gtest_color_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	test/gtest/test/gtest_env_var_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	test/gtest/test/gtest_filter_unittest.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	test/gtest/test/gtest_test_utils.py	/^def SetEnvVar(env_var, value):$/;"	f
SetEnvVar	test/gtest/test/gtest_throw_on_failure_test.py	/^def SetEnvVar(env_var, value):$/;"	f
SetGlobalTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl
SetGlobalTestPartResultReporter	test/gtest/src/gtest.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl
SetInjectableArgvs	test/gtest/fused-src/gtest/gtest-all.cc	/^void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {$/;"	f	namespace:testing::internal
SetInjectableArgvs	test/gtest/src/gtest-port.cc	/^void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {$/;"	f	namespace:testing::internal
SetParam	test/gtest/fused-src/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) {$/;"	f	class:testing::WithParamInterface
SetParam	test/gtest/include/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) {$/;"	f	class:testing::WithParamInterface
SetParameters	test/gtest/test/gtest-death-test_test.cc	/^void MockDeathTestFactory::SetParameters(bool create,$/;"	f	class:MockDeathTestFactory
SetPthreadFlag	test/gtest/test/gtest-death-test_test.cc	/^void SetPthreadFlag() {$/;"	f	namespace:__anon32
SetSigprofActionAndTimer	test/gtest/test/gtest-death-test_test.cc	/^void SetSigprofActionAndTimer() {$/;"	f
SetTestPartResultReporterForCurrentThread	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl
SetTestPartResultReporterForCurrentThread	test/gtest/src/gtest.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl
SetTimeZone	test/gtest/test/gtest_unittest.cc	/^  static void SetTimeZone(const char* time_zone) {$/;"	f	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
SetUp	test/gtest/fused-src/gtest/gtest-all.cc	/^void Test::SetUp() {$/;"	f	class:testing::Test
SetUp	test/gtest/fused-src/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment
SetUp	test/gtest/include/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment
SetUp	test/gtest/samples/sample3_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QueueTest
SetUp	test/gtest/samples/sample5_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QueueTest
SetUp	test/gtest/samples/sample5_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:QuickTest
SetUp	test/gtest/samples/sample7_unittest.cc	/^  virtual void SetUp() { table_ = (*GetParam())(); }$/;"	f	class:PrimeTableTest
SetUp	test/gtest/samples/sample8_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:PrimeTableTest
SetUp	test/gtest/src/gtest.cc	/^void Test::SetUp() {$/;"	f	class:testing::Test
SetUp	test/gtest/test/gtest-filepath_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::__anon22::DirectoryCreationTest
SetUp	test/gtest/test/gtest-listener_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::EnvironmentInvocationCatcher
SetUp	test/gtest/test/gtest-listener_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::ListenerTest
SetUp	test/gtest/test/gtest-options_test.cc	/^  virtual void SetUp() {$/;"	f	class:testing::internal::__anon18::XmlOutputChangeDirTest
SetUp	test/gtest/test/gtest-param-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:TestGenerationTest
SetUp	test/gtest/test/gtest-typed-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:CommonTest
SetUp	test/gtest/test/gtest-typed-test_test.cc	/^  virtual void SetUp() {$/;"	f	class:TypedTestCasePStateTest
SetUp	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInSetUpTest
SetUp	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() { throw std::runtime_error("Standard C++ exception"); }$/;"	f	class:CxxExceptionInSetUpTest
SetUp	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() {$/;"	f	class:CxxExceptionInConstructorTest
SetUp	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void SetUp() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
SetUp	test/gtest/test/gtest_environment_test.cc	/^  virtual void SetUp() {$/;"	f	class:__anon21::MyEnvironment
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:BarEnvironment
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:DeathTestAndMultiThreadsTest
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FatalFailureInFixtureConstructorTest
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FatalFailureInSetUpTest
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:FooEnvironment
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest
SetUp	test/gtest/test/gtest_output_test_.cc	/^  virtual void SetUp() {$/;"	f	class:NonFatalFailureInSetUpTest
SetUp	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate1Test
SetUp	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate2Test
SetUp	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate3Test
SetUp	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate4Test
SetUp	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:Predicate5Test
SetUp	test/gtest/test/gtest_repeat_test.cc	/^  virtual void SetUp() { g_environment_set_up_count++; }$/;"	f	class:__anon33::MyEnvironment
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:ProtectedFixtureMethodsTest
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anon14::FloatingPointTest
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anon14::ShouldShardTest
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:__anon14::TestResultTest
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:testing::InitGoogleTestTest
SetUp	test/gtest/test/gtest_unittest.cc	/^  virtual void SetUp() {$/;"	f	class:testing::SetUpTestCaseTest
SetUp	test/gtest/test/gtest_xml_outfile1_test_.cc	/^  virtual void SetUp() {$/;"	f	class:PropertyOne
SetUp	test/gtest/test/gtest_xml_outfile2_test_.cc	/^  virtual void SetUp() {$/;"	f	class:PropertyTwo
SetUpEnvironment	test/gtest/fused-src/gtest/gtest-all.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal
SetUpEnvironment	test/gtest/src/gtest.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal
SetUpExecuted	test/gtest/test/gtest-param-test_test.cc	/^  void SetUpExecuted() { set_up_count_++; }$/;"	f	class:TestGenerationEnvironment
SetUpTestCase	test/gtest/fused-src/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test
SetUpTestCase	test/gtest/include/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test
SetUpTestCase	test/gtest/test/gtest-death-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:MacroLogicDeathTest
SetUpTestCase	test/gtest/test/gtest-listener_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::internal::ListenerTest
SetUpTestCase	test/gtest/test/gtest-param-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:TestGenerationTest
SetUpTestCase	test/gtest/test/gtest-typed-test_test.cc	/^  static void SetUpTestCase() {$/;"	f	class:CommonTest
SetUpTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void SetUpTestCase() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInSetUpTestCaseTest
SetUpTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void SetUpTestCase() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
SetUpTestCase	test/gtest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anon14::DisabledTestsTest
SetUpTestCase	test/gtest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anon14::GTestFlagSaverTest
SetUpTestCase	test/gtest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:__anon14::UnitTestRecordPropertyTest
SetUpTestCase	test/gtest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::CurrentTestInfoTest
SetUpTestCase	test/gtest/test/gtest_unittest.cc	/^  static void SetUpTestCase() {$/;"	f	class:testing::SetUpTestCaseTest
SetUpTestCase	test/gtest/test/gtest_xml_output_unittest_.cc	/^  static void SetUpTestCase() { RecordProperty("SetUpTestCase", "yes"); }$/;"	f	class:PropertyRecordingTest
SetUpTestCaseFunc	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;$/;"	t	class:testing::Test
SetUpTestCaseFunc	test/gtest/fused-src/gtest/gtest.h	/^typedef void (*SetUpTestCaseFunc)();$/;"	t	namespace:testing::internal
SetUpTestCaseFunc	test/gtest/include/gtest/gtest.h	/^  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;$/;"	t	class:testing::Test
SetUpTestCaseFunc	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef void (*SetUpTestCaseFunc)();$/;"	t	namespace:testing::internal
SetUpTestCaseTest	test/gtest/test/gtest_unittest.cc	/^class SetUpTestCaseTest : public Test {$/;"	c	namespace:testing	file:
SetValue	test/gtest/fused-src/gtest/gtest.h	/^  void SetValue(const std::string& new_value) {$/;"	f	class:testing::TestProperty
SetValue	test/gtest/include/gtest/gtest.h	/^  void SetValue(const std::string& new_value) {$/;"	f	class:testing::TestProperty
Sets	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::vector<CacheSet> Sets;$/;"	m	struct:AbstractCacheState	file:
Setup	test/gtest/fused-src/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Environment
Setup	test/gtest/fused-src/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Test
Setup	test/gtest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Environment
Setup	test/gtest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Test
Setup_should_be_spelled_SetUp	test/gtest/fused-src/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	test/gtest/fused-src/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
Setup_should_be_spelled_SetUp	test/gtest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	test/gtest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
ShouldRunTest	test/gtest/fused-src/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
ShouldRunTest	test/gtest/include/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
ShouldRunTestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool ShouldRunTestCase(const TestCase* test_case) {$/;"	f	namespace:testing::internal
ShouldRunTestCase	test/gtest/src/gtest.cc	/^static bool ShouldRunTestCase(const TestCase* test_case) {$/;"	f	namespace:testing::internal
ShouldRunTestOnShard	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal
ShouldRunTestOnShard	test/gtest/src/gtest.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal
ShouldShard	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ShouldShard(const char* total_shards_env,$/;"	f	namespace:testing::internal
ShouldShard	test/gtest/src/gtest.cc	/^bool ShouldShard(const char* total_shards_env,$/;"	f	namespace:testing::internal
ShouldShardDeathTest	test/gtest/test/gtest_unittest.cc	/^typedef ShouldShardTest ShouldShardDeathTest;$/;"	t	namespace:__anon14	file:
ShouldShardTest	test/gtest/test/gtest_unittest.cc	/^class ShouldShardTest : public testing::Test {$/;"	c	namespace:__anon14	file:
ShouldUseColor	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal
ShouldUseColor	test/gtest/src/gtest.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal
ShowWideCString	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string String::ShowWideCString(const wchar_t * wide_c_str) {$/;"	f	class:testing::internal::String
ShowWideCString	test/gtest/src/gtest.cc	/^std::string String::ShowWideCString(const wchar_t * wide_c_str) {$/;"	f	class:testing::internal::String
Shuffle	test/gtest/fused-src/gtest/gtest-all.cc	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal
Shuffle	test/gtest/src/gtest-internal-inl.h	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal
Shuffle	test/gtest/test/gtest_unittest.cc	/^  static Flags Shuffle(bool shuffle) {$/;"	f	struct:testing::Flags
ShuffleFlag	test/gtest/test/gtest_shuffle_test.py	/^def ShuffleFlag():$/;"	f
ShuffleRange	test/gtest/fused-src/gtest/gtest-all.cc	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal
ShuffleRange	test/gtest/src/gtest-internal-inl.h	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal
ShuffleTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestCase::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestCase
ShuffleTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
ShuffleTests	test/gtest/src/gtest.cc	/^void TestCase::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestCase
ShuffleTests	test/gtest/src/gtest.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
SignAndMagnitudeToBiased	test/gtest/fused-src/gtest/gtest.h	/^  static Bits SignAndMagnitudeToBiased(const Bits &sam) {$/;"	f	class:testing::internal::FloatingPoint
SignAndMagnitudeToBiased	test/gtest/include/gtest/internal/gtest-internal.h	/^  static Bits SignAndMagnitudeToBiased(const Bits &sam) {$/;"	f	class:testing::internal::FloatingPoint
SigprofAction	test/gtest/test/gtest-death-test_test.cc	/^void SigprofAction(int, siginfo_t*, void*) { \/* no op *\/ }$/;"	f
SingleEvaluationTest	test/gtest/test/gtest_unittest.cc	/^  SingleEvaluationTest() {$/;"	f	class:__anon14::SingleEvaluationTest
SingleEvaluationTest	test/gtest/test/gtest_unittest.cc	/^class SingleEvaluationTest : public Test {$/;"	c	namespace:__anon14	file:
SingleFailureChecker	test/gtest/fused-src/gtest/gtest-all.cc	/^SingleFailureChecker:: SingleFailureChecker($/;"	f	class:testing::internal::SingleFailureChecker
SingleFailureChecker	test/gtest/fused-src/gtest/gtest-all.cc	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal	file:
SingleFailureChecker	test/gtest/include/gtest/gtest-spi.h	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal
SingleFailureChecker	test/gtest/src/gtest.cc	/^SingleFailureChecker:: SingleFailureChecker($/;"	f	class:testing::internal::SingleFailureChecker
Sink	include/GEOS.h	/^  Sink,$/;"	e	enum:OptimizationKind
Size	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned Size;$/;"	m	class:CacheSet	file:
Size	test/gtest/samples/sample3-inl.h	/^  size_t Size() const { return size_; }$/;"	f	class:Queue
Skip	test/gtest/scripts/pump.py	/^def Skip(lines, pos, regex):$/;"	f
SkipComma	test/gtest/fused-src/gtest/gtest.h	/^inline const char* SkipComma(const char* str) {$/;"	f	namespace:testing::internal
SkipComma	test/gtest/include/gtest/internal/gtest-internal.h	/^inline const char* SkipComma(const char* str) {$/;"	f	namespace:testing::internal
SkipPrefix	test/gtest/fused-src/gtest/gtest-all.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal
SkipPrefix	test/gtest/src/gtest.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal
SkipSpaces	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal
SkipSpaces	test/gtest/src/gtest-typed-test.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal
SkipUntil	test/gtest/scripts/pump.py	/^def SkipUntil(lines, pos, regex, token_type):$/;"	f
SleepMilliseconds	test/gtest/fused-src/gtest/gtest.h	/^inline void SleepMilliseconds(int n) {$/;"	f	namespace:std::tr1
SleepMilliseconds	test/gtest/include/gtest/internal/gtest-port.h	/^inline void SleepMilliseconds(int n) {$/;"	f	namespace:testing::internal
SocketWriter	test/gtest/fused-src/gtest/gtest-all.cc	/^    SocketWriter(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	test/gtest/fused-src/gtest/gtest-all.cc	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
SocketWriter	test/gtest/src/gtest-internal-inl.h	/^    SocketWriter(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	test/gtest/src/gtest-internal-inl.h	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
SortDstEdgesFunctor	include/Profiling/GCOV.h	/^  struct SortDstEdgesFunctor {$/;"	s	class:llvm::GCOVBlock
SparseCompRow_matmult	experiments/backup/benchmarks/src/SciMark2-C/SparseCompRow.c	/^    void SparseCompRow_matmult( int M, double *y, double *val, int *row,$/;"	f
SparseCompRow_matmult	experiments/benchmarks/src/SciMark2-C/SparseCompRow.c	/^    void SparseCompRow_matmult( int M, double *y, double *val, int *row,$/;"	f
SparseCompRow_num_flops	experiments/backup/benchmarks/src/SciMark2-C/SparseCompRow.c	/^    double SparseCompRow_num_flops(int N, int nz, int num_iterations)$/;"	f
SparseCompRow_num_flops	experiments/benchmarks/src/SciMark2-C/SparseCompRow.c	/^    double SparseCompRow_num_flops(int N, int nz, int num_iterations)$/;"	f
SpawnThreadNotifications	test/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications() {}$/;"	f	struct:SpawnThreadNotifications
SpawnThreadNotifications	test/gtest/test/gtest_output_test_.cc	/^struct SpawnThreadNotifications {$/;"	s	file:
SplitString	test/gtest/fused-src/gtest/gtest-all.cc	/^static void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal
SplitString	test/gtest/src/gtest-death-test.cc	/^static void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal
Src	include/Profiling/GCOV.h	/^  GCOVBlock &Src;$/;"	m	struct:llvm::GCOVEdge
SrcEdges	include/Profiling/GCOV.h	/^  SmallVector<GCOVEdge *, 16> SrcEdges;$/;"	m	class:llvm::GCOVBlock
StackGrowsDown	test/gtest/fused-src/gtest/gtest-all.cc	/^bool StackGrowsDown() {$/;"	f	namespace:testing::internal
StackGrowsDown	test/gtest/src/gtest-death-test.cc	/^bool StackGrowsDown() {$/;"	f	namespace:testing::internal
StackLowerThanAddress	test/gtest/fused-src/gtest/gtest-all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal
StackLowerThanAddress	test/gtest/src/gtest-death-test.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal
StackTraceDepth	test/gtest/test/gtest_unittest.cc	/^  static Flags StackTraceDepth(Int32 stack_trace_depth) {$/;"	f	struct:testing::Flags
Start	test/gtest/fused-src/gtest/gtest-all.cc	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener	file:
Start	test/gtest/src/gtest-internal-inl.h	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener
StartsWith	test/gtest/scripts/pump.py	/^def StartsWith(lines, pos, string):$/;"	f
Stat	test/gtest/fused-src/gtest/gtest.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:std::tr1::posix
Stat	test/gtest/include/gtest/internal/gtest-port.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:testing::internal::posix
StatStruct	test/gtest/fused-src/gtest/gtest.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:std::tr1::posix	typeref:struct:std::tr1::posix::_stat
StatStruct	test/gtest/include/gtest/internal/gtest-port.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:testing::internal::posix	typeref:struct:testing::internal::posix::_stat
StaticAssertTypeEq	test/gtest/fused-src/gtest/gtest.h	/^bool StaticAssertTypeEq() {$/;"	f	namespace:testing
StaticAssertTypeEq	test/gtest/include/gtest/gtest.h	/^bool StaticAssertTypeEq() {$/;"	f	namespace:testing
StaticAssertTypeEqHelper	test/gtest/include/gtest/internal/gtest-port.h	/^struct StaticAssertTypeEqHelper<T, T> {};$/;"	s	namespace:testing::internal
StaticAssertTypeEqTestHelper	test/gtest/test/gtest_unittest.cc	/^  StaticAssertTypeEqTestHelper() { StaticAssertTypeEq<bool, T>(); }$/;"	f	class:StaticAssertTypeEqTestHelper
StaticAssertTypeEqTestHelper	test/gtest/test/gtest_unittest.cc	/^class StaticAssertTypeEqTestHelper {$/;"	c	file:
StaticInstruction	include/CostEstimator/CostEstimatorOptions.h	/^    Cache, StaticInstruction, TTIInstruction, Branch, Call$/;"	e	enum:__anon4::CostAnalysisKind
StaticInstructionAnalysis	include/CostEstimator/CostAnalysis.h	/^class StaticInstructionAnalysis : public CostAnalysis {$/;"	c
StaticMemberFunction	test/gtest/test/gtest-death-test_test.cc	/^  static void StaticMemberFunction() { DieInside("StaticMemberFunction"); }$/;"	f	class:TestForDeathTest
StaticProfiling	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^  StaticProfiling(ProfileModule *P) : FunctionPass(ID), Profile(P) {};$/;"	f	struct:StaticProfiling
StaticProfiling	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^struct StaticProfiling : public FunctionPass {$/;"	s	file:
Stopwatch	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.h	/^} *Stopwatch, Stopwatch_struct;$/;"	t	typeref:struct:__anon57
Stopwatch	experiments/benchmarks/src/SciMark2-C/Stopwatch.h	/^} *Stopwatch, Stopwatch_struct;$/;"	t	typeref:struct:__anon44
Stopwatch_delete	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_delete(Stopwatch S)$/;"	f
Stopwatch_delete	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_delete(Stopwatch S)$/;"	f
Stopwatch_read	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^double Stopwatch_read(Stopwatch Q)$/;"	f
Stopwatch_read	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^double Stopwatch_read(Stopwatch Q)$/;"	f
Stopwatch_resume	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_resume(Stopwatch Q)$/;"	f
Stopwatch_resume	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_resume(Stopwatch Q)$/;"	f
Stopwatch_start	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_start(Stopwatch Q)$/;"	f
Stopwatch_start	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_start(Stopwatch Q)$/;"	f
Stopwatch_stop	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_stop(Stopwatch Q)  $/;"	f
Stopwatch_stop	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwatch_stop(Stopwatch Q)  $/;"	f
Stopwatch_struct	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.h	/^} *Stopwatch, Stopwatch_struct;$/;"	t	typeref:struct:__anon57
Stopwatch_struct	experiments/benchmarks/src/SciMark2-C/Stopwatch.h	/^} *Stopwatch, Stopwatch_struct;$/;"	t	typeref:struct:__anon44
Stopwtach_reset	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwtach_reset(Stopwatch Q)$/;"	f
Stopwtach_reset	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^void Stopwtach_reset(Stopwatch Q)$/;"	f
StrCaseCmp	test/gtest/fused-src/gtest/gtest.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:std::tr1::posix
StrCaseCmp	test/gtest/include/gtest/internal/gtest-port.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:testing::internal::posix
StrDup	test/gtest/fused-src/gtest/gtest.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:std::tr1::posix
StrDup	test/gtest/fused-src/gtest/gtest.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:std::tr1::posix
StrDup	test/gtest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:testing::internal::posix
StrDup	test/gtest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:testing::internal::posix
StrError	test/gtest/fused-src/gtest/gtest.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:std::tr1::posix
StrError	test/gtest/include/gtest/internal/gtest-port.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:testing::internal::posix
StrNCpy	test/gtest/fused-src/gtest/gtest.h	/^inline const char* StrNCpy(char* dest, const char* src, size_t n) {$/;"	f	namespace:std::tr1::posix
StrNCpy	test/gtest/include/gtest/internal/gtest-port.h	/^inline const char* StrNCpy(char* dest, const char* src, size_t n) {$/;"	f	namespace:testing::internal::posix
StreamHelper	test/gtest/fused-src/gtest/gtest.h	/^  inline void StreamHelper(internal::false_type \/*is_pointer*\/,$/;"	f	class:testing::Message
StreamHelper	test/gtest/fused-src/gtest/gtest.h	/^  inline void StreamHelper(internal::true_type \/*is_pointer*\/, T* pointer) {$/;"	f	class:testing::Message
StreamHelper	test/gtest/include/gtest/gtest-message.h	/^  inline void StreamHelper(internal::false_type \/*is_pointer*\/,$/;"	f	class:testing::Message
StreamHelper	test/gtest/include/gtest/gtest-message.h	/^  inline void StreamHelper(internal::true_type \/*is_pointer*\/, T* pointer) {$/;"	f	class:testing::Message
StreamResultTo	test/gtest/test/gtest_unittest.cc	/^  static Flags StreamResultTo(const char* stream_result_to) {$/;"	f	struct:testing::Flags
StreamWideCharsToMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal
StreamWideCharsToMessage	test/gtest/src/gtest.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal
StreamableInGlobal	test/gtest/test/gtest-printers_test.cc	/^class StreamableInGlobal {$/;"	c	file:
StreamableTemplateInFoo	test/gtest/test/gtest-printers_test.cc	/^  StreamableTemplateInFoo() : value_() {}$/;"	f	class:foo::StreamableTemplateInFoo
StreamableTemplateInFoo	test/gtest/test/gtest-printers_test.cc	/^class StreamableTemplateInFoo {$/;"	c	namespace:foo	file:
StreamableToString	test/gtest/fused-src/gtest/gtest.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal
StreamableToString	test/gtest/include/gtest/gtest-message.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal
StreamingListener	test/gtest/fused-src/gtest/gtest-all.cc	/^  StreamingListener(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	test/gtest/fused-src/gtest/gtest-all.cc	/^class StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
StreamingListener	test/gtest/src/gtest-internal-inl.h	/^  StreamingListener(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	test/gtest/src/gtest-internal-inl.h	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	test/gtest/src/gtest-internal-inl.h	/^class StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal
StreamingListenerTest	test/gtest/test/gtest_unittest.cc	/^  StreamingListenerTest()$/;"	f	class:testing::internal::StreamingListenerTest
StreamingListenerTest	test/gtest/test/gtest_unittest.cc	/^class StreamingListenerTest : public Test {$/;"	c	namespace:testing::internal	file:
String	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
String	test/gtest/include/gtest/internal/gtest-string.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
String30	experiments/backup/benchmarks/src/base/dry.c	/^typedef char	String30[31];$/;"	t	file:
String30	experiments/backup/benchmarks/src/base/fldry.c	/^typedef char	String30[31];$/;"	t	file:
String30	experiments/benchmarks/src/base/dry.c	/^typedef char	String30[31];$/;"	t	file:
String30	experiments/benchmarks/src/base/fldry.c	/^typedef char	String30[31];$/;"	t	file:
StringComp	experiments/backup/benchmarks/src/base/dry.c	/^	String30		StringComp;$/;"	m	struct:Record	file:
StringComp	experiments/backup/benchmarks/src/base/fldry.c	/^	String30		StringComp;$/;"	m	struct:Record	file:
StringComp	experiments/benchmarks/src/base/dry.c	/^	String30		StringComp;$/;"	m	struct:Record	file:
StringComp	experiments/benchmarks/src/base/fldry.c	/^	String30		StringComp;$/;"	m	struct:Record	file:
StringFromGTestEnv	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal
StringFromGTestEnv	test/gtest/src/gtest-port.cc	/^const char* StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal
StringStreamToString	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal
StringStreamToString	test/gtest/src/gtest.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal
StringTypes	test/gtest/test/gtest-port_test.cc	/^    const char*> StringTypes;$/;"	t	namespace:testing::internal	file:
Strings	test/gtest/fused-src/gtest/gtest.h	/^typedef ::std::vector<string> Strings;$/;"	t	namespace:testing::internal
Strings	test/gtest/include/gtest/gtest-printers.h	/^typedef ::std::vector<string> Strings;$/;"	t	namespace:testing::internal
StripMetaComments	test/gtest/scripts/pump.py	/^def StripMetaComments(str):$/;"	f
SubClassOfTest	test/gtest/test/gtest_unittest.cc	/^class SubClassOfTest : public Test {};$/;"	c	namespace:__anon14	file:
SubString	test/gtest/scripts/pump.py	/^def SubString(lines, start, end):$/;"	f
SubWithTrace	test/gtest/test/gtest_output_test_.cc	/^void SubWithTrace(int n) {$/;"	f
SubWithoutTrace	test/gtest/test/gtest_output_test_.cc	/^void SubWithoutTrace(int n) {$/;"	f
Subprocess	test/gtest/test/gtest_test_utils.py	/^class Subprocess:$/;"	c
Subroutine	test/gtest/test/gtest_sole_header_test.cc	/^void Subroutine() {$/;"	f	namespace:__anon28
Succeeds	test/gtest/test/gtest_unittest.cc	/^  void Succeeds() {}$/;"	f	class:__anon14::NoFatalFailureTest
SuccessfulTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^class SuccessfulTest : public Test {$/;"	c	file:
SumIsEven2	test/gtest/test/gtest_unittest.cc	/^bool SumIsEven2(int n1, int n2) {$/;"	f	namespace:__anon14
SumIsEven3Functor	test/gtest/test/gtest_unittest.cc	/^struct SumIsEven3Functor {$/;"	s	namespace:__anon14	file:
SumOverTestCaseList	test/gtest/fused-src/gtest/gtest-all.cc	/^static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,$/;"	f	namespace:testing::internal
SumOverTestCaseList	test/gtest/src/gtest.cc	/^static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,$/;"	f	namespace:testing::internal
SuppressEventForwarding	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners
SuppressEventForwarding	test/gtest/src/gtest.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners
SuppressEventForwarding	test/gtest/test/gtest_unittest.cc	/^  static void SuppressEventForwarding(TestEventListeners* listeners) {$/;"	f	class:testing::internal::TestEventListenersAccessor
SuppressTestEventsIfInSubprocess	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl
SuppressTestEventsIfInSubprocess	test/gtest/src/gtest.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl
Swap	experiments/backup/benchmarks/src/base/perm.c	/^void Swap ( int *a, int *b ) {$/;"	f
Swap	experiments/benchmarks/src/base/perm.c	/^void Swap ( int *a, int *b ) {$/;"	f
T	experiments/backup/benchmarks/src/base/flops-1.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-2.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-3.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-4.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-5.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-6.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-7.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops-8.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/flops.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/backup/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
T	experiments/benchmarks/src/base/flops-1.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-2.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-3.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-4.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-5.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-6.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-7.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops-8.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/flops.c	/^double T[36];                    \/* Global Array used to hold timing    *\/$/;"	v
T	experiments/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
T	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalPrinter
T	test/gtest/fused-src/gtest/gtest.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalTersePrinter
T	test/gtest/fused-src/gtest/gtest.h	/^inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {$/;"	m	namespace:testing::internal
T	test/gtest/fused-src/gtest/gtest.h	/^inline void CopyArray(const T(&from)[N], U(*to)[N]) {$/;"	m	namespace:testing::internal
T	test/gtest/fused-src/gtest/gtest.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]);$/;"	m	namespace:testing
T	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalPrinter
T	test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalTersePrinter
T	test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {$/;"	m	namespace:testing::internal
T	test/gtest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T(&from)[N], U(*to)[N]) {$/;"	m	namespace:testing::internal
T	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]);$/;"	m	namespace:testing
T1	experiments/backup/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
T1	experiments/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
T2	experiments/backup/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
T2	experiments/benchmarks/src/base/whetstone.c	/^double T,T1,T2,E1[5];$/;"	v
TEMPLATE_H	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	9;"	d
TEMPLATE_H	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.h	9;"	d
TEST	test/BBHashTests.cpp	/^TEST(BBHash, addingUpDescriptors) {$/;"	f
TEST	test/BBHashTests.cpp	/^TEST(BBHash, calculatingDistances) {$/;"	f
TEST	test/BBHashTests.cpp	/^TEST(BBHash, constructors) {$/;"	f
TEST	test/BBHashTests.cpp	/^TEST(BBHash, generatingStrings) {$/;"	f
TEST	test/BBHashTests.cpp	/^TEST(BBHash, getingDescriptions) {$/;"	f
TEST	test/BBHashTests.cpp	/^TEST(BBHash, setingDescriptors) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, constructors) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, getNearest) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, getTime) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, hasHash) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, insert) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, size) {$/;"	f
TEST	test/DatabaseManagerTests.cpp	/^TEST(DatabaseManager, unionWith) {$/;"	f
TEST	test/gtest/fused-src/gtest/gtest.h	20012;"	d
TEST	test/gtest/include/gtest/gtest.h	2242;"	d
TEST	test/gtest/samples/sample10_unittest.cc	/^TEST(ListenersTest, DoesNotLeak) {$/;"	f	namespace:__anon35
TEST	test/gtest/samples/sample10_unittest.cc	/^TEST(ListenersTest, LeaksWater) {$/;"	f	namespace:__anon35
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Negative) {$/;"	f
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Positive) {$/;"	f
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(FactorialTest, Zero) {$/;"	f
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Negative) {$/;"	f
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Positive) {$/;"	f
TEST	test/gtest/samples/sample1_unittest.cc	/^TEST(IsPrimeTest, Trivial) {$/;"	f
TEST	test/gtest/samples/sample2_unittest.cc	/^TEST(MyString, ConstructorFromCString) {$/;"	f
TEST	test/gtest/samples/sample2_unittest.cc	/^TEST(MyString, CopyConstructor) {$/;"	f
TEST	test/gtest/samples/sample2_unittest.cc	/^TEST(MyString, DefaultConstructor) {$/;"	f
TEST	test/gtest/samples/sample2_unittest.cc	/^TEST(MyString, Set) {$/;"	f
TEST	test/gtest/samples/sample4_unittest.cc	/^TEST(Counter, Increment) {$/;"	f
TEST	test/gtest/samples/sample7_unittest.cc	/^TEST(DummyTest, ValueParameterizedTestsAreNotSupportedOnThisPlatform) {}$/;"	f
TEST	test/gtest/samples/sample8_unittest.cc	/^TEST(DummyTest, CombineIsNotSupportedOnThisPlatform) {}$/;"	f
TEST	test/gtest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, Fails) {$/;"	f	namespace:__anon34
TEST	test/gtest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, PrintsMessage) {$/;"	f	namespace:__anon34
TEST	test/gtest/samples/sample9_unittest.cc	/^TEST(CustomOutputTest, Succeeds) {$/;"	f	namespace:__anon34
TEST	test/gtest/test/gtest-death-test_ex_test.cc	/^TEST(CxxExceptionDeathTest, ExceptionIsFailure) {$/;"	f
TEST	test/gtest/test/gtest-death-test_ex_test.cc	/^TEST(CxxExceptionDeathTest, PrintsMessageForStdExceptions) {$/;"	f
TEST	test/gtest/test/gtest-death-test_ex_test.cc	/^TEST(SehExceptionDeasTest, CatchExceptionsDoesNotInterfere) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(AutoHandleTest, AutoHandleWorks) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosDeathTest, ExpectsDeathWhenDeathTestsAvailable) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosSyntaxDeathTest, SingleStatement) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ConditionalDeathMacrosSyntaxDeathTest, SwitchStatement) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(EnvironmentTest, HandleFitsIntoSizeT) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ExitStatusPredicateTest, ExitedWithCode) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ExitStatusPredicateTest, KilledBySignal) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(GetLastErrnoDescription, GetLastErrnoDescriptionWorks) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(NotADeathTest, Test) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, AcceptsTypeLimits) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, AcceptsValidNumbers) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, RejectsInvalidFormat) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, RejectsOverflownNumbers) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(ParseNaturalNumberTest, WorksForShorterIntegers) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(PopUpDeathTest, DoesNotShowPopUpOnAbort) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(StreamingAssertionsDeathTest, DeathTest) {$/;"	f
TEST	test/gtest/test/gtest-death-test_test.cc	/^TEST(SuccessRegistrationDeathTest, NoSuccessPart) {$/;"	f
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, ConstAssignedToNonConst) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, DefaultAssignedToNonDefault) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(AssignmentOperatorTest, NonDefaultAssignedToDefault) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, BothPathBeingEmpty) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path1BeingEmpty) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path1ContainsPathSep) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2BeingEmpty) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2ContainsPathSep) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, Path2EndsWithPathSep) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, WorksWhenDirDoesNotEndWithPathSep) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(ConcatPathsTest, WorksWhenPath1EndsWithPathSep) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, CurrentDirectoryExists) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, EmptyPathDirectoryDoesNotExist) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, RootDirectoryExists) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(DirectoryTest, RootOfWrongDriveDoesNotExists) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, CharAndCopyConstructors) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, DefaultConstructor) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsAbsolutePath) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsDirectory) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, IsRootDirectory) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, RemoveExtension) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, RemoveExtensionWhenThereIsNoExtension) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, Set) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, StringConstructor) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(FilePathTest, ToString) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(IsEmptyTest, ReturnsFalseForNonEmptyPath) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(IsEmptyTest, ReturnsTrueForEmptyPath) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameNumberGtZero) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberGtZero) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberIsZero) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsNotZeroAndDirIsEmpty) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsZero) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(MakeFileNameTest, GenerateWhenNumberIsZeroAndDirIsEmpty) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(NoDirectoryCreationTest, CreateNoDirectoriesForDefaultXmlFile) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MixAlternateSeparatorAtStringEnd) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringEnd) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringStart) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(NormalizeTest, MultipleConsecutiveSepaparatorsInMidstring) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ButNoDirectory) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldGiveFileName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, ShouldGiveFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhenEmptyName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhereThereIsNoFileName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveDirectoryNameTest, WhereThereIsNoFileNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, ButNoFile) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, ButNoFileForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, EmptyName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirAndSubDirName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirAndSubDirNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirName) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesDirNameForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesRootDir) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveFileNameTest, GivesRootDirForAlternateSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, EmptyString) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, FileNoSlashString) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveLastSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveTrailingSeparator) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-filepath_test.cc	/^TEST(RemoveTrailingPathSeparatorTest, ShouldReturnUnmodified) {$/;"	f	namespace:testing::internal::__anon22
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, ConstructsFromCString) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, CopyConstructor) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, DefaultConstructor) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, DoesNotTakeUpMuchStackSpace) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, GetString) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsBasicIoManip) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsCString) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsDouble) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsFloat) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsInt) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNULChar) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNullCString) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsNullPointer) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsPointer) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsString) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsStringWithEmbeddedNUL) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-message_test.cc	/^TEST(MessageTest, StreamsToOStream) {$/;"	f	namespace:__anon19
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(OutputFileHelpersTest, GetCurrentExecutableName) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileDefault) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileFromDirectoryPath) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFileSingleFile) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFormat) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-options_test.cc	/^TEST(XmlOutputTest, GetOutputFormatDefault) {$/;"	f	namespace:testing::internal::__anon18
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(BoolTest, BoolWorks) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithFirstParameterEmptyRange) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithFirstParameterSingleValue) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithMaxNumberOfParameters) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithSecondParameterEmptyRange) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithSecondParameterSingleValue) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithThreeParameters) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CombineTest, CombineWithTwoParameters) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(CompileTest, CombineIsDefinedOnlyWhenGtestHasParamTestIsDefined) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(IteratorTest, ParamIteratorConformsToForwardIteratorConcept) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ParamGeneratorTest, AssignmentWorks) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeEmpty) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeSingleValue) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithCustomStep) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithCustomStepOverUpperBound) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, IntRangeWithDefaultStep) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, WorksWithACustomType) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(RangeTest, WorksWithACustomTypeWithDifferentIncrementType) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInArray) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInConstArray) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInEmptyIteratorRange) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInIteratorRange) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInSingleElementArray) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInSingleElementIteratorRange) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesInTest, ValuesInVector) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWithSingleParameter) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorks) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorksForMaxLengthList) {$/;"	f
TEST	test/gtest/test/gtest-param-test_test.cc	/^TEST(ValuesTest, ValuesWorksForValuesOfCompatibleTypes) {$/;"	f
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, EscapedPunct) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, EscapedWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_D) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_S) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_W) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_d) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_s) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, Escaped_w) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, UnescapedChar) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(AtomMatchesCharTest, UnescapedDot) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(CaptureDeathTest, CannotReenterStdoutCapture) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStderr) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStdout) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(CaptureTest, CapturesStdoutAndStderr) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsFileLocation) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFile) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFileAndLine) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownLine) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsFileLocation) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUknownFileAndLine) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUknownLine) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(FormatFileLocationTest, FormatsUnknownFile) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GetThreadCountTest, ReturnsCorrectValue) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GetThreadCountTest, ReturnsZeroWhenUnableToCountThreads) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GtestCheckDeathTest, DiesWithCorrectOutputOnFailure) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GtestCheckDeathTest, LivesSilentlyOnSuccess) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GtestCheckSyntaxTest, BehavesLikeASingleStatement) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(GtestCheckSyntaxTest, WorksWithSwitch) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanSelectBetweenConstAndNonConstCasrAppropriately) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseConstCastOperatorOnConstValues) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseImplicitConstructor) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseInheritance) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, CanUseNonConstCastOperator) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ImplicitCastTest, ConvertsPointers) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiDigitTest, IsFalseForNonDigit) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiDigitTest, IsTrueForDigit) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiPunctTest, IsFalseForNonPunct) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiPunctTest, IsTrueForPunct) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWhiteSpaceTest, IsFalseForNonWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWhiteSpaceTest, IsTrueForWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsFalseForNonWordChar) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForDigit) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForLetter) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsAsciiWordCharTest, IsTrueForUnderscore) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsInSetTest, NulCharIsNotInAnySet) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsInSetTest, WorksForNonNulChars) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsRepeatTest, IsFalseForNonRepeatChar) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsRepeatTest, IsTrueForRepeatChar) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForDigit) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForNonPrintable) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForSomeLetter) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsFalseForWhiteSpace) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsTrueForPunct) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsValidEscapeTest, IsTrueForSomeLetter) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, ReturnsFalseForNarrowNonAscii) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, ReturnsFalseForWideNonAscii) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, WorksForNarrowAscii) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IsXDigitTest, WorksForWideAscii) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForPointerToConst) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForPointerToNonConst) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(IteratorTraitsTest, WorksForSTLContainerIterators) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsFalseWhenNoMatch) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsFalseWhenStringIsNull) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingNonPrefix) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingPrefix) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAnywhereTest, WorksWhenRegexStartsWithCaret) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, MatchesSequentially) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, ReturnsTrueForEmptyRegex) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenDollarIsInRegex) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithEscapeSequence) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithRepetition) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRegexAtHeadTest,$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForOneOrMany) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrMany) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrOne) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MutexDeathTest, AssertHeldShouldAssertWhenNotLocked) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MutexTest, AssertHeldShouldNotAssertWhenLocked) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(MutexTest, OnlyOneThreadCanLockAtATime) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(RETest, FullMatchWorks) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(RETest, ImplicitConstructorWorks) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(RETest, PartialMatchWorks) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(RETest, RejectsInvalidRegex) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(RegexEngineSelectionTest, SelectsCorrectRegexEngine) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ScopedPtrTest, DefinesElementType) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DefaultConstructorInitializesToDefaultValues) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DestroysManagedObjectAtThreadExit) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, DestroysManagedObjectForOwnThreadWhenDying) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, GetAndPointerReturnSameValue) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ParameterizedConstructorSetsDefault) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, PointerAndConstPointerReturnSameValue) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, SingleParamConstructorInitializesToParam) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ThreadLocalMutationsAffectOnlyCurrentThread) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadLocalTest, ValueDefaultContructorIsNotRequiredForParamVersion) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ThreadWithParamTest, ConstructorExecutesThreadFunc) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ValidateRegexTest, GeneratesFailureAndReturnsFalseForInvalid) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-port_test.cc	/^TEST(ValidateRegexTest, ReturnsTrueForValid) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, FormatsNonCharArrayAsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsStdString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsStdString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForNonCharPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForScalar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsStdWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsWCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsStdWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsWString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, BigArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, CharArrayWithNoTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ConstArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ConstCharArrayWithTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, ObjectArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, OneDimensionalArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, TwoDimensionalArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, WCharArrayWithNoTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintArrayTest, WConstCharArrayWithTerminatingNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Bool) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, FloatingPoints) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Integer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Size_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintBuiltInTypeTest, Wchar_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, Const) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, EscapesProperly) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, NonConst) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCStringTest, Null) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, ConstSignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, ConstUnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, SignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharPointerTest, UnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, PlainChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, SignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintCharTest, UnsignedChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintClassTest, BiggestIntConvertible) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, AnonymousEnum) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithPrintTo) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithStreaming) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintEnumTest, EnumWithoutPrinter) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, MemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, MemberVariablePointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerTest, NonMemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, Bool) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, ConstVoid) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerToBuiltInTypeTest, Void) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPointerToPointerTest, IntPointerPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, InUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, PointerInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintPrintableTypeTest, TemplateInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintProto2MessageTest, PrintsDebugStringWhenItIsLong) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintProto2MessageTest, PrintsShortDebugStringWhenItIsShort) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintProtocolMessageTest, PrintsShortDebugString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesMemberFunctionPointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, HandlesMemberVariablePointer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintReferenceTest, PrintsAddressAndValue) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, ConstIterator) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, EmptyDeque) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashMultiMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashMultiSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, HashSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Iterator) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, List) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, LongSequence) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Map) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, MultiMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, MultiSet) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, NestedContainer) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, NonEmptyDeque) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, OneDimensionalNativeArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, OneElementHashMap) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Pair) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Set) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, TwoDimensionalNativeArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStlContainerTest, Vector) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStreamableTypeTest, InGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStreamableTypeTest, TemplateTypeInUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStringPieceTest, SimpleStringPiece) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStringPieceTest, UnprintableCharacters) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringAmbiguousHex) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringInGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintStringTest, StringInStdNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, EscapesForPointerToConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, EscapesForPointerToNonConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForCharArrayWithEmbeddedNul) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForPointerToConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForPointerToNonConstChar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintToStringTest, WorksForScalar) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTupleTest, NestedTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTupleTest, VariousSizes) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTypeSizeTest, Wchar_t) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, NonTemplateType) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, TemplateType) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintTypeWithGenericStreamingTest, TypeImplicitlyConvertible) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintUnprintableTypeTest, InGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintUnprintableTypeTest, InUserNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintUnpritableTypeTest, BigObject) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, Const) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, EscapesProperly) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, NonConst) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideCStringTest, Null) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringAmbiguousHex) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringInGlobalNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(PrintWideStringTest, StringInStdNamespace) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForCString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForCharArray) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForNonReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalPrintTest, WorksForReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForCString) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForNonReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTest, WorksForReference) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTest, PrintsEmptyTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTest, PrintsOneTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTest, PrintsTersely) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-printers_test.cc	/^TEST(UniversalTersePrintTupleFieldsToStringsTest, PrintsTwoTuple) {$/;"	f	namespace:testing::gtest_printers_test
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesEqualTuples) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesUnequalTuplesWithReferenceFields) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesUnequalTuplesWithoutReferenceFields) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(ComparisonTest, ComparesWithSelf) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(MakeTupleTest, WorksForPointers) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(MakeTupleTest, WorksForScalarTypes) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(ReferenceFieldTest, IsAliasOfReferencedVariable) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsFromPair) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsToDifferentTupleType) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleAssignmentTest, AssignsToSameTupleType) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromDifferentTupleType) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromFields) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, ConstructsFromPair) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, CopyConstructor) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(TupleConstructorTest, DefaultConstructorDefaultInitializesEachField) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(tuple_element_Test, ReturnsElementType) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-tuple_test.cc	/^TEST(tuple_size_Test, ReturnsNumberOfFields) {$/;"	f	namespace:__anon27
TEST	test/gtest/test/gtest-typed-test_test.cc	/^TEST(DummyTest, TypedTestsAreNotSupportedOnThisPlatform) {}$/;"	f
TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, DISABLED_Dummy1) {}$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, TestCaseDisabledAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, TestCaseImmutableAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TEST(ApiTest, UnitTestImmutableAccessorsWork) {$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TEST(DISABLED_Test, Dummy2) {}$/;"	f	namespace:testing::internal
TEST	test/gtest/test/gtest_break_on_failure_unittest_.cc	/^TEST(Foo, Bar) {$/;"	f	namespace:__anon31
TEST	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST(CxxExceptionTest, ThrowsNonStdCxxException) {$/;"	f
TEST	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST(SehExceptionTest, ThrowsSehException) {$/;"	f
TEST	test/gtest/test/gtest_color_test_.cc	/^TEST(GTestColorTest, Dummy) {$/;"	f
TEST	test/gtest/test/gtest_env_var_test_.cc	/^TEST(GTestEnvVarTest, Dummy) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_environment_test.cc	/^TEST(FooTest, Bar) {$/;"	f	namespace:__anon21
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, DISABLED_TestFive) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, DISABLED_TestFour) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestOne) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestThree) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BarTest, TestTwo) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, DISABLED_TestC) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestA) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestB) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(BazTest, TestOne) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarTest, DISABLED_Test2) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarTest, Test1) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(DISABLED_FoobarbazTest, TestA) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(HasDeathTest, Test1) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_filter_unittest_.cc	/^TEST(HasDeathTest, Test2) {$/;"	f	namespace:__anon24
TEST	test/gtest/test/gtest_help_test_.cc	/^TEST(DeathTest, UsedByPythonScriptToDetectSupportForDeathTestsInThisBinary) {}$/;"	f
TEST	test/gtest/test/gtest_help_test_.cc	/^TEST(HelpFlagTest, ShouldNotBeRun) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(Abc, Def) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(Abc, Xyz) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, Bar1) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, Bar2) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(Foo, DISABLED_Bar3) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(FooBar, Baz) {$/;"	f
TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST(FooDeathTest, Test1) {$/;"	f
TEST	test/gtest/test/gtest_main_unittest.cc	/^TEST(GTestMainTest, ShouldSucceed) {$/;"	f	namespace:__anon26
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ADeathTest, ShouldRunFirst) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(DisabledTestsWarningTest,$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, FatalFailureInSubroutine) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(FatalFailureTest, NonfatalFailureInSubroutine) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(LoggingTest, InterleavingLoggingAndAssertions) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(NonfatalFailureTest, EscapesStringOperands) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest1) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(PassingTest, PassingTest2) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeNested) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, CanBeRepeated) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, ObeysScopes) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksConcurrently) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInLoop) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(SCOPED_TRACETest, WorksInSubroutine) {$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}$/;"	f
TEST	test/gtest/test/gtest_output_test_.cc	/^TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}$/;"	f
TEST	test/gtest/test/gtest_prod_test.cc	/^TEST(PrivateCodeTest, CanAccessPrivateMembers) {$/;"	f
TEST	test/gtest/test/gtest_repeat_test.cc	/^TEST(BarDeathTest, ThreadSafeAndFast) {$/;"	f	namespace:__anon33
TEST	test/gtest/test/gtest_repeat_test.cc	/^TEST(FooTest, ShouldFail) {$/;"	f	namespace:__anon33
TEST	test/gtest/test/gtest_repeat_test.cc	/^TEST(FooTest, ShouldPass) {$/;"	f	namespace:__anon33
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, B) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(ADeathTest, C) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(B, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(B, B) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(B, C) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(B, DISABLED_D) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(B, DISABLED_E) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(BDeathTest, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(BDeathTest, B) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(C, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(C, B) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(C, C) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(C, DISABLED_D) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(CDeathTest, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(DISABLED_D, A) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_shuffle_test_.cc	/^TEST(DISABLED_D, DISABLED_B) {}$/;"	f	namespace:__anon30
TEST	test/gtest/test/gtest_sole_header_test.cc	/^TEST(NoFatalFailureTest, AssertNoFatalFailure) {$/;"	f	namespace:__anon28
TEST	test/gtest/test/gtest_sole_header_test.cc	/^TEST(NoFatalFailureTest, ExpectNoFatalFailure) {$/;"	f	namespace:__anon28
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(FatalFailureOnAllThreadsTest, ExpectFatalFailureOnAllThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(FatalFailureTest, ExpectFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(NoFatalFailureTest, AssertNoFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(NoFatalFailureTest, ExpectNoFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(NonFatalFailureOnAllThreadsTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(NonFatalFailureTest, ExpectNonFatalFailureIgnoresFailuresInOtherThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(StressTest, CanUseScopedTraceAndAssertionsInManyThreads) {$/;"	f	namespace:testing::__anon23
TEST	test/gtest/test/gtest_stress_test.cc	/^TEST(StressTest,$/;"	f
TEST	test/gtest/test/gtest_uninitialized_test_.cc	/^TEST(DummyTest, Dummy) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, AddsReference) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, DoesNotAffectReferenceType) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AddReferenceTest, MacroVersion) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ArrayAwareFindTest, WorksForOneDimensionalArray) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ArrayAwareFindTest, WorksForTwoDimensionalArray) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForDegeneratedArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForOneDimensionalArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ArrayEqTest, WorksForTwoDimensionalArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertHelperTest, AssertHelperIsSmall) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, CanStreamOstreamManipulators) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, ConstructionWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, CopyConstructorWorksWhenNotOptimied) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, NegationWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionResultTest, StreamingWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, BasicAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, ExceptionAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, NoFatalFailureAssertionsBehavesLikeSingleStatement) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, WorksWithConst) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionSyntaxTest, WorksWithSwitch) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_ANY_THROW) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_EQ) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_EQ_NULL) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_FALSE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_GE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_GT) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_LE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_LT) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_NE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_NO_THROW) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_THROW) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ASSERT_TRUE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AnonymousEnum) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AppendUserMessage) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertFalseWithAssertionResult) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertPrecedence) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertTrueWithAssertionResult) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, AssertWorksWithUncopyableObject) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, EqFailure) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, ExpectWorksWithUncopyableObject) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, NamedEnum) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionTest, NonFixtureSubroutine) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_FALSE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_FLOATING) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_STR) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, ASSERT_TRUE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, EXPECT) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, FAIL) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, SUCCEED) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(AssertionWithMessageTest, WideStringMessage) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode12To16Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode17To21Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncode8To11Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeAscii) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeInvalidCodePoint) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CodePointToUtf8Test, CanEncodeNul) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsAliasOfYes) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsYes) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenStdoutIsTty) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesColorsWhenTermSupportsColors) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsInvalid) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsNo) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CommandLineFlagsTest, CanBeAccessedInCodeOnceGTestHIsIncluded) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ComparisonAssertionTest, AcceptsUnprintableArgs) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CompileAssertTypesEqual, CompilesWhenTypesAreEqual) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ContainerUtilityDeathTest, ShuffleRange) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, CountIf) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, ForEach) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ContainerUtilityTest, GetElementOr) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForDegeneratedArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForOneDimensionalArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(CopyArrayTest, WorksForTwoDimensionalArrays) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(DISABLED_TestCase, DISABLED_TestShouldNotRun) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(DISABLED_TestCase, TestShouldNotRun) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(DisabledTest, DISABLED_TestShouldNotRun) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(DisabledTest, NotDISABLED_TestShouldRun) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Bool) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Char) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, CharPointer) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, GlobalString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, GlobalWideString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Int) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, OtherPointer) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, StdString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, StdWideString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, Time_T) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, WideChar) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EqAssertionTest, WideCharPointer) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerDeathTest, EventsNotForwardedInDeathTestSubprecesses) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, AppendKeepsOrder) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, RemovingDefaultResultPrinterWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, RemovingDefaultXmlGeneratorWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, SuppressEventForwarding) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, default_result_printer) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(EventListenerTest, default_xml_generator) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, ASSERT_EQ_0) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, ASSERT_EQ_Double) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_ANY_THROW) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_0) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_Double) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_EQ_NULL) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_FALSE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_GE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_GT) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_LE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_LT) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_NE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_NO_THROW) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_THROW) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, EXPECT_TRUE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectFalseWithAssertionResult) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectPrecedence) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectTest, ExpectTrueWithAssertionResult) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ExpectThrowTest, DoesNotGenerateUnreachableCodeWarning) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(FRIEND_TEST_Test, TEST) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsNegativeNumber) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsPositiveNumber) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(FormatTimeInMillisAsSecondsTest, FormatsZero) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GTestReferenceToConstTest, Works) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetCurrentOsStackTraceExceptTopTest, ReturnsTheStackTrace) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetNextRandomSeedTest, WorksForValidInput) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, HandlesZero) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, NormalizesInvalidSeed) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetRandomSeedFromFlagTest, PreservesValidSeed) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetTestTypeIdTest, ReturnsTheSameValueInsideOrOutsideOfGoogleTest) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetTypeIdTest, ReturnsDifferentValuesForDifferentTypes) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(GetTypeIdTest, ReturnsSameValueForSameType) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, ASSERT_HRESULT_FAILED) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, ASSERT_HRESULT_SUCCEEDED) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, EXPECT_HRESULT_FAILED) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, EXPECT_HRESULT_SUCCEEDED) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HRESULTAssertionTest, Streaming) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsFalseWhenThereIsNoFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereIsFatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, WorksOutsideOfTestBody) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasFailureTest, WorksOutsideOfTestBody2) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsNoFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsOnlyFatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody2) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsCompileTimeConstant) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsFalseWhenNotConvertible) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ImplicitlyConvertibleTest, ValueIsTrueWhenConvertible) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieDeathTest, AbortsOnFailure) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieDeathTest, AbortsOnInt32Overflow) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromEnvOrDieTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueIsInvalid) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueOverflows) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenVariableIsNotSet) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsCompileTimeConstant) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsFalseWhenTypeIsNotAProtocolMessage) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsAProtocolMessageTest, ValueIsTrueWhenTypeIsAProtocolMessage) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsContainerTestTest, WorksForContainer) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsContainerTestTest, WorksForNonContainer) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, GeneratesCorrectMessageForStdString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, GeneratesCorrectMessageForWideCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForStdWstring) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultForWideCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsNotSubstringTest, ReturnsCorrectResultsForStdString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, GeneratesCorrectMessageForCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, GeneratesCorrectMessageForWstring) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForStdWstring) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultForWideCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(IsSubstringTest, ReturnsCorrectResultsForStdString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MacroTest, ADD_FAILURE) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MacroTest, ADD_FAILURE_AT) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MacroTest, FAIL) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MacroTest, SUCCEED) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInGlobalNameSpace) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUnnamedNameSpace) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUserNameSpace) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, NullPointers) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(MessageTest, WideStrings) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, ConstructorFromArrayWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, CreatesAndDeletesCopyOfArrayWhenAskedTo) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, MethodsWork) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, TypeMembersAreCorrect) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NativeArrayTest, WorksForTwoDimensionalArray) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NestedTestingNamespaceTest, Failure) {$/;"	f	namespace:my_namespace::testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NestedTestingNamespaceTest, Success) {$/;"	f	namespace:my_namespace::testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NullLiteralTest, IsFalseForNonNullLiterals) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(NullLiteralTest, IsTrueForNullLiterals) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ParsesAndReturnsValidValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueIsInvalid) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueOverflows) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ParseInt32FlagTest, ReturnsFalseForInvalidFlag) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Pred1Test, SingleEvaluationOnFailure) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Pred1Test, WithFormat) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(Pred1Test, WithoutFormat) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredTest, SingleEvaluationOnFailure) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredTest, WithFormat) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredTest, WithoutFormat) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredicateAssertionTest, AcceptsOverloadedFunction) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredicateAssertionTest, AcceptsTemplateFunction) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredicateFormatAssertionTest, AcceptsOverloadedFunction) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(PredicateFormatAssertionTest, AcceptsTemplateFunction) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RandomDeathTest, GeneratesCrashesOnInvalidRange) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RandomTest, GeneratesNumbersWithinRange) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RandomTest, RepeatsWhenReseeded) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, DoesNotAffectNonConstType) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, MacroVersion) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveConstTest, RemovesConst) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, DoesNotAffectNonReferenceType) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, MacroVersion) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveReferenceTest, RemovesReference) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(RemoveReferenceToConstTest, Works) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereAreFiveShards) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereIsOneShard) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SkipPrefixTest, DoesNotSkipWhenPrefixDoesNotMatch) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SkipPrefixTest, SkipsWhenPrefixMatches) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StaticAssertTypeEqTest, CompilesForEqualTypes) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StaticAssertTypeEqTest, WorksInClass) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, BasicIoManip) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, NULChar) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, NullCharPtr) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, int) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, string) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableTest, stringWithEmbeddedNUL) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, CString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, NullCString) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, NullPointer) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, Pointer) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamableToStringTest, Scalar) {$/;"	f	namespace:__anon16
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, AnyThrow) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, FloatingPointEquals) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, IntegerEquals) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, IntegerLessThan) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, NoThrow) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringNotEqualIgnoringCase) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsEqual) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsEqualIgnoringCase) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, StringsNotEqual) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Throw) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Truth) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Truth2) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StreamingAssertionsTest, Unconditional) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRCASEEQ) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRCASENE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ_Null) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STREQ_Null2) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, ASSERT_STRNE) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, STREQ_Wide) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringAssertionTest, STRNE_Wide) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16ConvertBasic) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16ConvertPathChars) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, AnsiAndUtf16Null) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, CaseInsensitiveWideCStringEquals) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, EndsWithCaseInsensitive) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(StringTest, ShowWideCString) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, ASSERT) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, ASSERT_STR) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, EXPECT) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, EXPECT_STR) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(SuccessfulAssertionTest, SUCCEED) {$/;"	f	namespace:testing
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, Append) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, ConstructionWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, DestructionWorks) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestEventListenersTest, Release) {$/;"	f
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, ConstructorWorks) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, ReplaceStringValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, SetValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestPropertyTest, StringValue) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, GetTestProperty) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, MultiplePropertiesFoundWhenAdded) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, NoPropertiesFoundWhenNoneAreAdded) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, OnePropertyFoundWhenAdded) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(TestResultPropertyTest, OverridesValuesForDuplicateKeys) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(UnitTestTest, CanGetOriginalWorkingDir) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(UnitTestTest, ReturnsPlausibleTimestamp) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode12To16Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode17To21Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncode8To11Bits) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeAscii) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeInvalidCodePoint) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeInvalidUtf16SurrogatePair) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeNul) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, CanEncodeValidUtf16SUrrogatePairs) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, StopsOnNulCharacter) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_unittest.cc	/^TEST(WideStringToUtf8Test, StopsWhenLengthLimitReached) {$/;"	f	namespace:__anon14
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(InvalidCharactersTest, InvalidCharactersInMessage) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, DISABLED_test) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, Fails) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(MixedResultTest, Succeeds) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, ExternalUtilityThatCallsRecordIntValuedProperty) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, ExternalUtilityThatCallsRecordStringValuedProperty) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(NoFixtureTest, RecordProperty) {$/;"	f
TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST(XmlQuotingTest, OutputsCData) {$/;"	f
TEST	test/gtest/xcode/Samples/FrameworkSample/widget_test.cc	/^TEST(WidgetInitializerTest, TestConstructor) {$/;"	f
TEST	test/gtest/xcode/Samples/FrameworkSample/widget_test.cc	/^TEST(WidgetInitializerTest, TestConversion) {$/;"	f
TESTS	test/gtest/make/Makefile	/^TESTS = sample1_unittest$/;"	m
TEST_CASE_REGEX	test/gtest/test/gtest_filter_unittest.py	/^TEST_CASE_REGEX = re.compile(r'^\\[\\-+\\] \\d+ tests? from (\\w+(\/\\w+)?)')$/;"	v
TEST_DID_NOT_DIE	test/gtest/fused-src/gtest/gtest.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_DID_NOT_DIE	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_ENCOUNTERED_RETURN_STATEMENT	test/gtest/fused-src/gtest/gtest.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_ENCOUNTERED_RETURN_STATEMENT	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_F	test/gtest/fused-src/gtest/gtest.h	20041;"	d
TEST_F	test/gtest/include/gtest/gtest.h	2271;"	d
TEST_F	test/gtest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, DefaultConstructor) {$/;"	f
TEST_F	test/gtest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, Dequeue) {$/;"	f
TEST_F	test/gtest/samples/sample3_unittest.cc	/^TEST_F(QueueTest, Map) {$/;"	f
TEST_F	test/gtest/samples/sample5_unittest.cc	/^TEST_F(IntegerFunctionTest, Factorial) {$/;"	f
TEST_F	test/gtest/samples/sample5_unittest.cc	/^TEST_F(IntegerFunctionTest, IsPrime) {$/;"	f
TEST_F	test/gtest/samples/sample5_unittest.cc	/^TEST_F(QueueTest, DefaultConstructor) {$/;"	f
TEST_F	test/gtest/samples/sample5_unittest.cc	/^TEST_F(QueueTest, Dequeue) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildDoesNotDie) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildExitsSuccessfully) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildExitsUnsuccessfully) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, ChildPerformsReturn) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(MacroLogicDeathTest, NothingHappens) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ASSERT_DEATH) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AcceptsAnythingConvertibleToRE) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, AssertDebugDeathAborts) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, CompoundStatement) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestBadExitCodeOutput) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestFailedOutput) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestMultiLineMatchFail) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestMultiLineMatchPass) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DeathTestUnexpectedReturnOutput) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DoesNotDie) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, DoesNotExecuteAtforkHooks) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, EXPECT_DEATH) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, EmbeddedNulInMessage) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ErrorMessageMismatch) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExitMacros) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExitMacrosUsingFork) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ExpectDebugDeathDoesNotAbort) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FastDeathTestInChangedDir) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FastSigprofActionSet) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, FunctionWithParameter) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, GlobalFunction) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, InsideLoop) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, InvalidStyle) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MemberFunctionFastStyle) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MemberFunctionThreadsafeStyle) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MethodOfAnotherClass) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, MixedStyles) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, NonVoidFunction) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, OutsideFixture) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ReturnIsFailure) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, RunawayIsFailure) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SingleEvaluation) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SingleStatement) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, StaticMemberFunctionFastStyle) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, StaticMemberFunctionThreadsafeStyle) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, SwitchStatement) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, TestAssertDebugDeath) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, TestExpectDebugDeath) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadSafeSigprofActionSet) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadsafeDeathTestInChangedDir) {$/;"	f
TEST_F	test/gtest/test/gtest-death-test_test.cc	/^TEST_F(TestForDeathTest, ThreadsafeDeathTestInLoop) {$/;"	f
TEST_F	test/gtest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesAndUniqueFilename) {$/;"	f	namespace:testing::internal::__anon22
TEST_F	test/gtest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesFail) {$/;"	f	namespace:testing::internal::__anon22
TEST_F	test/gtest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesForAlreadyExistingPath) {$/;"	f	namespace:testing::internal::__anon22
TEST_F	test/gtest/test/gtest-filepath_test.cc	/^TEST_F(DirectoryCreationTest, CreateDirectoriesRecursively) {$/;"	f	namespace:testing::internal::__anon22
TEST_F	test/gtest/test/gtest-linked_ptr_test.cc	/^TEST_F(LinkedPtrTest, GeneralTest) {$/;"	f	namespace:__anon25
TEST_F	test/gtest/test/gtest-listener_test.cc	/^TEST_F(ListenerTest, DoesBar) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest-listener_test.cc	/^TEST_F(ListenerTest, DoesFoo) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsoluteFile) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsolutePath) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefault) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefaultXML) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativeFile) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-options_test.cc	/^TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativePath) {$/;"	f	namespace:testing::internal::__anon18
TEST_F	test/gtest/test/gtest-param-test_test.cc	/^TEST_F(NonParameterizedBaseTest, FixtureIsInitialized) {$/;"	f
TEST_F	test/gtest/test/gtest-param-test_test.cc	/^TEST_F(ParameterizedDeathTest, GetParamDiesFromTestF) {$/;"	f
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayDeathTest, DiesWhenIndexIsOutOfBound) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, ContainsGivenResultAfterAppend) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, ContainsGivenResultsAfterTwoAppends) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultArrayTest, InitialSizeIsZero) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, ConstructorWorks) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, Failed) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, FatallyFailed) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, NonfatallyFailed) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, Passed) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, ResultAccessorsWork) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, file_name) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, line_number) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, message) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-test-part_test.cc	/^TEST_F(TestPartResultTest, type) {$/;"	f	namespace:__anon13
TEST_F	test/gtest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, Comparisons) {$/;"	f	namespace:__anon27
TEST_F	test/gtest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, Construction) {$/;"	f	namespace:__anon27
TEST_F	test/gtest/test/gtest-tuple_test.cc	/^TEST_F(BigTupleTest, get) {$/;"	f	namespace:__anon27
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsDuplicates) {$/;"	f
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsExtraTest) {$/;"	f
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsMissedTest) {$/;"	f
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateDeathTest, DetectsTestAfterRegistration) {$/;"	f
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateTest, IgnoresOrderAndSpaces) {$/;"	f
TEST_F	test/gtest/test/gtest-typed-test_test.cc	/^TEST_F(TypedTestCasePStateTest, SucceedsForMatchingList) {$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInConstructorTest, ThrowsExceptionInConstructor) {$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInDestructorTest, ThrowsExceptionInDestructor) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInSetUpTest, ThrowsExceptionInSetUp) {$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInSetUpTestCaseTest, ThrowsExceptionInSetUpTestCase) {$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTearDownTest, ThrowsExceptionInTearDown) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTearDownTestCaseTest, ThrowsExceptionInTearDownTestCase) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(CxxExceptionInTestBodyTest, ThrowsStdCxxException) {$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInConstructorTest, ThrowsExceptionInConstructor) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInDestructorTest, ThrowsExceptionInDestructor) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInSetUpTest, ThrowsExceptionInSetUp) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInSetUpTestCaseTest, ThrowsExceptionInSetUpTestCase) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInTearDownTest, ThrowsExceptionInTearDown) {}$/;"	f
TEST_F	test/gtest/test/gtest_catch_exceptions_test_.cc	/^TEST_F(SehExceptionInTearDownTestCaseTest, ThrowsExceptionInTearDownTestCase) {}$/;"	f
TEST_F	test/gtest/test/gtest_filter_unittest_.cc	/^TEST_F(FooTest, Abc) {$/;"	f	namespace:__anon24
TEST_F	test/gtest/test/gtest_filter_unittest_.cc	/^TEST_F(FooTest, Xyz) {$/;"	f	namespace:__anon24
TEST_F	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, DISABLED_Test2) {$/;"	f
TEST_F	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test1) {$/;"	f
TEST_F	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_F(FooTest, Test3) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, FirstTestFromNamespaceFoo) {}$/;"	f	namespace:foo
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, SecondTestFromNamespaceFoo) {}$/;"	f	namespace:foo
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFail) {}$/;"	f	namespace:bar
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseTest, ThisShouldFailToo) {}$/;"	f	namespace:bar
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;"	f	namespace:bar
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(MixedUpTestCaseWithSameTestNameTest,$/;"	f	namespace:foo
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}$/;"	f
TEST_F	test/gtest/test/gtest_output_test_.cc	/^TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {$/;"	f
TEST_F	test/gtest/test/gtest_pred_impl_unittest.cc	/^TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {$/;"	f
TEST_F	test/gtest/test/gtest_premature_exit_test.cc	/^TEST_F(PrematureExitDeathTest, FileExistsDuringExecutionOfDeathTest) {$/;"	f	namespace:__anon29
TEST_F	test/gtest/test/gtest_premature_exit_test.cc	/^TEST_F(PrematureExitTest, PrematureExitFileExistsDuringTestExecution) {$/;"	f	namespace:__anon29
TEST_F	test/gtest/test/gtest_premature_exit_test.cc	/^TEST_F(PrematureExitTest, TestPrematureExitFileEnvVarIsSet) {$/;"	f	namespace:__anon29
TEST_F	test/gtest/test/gtest_prod_test.cc	/^TEST_F(PrivateCodeFixtureTest, CanAccessPrivateMembers) {$/;"	f
TEST_F	test/gtest/test/gtest_shuffle_test_.cc	/^TEST_F(A, A) {}$/;"	f	namespace:__anon30
TEST_F	test/gtest/test/gtest_shuffle_test_.cc	/^TEST_F(A, B) {}$/;"	f	namespace:__anon30
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(CurrentTestInfoTest, WorksForFirstTestInATestCase) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(CurrentTestInfoTest, WorksForSecondTestInATestCase) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_1) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_2) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, ASSERT_NEAR) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, AlmostZeros) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Commutative) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, DoubleLEFails) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, DoubleLESucceeds) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, EXPECT_NEAR) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Infinity) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, LargeDiff) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, NaN) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Reflexive) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Size) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, SmallDiff) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(DoubleTest, Zeros) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailureOnAllThreads) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailureOnAllThreads) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsStdStringObject) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, AcceptsStringObject) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CanBeUsedInNonVoidFunction) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CatchesFatalFailureOnAllThreads) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, CatchesFatalFaliure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectFatalFailureTest, DoesNotAbort) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsStdStringObject) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, AcceptsStringObject) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailureOnAllThreads) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FRIEND_TEST_Test2, TEST_F) {$/;"	f	namespace:__anon16
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, ASSERT_NEAR) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, AlmostZeros) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Commutative) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, EXPECT_NEAR) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, FloatLEFails) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, FloatLESucceeds) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Infinity) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, LargeDiff) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, NaN) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Reflexive) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Size) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, SmallDiff) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FloatTest, Zeros) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, MillisecondsDoNotAffectResult) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, Prints24HourTime) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsEpochStart) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsLeadingZeroes) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsTwoDigitSegments) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(GTestFlagSaverTest, ModifyGTestFlags) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(GTestFlagSaverTest, VerifyGTestFlags) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsFalse) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsFlag) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, AlsoRunDisabledTestsTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_0) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_F) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureFalse_f) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, BreakOnFailureWithoutValue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, CatchExceptions) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, DeathTestUseFork) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, DuplicatedFlags) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, Empty) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterBad) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterEmpty) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, FilterNonEmpty) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse_F) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFalse_f) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsFlag) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ListTestsTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, NoFlag) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputEmpty) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXml) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXmlDirectory) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, OutputXmlFile) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse_F) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFalse_f) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeFlag) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, PrintTimeTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, RandomSeed) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, Repeat) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleFalse_0) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ShuffleWithoutValue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, StackTraceDepth) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, StreamResultTo) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureFalse_0) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureTrue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, ThrowOnFailureWithoutValue) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, UnrecognizedFlag) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(InitGoogleTestTest, WideStrings) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, AssertNoFatalFailureOnFatalFailure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, ExpectNoFatalFailureOnFatalFailure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, MessageIsStreamable) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, NoFailure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(NoFatalFailureTest, NonFatalIsNoFailure) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, DeprecatedConstructor) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterTest, InterceptsTestFailures) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ScopedFakeTestPartResultReporterWithThreadsTest,$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SetUpTestCaseTest, Test1) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SetUpTestCaseTest, Test2) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ShouldShardDeathTest, AbortsWhenShardingEnvVarsAreInvalid) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, ReturnsFalseWhenNeitherEnvVarIsSet) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, ReturnsFalseWhenTotalShardIsOne) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(ShouldShardTest, WorksWhenShardEnvVarsAreValid) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, ASSERT_STR) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, ExceptionTests) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, FailedASSERT_NE) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, FailedASSERT_STREQ) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(SingleEvaluationTest, OtherCases) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestCaseEnd) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestCaseStart) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestEnd) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestIterationEnd) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestPartResult) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestProgramEnd) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(StreamingListenerTest, OnTestStart) {$/;"	f	namespace:testing::internal
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestInfoTest, Names) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestInfoTest, result) {$/;"	f	namespace:testing
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestLifeCycleTest, Test1) {$/;"	f	namespace:__anon16
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestLifeCycleTest, Test2) {$/;"	f	namespace:__anon16
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestResultDeathTest, GetTestPartResult) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, Failed) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, Passed) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(TestResultTest, total_part_count) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, MultiplePropertiesFoundWhenAdded) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, OnePropertyFoundWhenAdded) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest, OverridesValuesForDuplicateKeys) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(UnitTestRecordPropertyTest,$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, HandlesEmptyRange) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, HandlesRangeOfSizeOne) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesEndOfVector) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesEntireVector) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesMiddleOfVector) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesRepeatably) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_unittest.cc	/^TEST_F(VectorShuffleTest, ShufflesStartOfVector) {$/;"	f	namespace:__anon14
TEST_F	test/gtest/test/gtest_xml_outfile1_test_.cc	/^TEST_F(PropertyOne, TestSomeProperties) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_outfile2_test_.cc	/^TEST_F(PropertyTwo, TestSomeProperties) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(DisabledTest, DISABLED_test_not_run) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(FailedTest, Fails) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, IntValuedProperty) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, OneProperty) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, ThreeProperties) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(PropertyRecordingTest, TwoValuesForOneKeyUsesLastValue) {$/;"	f
TEST_F	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_F(SuccessfulTest, Succeeds) {$/;"	f
TEST_FILTER	test/gtest/test/gtest_shuffle_test.py	/^TEST_FILTER = 'A*.A:A*.B:C*'$/;"	v
TEST_F_before_TEST_in_same_test_case	test/gtest/test/gtest_output_test_.cc	/^class TEST_F_before_TEST_in_same_test_case : public testing::Test {$/;"	c	file:
TEST_LIST	test/gtest/test/gtest_catch_exceptions_test.py	/^TEST_LIST = gtest_test_utils.Subprocess($/;"	v
TEST_P	test/gtest/fused-src/gtest/gtest.h	16946;"	d
TEST_P	test/gtest/include/gtest/gtest-param-test.h	1380;"	d
TEST_P	test/gtest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, CanGetNextPrime) {$/;"	f
TEST_P	test/gtest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TEST_P	test/gtest/samples/sample7_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TEST_P	test/gtest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, CanGetNextPrime) {$/;"	f
TEST_P	test/gtest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TEST_P	test/gtest/samples/sample8_unittest.cc	/^TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(CommentTest, TestsCorrectlyReportUnstreamableParams) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(ExternalGeneratorTest, ExternalGenerator) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(ExternalInstantiationTest, IsMultipleOf33) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(GeneratorEvaluationTest, GeneratorsEvaluatedInMain) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(InstantiationInMultipleTranslaionUnitsTest, IsMultipleOf42) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(MultipleInstantiationTest, AllowsMultipleInstances) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(NamingTest, TestsReportCorrectNamesAndParameters) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(ParameterizedDerivedTest, SeesSequence) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(SeparateInstanceTest, TestsRunInSeparateInstances) {$/;"	f
TEST_P	test/gtest/test/gtest-param-test_test.cc	/^TEST_P(TestGenerationTest, TestsExpandedAndRun) {$/;"	f
TEST_P	test/gtest/test/gtest_filter_unittest_.cc	/^TEST_P(ParamTest, TestX) {$/;"	f	namespace:__anon24
TEST_P	test/gtest/test/gtest_filter_unittest_.cc	/^TEST_P(ParamTest, TestY) {$/;"	f	namespace:__anon24
TEST_P	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestA) {$/;"	f
TEST_P	test/gtest/test/gtest_list_tests_unittest_.cc	/^TEST_P(ValueParamTest, TestB) {$/;"	f
TEST_P	test/gtest/test/gtest_output_test_.cc	/^TEST_P(FailingParamTest, Fails) {$/;"	f
TEST_P	test/gtest/test/gtest_repeat_test.cc	/^TEST_P(MyParamTest, ShouldPass) {$/;"	f	namespace:__anon33
TEST_P	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_P(ValueParamTest, AnotherTestThatHasValueParamAttribute) {}$/;"	f
TEST_P	test/gtest/test/gtest_xml_output_unittest_.cc	/^TEST_P(ValueParamTest, HasValueParamAttribute) {}$/;"	f
TEST_REGEX	test/gtest/test/gtest_filter_unittest.py	/^TEST_REGEX = re.compile(r'^\\[\\s*RUN\\s*\\].*\\.(\\w+(\/\\w+)?)')$/;"	v
TEST_SIZE	experiments/backup/benchmarks/src/base/huffbench.c	/^static const int TEST_SIZE =  5000000;$/;"	v	file:
TEST_SIZE	experiments/backup/benchmarks/src/base/huffbench.c	/^static const int TEST_SIZE = 10000000;$/;"	v	file:
TEST_SIZE	experiments/benchmarks/src/base/huffbench.c	/^static const int TEST_SIZE =  5000000;$/;"	v	file:
TEST_SIZE	experiments/benchmarks/src/base/huffbench.c	/^static const int TEST_SIZE = 10000000;$/;"	v	file:
TEST_THREW_EXCEPTION	test/gtest/fused-src/gtest/gtest.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_THREW_EXCEPTION	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_before_TEST_F_in_same_test_case	test/gtest/test/gtest_output_test_.cc	/^class TEST_before_TEST_F_in_same_test_case : public testing::Test {$/;"	c	file:
THREW	test/gtest/fused-src/gtest/gtest-all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
THREW	test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
THROW_ON_FAILURE	test/gtest/test/gtest_throw_on_failure_test.py	/^THROW_ON_FAILURE = 'gtest_throw_on_failure'$/;"	v
THROW_ON_FAILURE_ENV_VAR	test/gtest/test/gtest_break_on_failure_unittest.py	/^THROW_ON_FAILURE_ENV_VAR = 'GTEST_THROW_ON_FAILURE'$/;"	v
TIME	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	23;"	d	file:
TINY_FFT_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_FFT_SIZE = 16;  \/* must be a power of two *\/$/;"	v
TINY_FFT_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_FFT_SIZE = 16;  \/* must be a power of two *\/$/;"	v
TINY_LU_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_LU_SIZE = 10;$/;"	v
TINY_LU_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_LU_SIZE = 10;$/;"	v
TINY_SOR_SIZE	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SOR_SIZE =10; \/* NxN grid *\/$/;"	v
TINY_SOR_SIZE	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SOR_SIZE =10; \/* NxN grid *\/$/;"	v
TINY_SPARSE_SIZE_M	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_M = 10;$/;"	v
TINY_SPARSE_SIZE_M	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_M = 10;$/;"	v
TINY_SPARSE_SIZE_N	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_N = 10;$/;"	v
TINY_SPARSE_SIZE_N	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_N = 10;$/;"	v
TINY_SPARSE_SIZE_nz	experiments/backup/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_nz = 50;$/;"	v
TINY_SPARSE_SIZE_nz	experiments/benchmarks/src/SciMark2-C/constants.h	/^     const  int TINY_SPARSE_SIZE_nz = 50;$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-1.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-2.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-3.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-4.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-5.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-6.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-7.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops-8.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/backup/benchmarks/src/base/flops.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-1.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-2.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-3.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-4.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-5.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-6.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-7.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops-8.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TLimit	experiments/benchmarks/src/base/flops.c	/^double TLimit;                   \/* Threshold to determine Number of    *\/$/;"	v
TM	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  const TargetMachine &TM;$/;"	m	struct:MachineAST	file:
TMAX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	20;"	d
TMAX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	26;"	d
TMAX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	32;"	d
TMAX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	38;"	d
TMAX	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	44;"	d
TMAX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	20;"	d
TMAX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	26;"	d
TMAX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	32;"	d
TMAX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	38;"	d
TMAX	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.h	44;"	d
TOGGLE	experiments/backup/benchmarks/src/base/methcall.c	/^    TOGGLE;$/;"	m	struct:NthToggle	file:
TOGGLE	experiments/backup/benchmarks/src/base/methcall.c	/^    TOGGLE;$/;"	m	struct:Toggle	file:
TOGGLE	experiments/backup/benchmarks/src/base/methcall.c	12;"	d	file:
TOGGLE	experiments/backup/benchmarks/src/base/objinst.c	/^    TOGGLE;$/;"	m	struct:Toggle	file:
TOGGLE	experiments/backup/benchmarks/src/base/objinst.c	12;"	d	file:
TOGGLE	experiments/benchmarks/src/base/methcall.c	/^    TOGGLE;$/;"	m	struct:NthToggle	file:
TOGGLE	experiments/benchmarks/src/base/methcall.c	/^    TOGGLE;$/;"	m	struct:Toggle	file:
TOGGLE	experiments/benchmarks/src/base/methcall.c	12;"	d	file:
TOGGLE	experiments/benchmarks/src/base/objinst.c	/^    TOGGLE;$/;"	m	struct:Toggle	file:
TOGGLE	experiments/benchmarks/src/base/objinst.c	12;"	d	file:
TOKEN_TABLE	test/gtest/scripts/pump.py	/^TOKEN_TABLE = [$/;"	v
TOTAL_SHARDS_ENV_VAR	test/gtest/test/gtest_filter_unittest.py	/^TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'$/;"	v
TOTAL_SHARDS_ENV_VAR	test/gtest/test/gtest_shuffle_test.py	/^TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'$/;"	v
TPRVector	test/gtest/test/gtest_unittest.cc	/^  typedef std::vector<TestPartResult> TPRVector;$/;"	t	class:__anon14::TestResultTest	file:
TRIES	experiments/backup/benchmarks/src/base/oourafft.c	22;"	d	file:
TRIES	experiments/backup/benchmarks/src/base/oourafft.c	24;"	d	file:
TRIES	experiments/benchmarks/src/base/oourafft.c	22;"	d	file:
TRIES	experiments/benchmarks/src/base/oourafft.c	24;"	d	file:
TRISOLV_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	9;"	d
TRISOLV_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.h	9;"	d
TRMM_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	9;"	d
TRMM_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.h	9;"	d
TRUE	experiments/backup/benchmarks/src/SciMark2-C/scimark2.h	12;"	d
TRUE	experiments/backup/benchmarks/src/base/dry.c	156;"	d	file:
TRUE	experiments/backup/benchmarks/src/base/fbench.c	239;"	d	file:
TRUE	experiments/backup/benchmarks/src/base/fldry.c	158;"	d	file:
TRUE	experiments/backup/benchmarks/src/base/misr.c	40;"	d	file:
TRUE	experiments/backup/benchmarks/src/base/richards_benchmark.c	35;"	d	file:
TRUE	experiments/benchmarks/src/SciMark2-C/scimark2.h	12;"	d
TRUE	experiments/benchmarks/src/base/dry.c	156;"	d	file:
TRUE	experiments/benchmarks/src/base/fbench.c	239;"	d	file:
TRUE	experiments/benchmarks/src/base/fldry.c	158;"	d	file:
TRUE	experiments/benchmarks/src/base/misr.c	40;"	d	file:
TRUE	experiments/benchmarks/src/base/richards_benchmark.c	35;"	d	file:
TSTEPS	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	20;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	25;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	30;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	35;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	40;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	20;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	25;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	30;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	35;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.h	40;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	20;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	25;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	30;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	35;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	40;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	20;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	25;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	30;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	35;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	40;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	20;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	25;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	30;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	35;"	d
TSTEPS	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	40;"	d
TSTEPS	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	20;"	d
TSTEPS	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	25;"	d
TSTEPS	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	30;"	d
TSTEPS	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	35;"	d
TSTEPS	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.h	40;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/adi/adi.h	20;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/adi/adi.h	25;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/adi/adi.h	30;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/adi/adi.h	35;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/adi/adi.h	40;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	20;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	25;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	30;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	35;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.h	40;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	20;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	25;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	30;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	35;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.h	40;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	20;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	25;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	30;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	35;"	d
TSTEPS	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.h	40;"	d
TTI	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    const TargetTransformInfo *TTI;$/;"	m	class:__anon1::CostModelAnalysis	file:
TTIInstruction	include/CostEstimator/CostEstimatorOptions.h	/^    Cache, StaticInstruction, TTIInstruction, Branch, Call$/;"	e	enum:__anon4::CostAnalysisKind
TTIInstructionAnalysis	include/CostEstimator/CostAnalysis.h	/^class TTIInstructionAnalysis : public CostAnalysis {$/;"	c
TTIInstructionAnalysis	src/CostEstimator/CostAnalysis/Instruction/TTI/TTIInstructionAnalysis.cpp	/^TTIInstructionAnalysis::TTIInstructionAnalysis() {$/;"	f	class:TTIInstructionAnalysis
TYPED_TEST	test/gtest/fused-src/gtest/gtest.h	17389;"	d
TYPED_TEST	test/gtest/include/gtest/gtest-typed-test.h	169;"	d
TYPED_TEST	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, CanGetNextPrime) {$/;"	f
TYPED_TEST	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, ReturnsFalseForNonPrimes) {$/;"	f
TYPED_TEST	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST(PrimeTableTest, ReturnsTrueForPrimes) {$/;"	f
TYPED_TEST	test/gtest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, FullMatchWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	test/gtest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, ImplicitConstructorWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	test/gtest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, PartialMatchWorks) {$/;"	f	namespace:testing::internal
TYPED_TEST	test/gtest/test/gtest-port_test.cc	/^TYPED_TEST(RETest, RejectsInvalidRegex) {$/;"	f	namespace:testing::internal
TYPED_TEST	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST(CommonTest, ValuesAreCorrect) {$/;"	f
TYPED_TEST	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST(CommonTest, ValuesAreStillCorrect) {$/;"	f
TYPED_TEST	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST(NumericTest, DefaultIsZero) {$/;"	f	namespace:library1
TYPED_TEST	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST(TypedTest1, A) {}$/;"	f
TYPED_TEST	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST(TypedTest2, A) {}$/;"	f
TYPED_TEST	test/gtest/test/gtest-unittest-api_test.cc	/^TYPED_TEST(TestCaseWithCommentTest, Dummy) {}$/;"	f	namespace:testing::internal
TYPED_TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestA) {$/;"	f
TYPED_TEST	test/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST(TypedTest, TestB) {$/;"	f
TYPED_TEST	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {$/;"	f
TYPED_TEST	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Failure) {$/;"	f
TYPED_TEST	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST(TypedTest, Success) {$/;"	f
TYPED_TEST	test/gtest/test/gtest_unittest.cc	/^TYPED_TEST(DISABLED_TypedTest, ShouldNotRun) {$/;"	f	namespace:__anon14
TYPED_TEST	test/gtest/test/gtest_unittest.cc	/^TYPED_TEST(TypedTest, DISABLED_ShouldNotRun) {$/;"	f	namespace:__anon14
TYPED_TEST	test/gtest/test/gtest_xml_output_unittest_.cc	/^TYPED_TEST(TypedTest, HasTypeParamAttribute) {}$/;"	f
TYPED_TEST_CASE	test/gtest/fused-src/gtest/gtest.h	17385;"	d
TYPED_TEST_CASE	test/gtest/include/gtest/gtest-typed-test.h	165;"	d
TYPED_TEST_CASE_P	test/gtest/fused-src/gtest/gtest.h	17439;"	d
TYPED_TEST_CASE_P	test/gtest/include/gtest/gtest-typed-test.h	219;"	d
TYPED_TEST_P	test/gtest/fused-src/gtest/gtest.h	17443;"	d
TYPED_TEST_P	test/gtest/include/gtest/gtest-typed-test.h	223;"	d
TYPED_TEST_P	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, CanGetNextPrime) {$/;"	f
TYPED_TEST_P	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, ReturnsFalseForNonPrimes) {$/;"	f
TYPED_TEST_P	test/gtest/samples/sample6_unittest.cc	/^TYPED_TEST_P(PrimeTableTest2, ReturnsTrueForPrimes) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(DerivedTest, ValuesAreCorrect) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(DerivedTest, ValuesAreStillCorrect) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(NumericTest, DefaultIsZero) {$/;"	f	namespace:library2
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(NumericTest, ZeroIsLessThanOne) {$/;"	f	namespace:library2
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP1, A) {}$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP1, B) {}$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_P(TypedTestP2, A) {}$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.h	/^TYPED_TEST_P(ContainerTest, CanBeDefaultConstructed) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest-typed-test_test.h	/^TYPED_TEST_P(ContainerTest, InitialSizeIsZero) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestA) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_P(TypeParamTest, TestB) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Failure) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_P(TypedTestP, Success) {$/;"	f
TYPED_TEST_P	test/gtest/test/gtest_unittest.cc	/^TYPED_TEST_P(DISABLED_TypedTestP, ShouldNotRun) {$/;"	f	namespace:__anon14
TYPED_TEST_P	test/gtest/test/gtest_unittest.cc	/^TYPED_TEST_P(TypedTestP, DISABLED_ShouldNotRun) {$/;"	f	namespace:__anon14
TYPED_TEST_P	test/gtest/test/gtest_xml_output_unittest_.cc	/^TYPED_TEST_P(TypeParameterizedTestCase, HasTypeParamAttribute) {}$/;"	f
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T14> Tail;$/;"	t	struct:testing::internal::Templates14
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Templates27
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Templates26
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Templates25
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Templates24
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Templates23
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Templates22
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Templates21
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Templates20
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Templates19
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Templates18
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16, T17> Tail;$/;"	t	struct:testing::internal::Templates17
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15, T16> Tail;$/;"	t	struct:testing::internal::Templates16
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Templates15
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Types15
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;$/;"	t	struct:testing::internal::Types28
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Types27
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Types26
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Types25
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Types24
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Types23
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Types22
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Types21
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Types20
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Types19
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Types18
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16, T17> Tail;$/;"	t	struct:testing::internal::Types17
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T16> Tail;$/;"	t	struct:testing::internal::Types16
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T28> Tail;$/;"	t	struct:testing::internal::Templates28
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Templates41
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Templates40
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Templates39
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Templates38
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Templates37
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Templates36
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Templates35
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Templates34
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Templates33
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Templates32
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30, T31> Tail;$/;"	t	struct:testing::internal::Templates31
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29, T30> Tail;$/;"	t	struct:testing::internal::Templates30
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Templates29
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Types29
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;$/;"	t	struct:testing::internal::Types42
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Types41
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Types40
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Types39
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Types38
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Types37
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Types36
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Types35
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Types34
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Types33
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Types32
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30, T31> Tail;$/;"	t	struct:testing::internal::Types31
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T30> Tail;$/;"	t	struct:testing::internal::Types30
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T42> Tail;$/;"	t	struct:testing::internal::Templates42
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Templates50
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Templates49
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Templates48
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Templates47
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Templates46
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44, T45> Tail;$/;"	t	struct:testing::internal::Templates45
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43, T44> Tail;$/;"	t	struct:testing::internal::Templates44
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Templates43
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Types43
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Types50
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Types49
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Types48
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Types47
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Types46
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44, T45> Tail;$/;"	t	struct:testing::internal::Types45
Tail	test/gtest/fused-src/gtest/gtest.h	/^      T44> Tail;$/;"	t	struct:testing::internal::Types44
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates0 Tail;$/;"	t	struct:testing::internal::Templates1
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Templates11
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Templates12
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Templates13
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates1<T2> Tail;$/;"	t	struct:testing::internal::Templates2
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates2<T2, T3> Tail;$/;"	t	struct:testing::internal::Templates3
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Templates4
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Templates5
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Templates6
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Templates7
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Templates8
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Templates9
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Templates10
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types0 Tail;$/;"	t	struct:testing::internal::Types1
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Types11
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Types12
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Types13
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;$/;"	t	struct:testing::internal::Types14
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types1<T2> Tail;$/;"	t	struct:testing::internal::Types2
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types2<T2, T3> Tail;$/;"	t	struct:testing::internal::Types3
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Types4
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Types5
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Types6
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Types7
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Types8
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Types9
Tail	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Types10
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14> Tail;$/;"	t	struct:testing::internal::Templates14
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Templates27
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Templates26
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Templates25
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Templates24
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Templates23
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Templates22
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Templates21
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Templates20
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Templates19
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Templates18
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16, T17> Tail;$/;"	t	struct:testing::internal::Templates17
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15, T16> Tail;$/;"	t	struct:testing::internal::Templates16
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Templates15
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Types15
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;$/;"	t	struct:testing::internal::Types28
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Types27
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Types26
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Types25
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Types24
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Types23
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Types22
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Types21
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Types20
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Types19
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Types18
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16, T17> Tail;$/;"	t	struct:testing::internal::Types17
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T16> Tail;$/;"	t	struct:testing::internal::Types16
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28> Tail;$/;"	t	struct:testing::internal::Templates28
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Templates41
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Templates40
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Templates39
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Templates38
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Templates37
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Templates36
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Templates35
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Templates34
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Templates33
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Templates32
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30, T31> Tail;$/;"	t	struct:testing::internal::Templates31
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29, T30> Tail;$/;"	t	struct:testing::internal::Templates30
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Templates29
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Types29
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;$/;"	t	struct:testing::internal::Types42
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Types41
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Types40
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Types39
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Types38
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Types37
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Types36
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Types35
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Types34
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Types33
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Types32
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30, T31> Tail;$/;"	t	struct:testing::internal::Types31
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T30> Tail;$/;"	t	struct:testing::internal::Types30
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42> Tail;$/;"	t	struct:testing::internal::Templates42
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Templates50
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Templates49
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Templates48
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Templates47
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Templates46
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44, T45> Tail;$/;"	t	struct:testing::internal::Templates45
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43, T44> Tail;$/;"	t	struct:testing::internal::Templates44
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Templates43
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Types43
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Types50
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Types49
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Types48
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Types47
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Types46
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44, T45> Tail;$/;"	t	struct:testing::internal::Types45
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T44> Tail;$/;"	t	struct:testing::internal::Types44
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates0 Tail;$/;"	t	struct:testing::internal::Templates1
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Templates11
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Templates12
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Templates13
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates1<T2> Tail;$/;"	t	struct:testing::internal::Templates2
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates2<T2, T3> Tail;$/;"	t	struct:testing::internal::Templates3
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Templates4
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Templates5
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Templates6
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Templates7
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Templates8
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Templates9
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Templates10
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types0 Tail;$/;"	t	struct:testing::internal::Types1
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Types11
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Types12
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Types13
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;$/;"	t	struct:testing::internal::Types14
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types1<T2> Tail;$/;"	t	struct:testing::internal::Types2
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types2<T2, T3> Tail;$/;"	t	struct:testing::internal::Types3
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Types4
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Types5
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Types6
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Types7
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Types8
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Types9
Tail	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Types10
TailCallElimination	include/GEOS.h	/^  TailCallElimination,$/;"	e	enum:OptimizationKind
TearDown	test/gtest/fused-src/gtest/gtest-all.cc	/^void Test::TearDown() {$/;"	f	class:testing::Test
TearDown	test/gtest/fused-src/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment
TearDown	test/gtest/include/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment
TearDown	test/gtest/samples/sample5_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:QuickTest
TearDown	test/gtest/samples/sample7_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:PrimeTableTest
TearDown	test/gtest/samples/sample8_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:PrimeTableTest
TearDown	test/gtest/src/gtest.cc	/^void Test::TearDown() {$/;"	f	class:testing::Test
TearDown	test/gtest/test/gtest-filepath_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::__anon22::DirectoryCreationTest
TearDown	test/gtest/test/gtest-listener_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::EnvironmentInvocationCatcher
TearDown	test/gtest/test/gtest-listener_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::ListenerTest
TearDown	test/gtest/test/gtest-options_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::__anon18::XmlOutputChangeDirTest
TearDown	test/gtest/test/gtest-param-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:TestGenerationEnvironment
TearDown	test/gtest/test/gtest-param-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:TestGenerationTest
TearDown	test/gtest/test/gtest-typed-test_test.cc	/^  virtual void TearDown() {$/;"	f	class:CommonTest
TearDown	test/gtest/test/gtest-unittest-api_test.cc	/^  virtual void TearDown() {$/;"	f	class:testing::internal::FinalSuccessChecker
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInTearDownTest
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInConstructorTest
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInSetUpTest
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInTearDownTest
TearDown	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  virtual void TearDown() {$/;"	f	class:CxxExceptionInTestBodyTest
TearDown	test/gtest/test/gtest_environment_test.cc	/^  virtual void TearDown() {$/;"	f	class:__anon21::MyEnvironment
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:BarEnvironment
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:DeathTestAndMultiThreadsTest
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FatalFailureInFixtureConstructorTest
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FatalFailureInSetUpTest
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:FooEnvironment
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest
TearDown	test/gtest/test/gtest_output_test_.cc	/^  virtual void TearDown() {$/;"	f	class:NonFatalFailureInSetUpTest
TearDown	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate1Test
TearDown	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate2Test
TearDown	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate3Test
TearDown	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate4Test
TearDown	test/gtest/test/gtest_pred_impl_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:Predicate5Test
TearDown	test/gtest/test/gtest_repeat_test.cc	/^  virtual void TearDown() { g_environment_tear_down_count++; }$/;"	f	class:__anon33::MyEnvironment
TearDown	test/gtest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:ProtectedFixtureMethodsTest
TearDown	test/gtest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
TearDown	test/gtest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anon14::ShouldShardTest
TearDown	test/gtest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anon14::TestResultTest
TearDown	test/gtest/test/gtest_unittest.cc	/^  virtual void TearDown() {$/;"	f	class:__anon14::UnitTestRecordPropertyTestEnvironment
TearDown	test/gtest/test/gtest_xml_outfile1_test_.cc	/^  virtual void TearDown() {$/;"	f	class:PropertyOne
TearDown	test/gtest/test/gtest_xml_outfile2_test_.cc	/^  virtual void TearDown() {$/;"	f	class:PropertyTwo
TearDownEnvironment	test/gtest/fused-src/gtest/gtest-all.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal
TearDownEnvironment	test/gtest/src/gtest.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal
TearDownExecuted	test/gtest/test/gtest-param-test_test.cc	/^  void TearDownExecuted() { tear_down_count_++; }$/;"	f	class:TestGenerationEnvironment
TearDownTestCase	test/gtest/fused-src/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test
TearDownTestCase	test/gtest/include/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test
TearDownTestCase	test/gtest/test/gtest-death-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:MacroLogicDeathTest
TearDownTestCase	test/gtest/test/gtest-listener_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::internal::ListenerTest
TearDownTestCase	test/gtest/test/gtest-param-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:SeparateInstanceTest
TearDownTestCase	test/gtest/test/gtest-param-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:TestGenerationTest
TearDownTestCase	test/gtest/test/gtest-typed-test_test.cc	/^  static void TearDownTestCase() {$/;"	f	class:CommonTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInTearDownTestCaseTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInConstructorTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInDestructorTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInSetUpTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTearDownTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTearDownTestCaseTest
TearDownTestCase	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  static void TearDownTestCase() {$/;"	f	class:CxxExceptionInTestBodyTest
TearDownTestCase	test/gtest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:__anon14::DisabledTestsTest
TearDownTestCase	test/gtest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:__anon14::GTestFlagSaverTest
TearDownTestCase	test/gtest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::CurrentTestInfoTest
TearDownTestCase	test/gtest/test/gtest_unittest.cc	/^  static void TearDownTestCase() {$/;"	f	class:testing::SetUpTestCaseTest
TearDownTestCase	test/gtest/test/gtest_xml_output_unittest_.cc	/^  static void TearDownTestCase() { RecordProperty("TearDownTestCase", "aye"); }$/;"	f	class:PropertyRecordingTest
TearDownTestCaseFunc	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;$/;"	t	class:testing::Test
TearDownTestCaseFunc	test/gtest/fused-src/gtest/gtest.h	/^typedef void (*TearDownTestCaseFunc)();$/;"	t	namespace:testing::internal
TearDownTestCaseFunc	test/gtest/include/gtest/gtest.h	/^  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;$/;"	t	class:testing::Test
TearDownTestCaseFunc	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef void (*TearDownTestCaseFunc)();$/;"	t	namespace:testing::internal
TempDir	test/gtest/test/gtest-filepath_test.cc	/^  std::string TempDir() const {$/;"	f	class:testing::internal::__anon22::DirectoryCreationTest
TemplateSel	test/gtest/fused-src/gtest/gtest.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
TemplateSel	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/fused-src/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,$/;"	s	namespace:testing::internal
Templates	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing::internal
Templates0	test/gtest/fused-src/gtest/gtest.h	/^struct Templates0 {};$/;"	s	namespace:testing::internal
Templates0	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates0 {};$/;"	s	namespace:testing::internal
Templates1	test/gtest/fused-src/gtest/gtest.h	/^struct Templates1 {$/;"	s	namespace:testing::internal
Templates1	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates1 {$/;"	s	namespace:testing::internal
Templates10	test/gtest/fused-src/gtest/gtest.h	/^struct Templates10 {$/;"	s	namespace:testing::internal
Templates10	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates10 {$/;"	s	namespace:testing::internal
Templates11	test/gtest/fused-src/gtest/gtest.h	/^struct Templates11 {$/;"	s	namespace:testing::internal
Templates11	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates11 {$/;"	s	namespace:testing::internal
Templates12	test/gtest/fused-src/gtest/gtest.h	/^struct Templates12 {$/;"	s	namespace:testing::internal
Templates12	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates12 {$/;"	s	namespace:testing::internal
Templates13	test/gtest/fused-src/gtest/gtest.h	/^struct Templates13 {$/;"	s	namespace:testing::internal
Templates13	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates13 {$/;"	s	namespace:testing::internal
Templates14	test/gtest/fused-src/gtest/gtest.h	/^struct Templates14 {$/;"	s	namespace:testing::internal
Templates14	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates14 {$/;"	s	namespace:testing::internal
Templates15	test/gtest/fused-src/gtest/gtest.h	/^struct Templates15 {$/;"	s	namespace:testing::internal
Templates15	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates15 {$/;"	s	namespace:testing::internal
Templates16	test/gtest/fused-src/gtest/gtest.h	/^struct Templates16 {$/;"	s	namespace:testing::internal
Templates16	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates16 {$/;"	s	namespace:testing::internal
Templates17	test/gtest/fused-src/gtest/gtest.h	/^struct Templates17 {$/;"	s	namespace:testing::internal
Templates17	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates17 {$/;"	s	namespace:testing::internal
Templates18	test/gtest/fused-src/gtest/gtest.h	/^struct Templates18 {$/;"	s	namespace:testing::internal
Templates18	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates18 {$/;"	s	namespace:testing::internal
Templates19	test/gtest/fused-src/gtest/gtest.h	/^struct Templates19 {$/;"	s	namespace:testing::internal
Templates19	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates19 {$/;"	s	namespace:testing::internal
Templates2	test/gtest/fused-src/gtest/gtest.h	/^struct Templates2 {$/;"	s	namespace:testing::internal
Templates2	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates2 {$/;"	s	namespace:testing::internal
Templates20	test/gtest/fused-src/gtest/gtest.h	/^struct Templates20 {$/;"	s	namespace:testing::internal
Templates20	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates20 {$/;"	s	namespace:testing::internal
Templates21	test/gtest/fused-src/gtest/gtest.h	/^struct Templates21 {$/;"	s	namespace:testing::internal
Templates21	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates21 {$/;"	s	namespace:testing::internal
Templates22	test/gtest/fused-src/gtest/gtest.h	/^struct Templates22 {$/;"	s	namespace:testing::internal
Templates22	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates22 {$/;"	s	namespace:testing::internal
Templates23	test/gtest/fused-src/gtest/gtest.h	/^struct Templates23 {$/;"	s	namespace:testing::internal
Templates23	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates23 {$/;"	s	namespace:testing::internal
Templates24	test/gtest/fused-src/gtest/gtest.h	/^struct Templates24 {$/;"	s	namespace:testing::internal
Templates24	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates24 {$/;"	s	namespace:testing::internal
Templates25	test/gtest/fused-src/gtest/gtest.h	/^struct Templates25 {$/;"	s	namespace:testing::internal
Templates25	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates25 {$/;"	s	namespace:testing::internal
Templates26	test/gtest/fused-src/gtest/gtest.h	/^struct Templates26 {$/;"	s	namespace:testing::internal
Templates26	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates26 {$/;"	s	namespace:testing::internal
Templates27	test/gtest/fused-src/gtest/gtest.h	/^struct Templates27 {$/;"	s	namespace:testing::internal
Templates27	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates27 {$/;"	s	namespace:testing::internal
Templates28	test/gtest/fused-src/gtest/gtest.h	/^struct Templates28 {$/;"	s	namespace:testing::internal
Templates28	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates28 {$/;"	s	namespace:testing::internal
Templates29	test/gtest/fused-src/gtest/gtest.h	/^struct Templates29 {$/;"	s	namespace:testing::internal
Templates29	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates29 {$/;"	s	namespace:testing::internal
Templates3	test/gtest/fused-src/gtest/gtest.h	/^struct Templates3 {$/;"	s	namespace:testing::internal
Templates3	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates3 {$/;"	s	namespace:testing::internal
Templates30	test/gtest/fused-src/gtest/gtest.h	/^struct Templates30 {$/;"	s	namespace:testing::internal
Templates30	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates30 {$/;"	s	namespace:testing::internal
Templates31	test/gtest/fused-src/gtest/gtest.h	/^struct Templates31 {$/;"	s	namespace:testing::internal
Templates31	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates31 {$/;"	s	namespace:testing::internal
Templates32	test/gtest/fused-src/gtest/gtest.h	/^struct Templates32 {$/;"	s	namespace:testing::internal
Templates32	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates32 {$/;"	s	namespace:testing::internal
Templates33	test/gtest/fused-src/gtest/gtest.h	/^struct Templates33 {$/;"	s	namespace:testing::internal
Templates33	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates33 {$/;"	s	namespace:testing::internal
Templates34	test/gtest/fused-src/gtest/gtest.h	/^struct Templates34 {$/;"	s	namespace:testing::internal
Templates34	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates34 {$/;"	s	namespace:testing::internal
Templates35	test/gtest/fused-src/gtest/gtest.h	/^struct Templates35 {$/;"	s	namespace:testing::internal
Templates35	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates35 {$/;"	s	namespace:testing::internal
Templates36	test/gtest/fused-src/gtest/gtest.h	/^struct Templates36 {$/;"	s	namespace:testing::internal
Templates36	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates36 {$/;"	s	namespace:testing::internal
Templates37	test/gtest/fused-src/gtest/gtest.h	/^struct Templates37 {$/;"	s	namespace:testing::internal
Templates37	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates37 {$/;"	s	namespace:testing::internal
Templates38	test/gtest/fused-src/gtest/gtest.h	/^struct Templates38 {$/;"	s	namespace:testing::internal
Templates38	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates38 {$/;"	s	namespace:testing::internal
Templates39	test/gtest/fused-src/gtest/gtest.h	/^struct Templates39 {$/;"	s	namespace:testing::internal
Templates39	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates39 {$/;"	s	namespace:testing::internal
Templates4	test/gtest/fused-src/gtest/gtest.h	/^struct Templates4 {$/;"	s	namespace:testing::internal
Templates4	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates4 {$/;"	s	namespace:testing::internal
Templates40	test/gtest/fused-src/gtest/gtest.h	/^struct Templates40 {$/;"	s	namespace:testing::internal
Templates40	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates40 {$/;"	s	namespace:testing::internal
Templates41	test/gtest/fused-src/gtest/gtest.h	/^struct Templates41 {$/;"	s	namespace:testing::internal
Templates41	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates41 {$/;"	s	namespace:testing::internal
Templates42	test/gtest/fused-src/gtest/gtest.h	/^struct Templates42 {$/;"	s	namespace:testing::internal
Templates42	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates42 {$/;"	s	namespace:testing::internal
Templates43	test/gtest/fused-src/gtest/gtest.h	/^struct Templates43 {$/;"	s	namespace:testing::internal
Templates43	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates43 {$/;"	s	namespace:testing::internal
Templates44	test/gtest/fused-src/gtest/gtest.h	/^struct Templates44 {$/;"	s	namespace:testing::internal
Templates44	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates44 {$/;"	s	namespace:testing::internal
Templates45	test/gtest/fused-src/gtest/gtest.h	/^struct Templates45 {$/;"	s	namespace:testing::internal
Templates45	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates45 {$/;"	s	namespace:testing::internal
Templates46	test/gtest/fused-src/gtest/gtest.h	/^struct Templates46 {$/;"	s	namespace:testing::internal
Templates46	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates46 {$/;"	s	namespace:testing::internal
Templates47	test/gtest/fused-src/gtest/gtest.h	/^struct Templates47 {$/;"	s	namespace:testing::internal
Templates47	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates47 {$/;"	s	namespace:testing::internal
Templates48	test/gtest/fused-src/gtest/gtest.h	/^struct Templates48 {$/;"	s	namespace:testing::internal
Templates48	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates48 {$/;"	s	namespace:testing::internal
Templates49	test/gtest/fused-src/gtest/gtest.h	/^struct Templates49 {$/;"	s	namespace:testing::internal
Templates49	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates49 {$/;"	s	namespace:testing::internal
Templates5	test/gtest/fused-src/gtest/gtest.h	/^struct Templates5 {$/;"	s	namespace:testing::internal
Templates5	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates5 {$/;"	s	namespace:testing::internal
Templates50	test/gtest/fused-src/gtest/gtest.h	/^struct Templates50 {$/;"	s	namespace:testing::internal
Templates50	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates50 {$/;"	s	namespace:testing::internal
Templates6	test/gtest/fused-src/gtest/gtest.h	/^struct Templates6 {$/;"	s	namespace:testing::internal
Templates6	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates6 {$/;"	s	namespace:testing::internal
Templates7	test/gtest/fused-src/gtest/gtest.h	/^struct Templates7 {$/;"	s	namespace:testing::internal
Templates7	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates7 {$/;"	s	namespace:testing::internal
Templates8	test/gtest/fused-src/gtest/gtest.h	/^struct Templates8 {$/;"	s	namespace:testing::internal
Templates8	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates8 {$/;"	s	namespace:testing::internal
Templates9	test/gtest/fused-src/gtest/gtest.h	/^struct Templates9 {$/;"	s	namespace:testing::internal
Templates9	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates9 {$/;"	s	namespace:testing::internal
Temporary	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^enum Mark { Temporary, Permanent, None};$/;"	e	enum:Mark	file:
TerminateHandler	test/gtest/test/gtest_catch_exceptions_test_.cc	/^void TerminateHandler() {$/;"	f
TerminateHandler	test/gtest/test/gtest_throw_on_failure_test_.cc	/^void TerminateHandler() {$/;"	f
TersePrintPrefixToStrings	test/gtest/fused-src/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrintPrefixToStrings	test/gtest/fused-src/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrintPrefixToStrings	test/gtest/include/gtest/gtest-printers.h	/^  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrintPrefixToStrings	test/gtest/include/gtest/gtest-printers.h	/^  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrinter	test/gtest/samples/sample9_unittest.cc	/^class TersePrinter : public EmptyTestEventListener {$/;"	c	namespace:__anon34	file:
Test	test/gtest/fused-src/gtest/gtest-all.cc	/^Test::Test()$/;"	f	class:testing::Test
Test	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
Test	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
Test	test/gtest/src/gtest.cc	/^Test::Test()$/;"	f	class:testing::Test
Test	test/gtest/test/gtest_unittest.cc	/^class Test {};$/;"	c	namespace:my_namespace::testing	file:
TestAssertEqualsUncopyable	test/gtest/test/gtest_unittest.cc	/^void TestAssertEqualsUncopyable() {$/;"	f	namespace:__anon14
TestAssertNonPositive	test/gtest/test/gtest_unittest.cc	/^void TestAssertNonPositive() {$/;"	f	namespace:__anon14
TestBodyExecuted	test/gtest/test/gtest-param-test_test.cc	/^  void TestBodyExecuted() { test_body_count_++; }$/;"	f	class:TestGenerationEnvironment
TestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^TestCase::TestCase(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestCase
TestCase	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestCase {$/;"	c	namespace:testing
TestCase	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestCase {$/;"	c	namespace:testing
TestCase	test/gtest/src/gtest.cc	/^TestCase::TestCase(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestCase
TestCase	test/gtest/test/gtest_test_utils.py	/^TestCase = _test_module.TestCase  # pylint: disable-msg=C6409$/;"	v
TestCaseFailed	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool TestCaseFailed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCaseFailed	test/gtest/src/gtest.cc	/^static bool TestCaseFailed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCaseInfoContainer	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseRegistry
TestCaseInfoContainer	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseRegistry
TestCaseNameIs	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit TestCaseNameIs(const std::string& name)$/;"	f	class:testing::internal::TestCaseNameIs
TestCaseNameIs	test/gtest/fused-src/gtest/gtest-all.cc	/^class TestCaseNameIs {$/;"	c	namespace:testing::internal	file:
TestCaseNameIs	test/gtest/src/gtest.cc	/^  explicit TestCaseNameIs(const std::string& name)$/;"	f	class:testing::internal::TestCaseNameIs
TestCaseNameIs	test/gtest/src/gtest.cc	/^class TestCaseNameIs {$/;"	c	namespace:testing::internal	file:
TestCasePassed	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool TestCasePassed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCasePassed	test/gtest/src/gtest.cc	/^static bool TestCasePassed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCaseWithCommentTest	test/gtest/test/gtest-unittest-api_test.cc	/^template <typename T> class TestCaseWithCommentTest : public Test {};$/;"	c	namespace:testing::internal	file:
TestDeleted	test/gtest/test/gtest-death-test_test.cc	/^  bool TestDeleted() const { return test_deleted_; }$/;"	f	class:MockDeathTestFactory
TestDisabled	test/gtest/fused-src/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestDisabled	test/gtest/include/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestEq1	test/gtest/test/gtest_output_test_.cc	/^void TestEq1(int x) {$/;"	f
TestEq1	test/gtest/test/gtest_unittest.cc	/^void TestEq1(int x) {$/;"	f	namespace:__anon14
TestEventListener	test/gtest/fused-src/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListener	test/gtest/include/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListeners	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventListeners	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventListeners	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventListeners	test/gtest/src/gtest.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventListenersAccessor	test/gtest/test/gtest_unittest.cc	/^class TestEventListenersAccessor {$/;"	c	namespace:testing::internal	file:
TestEventRepeater	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater
TestEventRepeater	test/gtest/fused-src/gtest/gtest-all.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestEventRepeater	test/gtest/src/gtest.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater
TestEventRepeater	test/gtest/src/gtest.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestException	test/gtest/test/gtest-death-test_ex_test.cc	/^class TestException : public std::exception {$/;"	c	file:
TestExitCodeAndOutput	test/gtest/test/gtest_uninitialized_test.py	/^def TestExitCodeAndOutput(command):$/;"	f
TestExitMacros	test/gtest/test/gtest-death-test_test.cc	/^static void TestExitMacros() {$/;"	f	file:
TestFactoryBase	test/gtest/fused-src/gtest/gtest.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	test/gtest/fused-src/gtest/gtest.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryBase	test/gtest/include/gtest/internal/gtest-internal.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	test/gtest/include/gtest/internal/gtest-internal.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	test/gtest/fused-src/gtest/gtest.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	test/gtest/include/gtest/internal/gtest-internal.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFailed	test/gtest/fused-src/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestFailed	test/gtest/include/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestFailureThrowsRuntimeError	test/gtest/test/gtest_throw_on_failure_ex_test.cc	/^void TestFailureThrowsRuntimeError() {$/;"	f
TestFlag	test/gtest/test/gtest_env_var_test.py	/^def TestFlag(flag, test_val, default_val):$/;"	f
TestForDeathTest	test/gtest/test/gtest-death-test_test.cc	/^  TestForDeathTest() : original_dir_(FilePath::GetCurrentDir()) {}$/;"	f	class:TestForDeathTest
TestForDeathTest	test/gtest/test/gtest-death-test_test.cc	/^class TestForDeathTest : public testing::Test {$/;"	c	file:
TestGTestAddReference	test/gtest/test/gtest_unittest.cc	/^void TestGTestAddReference() {$/;"	f
TestGTestReferenceToConst	test/gtest/test/gtest_unittest.cc	/^void TestGTestReferenceToConst() {$/;"	f
TestGTestRemoveConst	test/gtest/test/gtest_unittest.cc	/^void TestGTestRemoveConst() {$/;"	f
TestGTestRemoveReference	test/gtest/test/gtest_unittest.cc	/^void TestGTestRemoveReference() {$/;"	f
TestGTestRemoveReferenceAndConst	test/gtest/test/gtest_unittest.cc	/^void TestGTestRemoveReferenceAndConst() {$/;"	f
TestGenerationEnvironment	test/gtest/test/gtest-param-test_test.cc	/^  TestGenerationEnvironment() : fixture_constructor_count_(0), set_up_count_(0),$/;"	f	class:TestGenerationEnvironment	file:
TestGenerationEnvironment	test/gtest/test/gtest-param-test_test.cc	/^class TestGenerationEnvironment : public ::testing::Environment {$/;"	c	file:
TestGenerationTest	test/gtest/test/gtest-param-test_test.cc	/^  TestGenerationTest() {$/;"	f	class:TestGenerationTest
TestGenerationTest	test/gtest/test/gtest-param-test_test.cc	/^class TestGenerationTest : public TestWithParam<int> {$/;"	c	file:
TestHelpFlag	test/gtest/test/gtest_help_test.py	/^  def TestHelpFlag(self, flag):$/;"	m	class:GTestHelpTest
TestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^TestInfo::TestInfo(const std::string& a_test_case_name,$/;"	f	class:testing::TestInfo
TestInfo	test/gtest/fused-src/gtest/gtest.h	/^    TestInfo(const char* a_test_case_base_name,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
TestInfo	test/gtest/fused-src/gtest/gtest.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
TestInfo	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfo	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfo	test/gtest/include/gtest/internal/gtest-param-util.h	/^    TestInfo(const char* a_test_case_base_name,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
TestInfo	test/gtest/include/gtest/internal/gtest-param-util.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
TestInfo	test/gtest/src/gtest.cc	/^TestInfo::TestInfo(const std::string& a_test_case_name,$/;"	f	class:testing::TestInfo
TestInfoContainer	test/gtest/fused-src/gtest/gtest.h	/^  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
TestInfoContainer	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
TestInfoTest	test/gtest/test/gtest_unittest.cc	/^class TestInfoTest : public Test {$/;"	c	namespace:testing	file:
TestLifeCycleTest	test/gtest/test/gtest_unittest.cc	/^  TestLifeCycleTest() { count_++; }$/;"	f	class:__anon16::TestLifeCycleTest
TestLifeCycleTest	test/gtest/test/gtest_unittest.cc	/^class TestLifeCycleTest : public Test {$/;"	c	namespace:__anon16	file:
TestListener	test/gtest/test/gtest_unittest.cc	/^  TestListener() : on_start_counter_(NULL), is_destroyed_(NULL) {}$/;"	f	class:TestListener
TestListener	test/gtest/test/gtest_unittest.cc	/^  TestListener(int* on_start_counter, bool* is_destroyed)$/;"	f	class:TestListener
TestListener	test/gtest/test/gtest_unittest.cc	/^class TestListener : public EmptyTestEventListener {$/;"	c	file:
TestMetaFactory	test/gtest/fused-src/gtest/gtest.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	test/gtest/fused-src/gtest/gtest.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactory	test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	test/gtest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactoryBase	test/gtest/fused-src/gtest/gtest.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestMetaFactoryBase	test/gtest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestNameIs	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit TestNameIs(const char* name)$/;"	f	class:testing::__anon38::TestNameIs
TestNameIs	test/gtest/fused-src/gtest/gtest-all.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anon38	file:
TestNameIs	test/gtest/src/gtest.cc	/^  explicit TestNameIs(const char* name)$/;"	f	class:testing::__anon11::TestNameIs
TestNameIs	test/gtest/src/gtest.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anon11	file:
TestNamePrinter	test/gtest/test/gtest_shuffle_test_.cc	/^class TestNamePrinter : public EmptyTestEventListener {$/;"	c	namespace:__anon30	file:
TestNonHelpFlag	test/gtest/test/gtest_help_test.py	/^  def TestNonHelpFlag(self, flag):$/;"	m	class:GTestHelpTest
TestParsingFlags	test/gtest/test/gtest_unittest.cc	/^  static void TestParsingFlags(int argc1, const CharType** argv1,$/;"	f	class:testing::InitGoogleTestTest
TestPartFatallyFailed	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartFatallyFailed	test/gtest/src/gtest.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartNonfatallyFailed	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartNonfatallyFailed	test/gtest/src/gtest.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartResult	test/gtest/fused-src/gtest/gtest.h	/^  TestPartResult(Type a_type,$/;"	f	class:testing::TestPartResult
TestPartResult	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResult	test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResult(Type a_type,$/;"	f	class:testing::TestPartResult
TestPartResult	test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResultArray	test/gtest/fused-src/gtest/gtest.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultArray	test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultArrayDeathTest	test/gtest/test/gtest-test-part_test.cc	/^typedef TestPartResultArrayTest TestPartResultArrayDeathTest;$/;"	t	namespace:__anon13	file:
TestPartResultArrayTest	test/gtest/test/gtest-test-part_test.cc	/^  TestPartResultArrayTest()$/;"	f	class:__anon13::TestPartResultArrayTest
TestPartResultArrayTest	test/gtest/test/gtest-test-part_test.cc	/^class TestPartResultArrayTest : public Test {$/;"	c	namespace:__anon13	file:
TestPartResultReporterInterface	test/gtest/fused-src/gtest/gtest.h	/^class TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultReporterInterface	test/gtest/include/gtest/gtest-test-part.h	/^class TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultTest	test/gtest/test/gtest-test-part_test.cc	/^  TestPartResultTest()$/;"	f	class:__anon13::TestPartResultTest
TestPartResultTest	test/gtest/test/gtest-test-part_test.cc	/^class TestPartResultTest : public Test {$/;"	c	namespace:__anon13	file:
TestPartResultTypeToString	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char * TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing
TestPartResultTypeToString	test/gtest/src/gtest.cc	/^static const char * TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing
TestPassed	test/gtest/fused-src/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestPassed	test/gtest/include/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestPropertiesAsXmlAttributes	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
TestPropertiesAsXmlAttributes	test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
TestProperty	test/gtest/fused-src/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value) :$/;"	f	class:testing::TestProperty
TestProperty	test/gtest/fused-src/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestProperty	test/gtest/include/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value) :$/;"	f	class:testing::TestProperty
TestProperty	test/gtest/include/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestPropertyKeyIs	test/gtest/fused-src/gtest/gtest-all.cc	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	test/gtest/fused-src/gtest/gtest-all.cc	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal	file:
TestPropertyKeyIs	test/gtest/src/gtest-internal-inl.h	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	test/gtest/src/gtest-internal-inl.h	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal
TestRepeat	test/gtest/test/gtest_repeat_test.cc	/^void TestRepeat(int repeat) {$/;"	f	namespace:__anon33
TestRepeatUnspecified	test/gtest/test/gtest_repeat_test.cc	/^void TestRepeatUnspecified() {$/;"	f	namespace:__anon33
TestRepeatWithEmptyFilter	test/gtest/test/gtest_repeat_test.cc	/^void TestRepeatWithEmptyFilter(int repeat) {$/;"	f	namespace:__anon33
TestRepeatWithFilterForFailedTests	test/gtest/test/gtest_repeat_test.cc	/^void TestRepeatWithFilterForFailedTests(int repeat) {$/;"	f	namespace:__anon33
TestRepeatWithFilterForSuccessfulTests	test/gtest/test/gtest_repeat_test.cc	/^void TestRepeatWithFilterForSuccessfulTests(int repeat) {$/;"	f	namespace:__anon33
TestReportable	test/gtest/fused-src/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestReportable	test/gtest/include/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestReportableDisabled	test/gtest/fused-src/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestReportableDisabled	test/gtest/include/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestResult	test/gtest/fused-src/gtest/gtest-all.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResult	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResult	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResult	test/gtest/src/gtest.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResultAccessor	test/gtest/fused-src/gtest/gtest-all.cc	/^class TestResultAccessor {$/;"	c	namespace:testing::internal	file:
TestResultAccessor	test/gtest/src/gtest-internal-inl.h	/^class TestResultAccessor {$/;"	c	namespace:testing::internal
TestResultDeathTest	test/gtest/test/gtest_unittest.cc	/^typedef TestResultTest TestResultDeathTest;$/;"	t	namespace:__anon14	file:
TestResultTest	test/gtest/test/gtest_unittest.cc	/^class TestResultTest : public Test {$/;"	c	namespace:__anon14	file:
TestRole	test/gtest/fused-src/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestRole	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestSehExceptions	test/gtest/test/gtest_catch_exceptions_test.py	/^    def TestSehExceptions(self, test_output):$/;"	m	class:CatchSehExceptionsTest
TestSize	test/gtest/test/gtest_unittest.cc	/^  void TestSize() {$/;"	f	class:__anon14::FloatingPointTest
TestValues	test/gtest/test/gtest_unittest.cc	/^  struct TestValues {$/;"	s	class:__anon14::FloatingPointTest	file:
TestWithParam	test/gtest/fused-src/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {$/;"	c	namespace:testing
TestWithParam	test/gtest/include/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {$/;"	c	namespace:testing
TestingVector	test/gtest/test/gtest_unittest.cc	/^class TestingVector : public std::vector<int> {$/;"	c	file:
ThreadFunc	test/gtest/test/gtest-port_test.cc	/^void* ThreadFunc(void* data) {$/;"	f	namespace:testing::internal
ThreadFuncWithCLinkage	test/gtest/fused-src/gtest/gtest.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:std::tr1
ThreadFuncWithCLinkage	test/gtest/include/gtest/internal/gtest-port.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:testing::internal
ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^  ThreadLocal() : key_(CreateKey()),$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^  ThreadLocal() : value_() {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^  explicit ThreadLocal(const T& value) : key_(CreateKey()),$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^class ThreadLocal {$/;"	c	namespace:std::tr1
ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : key_(CreateKey()),$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : value_() {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value) : key_(CreateKey()),$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadLocal {$/;"	c	namespace:testing::internal
ThreadLocalValueHolderBase	test/gtest/fused-src/gtest/gtest.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:std::tr1
ThreadLocalValueHolderBase	test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:testing::internal
ThreadParam	test/gtest/test/gtest-port_test.cc	/^typedef ThreadLocal<DestructorTracker>* ThreadParam;$/;"	t	namespace:testing::internal	file:
ThreadRoutine	test/gtest/test/gtest_output_test_.cc	/^static void ThreadRoutine(SpawnThreadNotifications* notifications) {$/;"	f	file:
ThreadWithParam	test/gtest/fused-src/gtest/gtest.h	/^  ThreadWithParam($/;"	f	class:std::tr1::ThreadWithParam
ThreadWithParam	test/gtest/fused-src/gtest/gtest.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParam	test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadWithParam($/;"	f	class:testing::internal::ThreadWithParam
ThreadWithParam	test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	test/gtest/fused-src/gtest/gtest.h	/^class ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParamBase	test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithScopedTrace	test/gtest/test/gtest_output_test_.cc	/^static void ThreadWithScopedTrace(CheckPoints* check_points) {$/;"	f	file:
ThrowAString	test/gtest/test/gtest_unittest.cc	/^void ThrowAString() {$/;"	f	namespace:__anon14
ThrowAnInteger	test/gtest/test/gtest_unittest.cc	/^void ThrowAnInteger() {$/;"	f	namespace:__anon14
ThrowNothing	test/gtest/test/gtest_unittest.cc	/^void ThrowNothing() {}$/;"	f	namespace:__anon14
ThrowOnFailure	test/gtest/test/gtest_unittest.cc	/^  static Flags ThrowOnFailure(bool throw_on_failure) {$/;"	f	struct:testing::Flags
ThrowOnFailureTest	test/gtest/test/gtest_throw_on_failure_test.py	/^class ThrowOnFailureTest(gtest_test_utils.TestCase):$/;"	c
TimeArray	experiments/backup/benchmarks/src/base/flops-1.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-2.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-3.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-4.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-5.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-6.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-7.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops-8.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/backup/benchmarks/src/base/flops.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-1.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-2.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-3.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-4.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-5.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-6.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-7.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops-8.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeArray	experiments/benchmarks/src/base/flops.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
TimeInMillis	test/gtest/fused-src/gtest/gtest.h	/^typedef TypeWithSize<8>::Int TimeInMillis;  \/\/ Represents time in milliseconds.$/;"	t	namespace:std::tr1
TimeInMillis	test/gtest/fused-src/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing
TimeInMillis	test/gtest/include/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing
TimeInMillis	test/gtest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::Int TimeInMillis;  \/\/ Represents time in milliseconds.$/;"	t	namespace:testing::internal
Title	test/gtest/scripts/gen_gtest_pred_impl.py	/^def Title(word):$/;"	f
To	test/gtest/test/gtest-port_test.cc	/^  To(bool* converted) { *converted = true; }  \/\/ NOLINT$/;"	f	class:testing::internal::To
To	test/gtest/test/gtest-port_test.cc	/^class To {$/;"	c	namespace:testing::internal	file:
ToLower	test/gtest/fused-src/gtest/gtest.h	/^inline char ToLower(char ch) {$/;"	f	namespace:std::tr1
ToLower	test/gtest/include/gtest/internal/gtest-port.h	/^inline char ToLower(char ch) {$/;"	f	namespace:testing::internal
ToUnixLineEnding	test/gtest/test/gtest_output_test.py	/^def ToUnixLineEnding(s):$/;"	f
ToUpper	test/gtest/fused-src/gtest/gtest.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:std::tr1
ToUpper	test/gtest/include/gtest/internal/gtest-port.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:testing::internal
Toggle	docs/html/search/search.js	/^    this.Toggle = function(id)$/;"	m	class:SearchResults
Toggle	experiments/backup/benchmarks/src/base/methcall.c	/^typedef struct Toggle {$/;"	s	file:
Toggle	experiments/backup/benchmarks/src/base/methcall.c	/^} Toggle;$/;"	t	typeref:struct:Toggle	file:
Toggle	experiments/backup/benchmarks/src/base/objinst.c	/^typedef struct Toggle {$/;"	s	file:
Toggle	experiments/backup/benchmarks/src/base/objinst.c	/^} Toggle;$/;"	t	typeref:struct:Toggle	file:
Toggle	experiments/benchmarks/src/base/methcall.c	/^typedef struct Toggle {$/;"	s	file:
Toggle	experiments/benchmarks/src/base/methcall.c	/^} Toggle;$/;"	t	typeref:struct:Toggle	file:
Toggle	experiments/benchmarks/src/base/objinst.c	/^typedef struct Toggle {$/;"	s	file:
Toggle	experiments/benchmarks/src/base/objinst.c	/^} Toggle;$/;"	t	typeref:struct:Toggle	file:
Token	test/gtest/scripts/pump.py	/^class Token:$/;"	c
Tokenize	test/gtest/scripts/pump.py	/^def Tokenize(s):$/;"	f
TokenizeLines	test/gtest/scripts/pump.py	/^def TokenizeLines(lines, pos):$/;"	f
Total	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  uint64_t Total;$/;"	m	struct:formatBranchInfo	file:
Towers	experiments/backup/benchmarks/src/base/towers.c	/^void Towers ()    { \/* Towers *\/$/;"	f
Towers	experiments/benchmarks/src/base/towers.c	/^void Towers ()    { \/* Towers *\/$/;"	f
TraceInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^struct TraceInfo {$/;"	s	namespace:testing::internal	file:
TraceInfo	test/gtest/src/gtest-internal-inl.h	/^struct TraceInfo {$/;"	s	namespace:testing::internal
Trees	experiments/backup/benchmarks/src/base/treesort.c	/^void Trees(int run) {$/;"	f
Trees	experiments/benchmarks/src/base/treesort.c	/^void Trees(int run) {$/;"	f
Trial	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int Trial (int j) {$/;"	f
Trial	experiments/benchmarks/src/base/puzzle-stanford.c	/^int Trial (int j) {$/;"	f
Try	experiments/backup/benchmarks/src/base/queens.c	/^void Try(int i, int *q, int a[], int b[], int c[], int x[]) {$/;"	f
Try	experiments/benchmarks/src/base/queens.c	/^void Try(int i, int *q, int a[], int b[], int c[], int x[]) {$/;"	f
TryTestSubroutine	test/gtest/test/gtest_output_test_.cc	/^void TryTestSubroutine() {$/;"	f
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 0, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 1, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 2, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 3, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 4, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 5, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 6, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 7, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 8, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/fused-src/gtest/gtest.h	/^struct TupleElement<true, 9, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 0, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 1, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 2, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 3, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 4, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 5, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 6, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 7, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 8, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct TupleElement<true, 9, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TuplePrefixPrinter	test/gtest/fused-src/gtest/gtest.h	/^struct TuplePrefixPrinter {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	test/gtest/fused-src/gtest/gtest.h	/^struct TuplePrefixPrinter<0> {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	test/gtest/fused-src/gtest/gtest.h	/^struct TuplePrefixPrinter<1> {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	test/gtest/include/gtest/gtest-printers.h	/^struct TuplePrefixPrinter {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	test/gtest/include/gtest/gtest-printers.h	/^struct TuplePrefixPrinter<0> {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	test/gtest/include/gtest/gtest-printers.h	/^struct TuplePrefixPrinter<1> {$/;"	s	namespace:testing::internal
TwoTypes	test/gtest/test/gtest-typed-test_test.cc	/^typedef Types<char, int> TwoTypes;$/;"	t	file:
Type	test/gtest/fused-src/gtest/gtest.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
Type	test/gtest/include/gtest/gtest-test-part.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
TypeId	test/gtest/fused-src/gtest/gtest.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal
TypeId	test/gtest/include/gtest/internal/gtest-internal.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal
TypeIdHelper	test/gtest/fused-src/gtest/gtest.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeIdHelper	test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeKind	test/gtest/fused-src/gtest/gtest.h	/^enum TypeKind {$/;"	g	namespace:testing::internal2
TypeKind	test/gtest/include/gtest/gtest-printers.h	/^enum TypeKind {$/;"	g	namespace:testing::internal2
TypeList	test/gtest/fused-src/gtest/gtest.h	/^struct TypeList {$/;"	s	namespace:testing::internal
TypeList	test/gtest/fused-src/gtest/gtest.h	/^struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing::internal
TypeList	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct TypeList {$/;"	s	namespace:testing::internal
TypeList	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing::internal
TypeParamTest	test/gtest/test/gtest_list_tests_unittest_.cc	/^TYPED_TEST_CASE_P(TypeParamTest);$/;"	v
TypeParamTest	test/gtest/test/gtest_list_tests_unittest_.cc	/^class TypeParamTest : public testing::Test {$/;"	c	file:
TypeParameterizedTest	test/gtest/fused-src/gtest/gtest.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	test/gtest/fused-src/gtest/gtest.h	/^class TypeParameterizedTest<Fixture, TestSel, Types0> {$/;"	c	namespace:testing::internal
TypeParameterizedTest	test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest<Fixture, TestSel, Types0> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	test/gtest/fused-src/gtest/gtest.h	/^class TypeParameterizedTestCase {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	test/gtest/fused-src/gtest/gtest.h	/^class TypeParameterizedTestCase<Fixture, Templates0, Types> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestCase {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestCase<Fixture, Templates0, Types> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	test/gtest/test/gtest_xml_output_unittest_.cc	/^TYPED_TEST_CASE_P(TypeParameterizedTestCase);$/;"	v
TypeParameterizedTestCase	test/gtest/test/gtest_xml_output_unittest_.cc	/^template <typename T> class TypeParameterizedTestCase : public Test {};$/;"	c	file:
TypeParameterizedTestCaseTypes	test/gtest/test/gtest_xml_output_unittest_.cc	/^typedef testing::Types<int, long> TypeParameterizedTestCaseTypes;$/;"	t	file:
TypeWithSize	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithSize {$/;"	c	namespace:std::tr1
TypeWithSize	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithSize<4> {$/;"	c	namespace:std::tr1
TypeWithSize	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithSize<8> {$/;"	c	namespace:std::tr1
TypeWithSize	test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize {$/;"	c	namespace:testing::internal
TypeWithSize	test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<4> {$/;"	c	namespace:testing::internal
TypeWithSize	test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<8> {$/;"	c	namespace:testing::internal
TypeWithoutFormatter	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithoutFormatter {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithoutFormatter<T, kConvertibleToInteger> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	test/gtest/fused-src/gtest/gtest.h	/^class TypeWithoutFormatter<T, kProtobuf> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	test/gtest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	test/gtest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter<T, kConvertibleToInteger> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	test/gtest/include/gtest/gtest-printers.h	/^class TypeWithoutFormatter<T, kProtobuf> {$/;"	c	namespace:testing::internal2
TypedTest	test/gtest/test/gtest_list_tests_unittest_.cc	/^class TypedTest : public testing::Test {$/;"	c	file:
TypedTest	test/gtest/test/gtest_output_test_.cc	/^class TypedTest : public testing::Test {$/;"	c	file:
TypedTest	test/gtest/test/gtest_unittest.cc	/^class TypedTest : public Test {$/;"	c	namespace:__anon14	file:
TypedTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^template <typename T> class TypedTest : public Test {};$/;"	c	file:
TypedTest1	test/gtest/test/gtest-typed-test_test.cc	/^class TypedTest1 : public Test {$/;"	c	file:
TypedTest2	test/gtest/test/gtest-typed-test_test.cc	/^class TypedTest2 : public Test {$/;"	c	file:
TypedTestCasePState	test/gtest/fused-src/gtest/gtest.h	/^  TypedTestCasePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestCasePState
TypedTestCasePState	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ TypedTestCasePState {$/;"	c	namespace:testing::internal
TypedTestCasePState	test/gtest/include/gtest/internal/gtest-internal.h	/^  TypedTestCasePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestCasePState
TypedTestCasePState	test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ TypedTestCasePState {$/;"	c	namespace:testing::internal
TypedTestCasePStateDeathTest	test/gtest/test/gtest-typed-test_test.cc	/^typedef TypedTestCasePStateTest TypedTestCasePStateDeathTest;$/;"	t	file:
TypedTestCasePStateTest	test/gtest/test/gtest-typed-test_test.cc	/^class TypedTestCasePStateTest : public Test {$/;"	c	file:
TypedTestP	test/gtest/test/gtest_output_test_.cc	/^TYPED_TEST_CASE_P(TypedTestP);$/;"	v
TypedTestP	test/gtest/test/gtest_output_test_.cc	/^class TypedTestP : public testing::Test {$/;"	c	file:
TypedTestP	test/gtest/test/gtest_unittest.cc	/^class TypedTestP : public Test {$/;"	c	namespace:__anon14	file:
TypedTestP1	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_CASE_P(TypedTestP1);$/;"	v
TypedTestP1	test/gtest/test/gtest-typed-test_test.cc	/^class TypedTestP1 : public Test {$/;"	c	file:
TypedTestP2	test/gtest/test/gtest-typed-test_test.cc	/^TYPED_TEST_CASE_P(TypedTestP2);$/;"	v
TypedTestP2	test/gtest/test/gtest-typed-test_test.cc	/^class TypedTestP2 : public Test {$/;"	c	file:
TypedTestTypes	test/gtest/test/gtest_xml_output_unittest_.cc	/^typedef testing::Types<int, long> TypedTestTypes;$/;"	t	file:
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types {$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, T3, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, T2, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<T1, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/fused-src/gtest/gtest.h	/^struct Types<internal::None, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types {$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, T3, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, T2, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<T1, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<internal::None, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types0	test/gtest/fused-src/gtest/gtest.h	/^struct Types0 {};$/;"	s	namespace:testing::internal
Types0	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types0 {};$/;"	s	namespace:testing::internal
Types1	test/gtest/fused-src/gtest/gtest.h	/^struct Types1 {$/;"	s	namespace:testing::internal
Types1	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types1 {$/;"	s	namespace:testing::internal
Types10	test/gtest/fused-src/gtest/gtest.h	/^struct Types10 {$/;"	s	namespace:testing::internal
Types10	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types10 {$/;"	s	namespace:testing::internal
Types11	test/gtest/fused-src/gtest/gtest.h	/^struct Types11 {$/;"	s	namespace:testing::internal
Types11	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types11 {$/;"	s	namespace:testing::internal
Types12	test/gtest/fused-src/gtest/gtest.h	/^struct Types12 {$/;"	s	namespace:testing::internal
Types12	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types12 {$/;"	s	namespace:testing::internal
Types13	test/gtest/fused-src/gtest/gtest.h	/^struct Types13 {$/;"	s	namespace:testing::internal
Types13	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types13 {$/;"	s	namespace:testing::internal
Types14	test/gtest/fused-src/gtest/gtest.h	/^struct Types14 {$/;"	s	namespace:testing::internal
Types14	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types14 {$/;"	s	namespace:testing::internal
Types15	test/gtest/fused-src/gtest/gtest.h	/^struct Types15 {$/;"	s	namespace:testing::internal
Types15	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types15 {$/;"	s	namespace:testing::internal
Types16	test/gtest/fused-src/gtest/gtest.h	/^struct Types16 {$/;"	s	namespace:testing::internal
Types16	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types16 {$/;"	s	namespace:testing::internal
Types17	test/gtest/fused-src/gtest/gtest.h	/^struct Types17 {$/;"	s	namespace:testing::internal
Types17	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types17 {$/;"	s	namespace:testing::internal
Types18	test/gtest/fused-src/gtest/gtest.h	/^struct Types18 {$/;"	s	namespace:testing::internal
Types18	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types18 {$/;"	s	namespace:testing::internal
Types19	test/gtest/fused-src/gtest/gtest.h	/^struct Types19 {$/;"	s	namespace:testing::internal
Types19	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types19 {$/;"	s	namespace:testing::internal
Types2	test/gtest/fused-src/gtest/gtest.h	/^struct Types2 {$/;"	s	namespace:testing::internal
Types2	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types2 {$/;"	s	namespace:testing::internal
Types20	test/gtest/fused-src/gtest/gtest.h	/^struct Types20 {$/;"	s	namespace:testing::internal
Types20	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types20 {$/;"	s	namespace:testing::internal
Types21	test/gtest/fused-src/gtest/gtest.h	/^struct Types21 {$/;"	s	namespace:testing::internal
Types21	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types21 {$/;"	s	namespace:testing::internal
Types22	test/gtest/fused-src/gtest/gtest.h	/^struct Types22 {$/;"	s	namespace:testing::internal
Types22	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types22 {$/;"	s	namespace:testing::internal
Types23	test/gtest/fused-src/gtest/gtest.h	/^struct Types23 {$/;"	s	namespace:testing::internal
Types23	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types23 {$/;"	s	namespace:testing::internal
Types24	test/gtest/fused-src/gtest/gtest.h	/^struct Types24 {$/;"	s	namespace:testing::internal
Types24	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types24 {$/;"	s	namespace:testing::internal
Types25	test/gtest/fused-src/gtest/gtest.h	/^struct Types25 {$/;"	s	namespace:testing::internal
Types25	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types25 {$/;"	s	namespace:testing::internal
Types26	test/gtest/fused-src/gtest/gtest.h	/^struct Types26 {$/;"	s	namespace:testing::internal
Types26	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types26 {$/;"	s	namespace:testing::internal
Types27	test/gtest/fused-src/gtest/gtest.h	/^struct Types27 {$/;"	s	namespace:testing::internal
Types27	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types27 {$/;"	s	namespace:testing::internal
Types28	test/gtest/fused-src/gtest/gtest.h	/^struct Types28 {$/;"	s	namespace:testing::internal
Types28	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types28 {$/;"	s	namespace:testing::internal
Types29	test/gtest/fused-src/gtest/gtest.h	/^struct Types29 {$/;"	s	namespace:testing::internal
Types29	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types29 {$/;"	s	namespace:testing::internal
Types3	test/gtest/fused-src/gtest/gtest.h	/^struct Types3 {$/;"	s	namespace:testing::internal
Types3	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types3 {$/;"	s	namespace:testing::internal
Types30	test/gtest/fused-src/gtest/gtest.h	/^struct Types30 {$/;"	s	namespace:testing::internal
Types30	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types30 {$/;"	s	namespace:testing::internal
Types31	test/gtest/fused-src/gtest/gtest.h	/^struct Types31 {$/;"	s	namespace:testing::internal
Types31	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types31 {$/;"	s	namespace:testing::internal
Types32	test/gtest/fused-src/gtest/gtest.h	/^struct Types32 {$/;"	s	namespace:testing::internal
Types32	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types32 {$/;"	s	namespace:testing::internal
Types33	test/gtest/fused-src/gtest/gtest.h	/^struct Types33 {$/;"	s	namespace:testing::internal
Types33	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types33 {$/;"	s	namespace:testing::internal
Types34	test/gtest/fused-src/gtest/gtest.h	/^struct Types34 {$/;"	s	namespace:testing::internal
Types34	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types34 {$/;"	s	namespace:testing::internal
Types35	test/gtest/fused-src/gtest/gtest.h	/^struct Types35 {$/;"	s	namespace:testing::internal
Types35	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types35 {$/;"	s	namespace:testing::internal
Types36	test/gtest/fused-src/gtest/gtest.h	/^struct Types36 {$/;"	s	namespace:testing::internal
Types36	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types36 {$/;"	s	namespace:testing::internal
Types37	test/gtest/fused-src/gtest/gtest.h	/^struct Types37 {$/;"	s	namespace:testing::internal
Types37	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types37 {$/;"	s	namespace:testing::internal
Types38	test/gtest/fused-src/gtest/gtest.h	/^struct Types38 {$/;"	s	namespace:testing::internal
Types38	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types38 {$/;"	s	namespace:testing::internal
Types39	test/gtest/fused-src/gtest/gtest.h	/^struct Types39 {$/;"	s	namespace:testing::internal
Types39	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types39 {$/;"	s	namespace:testing::internal
Types4	test/gtest/fused-src/gtest/gtest.h	/^struct Types4 {$/;"	s	namespace:testing::internal
Types4	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types4 {$/;"	s	namespace:testing::internal
Types40	test/gtest/fused-src/gtest/gtest.h	/^struct Types40 {$/;"	s	namespace:testing::internal
Types40	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types40 {$/;"	s	namespace:testing::internal
Types41	test/gtest/fused-src/gtest/gtest.h	/^struct Types41 {$/;"	s	namespace:testing::internal
Types41	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types41 {$/;"	s	namespace:testing::internal
Types42	test/gtest/fused-src/gtest/gtest.h	/^struct Types42 {$/;"	s	namespace:testing::internal
Types42	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types42 {$/;"	s	namespace:testing::internal
Types43	test/gtest/fused-src/gtest/gtest.h	/^struct Types43 {$/;"	s	namespace:testing::internal
Types43	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types43 {$/;"	s	namespace:testing::internal
Types44	test/gtest/fused-src/gtest/gtest.h	/^struct Types44 {$/;"	s	namespace:testing::internal
Types44	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types44 {$/;"	s	namespace:testing::internal
Types45	test/gtest/fused-src/gtest/gtest.h	/^struct Types45 {$/;"	s	namespace:testing::internal
Types45	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types45 {$/;"	s	namespace:testing::internal
Types46	test/gtest/fused-src/gtest/gtest.h	/^struct Types46 {$/;"	s	namespace:testing::internal
Types46	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types46 {$/;"	s	namespace:testing::internal
Types47	test/gtest/fused-src/gtest/gtest.h	/^struct Types47 {$/;"	s	namespace:testing::internal
Types47	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types47 {$/;"	s	namespace:testing::internal
Types48	test/gtest/fused-src/gtest/gtest.h	/^struct Types48 {$/;"	s	namespace:testing::internal
Types48	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types48 {$/;"	s	namespace:testing::internal
Types49	test/gtest/fused-src/gtest/gtest.h	/^struct Types49 {$/;"	s	namespace:testing::internal
Types49	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types49 {$/;"	s	namespace:testing::internal
Types5	test/gtest/fused-src/gtest/gtest.h	/^struct Types5 {$/;"	s	namespace:testing::internal
Types5	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types5 {$/;"	s	namespace:testing::internal
Types50	test/gtest/fused-src/gtest/gtest.h	/^struct Types50 {$/;"	s	namespace:testing::internal
Types50	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types50 {$/;"	s	namespace:testing::internal
Types6	test/gtest/fused-src/gtest/gtest.h	/^struct Types6 {$/;"	s	namespace:testing::internal
Types6	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types6 {$/;"	s	namespace:testing::internal
Types7	test/gtest/fused-src/gtest/gtest.h	/^struct Types7 {$/;"	s	namespace:testing::internal
Types7	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types7 {$/;"	s	namespace:testing::internal
Types8	test/gtest/fused-src/gtest/gtest.h	/^struct Types8 {$/;"	s	namespace:testing::internal
Types8	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types8 {$/;"	s	namespace:testing::internal
Types9	test/gtest/fused-src/gtest/gtest.h	/^struct Types9 {$/;"	s	namespace:testing::internal
Types9	test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types9 {$/;"	s	namespace:testing::internal
UChar	experiments/backup/benchmarks/src/base/lowercase.c	/^typedef unsigned short UChar;$/;"	t	file:
UChar	experiments/benchmarks/src/base/lowercase.c	/^typedef unsigned short UChar;$/;"	t	file:
UInt	test/gtest/fused-src/gtest/gtest.h	/^  typedef unsigned __int64 UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	test/gtest/fused-src/gtest/gtest.h	/^  typedef unsigned int UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	test/gtest/fused-src/gtest/gtest.h	/^  typedef void UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef unsigned __int64 UInt;$/;"	t	class:testing::internal::TypeWithSize
UInt	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef unsigned int UInt;$/;"	t	class:testing::internal::TypeWithSize
UInt	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef void UInt;$/;"	t	class:testing::internal::TypeWithSize
UInt32	test/gtest/fused-src/gtest/gtest.h	/^typedef TypeWithSize<4>::UInt UInt32;$/;"	t	namespace:std::tr1
UInt32	test/gtest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<4>::UInt UInt32;$/;"	t	namespace:testing::internal
UInt64	test/gtest/fused-src/gtest/gtest.h	/^typedef TypeWithSize<8>::UInt UInt64;$/;"	t	namespace:std::tr1
UInt64	test/gtest/include/gtest/internal/gtest-port.h	/^typedef TypeWithSize<8>::UInt UInt64;$/;"	t	namespace:testing::internal
UNIT_TEST	test/gtest/scripts/gen_gtest_pred_impl.py	/^UNIT_TEST = os.path.join(SCRIPT_DIR, '..\/test\/gtest_pred_impl_unittest.cc')$/;"	v
UNKNOWN_FLAG	test/gtest/test/gtest_help_test.py	/^UNKNOWN_FLAG = FLAG_PREFIX + 'unknown_flag_for_testing'$/;"	v
USAGE	experiments/backup/benchmarks/src/base/whetstone.c	78;"	d	file:
USAGE	experiments/benchmarks/src/base/whetstone.c	78;"	d	file:
USER_DIR	test/gtest/make/Makefile	/^USER_DIR = ..\/samples$/;"	m
UncondBranch	include/Profiling/GCOV.h	/^  bool UncondBranch;$/;"	m	struct:llvm::GCOVOptions
Uncopyable	test/gtest/test/gtest_unittest.cc	/^  explicit Uncopyable(int a_value) : value_(a_value) {}$/;"	f	class:__anon14::Uncopyable
Uncopyable	test/gtest/test/gtest_unittest.cc	/^class Uncopyable {$/;"	c	namespace:__anon14	file:
UnexpectedHRESULTFailure	test/gtest/test/gtest_unittest.cc	/^static HRESULT UnexpectedHRESULTFailure() {$/;"	f	namespace:__anon14
Uniform11	experiments/backup/benchmarks/src/base/oscar.c	/^Uniform11 (int *iy, float *yfl)$/;"	f
Uniform11	experiments/benchmarks/src/base/oscar.c	/^Uniform11 (int *iy, float *yfl)$/;"	f
UnitTest	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTest::UnitTest() {$/;"	f	class:testing::UnitTest
UnitTest	test/gtest/fused-src/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTest	test/gtest/include/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTest	test/gtest/src/gtest.cc	/^UnitTest::UnitTest() {$/;"	f	class:testing::UnitTest
UnitTestHelper	test/gtest/test/gtest-unittest-api_test.cc	/^class UnitTestHelper {$/;"	c	namespace:testing::internal	file:
UnitTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTestImpl::UnitTestImpl(UnitTest* parent)$/;"	f	class:testing::internal::UnitTestImpl
UnitTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal	file:
UnitTestImpl	test/gtest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal
UnitTestImpl	test/gtest/src/gtest.cc	/^UnitTestImpl::UnitTestImpl(UnitTest* parent)$/;"	f	class:testing::internal::UnitTestImpl
UnitTestOptions	test/gtest/fused-src/gtest/gtest-all.cc	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal	file:
UnitTestOptions	test/gtest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal
UnitTestRecordProperty	test/gtest/test/gtest_unittest.cc	/^  void UnitTestRecordProperty(const char* key, const std::string& value) {$/;"	f	class:testing::internal::UnitTestRecordPropertyTestHelper
UnitTestRecordPropertyTest	test/gtest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTest :$/;"	c	namespace:__anon14	file:
UnitTestRecordPropertyTestEnvironment	test/gtest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTestEnvironment : public Environment {$/;"	c	namespace:__anon14	file:
UnitTestRecordPropertyTestHelper	test/gtest/test/gtest_unittest.cc	/^  UnitTestRecordPropertyTestHelper() {}$/;"	f	class:testing::internal::UnitTestRecordPropertyTestHelper
UnitTestRecordPropertyTestHelper	test/gtest/test/gtest_unittest.cc	/^class UnitTestRecordPropertyTestHelper : public Test {$/;"	c	namespace:testing::internal	file:
UniversalPrint	test/gtest/fused-src/gtest/gtest.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrint	test/gtest/include/gtest/gtest-printers.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/fused-src/gtest/gtest-all.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/fused-src/gtest/gtest-all.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/fused-src/gtest/gtest.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/include/gtest/gtest-printers.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintCharArray	test/gtest/fused-src/gtest/gtest-all.cc	/^static void UniversalPrintCharArray($/;"	f	namespace:testing::internal
UniversalPrintCharArray	test/gtest/src/gtest-printers.cc	/^static void UniversalPrintCharArray($/;"	f	namespace:testing::internal
UniversalPrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalPrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrint	test/gtest/fused-src/gtest/gtest.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalTersePrint	test/gtest/include/gtest/gtest-printers.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalTersePrintTupleFieldsToStrings	test/gtest/fused-src/gtest/gtest.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal
UniversalTersePrintTupleFieldsToStrings	test/gtest/include/gtest/gtest-printers.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/fused-src/gtest/gtest.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
Unlock	test/gtest/fused-src/gtest/gtest.h	/^  void Unlock() {$/;"	f	class:std::tr1::MutexBase
Unlock	test/gtest/fused-src/gtest/gtest.h	/^  void Unlock() {}$/;"	f	class:std::tr1::Mutex
Unlock	test/gtest/include/gtest/internal/gtest-port.h	/^  void Unlock() {$/;"	f	class:testing::internal::MutexBase
Unlock	test/gtest/include/gtest/internal/gtest-port.h	/^  void Unlock() {}$/;"	f	class:testing::internal::Mutex
UnprintableChar	test/gtest/test/gtest_unittest.cc	/^  explicit UnprintableChar(char ch) : char_(ch) {}$/;"	f	class:__anon16::UnprintableChar
UnprintableChar	test/gtest/test/gtest_unittest.cc	/^class UnprintableChar {$/;"	c	namespace:__anon16	file:
UnprintableInFoo	test/gtest/test/gtest-printers_test.cc	/^  UnprintableInFoo() : z_(0) { memcpy(xy_, "\\xEF\\x12\\x0\\x0\\x34\\xAB\\x0\\x0", 8); }$/;"	f	class:foo::UnprintableInFoo
UnprintableInFoo	test/gtest/test/gtest-printers_test.cc	/^class UnprintableInFoo {$/;"	c	namespace:foo	file:
UnprintableTemplateInGlobal	test/gtest/test/gtest-printers_test.cc	/^  UnprintableTemplateInGlobal() : value_() {}$/;"	f	class:UnprintableTemplateInGlobal
UnprintableTemplateInGlobal	test/gtest/test/gtest-printers_test.cc	/^class UnprintableTemplateInGlobal {$/;"	c	file:
UnshuffleTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void TestCase::UnshuffleTests() {$/;"	f	class:testing::TestCase
UnshuffleTests	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
UnshuffleTests	test/gtest/src/gtest.cc	/^void TestCase::UnshuffleTests() {$/;"	f	class:testing::TestCase
UnshuffleTests	test/gtest/src/gtest.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
UnsignedTypes	test/gtest/test/gtest_output_test_.cc	/^typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;$/;"	t	file:
Unstreamable	test/gtest/test/gtest-param-test_test.cc	/^  explicit Unstreamable(int value) : value_(value) {}$/;"	f	class:Unstreamable
Unstreamable	test/gtest/test/gtest-param-test_test.cc	/^class Unstreamable {$/;"	c	file:
UrlEncode	test/gtest/fused-src/gtest/gtest-all.cc	/^string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener
UrlEncode	test/gtest/src/gtest.cc	/^string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener
Use	test/gtest/test/gtest-linked_ptr_test.cc	/^  virtual void Use() { *history << "A" << mynum << " use\\n"; }$/;"	f	class:__anon25::A
Use	test/gtest/test/gtest-linked_ptr_test.cc	/^  virtual void Use() { *history << "B" << mynum << " use\\n"; }$/;"	f	class:__anon25::B
UserThreadFunc	test/gtest/fused-src/gtest/gtest.h	/^  typedef void (*UserThreadFunc)(T);$/;"	t	class:std::tr1::ThreadWithParam
UserThreadFunc	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef void (*UserThreadFunc)(T);$/;"	t	class:testing::internal::ThreadWithParam
UsesColor	test/gtest/test/gtest_color_test.py	/^def UsesColor(term, color_env_var, color_flag):$/;"	f
Utf16ToAnsi	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {$/;"	f	class:testing::internal::String
Utf16ToAnsi	test/gtest/src/gtest.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {$/;"	f	class:testing::internal::String
UtoI	experiments/backup/benchmarks/src/base/ffbench.c	331;"	d	file:
UtoI	experiments/benchmarks/src/base/ffbench.c	331;"	d	file:
V402	include/Profiling/GCOV.h	/^    V402,$/;"	e	enum:llvm::GCOV::GCOVVersion
V404	include/Profiling/GCOV.h	/^    V404$/;"	e	enum:llvm::GCOV::GCOVVersion
VECPRINT	experiments/backup/benchmarks/src/sgefa/driver.c	14;"	d	file:
VECPRINT	experiments/benchmarks/src/sgefa/driver.c	14;"	d	file:
VERSION	experiments/backup/benchmarks/src/SciMark2-C/scimark2.h	5;"	d
VERSION	experiments/benchmarks/src/SciMark2-C/scimark2.h	5;"	d
ValidateGTestRootDir	test/gtest/scripts/fuse_gtest_files.py	/^def ValidateGTestRootDir(gtest_root):$/;"	f
ValidateOutputDir	test/gtest/scripts/fuse_gtest_files.py	/^def ValidateOutputDir(output_dir):$/;"	f
ValidateRegex	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal
ValidateRegex	test/gtest/src/gtest-port.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal
ValidateTestProperty	test/gtest/fused-src/gtest/gtest-all.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
ValidateTestProperty	test/gtest/src/gtest.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
ValidateTestPropertyName	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ValidateTestPropertyName(const std::string& property_name,$/;"	f	namespace:testing
ValidateTestPropertyName	test/gtest/src/gtest.cc	/^bool ValidateTestPropertyName(const std::string& property_name,$/;"	f	namespace:testing
Value	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^double *Value;$/;"	v
ValueArray1	test/gtest/fused-src/gtest/gtest.h	/^  explicit ValueArray1(T1 v1) : v1_(v1) {}$/;"	f	class:testing::internal::ValueArray1
ValueArray1	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray1 {$/;"	c	namespace:testing::internal
ValueArray1	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  explicit ValueArray1(T1 v1) : v1_(v1) {}$/;"	f	class:testing::internal::ValueArray1
ValueArray1	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray1 {$/;"	c	namespace:testing::internal
ValueArray10	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray10
ValueArray10	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray10 {$/;"	c	namespace:testing::internal
ValueArray10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray10
ValueArray10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray10 {$/;"	c	namespace:testing::internal
ValueArray11	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray11
ValueArray11	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray11 {$/;"	c	namespace:testing::internal
ValueArray11	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray11
ValueArray11	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray11 {$/;"	c	namespace:testing::internal
ValueArray12	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray12
ValueArray12	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray12 {$/;"	c	namespace:testing::internal
ValueArray12	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray12
ValueArray12	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray12 {$/;"	c	namespace:testing::internal
ValueArray13	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray13
ValueArray13	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray13 {$/;"	c	namespace:testing::internal
ValueArray13	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray13
ValueArray13	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray13 {$/;"	c	namespace:testing::internal
ValueArray14	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray14
ValueArray14	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray14 {$/;"	c	namespace:testing::internal
ValueArray14	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray14
ValueArray14	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray14 {$/;"	c	namespace:testing::internal
ValueArray15	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray15
ValueArray15	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray15 {$/;"	c	namespace:testing::internal
ValueArray15	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray15
ValueArray15	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray15 {$/;"	c	namespace:testing::internal
ValueArray16	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray16
ValueArray16	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray16 {$/;"	c	namespace:testing::internal
ValueArray16	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray16
ValueArray16	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray16 {$/;"	c	namespace:testing::internal
ValueArray17	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray17
ValueArray17	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray17 {$/;"	c	namespace:testing::internal
ValueArray17	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray17
ValueArray17	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray17 {$/;"	c	namespace:testing::internal
ValueArray18	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray18
ValueArray18	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray18 {$/;"	c	namespace:testing::internal
ValueArray18	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray18
ValueArray18	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray18 {$/;"	c	namespace:testing::internal
ValueArray19	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray19
ValueArray19	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray19 {$/;"	c	namespace:testing::internal
ValueArray19	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray19
ValueArray19	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray19 {$/;"	c	namespace:testing::internal
ValueArray2	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}$/;"	f	class:testing::internal::ValueArray2
ValueArray2	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray2 {$/;"	c	namespace:testing::internal
ValueArray2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}$/;"	f	class:testing::internal::ValueArray2
ValueArray2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray2 {$/;"	c	namespace:testing::internal
ValueArray20	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray20
ValueArray20	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray20 {$/;"	c	namespace:testing::internal
ValueArray20	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray20
ValueArray20	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray20 {$/;"	c	namespace:testing::internal
ValueArray21	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray21
ValueArray21	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray21 {$/;"	c	namespace:testing::internal
ValueArray21	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray21
ValueArray21	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray21 {$/;"	c	namespace:testing::internal
ValueArray22	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray22
ValueArray22	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray22 {$/;"	c	namespace:testing::internal
ValueArray22	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray22
ValueArray22	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray22 {$/;"	c	namespace:testing::internal
ValueArray23	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray23
ValueArray23	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray23 {$/;"	c	namespace:testing::internal
ValueArray23	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray23
ValueArray23	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray23 {$/;"	c	namespace:testing::internal
ValueArray24	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray24
ValueArray24	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray24 {$/;"	c	namespace:testing::internal
ValueArray24	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray24
ValueArray24	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray24 {$/;"	c	namespace:testing::internal
ValueArray25	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray25
ValueArray25	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray25 {$/;"	c	namespace:testing::internal
ValueArray25	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray25
ValueArray25	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray25 {$/;"	c	namespace:testing::internal
ValueArray26	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray26
ValueArray26	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray26 {$/;"	c	namespace:testing::internal
ValueArray26	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray26
ValueArray26	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray26 {$/;"	c	namespace:testing::internal
ValueArray27	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray27
ValueArray27	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray27 {$/;"	c	namespace:testing::internal
ValueArray27	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray27
ValueArray27	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray27 {$/;"	c	namespace:testing::internal
ValueArray28	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray28
ValueArray28	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray28 {$/;"	c	namespace:testing::internal
ValueArray28	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray28
ValueArray28	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray28 {$/;"	c	namespace:testing::internal
ValueArray29	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray29
ValueArray29	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray29 {$/;"	c	namespace:testing::internal
ValueArray29	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray29
ValueArray29	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray29 {$/;"	c	namespace:testing::internal
ValueArray3	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}$/;"	f	class:testing::internal::ValueArray3
ValueArray3	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray3 {$/;"	c	namespace:testing::internal
ValueArray3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}$/;"	f	class:testing::internal::ValueArray3
ValueArray3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray3 {$/;"	c	namespace:testing::internal
ValueArray30	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray30
ValueArray30	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray30 {$/;"	c	namespace:testing::internal
ValueArray30	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray30
ValueArray30	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray30 {$/;"	c	namespace:testing::internal
ValueArray31	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray31
ValueArray31	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray31 {$/;"	c	namespace:testing::internal
ValueArray31	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray31
ValueArray31	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray31 {$/;"	c	namespace:testing::internal
ValueArray32	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray32
ValueArray32	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray32 {$/;"	c	namespace:testing::internal
ValueArray32	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray32
ValueArray32	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray32 {$/;"	c	namespace:testing::internal
ValueArray33	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray33
ValueArray33	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray33 {$/;"	c	namespace:testing::internal
ValueArray33	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray33
ValueArray33	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray33 {$/;"	c	namespace:testing::internal
ValueArray34	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray34
ValueArray34	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray34 {$/;"	c	namespace:testing::internal
ValueArray34	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray34
ValueArray34	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray34 {$/;"	c	namespace:testing::internal
ValueArray35	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray35
ValueArray35	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray35 {$/;"	c	namespace:testing::internal
ValueArray35	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray35
ValueArray35	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray35 {$/;"	c	namespace:testing::internal
ValueArray36	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray36
ValueArray36	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray36 {$/;"	c	namespace:testing::internal
ValueArray36	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray36
ValueArray36	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray36 {$/;"	c	namespace:testing::internal
ValueArray37	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray37
ValueArray37	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray37 {$/;"	c	namespace:testing::internal
ValueArray37	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray37
ValueArray37	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray37 {$/;"	c	namespace:testing::internal
ValueArray38	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray38
ValueArray38	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray38 {$/;"	c	namespace:testing::internal
ValueArray38	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray38
ValueArray38	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray38 {$/;"	c	namespace:testing::internal
ValueArray39	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray39
ValueArray39	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray39 {$/;"	c	namespace:testing::internal
ValueArray39	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray39
ValueArray39	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray39 {$/;"	c	namespace:testing::internal
ValueArray4	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray4
ValueArray4	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray4 {$/;"	c	namespace:testing::internal
ValueArray4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray4
ValueArray4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray4 {$/;"	c	namespace:testing::internal
ValueArray40	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray40
ValueArray40	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray40 {$/;"	c	namespace:testing::internal
ValueArray40	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray40
ValueArray40	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray40 {$/;"	c	namespace:testing::internal
ValueArray41	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray41
ValueArray41	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray41 {$/;"	c	namespace:testing::internal
ValueArray41	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray41
ValueArray41	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray41 {$/;"	c	namespace:testing::internal
ValueArray42	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray42
ValueArray42	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray42 {$/;"	c	namespace:testing::internal
ValueArray42	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray42
ValueArray42	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray42 {$/;"	c	namespace:testing::internal
ValueArray43	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray43
ValueArray43	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray43 {$/;"	c	namespace:testing::internal
ValueArray43	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray43
ValueArray43	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray43 {$/;"	c	namespace:testing::internal
ValueArray44	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray44
ValueArray44	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray44 {$/;"	c	namespace:testing::internal
ValueArray44	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray44
ValueArray44	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray44 {$/;"	c	namespace:testing::internal
ValueArray45	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray45
ValueArray45	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray45 {$/;"	c	namespace:testing::internal
ValueArray45	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray45
ValueArray45	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray45 {$/;"	c	namespace:testing::internal
ValueArray46	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray46
ValueArray46	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray46 {$/;"	c	namespace:testing::internal
ValueArray46	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray46
ValueArray46	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray46 {$/;"	c	namespace:testing::internal
ValueArray47	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray47
ValueArray47	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray47 {$/;"	c	namespace:testing::internal
ValueArray47	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray47
ValueArray47	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray47 {$/;"	c	namespace:testing::internal
ValueArray48	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray48
ValueArray48	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray48 {$/;"	c	namespace:testing::internal
ValueArray48	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray48
ValueArray48	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray48 {$/;"	c	namespace:testing::internal
ValueArray49	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray49
ValueArray49	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray49 {$/;"	c	namespace:testing::internal
ValueArray49	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray49
ValueArray49	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray49 {$/;"	c	namespace:testing::internal
ValueArray5	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray5
ValueArray5	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray5 {$/;"	c	namespace:testing::internal
ValueArray5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray5
ValueArray5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray5 {$/;"	c	namespace:testing::internal
ValueArray50	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray50
ValueArray50	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray50 {$/;"	c	namespace:testing::internal
ValueArray50	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray50
ValueArray50	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray50 {$/;"	c	namespace:testing::internal
ValueArray6	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),$/;"	f	class:testing::internal::ValueArray6
ValueArray6	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray6 {$/;"	c	namespace:testing::internal
ValueArray6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),$/;"	f	class:testing::internal::ValueArray6
ValueArray6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray6 {$/;"	c	namespace:testing::internal
ValueArray7	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),$/;"	f	class:testing::internal::ValueArray7
ValueArray7	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray7 {$/;"	c	namespace:testing::internal
ValueArray7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),$/;"	f	class:testing::internal::ValueArray7
ValueArray7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray7 {$/;"	c	namespace:testing::internal
ValueArray8	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	class:testing::internal::ValueArray8
ValueArray8	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray8 {$/;"	c	namespace:testing::internal
ValueArray8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	class:testing::internal::ValueArray8
ValueArray8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray8 {$/;"	c	namespace:testing::internal
ValueArray9	test/gtest/fused-src/gtest/gtest.h	/^  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	class:testing::internal::ValueArray9
ValueArray9	test/gtest/fused-src/gtest/gtest.h	/^class ValueArray9 {$/;"	c	namespace:testing::internal
ValueArray9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	class:testing::internal::ValueArray9
ValueArray9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^class ValueArray9 {$/;"	c	namespace:testing::internal
ValueHolder	test/gtest/fused-src/gtest/gtest.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
ValueHolder	test/gtest/fused-src/gtest/gtest.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:std::tr1::ThreadLocal
ValueHolder	test/gtest/include/gtest/internal/gtest-port.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
ValueHolder	test/gtest/include/gtest/internal/gtest-port.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:testing::internal::ThreadLocal
ValueParamTest	test/gtest/test/gtest_list_tests_unittest_.cc	/^class ValueParamTest : public testing::TestWithParam<MyType> {$/;"	c	file:
ValueParamTest	test/gtest/test/gtest_xml_output_unittest_.cc	/^class ValueParamTest : public TestWithParam<int> {};$/;"	c	file:
ValuePropagation	include/GEOS.h	/^  ValuePropagation,$/;"	e	enum:OptimizationKind
Values	include/Profiling/papi.h	/^  long long int Values[2];$/;"	v
Values	test/gtest/fused-src/gtest/gtest.h	/^    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray1<T1> Values(T1 v1) {$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/fused-src/gtest/gtest.h	/^internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray1<T1> Values(T1 v1) {$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
ValuesIn	test/gtest/fused-src/gtest/gtest.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing
ValuesIn	test/gtest/fused-src/gtest/gtest.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing
ValuesIn	test/gtest/include/gtest/gtest-param-test.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing
ValuesIn	test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing
ValuesInIteratorRangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
ValuesInIteratorRangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
VarNode	test/gtest/scripts/pump.py	/^class VarNode:$/;"	c
Vector	test/gtest/test/gtest-typed-test_test.cc	/^  typedef std::vector<T> Vector;$/;"	t	class:CommonTest	file:
VectorIsCorrupt	test/gtest/test/gtest_unittest.cc	/^  static bool VectorIsCorrupt(const TestingVector& vector) {$/;"	f	class:__anon14::VectorShuffleTest
VectorIsNotCorrupt	test/gtest/test/gtest_unittest.cc	/^  static bool VectorIsNotCorrupt(const TestingVector& vector) {$/;"	f	class:__anon14::VectorShuffleTest
VectorIsShuffled	test/gtest/test/gtest_unittest.cc	/^  static bool VectorIsShuffled(const TestingVector& vector) {$/;"	f	class:__anon14::VectorShuffleTest
VectorIsUnshuffled	test/gtest/test/gtest_unittest.cc	/^  static bool VectorIsUnshuffled(const TestingVector& vector) {$/;"	f	class:__anon14::VectorShuffleTest
VectorShuffleTest	test/gtest/test/gtest_unittest.cc	/^  VectorShuffleTest() : random_(1) {$/;"	f	class:__anon14::VectorShuffleTest
VectorShuffleTest	test/gtest/test/gtest_unittest.cc	/^class VectorShuffleTest : public Test {$/;"	c	namespace:__anon14	file:
VerifyAndModifyFlags	test/gtest/test/gtest_unittest.cc	/^  void VerifyAndModifyFlags() {$/;"	f	class:__anon14::GTestFlagSaverTest
VerifyFileExists	test/gtest/scripts/fuse_gtest_files.py	/^def VerifyFileExists(directory, relative_path):$/;"	f
VerifyGenerator	test/gtest/test/gtest-param-test_test.cc	/^void VerifyGenerator(const ParamGenerator<T>& generator,$/;"	f
VerifyGeneratorIsEmpty	test/gtest/test/gtest-param-test_test.cc	/^void VerifyGeneratorIsEmpty(const ParamGenerator<T>& generator) {$/;"	f
VerifyOutputFile	test/gtest/scripts/fuse_gtest_files.py	/^def VerifyOutputFile(output_dir, relative_path):$/;"	f
VerifyRegisteredTestNames	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* TypedTestCasePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestCasePState
VerifyRegisteredTestNames	test/gtest/src/gtest-typed-test.cc	/^const char* TypedTestCasePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestCasePState
VerifyResults	test/gtest/test/gtest-listener_test.cc	/^void VerifyResults(const std::vector<std::string>& data,$/;"	f
Version	experiments/backup/benchmarks/src/base/dry.c	/^char	Version[] = "1.0";$/;"	v
Version	experiments/backup/benchmarks/src/base/dry.c	/^char	Version[] = "1.1";$/;"	v
Version	experiments/backup/benchmarks/src/base/fldry.c	/^char	Version[] = "1.0";$/;"	v
Version	experiments/backup/benchmarks/src/base/fldry.c	/^char	Version[] = "1.1";$/;"	v
Version	experiments/benchmarks/src/base/dry.c	/^char	Version[] = "1.0";$/;"	v
Version	experiments/benchmarks/src/base/dry.c	/^char	Version[] = "1.1";$/;"	v
Version	experiments/benchmarks/src/base/fldry.c	/^char	Version[] = "1.0";$/;"	v
Version	experiments/benchmarks/src/base/fldry.c	/^char	Version[] = "1.1";$/;"	v
Version	include/Profiling/GCOV.h	/^  GCOV::GCOVVersion Version;$/;"	m	class:llvm::GCOVFile
VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName	test/gtest/test/gtest_list_tests_unittest_.cc	/^class VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName {  \/\/ NOLINT$/;"	c	file:
Visited	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  std::unordered_map<std::string, bool> Visited;$/;"	m	struct:MachineAST	file:
W	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  const unsigned W = 8;$/;"	m	struct:MachineAST	file:
W	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned L, W; $/;"	m	struct:AbstractCacheState	file:
WAITBIT	experiments/backup/benchmarks/src/base/richards_benchmark.c	47;"	d	file:
WAITBIT	experiments/benchmarks/src/base/richards_benchmark.c	47;"	d	file:
WHITE_SPACE_REGEX	test/gtest/scripts/pump.py	/^WHITE_SPACE_REGEX = re.compile(r'\\s')$/;"	v
Wait	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *Wait(void)$/;"	f
Wait	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *Wait(void)$/;"	f
Wait	test/gtest/fused-src/gtest/gtest-all.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest
Wait	test/gtest/fused-src/gtest/gtest-all.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest
Wait	test/gtest/src/gtest-death-test.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest
Wait	test/gtest/src/gtest-death-test.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest
Wait	test/gtest/test/gtest-death-test_test.cc	/^  virtual int Wait() {$/;"	f	class:MockDeathTest
WaitCalls	test/gtest/test/gtest-death-test_test.cc	/^  int WaitCalls() const { return wait_calls_; }$/;"	f	class:MockDeathTestFactory
WaitForNotification	test/gtest/fused-src/gtest/gtest.h	/^  void WaitForNotification() {$/;"	f	class:std::tr1::Notification
WaitForNotification	test/gtest/include/gtest/internal/gtest-port.h	/^  void WaitForNotification() {$/;"	f	class:testing::internal::Notification
Water	test/gtest/samples/sample10_unittest.cc	/^class Water {$/;"	c	namespace:__anon35	file:
WideCStringEquals	test/gtest/fused-src/gtest/gtest-all.cc	/^bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {$/;"	f	class:testing::internal::String
WideCStringEquals	test/gtest/src/gtest.cc	/^bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {$/;"	f	class:testing::internal::String
WideStringToUtf8	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal
WideStringToUtf8	test/gtest/src/gtest.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal
Widget	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^Widget::Widget(int number, const std::string& name)$/;"	f	class:Widget
Widget	test/gtest/xcode/Samples/FrameworkSample/widget.h	/^class Widget {$/;"	c
WindowsDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^  WindowsDeathTest(const char* a_statement,$/;"	f	class:testing::internal::WindowsDeathTest
WindowsDeathTest	test/gtest/fused-src/gtest/gtest-all.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
WindowsDeathTest	test/gtest/src/gtest-death-test.cc	/^  WindowsDeathTest(const char* a_statement,$/;"	f	class:testing::internal::WindowsDeathTest
WindowsDeathTest	test/gtest/src/gtest-death-test.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
WithParamInterface	test/gtest/fused-src/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
WithParamInterface	test/gtest/include/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
WrapCode	test/gtest/scripts/pump.py	/^def WrapCode(line, line_concat, output):$/;"	f
WrapComment	test/gtest/scripts/pump.py	/^def WrapComment(line, output):$/;"	f
WrapLongLine	test/gtest/scripts/pump.py	/^def WrapLongLine(line, output):$/;"	f
WrapPlainCode	test/gtest/scripts/pump.py	/^def WrapPlainCode(line, output):$/;"	f
WrapPreprocessorDirective	test/gtest/scripts/pump.py	/^def WrapPreprocessorDirective(line, output):$/;"	f
Write	test/gtest/fused-src/gtest/gtest.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
Write	test/gtest/include/gtest/internal/gtest-port.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix
WriteToShardStatusFileIfNeeded	test/gtest/fused-src/gtest/gtest-all.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal
WriteToShardStatusFileIfNeeded	test/gtest/src/gtest.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal
XCH	experiments/backup/benchmarks/src/base/fannkuch.c	50;"	d	file:
XCH	experiments/benchmarks/src/base/fannkuch.c	50;"	d	file:
XmlOutputChangeDirTest	test/gtest/test/gtest-options_test.cc	/^class XmlOutputChangeDirTest : public Test {$/;"	c	namespace:testing::internal::__anon18	file:
XmlUnitTestResultPrinter	test/gtest/fused-src/gtest/gtest-all.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	test/gtest/fused-src/gtest/gtest-all.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
XmlUnitTestResultPrinter	test/gtest/src/gtest.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	test/gtest/src/gtest.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
Xor	experiments/backup/benchmarks/src/aha/aha.h	/^int Xor(int x, int y, int z) {return x ^ y;}$/;"	f
Xor	experiments/benchmarks/src/aha/aha.h	/^int Xor(int x, int y, int z) {return x ^ y;}$/;"	f
_2MM_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	9;"	d
_2MM_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.h	9;"	d
_3MM_H	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	9;"	d
_3MM_H	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.h	9;"	d
_BITBOARD64_H	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	24;"	d
_BITBOARD64_H	experiments/benchmarks/src/.hexxagon/bitboard64.h	24;"	d
_GetChildren	test/gtest/test/gtest_xml_test_utils.py	/^  def _GetChildren(self, element):$/;"	m	class:GTestXMLTestCase
_GetXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^  def _GetXmlOutput(self, gtest_prog_name, extra_args, expected_exit_code):$/;"	m	class:GTestXMLOutputUnitTest
_HAS_EXCEPTIONS	test/gtest/fused-src/gtest/gtest.h	442;"	d
_HAS_EXCEPTIONS	test/gtest/include/gtest/internal/gtest-port.h	346;"	d
_HEXXAGONBOARD_H	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	24;"	d
_HEXXAGONBOARD_H	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	24;"	d
_HEXXAGONGAME_H	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	24;"	d
_HEXXAGONGAME_H	experiments/benchmarks/src/.hexxagon/hexxagongame.h	24;"	d
_HEXXAGONMOVE_H	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	24;"	d
_HEXXAGONMOVE_H	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	24;"	d
_PAPI	include/Profiling/papi.h	17;"	d
_POSIX_SOURCE	experiments/backup/benchmarks/src/base/flops.c	1159;"	d	file:
_POSIX_SOURCE	experiments/benchmarks/src/base/flops.c	1159;"	d	file:
_ParseAndStripGTestFlags	test/gtest/test/gtest_test_utils.py	/^def _ParseAndStripGTestFlags(argv):$/;"	f
_RemoveTempDir	test/gtest/test/gtest_test_utils.py	/^def _RemoveTempDir():$/;"	f
_ReplaceEnvDict	test/gtest/test/gtest_test_utils.py	/^      def _ReplaceEnvDict(dest, src):$/;"	f	function:Subprocess.__init__
_SUBPROCESS_MODULE_AVAILABLE	test/gtest/test/gtest_test_utils.py	/^  _SUBPROCESS_MODULE_AVAILABLE = False$/;"	v
_SUBPROCESS_MODULE_AVAILABLE	test/gtest/test/gtest_test_utils.py	/^  _SUBPROCESS_MODULE_AVAILABLE = True$/;"	v
_TestOutFile	test/gtest/test/gtest_xml_outfiles_test.py	/^  def _TestOutFile(self, test_name, expected_xml):$/;"	m	class:GTestXMLOutFilesTest
_TestXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^  def _TestXmlOutput(self, gtest_prog_name, expected_xml,$/;"	m	class:GTestXMLOutputUnitTest
_VerifyTestCasesDoNotInterleave	test/gtest/test/gtest_shuffle_test.py	/^  def _VerifyTestCasesDoNotInterleave(self, tests):$/;"	m	class:GTestShuffleUnitTest
__add__	test/gtest/scripts/pump.py	/^  def __add__(self, offset):$/;"	m	class:Cursor	file:
__author__	test/gtest/scripts/fuse_gtest_files.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/scripts/gen_gtest_pred_impl.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/scripts/pump.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_break_on_failure_unittest.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_catch_exceptions_test.py	/^__author__ = 'vladl@google.com (Vlad Losev)'$/;"	v
__author__	test/gtest/test/gtest_color_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_env_var_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_filter_unittest.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_help_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_list_tests_unittest.py	/^__author__ = 'phanna@google.com (Patrick Hanna)'$/;"	v
__author__	test/gtest/test/gtest_output_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_shuffle_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_test_utils.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_throw_on_failure_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_uninitialized_test.py	/^__author__ = 'wan@google.com (Zhanyong Wan)'$/;"	v
__author__	test/gtest/test/gtest_xml_outfiles_test.py	/^__author__ = "keith.ray@gmail.com (Keith Ray)"$/;"	v
__author__	test/gtest/test/gtest_xml_output_unittest.py	/^__author__ = 'eefacm@gmail.com (Sean Mcafee)'$/;"	v
__author__	test/gtest/test/gtest_xml_test_utils.py	/^__author__ = 'eefacm@gmail.com (Sean Mcafee)'$/;"	v
__eq__	test/gtest/scripts/pump.py	/^  def __eq__(self, rhs):$/;"	m	class:Cursor	file:
__ge__	test/gtest/scripts/pump.py	/^  def __ge__(self, rhs):$/;"	m	class:Cursor	file:
__gt__	test/gtest/scripts/pump.py	/^  def __gt__(self, rhs):$/;"	m	class:Cursor	file:
__init__	test/gtest/scripts/pump.py	/^  def __init__(self):$/;"	m	class:Env
__init__	test/gtest/scripts/pump.py	/^  def __init__(self):$/;"	m	class:Output
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, atomic_code_list=None):$/;"	m	class:CodeNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, else_branch=None):$/;"	m	class:ElseNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, exp=None, then_branch=None, else_branch=None):$/;"	m	class:IfNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, identifier=None, atomic_code=None):$/;"	m	class:VarNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, identifier=None, exp1=None, exp2=None):$/;"	m	class:RangeNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, identifier=None, sep=None, code=None):$/;"	m	class:ForNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, line=-1, column=-1):$/;"	m	class:Cursor
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, start=None, end=None, value=None, token_type=None):$/;"	m	class:Token
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, token):$/;"	m	class:LiteralDollarNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, token, python_exp):$/;"	m	class:ExpNode
__init__	test/gtest/scripts/pump.py	/^  def __init__(self, token=None):$/;"	m	class:RawCodeNode
__init__	test/gtest/test/gtest_test_utils.py	/^  def __init__(self, command, working_dir=None, capture_stderr=True, env=None):$/;"	m	class:Subprocess
__le__	test/gtest/scripts/pump.py	/^  def __le__(self, rhs):$/;"	m	class:Cursor	file:
__lt__	test/gtest/scripts/pump.py	/^  def __lt__(self, rhs):$/;"	m	class:Cursor	file:
__ne__	test/gtest/scripts/pump.py	/^  def __ne__(self, rhs):$/;"	m	class:Cursor	file:
__str__	test/gtest/scripts/pump.py	/^  def __str__(self):$/;"	m	class:Cursor	file:
__str__	test/gtest/scripts/pump.py	/^  def __str__(self):$/;"	m	class:Token	file:
__sub__	test/gtest/scripts/pump.py	/^  def __sub__(self, offset):$/;"	m	class:Cursor	file:
_dmem_t	include/Profiling/papi.h	/^   typedef struct _dmem_t {$/;"	s
_flag_map	test/gtest/test/gtest_test_utils.py	/^_flag_map = {'source_dir': os.path.dirname(sys.argv[0]),$/;"	v
_gtest_flags_are_parsed	test/gtest/test/gtest_test_utils.py	/^_gtest_flags_are_parsed = False$/;"	v
_list	experiments/backup/benchmarks/src/base/chomp.c	/^struct _list$/;"	s	file:
_list	experiments/benchmarks/src/base/chomp.c	/^struct _list$/;"	s	file:
_papi_address_map	include/Profiling/papi.h	/^   typedef struct _papi_address_map {$/;"	s
_papi_debug_option	include/Profiling/papi.h	/^   typedef struct _papi_debug_option {$/;"	s
_papi_domain_option	include/Profiling/papi.h	/^   typedef struct _papi_domain_option {$/;"	s
_papi_granularity_option	include/Profiling/papi.h	/^   typedef struct _papi_granularity_option {$/;"	s
_papi_hw_info	include/Profiling/papi.h	/^   typedef struct _papi_hw_info {$/;"	s
_papi_inherit_option	include/Profiling/papi.h	/^   typedef struct _papi_inherit_option {$/;"	s
_papi_mh_cache_info	include/Profiling/papi.h	/^   typedef struct _papi_mh_cache_info {$/;"	s
_papi_mh_info	include/Profiling/papi.h	/^   typedef struct _papi_mh_info { \/* mh for mem hierarchy maybe? *\/$/;"	s
_papi_mh_level_info	include/Profiling/papi.h	/^   typedef struct _papi_mh_level_info {$/;"	s
_papi_mh_tlb_info	include/Profiling/papi.h	/^   typedef struct _papi_mh_tlb_info {$/;"	s
_papi_multiplex_option	include/Profiling/papi.h	/^   typedef struct _papi_multiplex_option {$/;"	s
_papi_overflow_option	include/Profiling/papi.h	/^   typedef struct _papi_overflow_option {$/;"	s
_papi_preload_option	include/Profiling/papi.h	/^   typedef struct _papi_preload_option {$/;"	s
_papi_program_info	include/Profiling/papi.h	/^   typedef struct _papi_program_info {$/;"	s
_papi_shared_lib_info	include/Profiling/papi.h	/^   typedef struct _papi_shared_lib_info {$/;"	s
_papi_sprofil	include/Profiling/papi.h	/^   typedef struct _papi_sprofil {$/;"	s
_papi_substrate_option	include/Profiling/papi.h	/^   typedef struct _papi_substrate_option {$/;"	s
_play	experiments/backup/benchmarks/src/base/chomp.c	/^struct _play$/;"	s	file:
_play	experiments/benchmarks/src/base/chomp.c	/^struct _play$/;"	s	file:
_polybench_papi_eventlist	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^  char* _polybench_papi_eventlist[] = {$/;"	v
_polybench_papi_eventlist	experiments/benchmarks/src/polybench/utilities/polybench.c	/^  char* _polybench_papi_eventlist[] = {$/;"	v
_rmdir	test/gtest/test/gtest-filepath_test.cc	/^int _rmdir(const char* path) {$/;"	f	namespace:testing::internal::__anon22
_temp_dir	test/gtest/test/gtest_test_utils.py	/^_temp_dir = None$/;"	v
_test_module	test/gtest/test/gtest_test_utils.py	/^_test_module = unittest$/;"	v
a	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:function
a	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
a	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
a_	test/gtest/test/gtest-tuple_test.cc	/^  BigTuple a_, b_;$/;"	m	class:__anon27::BigTupleTest	file:
a_	test/gtest/test/gtest_unittest.cc	/^  static int a_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
a_	test/gtest/test/gtest_unittest.cc	/^int SingleEvaluationTest::a_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
aberr_lchrom	experiments/backup/benchmarks/src/base/fbench.c	/^static double aberr_lchrom;$/;"	v	file:
aberr_lchrom	experiments/benchmarks/src/base/fbench.c	/^static double aberr_lchrom;$/;"	v	file:
aberr_lspher	experiments/backup/benchmarks/src/base/fbench.c	/^static double aberr_lspher;$/;"	v	file:
aberr_lspher	experiments/benchmarks/src/base/fbench.c	/^static double aberr_lspher;$/;"	v	file:
aberr_osc	experiments/backup/benchmarks/src/base/fbench.c	/^static double aberr_osc;$/;"	v	file:
aberr_osc	experiments/benchmarks/src/base/fbench.c	/^static double aberr_osc;$/;"	v	file:
abort_args_	test/gtest/test/gtest-death-test_test.cc	/^  std::vector<DeathTest::AbortReason> abort_args_;$/;"	m	class:MockDeathTestFactory	file:
abs	experiments/backup/benchmarks/src/sgefa/blas.c	41;"	d	file:
abs	experiments/benchmarks/src/sgefa/blas.c	41;"	d	file:
ac_fn_c_check_func	test/gtest/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	test/gtest/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_try_compile	test/gtest/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	test/gtest/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	test/gtest/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	test/gtest/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	test/gtest/configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	test/gtest/configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	test/gtest/configure	/^ac_fn_cxx_try_link ()$/;"	f
accum	experiments/backup/benchmarks/src/base/mandel.c	/^volatile double __complex__ accum;$/;"	v
accum	experiments/benchmarks/src/base/mandel.c	/^volatile double __complex__ accum;$/;"	v
ack	experiments/backup/benchmarks/src/base/recursive.c	/^int ack(int x, int y) {$/;"	f
ack	experiments/benchmarks/src/base/recursive.c	/^int ack(int x, int y) {$/;"	f
activeHover	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
ad_hoc_test_result	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl
ad_hoc_test_result	test/gtest/fused-src/gtest/gtest-all.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest
ad_hoc_test_result	test/gtest/fused-src/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestCase
ad_hoc_test_result	test/gtest/include/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestCase
ad_hoc_test_result	test/gtest/src/gtest-internal-inl.h	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl
ad_hoc_test_result	test/gtest/src/gtest.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest
ad_hoc_test_result_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl	file:
ad_hoc_test_result_	test/gtest/fused-src/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestCase
ad_hoc_test_result_	test/gtest/include/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestCase
ad_hoc_test_result_	test/gtest/src/gtest-internal-inl.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl
add	experiments/backup/benchmarks/src/aha/aha.h	/^int add (int x, int y, int z) {return x + y;}$/;"	f
add	experiments/benchmarks/src/aha/aha.h	/^int add (int x, int y, int z) {return x + y;}$/;"	f
addAttributes	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      void addAttributes(Function* F) {$/;"	f	struct:__anon3::CallCost	file:
addBlockLine	include/Profiling/GCOV.h	/^  void addBlockLine(StringRef Filename, uint32_t Line, const GCOVBlock *Block) {$/;"	f	class:llvm::FileInfo
addCount	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVBlock::addCount(size_t DstEdgeNo, uint64_t N) {$/;"	f	class:GCOVBlock
addDstEdge	include/Profiling/GCOV.h	/^  void addDstEdge(GCOVEdge *Edge) {$/;"	f	class:llvm::GCOVBlock
addFunctionLine	include/Profiling/GCOV.h	/^  void addFunctionLine(StringRef Filename, uint32_t Line,$/;"	f	class:llvm::FileInfo
addLine	include/Profiling/GCOV.h	/^  void addLine(uint32_t N) { Lines.push_back(N); }$/;"	f	class:llvm::GCOVBlock
addMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::addMove(HexxagonMove &move)$/;"	f	class:HexxagonMoveList
addMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::addMove(HexxagonMove &move)$/;"	f	class:HexxagonMoveList
addSrcEdge	include/Profiling/GCOV.h	/^  void addSrcEdge(GCOVEdge *Edge) {$/;"	f	class:llvm::GCOVBlock
address_info	include/Profiling/papi.h	/^      PAPI_address_map_t address_info;$/;"	m	struct:_papi_program_info
advance	experiments/backup/benchmarks/src/base/n-body.c	/^void advance(int nbodies, struct planet * bodies, double dt)$/;"	f
advance	experiments/benchmarks/src/base/n-body.c	/^void advance(int nbodies, struct planet * bodies, double dt)$/;"	f
advanceCursor	include/Profiling/GCOV.h	/^  void advanceCursor(uint32_t n) { Cursor += n*4; }$/;"	f	class:llvm::GCOVBuffer
after	test/gtest/test/gtest-typed-test_test.cc	/^IntAfterTypedTestCaseP after = 0;$/;"	v
aint	experiments/backup/benchmarks/src/base/fbench.c	/^double aint(x)$/;"	f
aint	experiments/benchmarks/src/base/fbench.c	/^double aint(x)$/;"	f
allocated	test/gtest/samples/sample10_unittest.cc	/^  static int allocated() { return allocated_; }$/;"	f	class:__anon35::Water
allocated_	test/gtest/samples/sample10_unittest.cc	/^  static int allocated_;$/;"	m	class:__anon35::Water	file:
allocated_	test/gtest/samples/sample10_unittest.cc	/^int Water::allocated_ = 0;$/;"	m	class:__anon35::Water	file:
alphaBeta	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int alphaBeta(HexxagonBoard &board, int level, int alpha, int beta, void (*callback)())$/;"	f
alphaBeta	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int alphaBeta(HexxagonBoard &board, int level, int alpha, int beta, void (*callback)())$/;"	f
alpha_to	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
alpha_to	experiments/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
alphabet	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^char  alphabet[28] = "0ABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	v
alphabet	experiments/benchmarks/src/base/richards_benchmark.c	/^char  alphabet[28] = "0ABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	v
also_run_disabled_tests	test/gtest/test/gtest_unittest.cc	/^  bool also_run_disabled_tests;$/;"	m	struct:testing::Flags	file:
also_run_disabled_tests_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
also_run_disabled_tests_	test/gtest/src/gtest-internal-inl.h	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver
analyseCost	src/GEOS.cpp	/^analyseCost(const ProfileModule* PModule, CostEstimatorOptions Opts) {$/;"	f	class:GEOS
analyseFunctionCost	src/GEOS.cpp	/^analyseFunctionCost(StringRef FuncName, const ProfileModule* PModule, $/;"	f	class:GEOS
append	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^void append(struct packet *pkt, struct packet *ptr)$/;"	f
append	experiments/benchmarks/src/base/richards_benchmark.c	/^void append(struct packet *pkt, struct packet *ptr)$/;"	f
applyAndGetOCost	tools/BestO.cpp	/^applyAndGetOCost(ProfileModule* PModule, CostEstimatorOptions &Opts, int O) {$/;"	f
applyMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::applyMove(HexxagonMove &move)$/;"	f	class:HexxagonBoard
applyMove	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::applyMove(HexxagonMove &move)$/;"	f	class:HexxagonGame
applyMove	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::applyMove(HexxagonMove &move)$/;"	f	class:HexxagonBoard
applyMove	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::applyMove(HexxagonMove &move)$/;"	f	class:HexxagonGame
applyPasses	src/GEOS.cpp	/^GEOS::applyPasses(const ProfileModule& PModule, FunctionPassManager& PM) {$/;"	f	class:GEOS
applyPassesModule	src/GEOS.cpp	/^GEOS::applyPassesModule(const ProfileModule& PModule, FunctionPassManager& FPM, $/;"	f	class:GEOS
applyPassesOnFunction	src/GEOS.cpp	/^GEOS::applyPassesOnFunction(StringRef FuncName, const ProfileModule& PModule, $/;"	f	class:GEOS
args_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	file:
args_	test/gtest/src/gtest-death-test.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	file:
argv	test/gtest/fused-src/gtest/gtest-all.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
argv	test/gtest/src/gtest-death-test.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
array	test/gtest/test/gtest-printers_test.cc	/^  char array[257];$/;"	m	struct:testing::gtest_printers_test::Big	file:
array_	test/gtest/fused-src/gtest/gtest.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray
array_	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray
array_	test/gtest/include/gtest/gtest-test-part.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray
array_	test/gtest/include/gtest/internal/gtest-internal.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray
as_fn_append	test/gtest/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	test/gtest/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	test/gtest/configure	/^as_fn_error ()$/;"	f
as_fn_exit	test/gtest/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	test/gtest/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	test/gtest/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	test/gtest/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	test/gtest/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	test/gtest/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	test/gtest/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	test/gtest/configure	/^as_fn_unset ()$/;"	f
asin	experiments/backup/benchmarks/src/base/fbench.c	/^static double asin(x)$/;"	f	file:
asin	experiments/backup/benchmarks/src/base/fbench.c	327;"	d	file:
asin	experiments/benchmarks/src/base/fbench.c	/^static double asin(x)$/;"	f	file:
asin	experiments/benchmarks/src/base/fbench.c	327;"	d	file:
associativity	include/Profiling/papi.h	/^      int associativity;$/;"	m	struct:_papi_mh_cache_info
associativity	include/Profiling/papi.h	/^      int associativity;$/;"	m	struct:_papi_mh_tlb_info
assume_role_calls_	test/gtest/test/gtest-death-test_test.cc	/^  int assume_role_calls_;$/;"	m	class:MockDeathTestFactory	file:
atan	experiments/backup/benchmarks/src/base/fbench.c	/^static double atan(x)$/;"	f	file:
atan	experiments/backup/benchmarks/src/base/fbench.c	325;"	d	file:
atan	experiments/benchmarks/src/base/fbench.c	/^static double atan(x)$/;"	f	file:
atan	experiments/benchmarks/src/base/fbench.c	325;"	d	file:
atan2	experiments/backup/benchmarks/src/base/fbench.c	/^static double atan2(y, x)$/;"	f	file:
atan2	experiments/backup/benchmarks/src/base/fbench.c	326;"	d	file:
atan2	experiments/benchmarks/src/base/fbench.c	/^static double atan2(y, x)$/;"	f	file:
atan2	experiments/benchmarks/src/base/fbench.c	326;"	d	file:
atanc	experiments/backup/benchmarks/src/base/fbench.c	/^static double atanc[] = {$/;"	v	file:
atanc	experiments/benchmarks/src/base/fbench.c	/^static double atanc[] = {$/;"	v	file:
axis_slope_angle	experiments/backup/benchmarks/src/base/fbench.c	/^static double axis_slope_angle;$/;"	v	file:
axis_slope_angle	experiments/benchmarks/src/base/fbench.c	/^static double axis_slope_angle;$/;"	v	file:
b	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
b	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
bInitarr	experiments/backup/benchmarks/src/base/bubblesort.c	/^void bInitarr() {$/;"	f
bInitarr	experiments/benchmarks/src/base/bubblesort.c	/^void bInitarr() {$/;"	f
b_	test/gtest/test/gtest-tuple_test.cc	/^  BigTuple a_, b_;$/;"	m	class:__anon27::BigTupleTest	file:
b_	test/gtest/test/gtest_unittest.cc	/^  static int b_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
b_	test/gtest/test/gtest_unittest.cc	/^int SingleEvaluationTest::b_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
bakdiag	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int bakdiag[MAXDIAGS];		\/* Which queen 'owns' reverse diagonals *\/$/;"	v
bakdiag	experiments/benchmarks/src/base/queens-mcgill.c	/^int bakdiag[MAXDIAGS];		\/* Which queen 'owns' reverse diagonals *\/$/;"	v
bar	test/gtest/test/gtest_output_test_.cc	/^namespace bar {$/;"	n	file:
base	experiments/backup/benchmarks/src/base/objinst.c	/^    Toggle base;$/;"	m	struct:NthToggle	file:
base	experiments/benchmarks/src/base/objinst.c	/^    Toggle base;$/;"	m	struct:NthToggle	file:
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
base_	test/gtest/fused-src/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
base_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
basic_manipulator	test/gtest/fused-src/gtest/gtest.h	/^      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {$/;"	f	class:testing::AssertionResult
basic_manipulator	test/gtest/include/gtest/gtest.h	/^      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {$/;"	f	class:testing::AssertionResult
bb	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
bb	experiments/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
before	test/gtest/test/gtest-typed-test_test.cc	/^IntBeforeRegisterTypedTestCaseP before = 0;$/;"	v
begin	test/gtest/fused-src/gtest/gtest.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray
begin	test/gtest/fused-src/gtest/gtest.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator
begin	test/gtest/include/gtest/internal/gtest-internal.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray
begin	test/gtest/include/gtest/internal/gtest-param-util.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator
begin10_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator begin10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T10>::iterator begin10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin9_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin9_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin_	test/gtest/fused-src/gtest/gtest.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator
begin_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator
biggest	experiments/backup/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/backup/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
biggest	experiments/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
bitrv2	experiments/backup/benchmarks/src/base/oourafft.c	/^void bitrv2(int n, int *ip, double *a)$/;"	f
bitrv2	experiments/benchmarks/src/base/oourafft.c	/^void bitrv2(int n, int *ip, double *a)$/;"	f
bitrv2conj	experiments/backup/benchmarks/src/base/oourafft.c	/^static void bitrv2conj(int n, int *ip, double *a)$/;"	f	file:
bitrv2conj	experiments/benchmarks/src/base/oourafft.c	/^static void bitrv2conj(int n, int *ip, double *a)$/;"	f	file:
bits	experiments/backup/benchmarks/src/base/nsieve-bits.c	/^typedef unsigned int bits;$/;"	t	file:
bits	experiments/benchmarks/src/base/nsieve-bits.c	/^typedef unsigned int bits;$/;"	t	file:
bits	test/gtest/fused-src/gtest/gtest.h	/^  const Bits &bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
bits	test/gtest/include/gtest/internal/gtest-internal.h	/^  const Bits &bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
bits32	experiments/backup/benchmarks/src/base/huffbench.c	/^typedef unsigned long bits32;$/;"	t	file:
bits32	experiments/benchmarks/src/base/huffbench.c	/^typedef unsigned long bits32;$/;"	t	file:
bits_	test/gtest/fused-src/gtest/gtest.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
bits_	test/gtest/include/gtest/internal/gtest-internal.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
block_begin	include/Profiling/GCOV.h	/^  BlockIterator block_begin() const { return Blocks.begin(); }$/;"	f	class:llvm::GCOVFunction
block_end	include/Profiling/GCOV.h	/^  BlockIterator block_end() const { return Blocks.end(); }$/;"	f	class:llvm::GCOVFunction
bnd	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
bnd	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
board	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 board;$/;"	m	class:HexxagonBoard
board	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 board;$/;"	m	class:HexxagonBoard
bodies	experiments/backup/benchmarks/src/base/n-body.c	/^struct planet bodies[NBODIES] = {$/;"	v	typeref:struct:planet
bodies	experiments/benchmarks/src/base/n-body.c	/^struct planet bodies[NBODIES] = {$/;"	v	typeref:struct:planet
bool_constant	test/gtest/fused-src/gtest/gtest.h	/^struct bool_constant {$/;"	s	namespace:std::tr1
bool_constant	test/gtest/include/gtest/internal/gtest-port.h	/^struct bool_constant {$/;"	s	namespace:testing::internal
boolean	experiments/backup/benchmarks/src/base/dry.c	/^typedef int		boolean;$/;"	t	file:
boolean	experiments/backup/benchmarks/src/base/fldry.c	/^typedef int		boolean;$/;"	t	file:
boolean	experiments/benchmarks/src/base/dry.c	/^typedef int		boolean;$/;"	t	file:
boolean	experiments/benchmarks/src/base/fldry.c	/^typedef int		boolean;$/;"	t	file:
bottom	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:p
branchDiv	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^static uint32_t branchDiv(uint64_t Numerator, uint64_t Divisor) {$/;"	f	file:
break_on_failure	test/gtest/test/gtest_unittest.cc	/^  bool break_on_failure;$/;"	m	struct:testing::Flags	file:
break_on_failure_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
break_on_failure_	test/gtest/src/gtest-internal-inl.h	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver
bss_end	include/Profiling/papi.h	/^      caddr_t bss_end;          \/* End address of program bss segment *\/$/;"	m	struct:_papi_address_map
bss_start	include/Profiling/papi.h	/^      caddr_t bss_start;        \/* Start address of program bss segment *\/$/;"	m	struct:_papi_address_map
bubblebase	experiments/backup/benchmarks/src/base/bubblesort.c	6;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/intmm.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/oscar.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/perm.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/queens.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/quicksort.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/realmm.c	9;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/towers.c	7;"	d	file:
bubblebase	experiments/backup/benchmarks/src/base/treesort.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/bubblesort.c	6;"	d	file:
bubblebase	experiments/benchmarks/src/base/intmm.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/oscar.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/perm.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/puzzle-stanford.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/queens.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/quicksort.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/realmm.c	9;"	d	file:
bubblebase	experiments/benchmarks/src/base/towers.c	7;"	d	file:
bubblebase	experiments/benchmarks/src/base/treesort.c	7;"	d	file:
buffer_size	test/gtest/xcode/Scripts/versiongenerate.py	/^buffer_size = 1024$/;"	v
byte	experiments/backup/benchmarks/src/base/huffbench.c	/^typedef unsigned char byte;$/;"	t	file:
byte	experiments/benchmarks/src/base/huffbench.c	/^typedef unsigned char byte;$/;"	t	file:
c	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
c	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
c_str	test/gtest/fused-src/gtest/gtest.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath
c_str	test/gtest/include/gtest/internal/gtest-filepath.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath
c_string	test/gtest/samples/sample2.h	/^  const char* c_string() const { return c_string_; }$/;"	f	class:MyString
c_string_	test/gtest/samples/sample2.h	/^  const char* c_string_;$/;"	m	class:MyString
cache	include/CostEstimator/LRUCache.h	/^        cache( const std::initializer_list<K> &&list = {} ) : list_t(), limit( list.size() ) {$/;"	f	class:lru::cache
cache	include/CostEstimator/LRUCache.h	/^      cache( const std::initializer_list<std::pair<K,V>> &&list ) : list_t(), limit( list.size() ) {$/;"	f	class:lru::cache
cache	include/CostEstimator/LRUCache.h	/^    class cache : public std::list< std::pair<K,V> > {$/;"	c	namespace:lru
cache	include/Profiling/papi.h	/^      PAPI_mh_cache_info_t cache[2];$/;"	m	struct:_papi_mh_level_info
cache	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  void cache(unsigned Addr) { \/\/ TODO Change to LRU$/;"	f	class:CacheSet
cache	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  void cache(unsigned Addr) {$/;"	f	struct:AbstractCacheState
calculateFuncInstanceCost	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^calculateFuncInstanceCost(AbstractCacheState* EntryState, MachineFunction &MF) {  $/;"	f	class:MachineAST
calculateRegisterCost	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^void MachineAST::calculateRegisterCost(MachineFunction &MF) {$/;"	f	class:MachineAST
caller_frame_	test/gtest/fused-src/gtest/gtest-all.cc	/^  void* caller_frame_;$/;"	m	class:testing::internal::OsStackTraceGetter	file:
caller_frame_	test/gtest/src/gtest-internal-inl.h	/^  void* caller_frame_;$/;"	m	class:testing::internal::OsStackTraceGetter
capture	test/gtest/fused-src/gtest/gtest.h	/^  void capture(T* ptr) {$/;"	f	class:testing::internal::linked_ptr
capture	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  void capture(T* ptr) {$/;"	f	class:testing::internal::linked_ptr
catch_exceptions	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl
catch_exceptions	test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl
catch_exceptions	test/gtest/test/gtest_unittest.cc	/^  bool catch_exceptions;$/;"	m	struct:testing::Flags	file:
catch_exceptions_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
catch_exceptions_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl	file:
catch_exceptions_	test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver
catch_exceptions_	test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl
cd	experiments/backup/benchmarks/src/sgefa/ge.h	/^  int	cd;		\/* Column dimension of the matrix. *\/$/;"	m	struct:FULL
cd	experiments/benchmarks/src/sgefa/ge.h	/^  int	cd;		\/* Column dimension of the matrix. *\/$/;"	m	struct:FULL
cdft	experiments/backup/benchmarks/src/base/oourafft.c	/^void cdft(int n, int isgn, double *a, int *ip, double *w)$/;"	f
cdft	experiments/benchmarks/src/base/oourafft.c	/^void cdft(int n, int isgn, double *a, int *ip, double *w)$/;"	f
cells	experiments/backup/benchmarks/src/base/misr.c	/^typedef struct cells {$/;"	s	file:
cells	experiments/benchmarks/src/base/misr.c	/^typedef struct cells {$/;"	s	file:
cellspace	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct element cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/intmm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/oscar.c	/^struct element cellspace[maxcells + 1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/perm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/queens.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/quicksort.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/realmm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/towers.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/backup/benchmarks/src/base/treesort.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/bubblesort.c	/^struct element cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/intmm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/oscar.c	/^struct element cellspace[maxcells + 1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/perm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/queens.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/quicksort.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/realmm.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/towers.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cellspace	experiments/benchmarks/src/base/treesort.c	/^struct element    cellspace[maxcells+1];$/;"	v	typeref:struct:element
cft1st	experiments/backup/benchmarks/src/base/oourafft.c	/^void cft1st(int n, double *a, double *w)$/;"	f
cft1st	experiments/benchmarks/src/base/oourafft.c	/^void cft1st(int n, double *a, double *w)$/;"	f
cftbsub	experiments/backup/benchmarks/src/base/oourafft.c	/^void cftbsub(int n, double *a, double *w)$/;"	f
cftbsub	experiments/benchmarks/src/base/oourafft.c	/^void cftbsub(int n, double *a, double *w)$/;"	f
cftfsub	experiments/backup/benchmarks/src/base/oourafft.c	/^void cftfsub(int n, double *a, double *w)$/;"	f
cftfsub	experiments/benchmarks/src/base/oourafft.c	/^void cftfsub(int n, double *a, double *w)$/;"	f
cftmdl	experiments/backup/benchmarks/src/base/oourafft.c	/^void cftmdl(int n, int l, double *a, double *w)$/;"	f
cftmdl	experiments/benchmarks/src/base/oourafft.c	/^void cftmdl(int n, int l, double *a, double *w)$/;"	f
char_	test/gtest/test/gtest_unittest.cc	/^  char char_;$/;"	m	class:__anon16::UnprintableChar	file:
check	experiments/backup/benchmarks/src/aha/aha.c	/^check(int i)$/;"	f
check	experiments/benchmarks/src/aha/aha.c	/^check(int i)$/;"	f
check_versions	test/gtest/scripts/gtest-config.in	/^check_versions()$/;"	f
child	test/gtest/test/gtest_filter_unittest.py	/^child = gtest_test_utils.Subprocess($/;"	v
child_handle_	test/gtest/fused-src/gtest/gtest-all.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
child_handle_	test/gtest/src/gtest-death-test.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
child_pid_	test/gtest/fused-src/gtest/gtest-all.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	file:
child_pid_	test/gtest/src/gtest-death-test.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	file:
child_system_time	experiments/backup/benchmarks/src/base/flops.c	/^       int child_system_time;$/;"	m	struct:tbuffer_t	file:
child_system_time	experiments/benchmarks/src/base/flops.c	/^       int child_system_time;$/;"	m	struct:tbuffer_t	file:
child_user_time	experiments/backup/benchmarks/src/base/flops.c	/^       int child_user_time;$/;"	m	struct:tbuffer_t	file:
child_user_time	experiments/benchmarks/src/base/flops.c	/^       int child_user_time;$/;"	m	struct:tbuffer_t	file:
clEnumValEnd	tools/Analyser.cpp	/^      clEnumValEnd));$/;"	v
clEnumValEnd	tools/BestO.cpp	/^      clEnumValEnd));$/;"	v
class	experiments/backup/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
class	experiments/backup/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/backup/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
class	experiments/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
class	experiments/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
classmax	experiments/backup/benchmarks/src/base/bubblesort.c	25;"	d	file:
classmax	experiments/backup/benchmarks/src/base/intmm.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/oscar.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/perm.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/puzzle-stanford.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/queens.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/quicksort.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/realmm.c	30;"	d	file:
classmax	experiments/backup/benchmarks/src/base/towers.c	28;"	d	file:
classmax	experiments/backup/benchmarks/src/base/treesort.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/bubblesort.c	25;"	d	file:
classmax	experiments/benchmarks/src/base/intmm.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/oscar.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/perm.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/puzzle-stanford.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/queens.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/quicksort.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/realmm.c	30;"	d	file:
classmax	experiments/benchmarks/src/base/towers.c	28;"	d	file:
classmax	experiments/benchmarks/src/base/treesort.c	28;"	d	file:
clearMat	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^clearMat(Matrix* Mat)$/;"	f
clearMat	experiments/benchmarks/src/base/himenobmtxpa.c	/^clearMat(Matrix* Mat)$/;"	f
clear_aperture	experiments/backup/benchmarks/src/base/fbench.c	/^static double clear_aperture;$/;"	v	file:
clear_aperture	experiments/benchmarks/src/base/fbench.c	/^static double clear_aperture;$/;"	v	file:
closeDelay	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
close_fd	test/gtest/fused-src/gtest/gtest-all.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
close_fd	test/gtest/src/gtest-death-test.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
close_to_infinity	test/gtest/test/gtest_unittest.cc	/^    RawType close_to_infinity;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
close_to_negative_zero	test/gtest/test/gtest_unittest.cc	/^    RawType close_to_negative_zero;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
close_to_one	test/gtest/test/gtest_unittest.cc	/^    RawType close_to_one;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
close_to_positive_zero	test/gtest/test/gtest_unittest.cc	/^    RawType close_to_positive_zero;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
cm_name	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static const char cm_name[] = "Cost Model Analysis";$/;"	v	file:
cmpeq	experiments/backup/benchmarks/src/aha/aha.h	/^int cmpeq(int x, int y, int z) {return x == y;}$/;"	f
cmpeq	experiments/benchmarks/src/aha/aha.h	/^int cmpeq(int x, int y, int z) {return x == y;}$/;"	f
cmplt	experiments/backup/benchmarks/src/aha/aha.h	/^int cmplt(int x, int y, int z) {return x < y;}$/;"	f
cmplt	experiments/benchmarks/src/aha/aha.h	/^int cmplt(int x, int y, int z) {return x < y;}$/;"	f
cmpltu	experiments/backup/benchmarks/src/aha/aha.h	/^int cmpltu(int x, int y, int z) {return (unsigned)(x) < (unsigned)(y);}$/;"	f
cmpltu	experiments/benchmarks/src/aha/aha.h	/^int cmpltu(int x, int y, int z) {return (unsigned)(x) < (unsigned)(y);}$/;"	f
cnorm2	experiments/backup/benchmarks/src/base/mandel-2.c	/^double cnorm2(complex z) { return sqr(creal(z)) + sqr(cimag(z)); }$/;"	f
cnorm2	experiments/benchmarks/src/base/mandel-2.c	/^double cnorm2(complex z) { return sqr(creal(z)) + sqr(cimag(z)); }$/;"	f
code	include/Profiling/papi.h	/^      unsigned int code[PAPI_MAX_INFO_TERMS];\/* array of values that further describe the event:$/;"	m	struct:event_info
collectLineCounts	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVBlock::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVBlock
collectLineCounts	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVFile::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVFile
collectLineCounts	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVFunction::collectLineCounts(FileInfo &FI) {$/;"	f	class:GCOVFunction
collected_parameters_	test/gtest/test/gtest-param-test_test.cc	/^  static vector<int> collected_parameters_;$/;"	m	class:TestGenerationTest	file:
collected_parameters_	test/gtest/test/gtest-param-test_test.cc	/^vector<int> TestGenerationTest::collected_parameters_;$/;"	m	class:TestGenerationTest	file:
collisions	experiments/backup/benchmarks/src/base/simple_hash.h	/^    int collisions;$/;"	m	struct:ht_ht
collisions	experiments/benchmarks/src/base/simple_hash.h	/^    int collisions;$/;"	m	struct:ht_ht
color	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 color;$/;"	m	class:HexxagonBoard
color	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 color;$/;"	m	class:HexxagonBoard
color_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
color_	test/gtest/src/gtest-internal-inl.h	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver
commutative	experiments/backup/benchmarks/src/aha/aha.h	/^   int  commutative;            \/\/ 1 if opnds 0 and 1 commutative.$/;"	m	struct:__anon59
commutative	experiments/benchmarks/src/aha/aha.h	/^   int  commutative;            \/\/ 1 if opnds 0 and 1 commutative.$/;"	m	struct:__anon46
compare	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int compare(const void *mp1, const void *mp2)$/;"	f
compare	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int compare(const void *mp1, const void *mp2)$/;"	f
compdecomp	experiments/backup/benchmarks/src/base/huffbench.c	/^void compdecomp(byte * data, size_t data_len)$/;"	f
compdecomp	experiments/benchmarks/src/base/huffbench.c	/^void compdecomp(byte * data, size_t data_len)$/;"	f
compileModule	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^void compileModule(Module *M, const ProfileModule *Profile, PassManager &PM) {$/;"	f
complex	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/oscar.c	/^struct complex$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/backup/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/oscar.c	/^struct complex$/;"	s	file:
complex	experiments/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
complex	experiments/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	s	file:
compute_mean_exec_time	experiments/backup/benchmarks/src/polybench/utilities/time_benchmark.sh	/^compute_mean_exec_time()$/;"	f
compute_mean_exec_time	experiments/benchmarks/src/polybench/utilities/time_benchmark.sh	/^compute_mean_exec_time()$/;"	f
computerMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::computerMove(int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonBoard
computerMove	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::computerMove(int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonGame
computerMove	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::computerMove(int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonBoard
computerMove	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::computerMove(int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonGame
config_file	test/gtest/xcode/Scripts/versiongenerate.py	/^config_file = open("%s\/configure.ac" % input_dir, 'r')$/;"	v
const_converted_	test/gtest/test/gtest-port_test.cc	/^  bool* const_converted_;$/;"	m	class:testing::internal::ConstAndNonConstCastable	file:
const_iterator	test/gtest/fused-src/gtest/gtest.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray
const_iterator	test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray
const_iterator	test/gtest/test/gtest-printers_test.cc	/^struct const_iterator {$/;"	s	namespace:testing::gtest_printers_test	file:
container_	test/gtest/fused-src/gtest/gtest.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator
container_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator
convertToId	docs/html/search/search.js	/^function convertToId(search)$/;"	f
converted_	test/gtest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::Castable	file:
converted_	test/gtest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::ConstAndNonConstCastable	file:
converted_	test/gtest/test/gtest-port_test.cc	/^  bool* converted_;$/;"	m	class:testing::internal::ConstCastable	file:
copy	test/gtest/fused-src/gtest/gtest.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:testing::internal::linked_ptr
copy	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:testing::internal::linked_ptr
copy_data	experiments/backup/benchmarks/src/base/chomp.c	/^int *copy_data(data) \/* creates a duplicate of a given -data list *\/$/;"	f
copy_data	experiments/benchmarks/src/base/chomp.c	/^int *copy_data(data) \/* creates a duplicate of a given -data list *\/$/;"	f
corr_result	experiments/backup/benchmarks/src/aha/aha.h	/^int corr_result;                \/\/ Correct result for current trial.$/;"	v
corr_result	experiments/benchmarks/src/aha/aha.h	/^int corr_result;                \/\/ Correct result for current trial.$/;"	v
correct_result	experiments/backup/benchmarks/src/aha/aha.h	/^   int correct_result[NTRIALX];$/;"	v
correct_result	experiments/backup/benchmarks/src/aha/aha.h	/^   int correct_result[NTRIALX][NTRIALY];$/;"	v
correct_result	experiments/benchmarks/src/aha/aha.h	/^   int correct_result[NTRIALX];$/;"	v
correct_result	experiments/benchmarks/src/aha/aha.h	/^   int correct_result[NTRIALX][NTRIALY];$/;"	v
cos	experiments/backup/benchmarks/src/base/fbench.c	/^static double cos(x)$/;"	f	file:
cos	experiments/backup/benchmarks/src/base/fbench.c	322;"	d	file:
cos	experiments/benchmarks/src/base/fbench.c	/^static double cos(x)$/;"	f	file:
cos	experiments/benchmarks/src/base/fbench.c	322;"	d	file:
cot	experiments/backup/benchmarks/src/base/fbench.c	237;"	d	file:
cot	experiments/benchmarks/src/base/fbench.c	237;"	d	file:
count	include/Profiling/papi.h	/^      int count;$/;"	m	struct:_papi_shared_lib_info
count	include/Profiling/papi.h	/^      unsigned int count;                    \/* number of terms (usually 1) in the code and name fields$/;"	m	struct:event_info
count	test/gtest/test/gtest_unittest.cc	/^  int count() const { return count_; }$/;"	f	class:__anon16::TestLifeCycleTest
countBricks	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::countBricks(int player)$/;"	f	class:HexxagonBoard
countBricks	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::countBricks(int player)$/;"	f	class:HexxagonBoard
count_	test/gtest/test/gtest-param-test_test.cc	/^  int count_;$/;"	m	class:ParameterizedDerivedTest	file:
count_	test/gtest/test/gtest-param-test_test.cc	/^  int count_;$/;"	m	class:SeparateInstanceTest	file:
count_	test/gtest/test/gtest_unittest.cc	/^  static int count_;$/;"	m	class:__anon16::TestLifeCycleTest	file:
count_	test/gtest/test/gtest_unittest.cc	/^int TestLifeCycleTest::count_ = 0;$/;"	m	class:__anon16::TestLifeCycleTest	file:
count_max	experiments/backup/benchmarks/src/base/methcall.c	/^    int count_max;$/;"	m	struct:NthToggle	file:
count_max	experiments/backup/benchmarks/src/base/objinst.c	/^    int count_max;$/;"	m	struct:NthToggle	file:
count_max	experiments/benchmarks/src/base/methcall.c	/^    int count_max;$/;"	m	struct:NthToggle	file:
count_max	experiments/benchmarks/src/base/objinst.c	/^    int count_max;$/;"	m	struct:NthToggle	file:
counter	experiments/backup/benchmarks/src/aha/aha.h	/^unsigned counter[MAXNUMI];        \/\/ Count num times insn at level i is$/;"	v
counter	experiments/backup/benchmarks/src/base/methcall.c	/^    int counter;$/;"	m	struct:NthToggle	file:
counter	experiments/backup/benchmarks/src/base/objinst.c	/^    int counter;$/;"	m	struct:NthToggle	file:
counter	experiments/benchmarks/src/aha/aha.h	/^unsigned counter[MAXNUMI];        \/\/ Count num times insn at level i is$/;"	v
counter	experiments/benchmarks/src/base/methcall.c	/^    int counter;$/;"	m	struct:NthToggle	file:
counter	experiments/benchmarks/src/base/objinst.c	/^    int counter;$/;"	m	struct:NthToggle	file:
counter_	test/gtest/samples/sample4.h	/^  int counter_;$/;"	m	class:Counter
counter_	test/gtest/test/gtest_unittest.cc	/^  static int counter_;$/;"	m	class:testing::SetUpTestCaseTest	file:
counter_	test/gtest/test/gtest_unittest.cc	/^int SetUpTestCaseTest::counter_ = 0;$/;"	m	class:testing::SetUpTestCaseTest	file:
counters	experiments/backup/benchmarks/src/aha/aha.h	/^const int counters = 1;         \/\/ 0 or 1; count number of evaluations.$/;"	v
counters	experiments/benchmarks/src/aha/aha.h	/^const int counters = 1;         \/\/ 0 or 1; count number of evaluations.$/;"	v
createCostAnalysis	include/CostEstimator/CostAnalysis.h	/^    createCostAnalysis(CostAnalysisKind Kind) {$/;"	f	namespace:__anon5
createCostModelAnalysisPass	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^FunctionPass *llvm::createCostModelAnalysisPass() {$/;"	f	class:llvm
createRandomArray	experiments/backup/benchmarks/src/base/puzzle.c	/^int *createRandomArray(int size) {$/;"	f
createRandomArray	experiments/benchmarks/src/base/puzzle.c	/^int *createRandomArray(int size) {$/;"	f
createResults	docs/html/search/search.js	/^function createResults()$/;"	f
create_	test/gtest/test/gtest-death-test_test.cc	/^  bool create_;$/;"	m	class:MockDeathTestFactory	file:
create_link_list	experiments/backup/benchmarks/src/base/misr.c	/^void create_link_list(misr_type *cell_array)$/;"	f
create_link_list	experiments/benchmarks/src/base/misr.c	/^void create_link_list(misr_type *cell_array)$/;"	f
createtask	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^void createtask(int id,$/;"	f
createtask	experiments/benchmarks/src/base/richards_benchmark.c	/^void createtask(int id,$/;"	f
curr	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *curr;$/;"	m	class:HexxagonGame
curr	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *curr;$/;"	m	class:HexxagonGame
current10_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T10>::iterator current10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T10>::iterator current10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current1_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current2_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current3_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current4_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current5_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current6_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current6_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current6_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current6_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current6_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current7_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current7_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current7_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current7_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current8_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current8_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current8_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current9_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current9_	test/gtest/fused-src/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
currentX	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
currentY	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
current_parameter_	test/gtest/test/gtest-param-test_test.cc	/^  int current_parameter_;$/;"	m	class:TestGenerationTest	file:
current_surfaces	experiments/backup/benchmarks/src/base/fbench.c	/^static short current_surfaces;$/;"	v	file:
current_surfaces	experiments/benchmarks/src/base/fbench.c	/^static short current_surfaces;$/;"	v	file:
current_test_case	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestCase* current_test_case() const { return current_test_case_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_case	test/gtest/src/gtest-internal-inl.h	/^  const TestCase* current_test_case() const { return current_test_case_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_case_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestCase* current_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_case_	test/gtest/src/gtest-internal-inl.h	/^  TestCase* current_test_case_;$/;"	m	class:testing::internal::UnitTestImpl
current_test_info	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info	test/gtest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info	test/gtest/src/gtest-internal-inl.h	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_info_	test/gtest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl
current_test_result	test/gtest/fused-src/gtest/gtest-all.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl
current_test_result	test/gtest/src/gtest.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current_value_	test/gtest/fused-src/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current_value_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
d	experiments/backup/benchmarks/src/base/bubblesort.c	27;"	d	file:
d	experiments/backup/benchmarks/src/base/intmm.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/oscar.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/perm.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/puzzle-stanford.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/queens.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/quicksort.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/realmm.c	32;"	d	file:
d	experiments/backup/benchmarks/src/base/towers.c	30;"	d	file:
d	experiments/backup/benchmarks/src/base/treesort.c	30;"	d	file:
d	experiments/benchmarks/src/base/bubblesort.c	27;"	d	file:
d	experiments/benchmarks/src/base/intmm.c	30;"	d	file:
d	experiments/benchmarks/src/base/oscar.c	30;"	d	file:
d	experiments/benchmarks/src/base/perm.c	30;"	d	file:
d	experiments/benchmarks/src/base/puzzle-stanford.c	30;"	d	file:
d	experiments/benchmarks/src/base/queens.c	30;"	d	file:
d	experiments/benchmarks/src/base/quicksort.c	30;"	d	file:
d	experiments/benchmarks/src/base/realmm.c	32;"	d	file:
d	experiments/benchmarks/src/base/towers.c	30;"	d	file:
d	experiments/benchmarks/src/base/treesort.c	30;"	d	file:
data	experiments/backup/benchmarks/src/base/chomp.c	/^  int *data;$/;"	m	struct:_list	file:
data	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
data	experiments/benchmarks/src/base/chomp.c	/^  int *data;$/;"	m	struct:_list	file:
data	experiments/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
data_	test/gtest/fused-src/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper
data_	test/gtest/include/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper
data_end	include/Profiling/papi.h	/^      caddr_t data_end;         \/* End address of program data segment *\/$/;"	m	struct:_papi_address_map
data_start	include/Profiling/papi.h	/^      caddr_t data_start;       \/* Start address of program data segment *\/$/;"	m	struct:_papi_address_map
daxpy	experiments/backup/benchmarks/src/base/lpbench.c	/^void daxpy(int n, double da, double * dx, int dx_off, int incx, double * dy, int dy_off, int incy)$/;"	f
daxpy	experiments/benchmarks/src/base/lpbench.c	/^void daxpy(int n, double da, double * dx, int dx_off, int incx, double * dy, int dy_off, int incy)$/;"	f
days_per_year	experiments/backup/benchmarks/src/base/n-body.c	15;"	d	file:
days_per_year	experiments/benchmarks/src/base/n-body.c	15;"	d	file:
ddot	experiments/backup/benchmarks/src/base/lpbench.c	/^static double ddot(int n, double * dx, int dx_off, int incx, double * dy, int dy_off, int incy)$/;"	f	file:
ddot	experiments/benchmarks/src/base/lpbench.c	/^static double ddot(int n, double * dx, int dx_off, int incx, double * dy, int dy_off, int incy)$/;"	f	file:
death_test_count	test/gtest/fused-src/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult
death_test_count	test/gtest/include/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult
death_test_count_	test/gtest/fused-src/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult
death_test_count_	test/gtest/include/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult
death_test_factory	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl
death_test_factory	test/gtest/src/gtest-internal-inl.h	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl
death_test_factory_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl	file:
death_test_factory_	test/gtest/src/gtest-internal-inl.h	/^  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl
death_test_style_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
death_test_style_	test/gtest/src/gtest-internal-inl.h	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver
death_test_use_fork	test/gtest/test/gtest_unittest.cc	/^  bool death_test_use_fork;$/;"	m	struct:testing::Flags	file:
death_test_use_fork_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
death_test_use_fork_	test/gtest/src/gtest-internal-inl.h	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver
debug	experiments/backup/benchmarks/src/aha/aha.h	/^const int debug = 0;            \/\/ 0 or 1; debugging printouts if 1.$/;"	v
debug	experiments/benchmarks/src/aha/aha.h	/^const int debug = 0;            \/\/ 0 or 1; debugging printouts if 1.$/;"	v
debug	include/Profiling/papi.h	/^      PAPI_debug_option_t debug;$/;"	m	union:__anon7
declarePAPIFunctions	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      void declarePAPIFunctions(Module &M) {$/;"	f	struct:__anon3::CallCost	file:
decode_rs	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static void decode_rs()$/;"	f	file:
decode_rs	experiments/benchmarks/src/base/reedsolomon.c	/^static void decode_rs()$/;"	f	file:
default_	test/gtest/fused-src/gtest/gtest.h	/^  const T default_;  \/\/ The default value for each thread.$/;"	m	class:std::tr1::ThreadLocal
default_	test/gtest/include/gtest/internal/gtest-port.h	/^  const T default_;  \/\/ The default value for each thread.$/;"	m	class:testing::internal::ThreadLocal
default_global_test_part_result_reporter_	test/gtest/fused-src/gtest/gtest-all.cc	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_global_test_part_result_reporter_	test/gtest/src/gtest-internal-inl.h	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl
default_per_thread_test_part_result_reporter_	test/gtest/fused-src/gtest/gtest-all.cc	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_per_thread_test_part_result_reporter_	test/gtest/src/gtest-internal-inl.h	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl
default_result_printer	test/gtest/fused-src/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners
default_result_printer	test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners
default_result_printer_	test/gtest/fused-src/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners
default_result_printer_	test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners
default_xml_generator	test/gtest/fused-src/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners
default_xml_generator	test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners
default_xml_generator_	test/gtest/fused-src/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners
default_xml_generator_	test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners
defdomain	include/Profiling/papi.h	/^      PAPI_domain_option_t defdomain;$/;"	m	union:__anon7
defgranularity	include/Profiling/papi.h	/^      PAPI_granularity_option_t defgranularity;$/;"	m	union:__anon7
define-members	docs/html/BBHashExtractorFromIR_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/PAPI_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
defined_test_names_	test/gtest/fused-src/gtest/gtest.h	/^  ::std::set<const char*> defined_test_names_;$/;"	m	class:testing::internal::TypedTestCasePState
defined_test_names_	test/gtest/include/gtest/internal/gtest-internal.h	/^  ::std::set<const char*> defined_test_names_;$/;"	m	class:testing::internal::TypedTestCasePState
delayInProgress	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
depart	test/gtest/fused-src/gtest/gtest.h	/^  void depart() {$/;"	f	class:testing::internal::linked_ptr
depart	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  void depart() {$/;"	f	class:testing::internal::linked_ptr
derived	include/Profiling/papi.h	/^      char derived[PAPI_MIN_STR_LEN];        \/* name of the derived type$/;"	m	struct:event_info
destroyRest	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^void HexxagonGame::destroyRest()$/;"	f	class:HexxagonGame
destroyRest	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^void HexxagonGame::destroyRest()$/;"	f	class:HexxagonGame
desyncTimeout	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
details	docs/html/AnalysisMethod_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/BBDescriptor_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/BBDescriptor_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/BBHash_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/BBHash_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/CostEstimator_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/DatabaseManager_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/DatabaseManager_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/FrequencyMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/GEOS_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/GEOS_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/HashMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/HashWeighted_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/InstructionCost_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/InstructionMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/InstructionPlusHashMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/PAPI_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/ProfMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/ProfileModule_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/ProfileModule_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/RandomMethod_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/RandomOnFunction_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/Random_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/Test_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classAnalysisMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classBBDescriptor.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classBBHash.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classDatabaseManager.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classFrequencyMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classGEOS.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classHashMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classHashWeightedMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classInstructionCostMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classInstructionMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classInstructionPlusHashMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classProfMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classProfileModule.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/classRandomMethod.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/main_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/mergeDatabase_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/namespaceGEOS.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	docs/html/structstd_1_1hash_3_01BBHash_01_4.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
devfn	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *devfn(struct packet *pkt)$/;"	f
devfn	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *devfn(struct packet *pkt)$/;"	f
dgefa	experiments/backup/benchmarks/src/base/lpbench.c	/^void dgefa(double ** a, int * ipvt)$/;"	f
dgefa	experiments/benchmarks/src/base/lpbench.c	/^void dgefa(double ** a, int * ipvt)$/;"	f
dgesl	experiments/backup/benchmarks/src/base/lpbench.c	/^void dgesl(double ** a, int * ipvt, double * b)$/;"	f
dgesl	experiments/benchmarks/src/base/lpbench.c	/^void dgesl(double ** a, int * ipvt, double * b)$/;"	f
difference_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator
difference_type	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator
disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::disabled_test_count() const {$/;"	f	class:testing::TestCase
disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest
disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
disabled_test_count	test/gtest/src/gtest.cc	/^int TestCase::disabled_test_count() const {$/;"	f	class:testing::TestCase
disabled_test_count	test/gtest/src/gtest.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest
disabled_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
discsize	experiments/backup/benchmarks/src/base/bubblesort.c	/^  int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/intmm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/oscar.c	/^  int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/perm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/queens.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/quicksort.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/realmm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/towers.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/backup/benchmarks/src/base/treesort.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/bubblesort.c	/^  int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/intmm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/oscar.c	/^  int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/perm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/puzzle-stanford.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/queens.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/quicksort.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/realmm.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/towers.c	/^	int discsize;$/;"	m	struct:element	file:
discsize	experiments/benchmarks/src/base/treesort.c	/^	int discsize;$/;"	m	struct:element	file:
displayBoardText	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void HexxagonBoard::displayBoardText(int turn)$/;"	f	class:HexxagonBoard
displayBoardText	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void HexxagonBoard::displayBoardText(int turn)$/;"	f	class:HexxagonBoard
displayText	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	void displayText() {curr->displayBoardText(turn);};$/;"	f	class:HexxagonGame
displayText	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	void displayText() {curr->displayBoardText(turn);};$/;"	f	class:HexxagonGame
divide	experiments/backup/benchmarks/src/aha/aha.h	/^int divide (int x, int y, int z) {$/;"	f
divide	experiments/benchmarks/src/aha/aha.h	/^int divide (int x, int y, int z) {$/;"	f
divu	experiments/backup/benchmarks/src/aha/aha.h	/^int divu(int x, int y, int z) {$/;"	f
divu	experiments/benchmarks/src/aha/aha.h	/^int divu(int x, int y, int z) {$/;"	f
dm1	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^  static \/*const*\/ double dm1;  \/*  = 1.0 \/ (double) m1; *\/$/;"	v	file:
dm1	experiments/benchmarks/src/SciMark2-C/Random.c	/^  static \/*const*\/ double dm1;  \/*  = 1.0 \/ (double) m1; *\/$/;"	v	file:
dnfbase	experiments/backup/benchmarks/src/base/bubblesort.c	7;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/intmm.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/oscar.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/perm.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/queens.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/quicksort.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/realmm.c	10;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/towers.c	8;"	d	file:
dnfbase	experiments/backup/benchmarks/src/base/treesort.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/bubblesort.c	7;"	d	file:
dnfbase	experiments/benchmarks/src/base/intmm.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/oscar.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/perm.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/puzzle-stanford.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/queens.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/quicksort.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/realmm.c	10;"	d	file:
dnfbase	experiments/benchmarks/src/base/towers.c	8;"	d	file:
dnfbase	experiments/benchmarks/src/base/treesort.c	8;"	d	file:
doInitialization	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^bool MachineFunctionAnalysis::doInitialization(Module &M) {$/;"	f	class:MachineFunctionAnalysis
doTest	experiments/backup/benchmarks/src/base/lowercase.c	/^static void doTest(size_t numberOfIterations)$/;"	f	file:
doTest	experiments/benchmarks/src/base/lowercase.c	/^static void doTest(size_t numberOfIterations)$/;"	f	file:
domain	include/Profiling/papi.h	/^      PAPI_domain_option_t domain;$/;"	m	union:__anon7
domain	include/Profiling/papi.h	/^      int domain;$/;"	m	struct:_papi_domain_option
double_array_divs_variable	experiments/backup/benchmarks/src/base/dt.c	/^double_array_divs_variable(double * __restrict dvec1,$/;"	f	file:
double_array_divs_variable	experiments/benchmarks/src/base/dt.c	/^double_array_divs_variable(double * __restrict dvec1,$/;"	f	file:
dscal	experiments/backup/benchmarks/src/base/lpbench.c	/^void dscal(int n, double da, double * dx, int dx_off, int incx)$/;"	f
dscal	experiments/benchmarks/src/base/lpbench.c	/^void dscal(int n, double da, double * dx, int dx_off, int incx)$/;"	f
dst_begin	include/Profiling/GCOV.h	/^  EdgeIterator dst_begin() const { return DstEdges.begin(); }$/;"	f	class:llvm::GCOVBlock
dst_end	include/Profiling/GCOV.h	/^  EdgeIterator dst_end() const { return DstEdges.end(); }$/;"	f	class:llvm::GCOVBlock
dtime	experiments/backup/benchmarks/src/base/flops.c	/^dtime(p)$/;"	f
dtime	experiments/backup/benchmarks/src/base/flops.c	/^int     dtime( p )$/;"	f
dtime	experiments/benchmarks/src/base/flops.c	/^dtime(p)$/;"	f
dtime	experiments/benchmarks/src/base/flops.c	/^int     dtime( p )$/;"	f
dummy1	experiments/backup/benchmarks/src/aha/aha.h	/^int dummy1[] = {IMMEDS};        \/\/ These get optimized out of existence.$/;"	v
dummy1	experiments/benchmarks/src/aha/aha.h	/^int dummy1[] = {IMMEDS};        \/\/ These get optimized out of existence.$/;"	v
dummy2	experiments/backup/benchmarks/src/aha/aha.h	/^int dummy2[] = {SHIMMEDS};$/;"	v
dummy2	experiments/benchmarks/src/aha/aha.h	/^int dummy2[] = {SHIMMEDS};$/;"	v
dummy_	test/gtest/fused-src/gtest/gtest.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper
dummy_	test/gtest/fused-src/gtest/gtest.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper
dummy_	test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper
dummy_	test/gtest/include/gtest/internal/gtest-internal.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper
dump	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVBlock::dump() const {$/;"	f	class:GCOVBlock
dump	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVFile::dump() const {$/;"	f	class:GCOVFile
dump	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVFunction::dump() const {$/;"	f	class:GCOVFunction
dump_list	experiments/backup/benchmarks/src/base/chomp.c	/^void dump_list(struct _list *list) \/* same for a _list structure *\/$/;"	f
dump_list	experiments/benchmarks/src/base/chomp.c	/^void dump_list(struct _list *list) \/* same for a _list structure *\/$/;"	f
dump_play	experiments/backup/benchmarks/src/base/chomp.c	/^void dump_play(play) \/* and for the entire game tree *\/$/;"	f
dump_play	experiments/benchmarks/src/base/chomp.c	/^void dump_play(play) \/* and for the entire game tree *\/$/;"	f
e	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/backup/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
e	experiments/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
elapsed_time	test/gtest/fused-src/gtest/gtest-all.cc	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl
elapsed_time	test/gtest/fused-src/gtest/gtest-all.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest
elapsed_time	test/gtest/fused-src/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestCase
elapsed_time	test/gtest/fused-src/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult
elapsed_time	test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestCase
elapsed_time	test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult
elapsed_time	test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl
elapsed_time	test/gtest/src/gtest.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest
elapsed_time_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl	file:
elapsed_time_	test/gtest/fused-src/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestCase
elapsed_time_	test/gtest/fused-src/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult
elapsed_time_	test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestCase
elapsed_time_	test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult
elapsed_time_	test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl
elem	experiments/backup/benchmarks/src/sgefa/ge.h	38;"	d
elem	experiments/benchmarks/src/sgefa/ge.h	38;"	d
element	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/intmm.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/oscar.c	/^struct element$/;"	s	file:
element	experiments/backup/benchmarks/src/base/perm.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/queens.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/quicksort.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/realmm.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/towers.c	/^struct    element {$/;"	s	file:
element	experiments/backup/benchmarks/src/base/treesort.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/bubblesort.c	/^struct element {$/;"	s	file:
element	experiments/benchmarks/src/base/intmm.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/oscar.c	/^struct element$/;"	s	file:
element	experiments/benchmarks/src/base/perm.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/queens.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/quicksort.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/realmm.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/towers.c	/^struct    element {$/;"	s	file:
element	experiments/benchmarks/src/base/treesort.c	/^struct    element {$/;"	s	file:
element	test/gtest/samples/sample3-inl.h	/^  const E& element() const { return element_; }$/;"	f	class:QueueNode
element_	test/gtest/samples/sample3-inl.h	/^  E element_;$/;"	m	class:QueueNode
element_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T element_type;$/;"	t	class:testing::internal::linked_ptr
element_type	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  typedef T element_type;$/;"	t	class:testing::internal::linked_ptr
element_type	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef T element_type;$/;"	t	class:testing::internal::scoped_ptr
emit	experiments/backup/benchmarks/src/base/mandel.c	/^void emit(double __complex__ X) {$/;"	f
emit	experiments/benchmarks/src/base/mandel.c	/^void emit(double __complex__ X) {$/;"	f
empty	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	empty,$/;"	e	enum:__anon56
empty	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	empty,$/;"	e	enum:__anon43
empty	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  bool empty() { return Remaining.empty(); }$/;"	f	class:__anon2::LineConsumer
encode_rs	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static void encode_rs()$/;"	f	file:
encode_rs	experiments/benchmarks/src/base/reedsolomon.c	/^static void encode_rs()$/;"	f	file:
end	test/gtest/fused-src/gtest/gtest.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray
end	test/gtest/fused-src/gtest/gtest.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator
end	test/gtest/include/gtest/internal/gtest-internal.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray
end	test/gtest/include/gtest/internal/gtest-param-util.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator
end10_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator end10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T10>::iterator end10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end1_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end2_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end3_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end4_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end5_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end6_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end7_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end8_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end9_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end9_	test/gtest/fused-src/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
endOfGame	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::endOfGame()$/;"	f	class:HexxagonBoard
endOfGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	int endOfGame() {return curr->endOfGame();};$/;"	f	class:HexxagonGame
endOfGame	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::endOfGame()$/;"	f	class:HexxagonBoard
endOfGame	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	int endOfGame() {return curr->endOfGame();};$/;"	f	class:HexxagonGame
end_	test/gtest/fused-src/gtest/gtest.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator
end_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator
end_index_	test/gtest/fused-src/gtest/gtest.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator
end_index_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator
energy	experiments/backup/benchmarks/src/base/n-body.c	/^double energy(int nbodies, struct planet * bodies)$/;"	f
energy	experiments/benchmarks/src/base/n-body.c	/^double energy(int nbodies, struct planet * bodies)$/;"	f
enum-members	docs/html/AnalysisMethod_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/BBHash_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/CostEstimator_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/GEOS_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
environ	test/gtest/fused-src/gtest/gtest-all.cc	/^extern "C" char** environ;$/;"	m	namespace:testing::internal	file:
environ	test/gtest/src/gtest-death-test.cc	/^extern "C" char** environ;$/;"	m	namespace:testing::internal	file:
environ	test/gtest/test/gtest_break_on_failure_unittest.py	/^environ = gtest_test_utils.environ$/;"	v
environ	test/gtest/test/gtest_catch_exceptions_test.py	/^environ = gtest_test_utils.environ$/;"	v
environ	test/gtest/test/gtest_env_var_test.py	/^environ = os.environ.copy()$/;"	v
environ	test/gtest/test/gtest_filter_unittest.py	/^environ = os.environ.copy()$/;"	v
environ	test/gtest/test/gtest_test_utils.py	/^environ = os.environ.copy()$/;"	v
environments	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl
environments	test/gtest/src/gtest-internal-inl.h	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl
environments_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl	file:
environments_	test/gtest/src/gtest-internal-inl.h	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl
equal_data	experiments/backup/benchmarks/src/base/chomp.c	/^int equal_data(int *data1,int *data2) \/* check if both _data's are equal *\/$/;"	f
equal_data	experiments/benchmarks/src/base/chomp.c	/^int equal_data(int *data1,int *data2) \/* check if both _data's are equal *\/$/;"	f
equivalent	include/CostEstimator/LRUCache.h	/^      const bool equivalent = true;$/;"	m	class:lru::cache
erase	include/CostEstimator/LRUCache.h	/^      void erase( const K &k ) {$/;"	f	class:lru::cache
errorcheck	experiments/backup/benchmarks/src/base/oourafft.c	/^double errorcheck(int nini, int nend, double scale, double *a)$/;"	f
errorcheck	experiments/benchmarks/src/base/oourafft.c	/^double errorcheck(int nini, int nend, double scale, double *a)$/;"	f
estimateCost	src/CostEstimator/CostAnalysis/Branch/BranchAnalysis.cpp	/^double BranchAnalysis::estimateCost(StringRef FuncName, $/;"	f	class:BranchAnalysis
estimateCost	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^double CacheAnalysis::estimateCost(StringRef FuncName, $/;"	f	class:CacheAnalysis
estimateCost	src/CostEstimator/CostAnalysis/Call/CallCostAnalysis.cpp	/^double CallAnalysis::estimateCost(StringRef FuncName, $/;"	f	class:CallAnalysis
estimateCost	src/CostEstimator/CostAnalysis/Instruction/StaticCost/StaticCostEstimator.cpp	/^double StaticInstructionAnalysis::estimateCost(StringRef FuncName, $/;"	f	class:StaticInstructionAnalysis
estimateCost	src/CostEstimator/CostAnalysis/Instruction/TTI/TTIInstructionAnalysis.cpp	/^double TTIInstructionAnalysis::estimateCost(StringRef FuncName, $/;"	f	class:TTIInstructionAnalysis
eval_A	experiments/backup/benchmarks/src/base/spectral-norm.c	/^double eval_A(int i, int j) { return 1.0\/((i+j)*(i+j+1)\/2+i+1); }$/;"	f
eval_A	experiments/benchmarks/src/base/spectral-norm.c	/^double eval_A(int i, int j) { return 1.0\/((i+j)*(i+j+1)\/2+i+1); }$/;"	f
eval_A_times_u	experiments/backup/benchmarks/src/base/spectral-norm.c	/^void eval_A_times_u(int N, const double u[], double Au[])$/;"	f
eval_A_times_u	experiments/benchmarks/src/base/spectral-norm.c	/^void eval_A_times_u(int N, const double u[], double Au[])$/;"	f
eval_AtA_times_u	experiments/backup/benchmarks/src/base/spectral-norm.c	/^void eval_AtA_times_u(int N, const double u[], double AtAu[])$/;"	f
eval_AtA_times_u	experiments/benchmarks/src/base/spectral-norm.c	/^void eval_AtA_times_u(int N, const double u[], double AtAu[])$/;"	f
eval_At_times_u	experiments/backup/benchmarks/src/base/spectral-norm.c	/^void eval_At_times_u(int N, const double u[], double Au[])$/;"	f
eval_At_times_u	experiments/benchmarks/src/base/spectral-norm.c	/^void eval_At_times_u(int N, const double u[], double Au[])$/;"	f
evaluate	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::evaluate(void)$/;"	f	class:HexxagonBoard
evaluate	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::evaluate(void)$/;"	f	class:HexxagonBoard
event_code	include/Profiling/papi.h	/^      unsigned int event_code;               \/* preset (0x8xxxxxxx) or native (0x4xxxxxxx) event code *\/$/;"	m	struct:event_info
event_handle_	test/gtest/fused-src/gtest/gtest-all.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
event_handle_	test/gtest/src/gtest-death-test.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
event_info	include/Profiling/papi.h	/^   typedef struct event_info {$/;"	s
eventset	include/Profiling/papi.h	/^      int eventset;$/;"	m	struct:_papi_domain_option
eventset	include/Profiling/papi.h	/^      int eventset;$/;"	m	struct:_papi_granularity_option
eventset	include/Profiling/papi.h	/^      int eventset;$/;"	m	struct:_papi_multiplex_option
exe_info	include/Profiling/papi.h	/^      PAPI_exe_info_t *exe_info;$/;"	m	union:__anon7
execution	experiments/backup/meansure.sh	/^function execution-time() {$/;"	f
execution	experiments/backup/meansure2.sh	/^function execution-time() {$/;"	f
exit_code_	test/gtest/fused-src/gtest/gtest.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode
exit_code_	test/gtest/include/gtest/gtest-death-test.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode
expected_to_finish_	test/gtest/scripts/gen_gtest_pred_impl.py	/^    expected_to_finish_ = true;$/;"	v	class:Predicate
expected_to_finish_	test/gtest/scripts/gen_gtest_pred_impl.py	/^  expected_to_finish_ = false;$/;"	v
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate1Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate2Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate3Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate4Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool expected_to_finish_;$/;"	m	class:Predicate5Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate1Test::expected_to_finish_;$/;"	m	class:Predicate1Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate2Test::expected_to_finish_;$/;"	m	class:Predicate2Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate3Test::expected_to_finish_;$/;"	m	class:Predicate3Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate4Test::expected_to_finish_;$/;"	m	class:Predicate4Test	file:
expected_to_finish_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate5Test::expected_to_finish_;$/;"	m	class:Predicate5Test	file:
exponent_bits	test/gtest/fused-src/gtest/gtest.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
exponent_bits	test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
extended	experiments/backup/benchmarks/src/base/fldry.c	83;"	d	file:
extended	experiments/benchmarks/src/base/fldry.c	83;"	d	file:
f0	test/gtest/fused-src/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f0	test/gtest/include/gtest/internal/gtest-tuple.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f0_	test/gtest/fused-src/gtest/gtest.h	/^  T0 f0_;$/;"	m	class:std::tr1::tuple
f0_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T0 f0_;$/;"	m	class:std::tr1::tuple
f1	test/gtest/fused-src/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f1	test/gtest/include/gtest/internal/gtest-tuple.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f1_	test/gtest/fused-src/gtest/gtest.h	/^  T1 f1_;$/;"	m	class:std::tr1::tuple
f1_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T1 f1_;$/;"	m	class:std::tr1::tuple
f2	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f2	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f2_	test/gtest/fused-src/gtest/gtest.h	/^  T2 f2_;$/;"	m	class:std::tr1::tuple
f2_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T2 f2_;$/;"	m	class:std::tr1::tuple
f3	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f3	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f3_	test/gtest/fused-src/gtest/gtest.h	/^  T3 f3_;$/;"	m	class:std::tr1::tuple
f3_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T3 f3_;$/;"	m	class:std::tr1::tuple
f4	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f4	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f4_	test/gtest/fused-src/gtest/gtest.h	/^  T4 f4_;$/;"	m	class:std::tr1::tuple
f4_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T4 f4_;$/;"	m	class:std::tr1::tuple
f5	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f5	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f5_	test/gtest/fused-src/gtest/gtest.h	/^  T5 f5_;$/;"	m	class:std::tr1::tuple
f5_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T5 f5_;$/;"	m	class:std::tr1::tuple
f6	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f6	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f6_	test/gtest/fused-src/gtest/gtest.h	/^  T6 f6_;$/;"	m	class:std::tr1::tuple
f6_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T6 f6_;$/;"	m	class:std::tr1::tuple
f7	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f7	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f7_	test/gtest/fused-src/gtest/gtest.h	/^  T7 f7_;$/;"	m	class:std::tr1::tuple
f7_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T7 f7_;$/;"	m	class:std::tr1::tuple
f8	test/gtest/fused-src/gtest/gtest.h	/^      GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),$/;"	m	class:std::tr1::tuple
f8	test/gtest/include/gtest/internal/gtest-tuple.h	/^      GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),$/;"	m	class:std::tr1::tuple
f8_	test/gtest/fused-src/gtest/gtest.h	/^  T8 f8_;$/;"	m	class:std::tr1::tuple
f8_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T8 f8_;$/;"	m	class:std::tr1::tuple
f9_	test/gtest/fused-src/gtest/gtest.h	/^      f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) {}$/;"	f	class:std::tr1::tuple
f9_	test/gtest/fused-src/gtest/gtest.h	/^      f9_(t.f9_) {}$/;"	f	class:std::tr1::tuple
f9_	test/gtest/fused-src/gtest/gtest.h	/^  T9 f9_;$/;"	m	class:std::tr1::tuple
f9_	test/gtest/include/gtest/internal/gtest-tuple.h	/^      f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) {}$/;"	f	class:std::tr1::tuple
f9_	test/gtest/include/gtest/internal/gtest-tuple.h	/^      f9_(t.f9_) {}$/;"	f	class:std::tr1::tuple
f9_	test/gtest/include/gtest/internal/gtest-tuple.h	/^  T9 f9_;$/;"	m	class:std::tr1::tuple
f_free	experiments/backup/benchmarks/src/base/misr.c	/^        int f_free;$/;"	m	struct:cells	file:
f_free	experiments/benchmarks/src/base/misr.c	/^        int f_free;$/;"	m	struct:cells	file:
fabs	experiments/backup/benchmarks/src/base/fbench.c	329;"	d	file:
fabs	experiments/benchmarks/src/base/fbench.c	329;"	d	file:
factory_	test/gtest/fused-src/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo::internal
factory_	test/gtest/include/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo::internal
factory_	test/gtest/test/gtest-death-test_test.cc	/^  static MockDeathTestFactory* factory_;$/;"	m	class:MacroLogicDeathTest	file:
factory_	test/gtest/test/gtest-death-test_test.cc	/^MockDeathTestFactory* MacroLogicDeathTest::factory_ = NULL;$/;"	m	class:MacroLogicDeathTest	file:
fade	experiments/backup/benchmarks/src/base/perlin.c	/^static double fade(double t) { return t * t * t * (t * (t * 6 - 15) + 10); }$/;"	f	file:
fade	experiments/benchmarks/src/base/perlin.c	/^static double fade(double t) { return t * t * t * (t * (t * 6 - 15) + 10); }$/;"	f	file:
fadeInTime	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
fadeOutTime	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
failed	test/gtest/fused-src/gtest/gtest.h	/^  bool failed() const { return type_ != kSuccess; }$/;"	f	class:testing::TestPartResult
failed	test/gtest/include/gtest/gtest-test-part.h	/^  bool failed() const { return type_ != kSuccess; }$/;"	f	class:testing::TestPartResult
failed_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest
failed_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::failed_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failed_test_case_count	test/gtest/src/gtest.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest
failed_test_case_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::failed_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failed_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::failed_test_count() const {$/;"	f	class:testing::TestCase
failed_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest
failed_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failed_test_count	test/gtest/src/gtest.cc	/^int TestCase::failed_test_count() const {$/;"	f	class:testing::TestCase
failed_test_count	test/gtest/src/gtest.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest
failed_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failure_in_set_up_	test/gtest/test/gtest_environment_test.cc	/^  FailureType failure_in_set_up_;$/;"	m	class:__anon21::MyEnvironment	file:
failure_message	test/gtest/fused-src/gtest/gtest.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult
failure_message	test/gtest/include/gtest/gtest.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult
fake_sock_writer_	test/gtest/test/gtest_unittest.cc	/^  FakeSocketWriter* const fake_sock_writer_;$/;"	m	class:testing::internal::StreamingListenerTest	file:
false	experiments/backup/benchmarks/src/base/bubblesort.c	4;"	d	file:
false	experiments/backup/benchmarks/src/base/intmm.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/methcall.c	/^enum {false, true};$/;"	e	enum:__anon61	file:
false	experiments/backup/benchmarks/src/base/objinst.c	/^enum {false, true};$/;"	e	enum:__anon62	file:
false	experiments/backup/benchmarks/src/base/oscar.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/perm.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/puzzle-stanford.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/queens.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/quicksort.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/realmm.c	7;"	d	file:
false	experiments/backup/benchmarks/src/base/towers.c	5;"	d	file:
false	experiments/backup/benchmarks/src/base/treesort.c	5;"	d	file:
false	experiments/benchmarks/src/base/bubblesort.c	4;"	d	file:
false	experiments/benchmarks/src/base/intmm.c	5;"	d	file:
false	experiments/benchmarks/src/base/methcall.c	/^enum {false, true};$/;"	e	enum:__anon48	file:
false	experiments/benchmarks/src/base/objinst.c	/^enum {false, true};$/;"	e	enum:__anon49	file:
false	experiments/benchmarks/src/base/oscar.c	5;"	d	file:
false	experiments/benchmarks/src/base/perm.c	5;"	d	file:
false	experiments/benchmarks/src/base/puzzle-stanford.c	5;"	d	file:
false	experiments/benchmarks/src/base/queens.c	5;"	d	file:
false	experiments/benchmarks/src/base/quicksort.c	5;"	d	file:
false	experiments/benchmarks/src/base/realmm.c	7;"	d	file:
false	experiments/benchmarks/src/base/towers.c	5;"	d	file:
false	experiments/benchmarks/src/base/treesort.c	5;"	d	file:
false_type	test/gtest/fused-src/gtest/gtest.h	/^typedef bool_constant<false> false_type;$/;"	t	namespace:std::tr1
false_type	test/gtest/include/gtest/internal/gtest-port.h	/^typedef bool_constant<false> false_type;$/;"	t	namespace:testing::internal
fannkuch	experiments/backup/benchmarks/src/base/fannkuch.c	/^fannkuch( int n )$/;"	f	file:
fannkuch	experiments/benchmarks/src/base/fannkuch.c	/^fannkuch( int n )$/;"	f	file:
fatally_failed	test/gtest/fused-src/gtest/gtest.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult
fatally_failed	test/gtest/include/gtest/gtest-test-part.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult
faulty	experiments/backup/benchmarks/src/base/misr.c	/^	int faulty;$/;"	m	struct:cells	file:
faulty	experiments/benchmarks/src/base/misr.c	/^	int faulty;$/;"	m	struct:cells	file:
fd_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	file:
fd_	test/gtest/src/gtest-port.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	file:
fflop	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^fflop(int mx,int my, int mz)$/;"	f
fflop	experiments/benchmarks/src/base/himenobmtxpa.c	/^fflop(int mx,int my, int mz)$/;"	f
fftbase	experiments/backup/benchmarks/src/base/bubblesort.c	17;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/intmm.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/oscar.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/perm.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/queens.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/quicksort.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/realmm.c	20;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/towers.c	18;"	d	file:
fftbase	experiments/backup/benchmarks/src/base/treesort.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/bubblesort.c	17;"	d	file:
fftbase	experiments/benchmarks/src/base/intmm.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/oscar.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/perm.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/puzzle-stanford.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/queens.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/quicksort.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/realmm.c	20;"	d	file:
fftbase	experiments/benchmarks/src/base/towers.c	18;"	d	file:
fftbase	experiments/benchmarks/src/base/treesort.c	18;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/bubblesort.c	32;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/intmm.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/oscar.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/perm.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/puzzle-stanford.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/queens.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/quicksort.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/realmm.c	39;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/towers.c	37;"	d	file:
fftsize	experiments/backup/benchmarks/src/base/treesort.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/bubblesort.c	32;"	d	file:
fftsize	experiments/benchmarks/src/base/intmm.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/oscar.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/perm.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/puzzle-stanford.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/queens.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/quicksort.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/realmm.c	39;"	d	file:
fftsize	experiments/benchmarks/src/base/towers.c	37;"	d	file:
fftsize	experiments/benchmarks/src/base/treesort.c	37;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/bubblesort.c	33;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/intmm.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/oscar.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/perm.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/puzzle-stanford.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/queens.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/quicksort.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/realmm.c	40;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/towers.c	38;"	d	file:
fftsize2	experiments/backup/benchmarks/src/base/treesort.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/bubblesort.c	33;"	d	file:
fftsize2	experiments/benchmarks/src/base/intmm.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/oscar.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/perm.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/puzzle-stanford.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/queens.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/quicksort.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/realmm.c	40;"	d	file:
fftsize2	experiments/benchmarks/src/base/towers.c	38;"	d	file:
fftsize2	experiments/benchmarks/src/base/treesort.c	38;"	d	file:
fib	experiments/backup/benchmarks/src/base/fib2.c	/^fib(unsigned long n) {$/;"	f
fib	experiments/backup/benchmarks/src/base/recursive.c	/^int fib(int n) {$/;"	f
fib	experiments/benchmarks/src/base/fib2.c	/^fib(unsigned long n) {$/;"	f
fib	experiments/benchmarks/src/base/recursive.c	/^int fib(int n) {$/;"	f
fibFP	experiments/backup/benchmarks/src/base/recursive.c	/^double fibFP(double n) {$/;"	f
fibFP	experiments/benchmarks/src/base/recursive.c	/^double fibFP(double n) {$/;"	f
file	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int file[MAXFILES]; 		\/* Which queen 'owns' each file *\/$/;"	v
file	experiments/benchmarks/src/base/queens-mcgill.c	/^int file[MAXFILES]; 		\/* Which queen 'owns' each file *\/$/;"	v
file	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo	file:
file	test/gtest/fused-src/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
file	test/gtest/fused-src/gtest/gtest.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
file	test/gtest/include/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
file	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
file	test/gtest/src/gtest-internal-inl.h	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo
file_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	file:
file_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
file_	test/gtest/fused-src/gtest/gtest.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
file_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
file_	test/gtest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	file:
file_	test/gtest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
file_name	test/gtest/fused-src/gtest/gtest.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult
file_name	test/gtest/include/gtest/gtest-test-part.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult
file_name_	test/gtest/fused-src/gtest/gtest.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult
file_name_	test/gtest/include/gtest/gtest-test-part.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult
filename_	test/gtest/fused-src/gtest/gtest-all.cc	/^  ::std::string filename_;$/;"	m	class:testing::internal::CapturedStream	file:
filename_	test/gtest/src/gtest-port.cc	/^  ::std::string filename_;$/;"	m	class:testing::internal::CapturedStream	file:
files	docs/html/dir_013a394b402d3273324773ae5029f83e.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_0a926b3e8c1dbdb274557857b9fba826.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_156adca9467cf15aa6c9cc9773335b67.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_1cdbcde0bf0bb7a27e932161f6b26d47.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_211c3debc3ffc20101786ef55ce5eaea.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_32cd92f4b1e7e88c2290560ea44244e9.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_502d87bb874a84ea2f3b7bd831fc4917.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_80a7b15fbf7f484bdc1ece4cb1792575.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_833d804b0ee0e802a939fb16a96a8a27.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_894800ffbbb4eeabb163b4029903f5cb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_b48c78e52acd3e1eb22ea14034f2e37d.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_b7e8345ac5854e272c0a6a8037e35d00.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_c32bc508750d3b844730cc2800ef6d82.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_cbfe0d2cd414f41bee631c9f167aaa8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_d711ab233688aaef0e98a93c71497577.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_e0762b620cfa87064b3d80e60af710bc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_e82cc49e3e9b661efa82f9b33c9f45ce.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_e83e5cdfcab190980850e825b6b71b18.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	docs/html/dir_f61886fef537fbaff29fa20a3b70705e.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int files;			\/* Number of files (columns) *\/$/;"	v
files	experiments/benchmarks/src/base/queens-mcgill.c	/^int files;			\/* Number of files (columns) *\/$/;"	v
filter	test/gtest/test/gtest_unittest.cc	/^  const char* filter;$/;"	m	struct:testing::Flags	file:
filter_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
filter_	test/gtest/src/gtest-internal-inl.h	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver
find	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^void find(register int level)$/;"	f
find	experiments/benchmarks/src/base/queens-mcgill.c	/^void find(register int level)$/;"	f
find	include/CostEstimator/LRUCache.h	/^      typename list_t::iterator find( const K &k ) {$/;"	f	class:lru::cache
findDuplicate	experiments/backup/benchmarks/src/base/puzzle.c	/^int findDuplicate(int *data, int len) {$/;"	f
findDuplicate	experiments/benchmarks/src/base/puzzle.c	/^int findDuplicate(int *data, int len) {$/;"	f
findall	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int findall = 0;		\/* TRUE if finding all solutions *\/$/;"	v
findall	experiments/benchmarks/src/base/queens-mcgill.c	/^int findall = 0;		\/* TRUE if finding all solutions *\/$/;"	v
findtcb	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *findtcb(int id)$/;"	f
findtcb	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *findtcb(int id)$/;"	f
finished_	test/gtest/fused-src/gtest/gtest.h	/^  bool finished_;  \/\/ true iff we know that the thread function has finished.$/;"	m	class:std::tr1::ThreadWithParam
finished_	test/gtest/include/gtest/internal/gtest-port.h	/^  bool finished_;  \/\/ true iff we know that the thread function has finished.$/;"	m	class:testing::internal::ThreadWithParam
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate1Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate2Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate3Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate4Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static bool finished_;$/;"	m	class:Predicate5Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate1Test::finished_;$/;"	m	class:Predicate1Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate2Test::finished_;$/;"	m	class:Predicate2Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate3Test::finished_;$/;"	m	class:Predicate3Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate4Test::finished_;$/;"	m	class:Predicate4Test	file:
finished_	test/gtest/test/gtest_pred_impl_unittest.cc	/^bool Predicate5Test::finished_;$/;"	m	class:Predicate5Test	file:
first	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *first;$/;"	m	class:HexxagonGame
first	experiments/backup/benchmarks/src/base/chomp.c	/^  struct _list *first;$/;"	m	struct:_play	typeref:struct:_play::_list	file:
first	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *first;$/;"	m	class:HexxagonGame
first	experiments/benchmarks/src/base/chomp.c	/^  struct _list *first;$/;"	m	struct:_play	typeref:struct:_play::_list	file:
five	experiments/backup/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/backup/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
five	experiments/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
fix_operands	experiments/backup/benchmarks/src/aha/aha.c	/^fix_operands(int i)$/;"	f
fix_operands	experiments/benchmarks/src/aha/aha.c	/^fix_operands(int i)$/;"	f
fix_version	test/gtest/xcode/Scripts/versiongenerate.py	/^fix_version = version_values.group(3)$/;"	v
fixed	experiments/backup/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/backup/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
fixed	experiments/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
fixture_class_id_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;   \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo
fixture_class_id_	test/gtest/include/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;   \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo
fixture_constructor_count_	test/gtest/test/gtest-param-test_test.cc	/^  int fixture_constructor_count_;$/;"	m	class:TestGenerationEnvironment	file:
float	experiments/backup/benchmarks/src/base/realmm.c	4;"	d	file:
float	experiments/benchmarks/src/base/realmm.c	4;"	d	file:
floated	experiments/backup/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
floated	experiments/backup/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
floated	experiments/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
followMouse	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
foo	test/gtest/test/gtest-printers_test.cc	/^namespace foo {$/;"	n	file:
foo	test/gtest/test/gtest_output_test_.cc	/^namespace foo {$/;"	n	file:
foo	test/gtest/test/gtest_unittest.cc	/^  Foo foo;$/;"	m	class:__anon16::FRIEND_TEST_Test2	file:
fordiag	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int fordiag[MAXDIAGS];		\/* Which queen 'owns' forward diagonals *\/$/;"	v
fordiag	experiments/benchmarks/src/base/queens-mcgill.c	/^int fordiag[MAXDIAGS];		\/* Which queen 'owns' forward diagonals *\/$/;"	v
formatBranchInfo	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  formatBranchInfo(const GCOVOptions &Options, uint64_t Count,$/;"	f	struct:formatBranchInfo
formatBranchInfo	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^struct formatBranchInfo {$/;"	s	file:
forwarding_enabled	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater
forwarding_enabled	test/gtest/src/gtest.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater
forwarding_enabled_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	file:
forwarding_enabled_	test/gtest/src/gtest.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	file:
four	experiments/backup/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/backup/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
four	experiments/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
fourn	experiments/backup/benchmarks/src/base/ffbench.c	/^static void fourn(data, nn, ndim, isign)$/;"	f	file:
fourn	experiments/benchmarks/src/base/ffbench.c	/^static void fourn(data, nn, ndim, isign)$/;"	f	file:
fouroverpi	experiments/backup/benchmarks/src/base/fbench.c	/^	fouroverpi = 4.0 \/ pic,$/;"	v	file:
fouroverpi	experiments/benchmarks/src/base/fbench.c	/^	fouroverpi = 4.0 \/ pic,$/;"	v	file:
fpfftbase	experiments/backup/benchmarks/src/base/bubblesort.c	18;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/intmm.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/oscar.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/perm.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/queens.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/quicksort.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/realmm.c	21;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/towers.c	19;"	d	file:
fpfftbase	experiments/backup/benchmarks/src/base/treesort.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/bubblesort.c	18;"	d	file:
fpfftbase	experiments/benchmarks/src/base/intmm.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/oscar.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/perm.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/puzzle-stanford.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/queens.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/quicksort.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/realmm.c	21;"	d	file:
fpfftbase	experiments/benchmarks/src/base/towers.c	19;"	d	file:
fpfftbase	experiments/benchmarks/src/base/treesort.c	19;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/bubblesort.c	15;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/intmm.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/oscar.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/perm.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/queens.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/quicksort.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/realmm.c	18;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/towers.c	16;"	d	file:
fpmmbase	experiments/backup/benchmarks/src/base/treesort.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/bubblesort.c	15;"	d	file:
fpmmbase	experiments/benchmarks/src/base/intmm.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/oscar.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/perm.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/puzzle-stanford.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/queens.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/quicksort.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/realmm.c	18;"	d	file:
fpmmbase	experiments/benchmarks/src/base/towers.c	16;"	d	file:
fpmmbase	experiments/benchmarks/src/base/treesort.c	16;"	d	file:
fraction_bits	test/gtest/fused-src/gtest/gtest.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
fraction_bits	test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
freelist	experiments/backup/benchmarks/src/base/bubblesort.c	/^int freelist, movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/intmm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/oscar.c	/^int freelist, movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/perm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/queens.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/quicksort.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/realmm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/towers.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/backup/benchmarks/src/base/treesort.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/bubblesort.c	/^int freelist, movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/intmm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/oscar.c	/^int freelist, movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/perm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/puzzle-stanford.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/queens.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/quicksort.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/realmm.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/towers.c	/^int    freelist,  movesdone;$/;"	v
freelist	experiments/benchmarks/src/base/treesort.c	/^int    freelist,  movesdone;$/;"	v
freematrix	experiments/backup/benchmarks/src/base/matrix.c	/^void freematrix(int rows, int **m) {$/;"	f
freematrix	experiments/benchmarks/src/base/matrix.c	/^void freematrix(int rows, int **m) {$/;"	f
from	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	char from, to;$/;"	m	class:HexxagonMove
from	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	char from, to;$/;"	m	class:HexxagonMove
from_index	experiments/backup/benchmarks/src/base/fbench.c	/^static double from_index;$/;"	v	file:
from_index	experiments/benchmarks/src/base/fbench.c	/^static double from_index;$/;"	v	file:
full_pattern_	test/gtest/fused-src/gtest/gtest.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:std::tr1::RE
full_pattern_	test/gtest/include/gtest/internal/gtest-port.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:testing::internal::RE
full_regex_	test/gtest/fused-src/gtest/gtest.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:std::tr1::RE
full_regex_	test/gtest/include/gtest/internal/gtest-port.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:testing::internal::RE
fullname	include/Profiling/papi.h	/^      char fullname[PAPI_HUGE_STR_LEN];  \/* path+name *\/$/;"	m	struct:_papi_program_info
fun_name	experiments/backup/benchmarks/src/aha/aha.h	/^   char *fun_name;              \/\/ Function name, for printing.$/;"	m	struct:__anon59
fun_name	experiments/benchmarks/src/aha/aha.h	/^   char *fun_name;              \/\/ Function name, for printing.$/;"	m	struct:__anon46
func-members	docs/html/BBHashExtractorFromIR_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/GEOS_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/PAPI_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/RandomOnFunction_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/Random_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/Test_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/main_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/mergeDatabase_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/namespaceGEOS.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func_	test/gtest/fused-src/gtest/gtest.h	/^  const UserThreadFunc func_;  \/\/ User-supplied thread function.$/;"	m	class:std::tr1::ThreadWithParam
func_	test/gtest/include/gtest/internal/gtest-port.h	/^  const UserThreadFunc func_;  \/\/ User-supplied thread function.$/;"	m	class:testing::internal::ThreadWithParam
func_append	test/gtest/build-aux/ltmain.sh	/^func_append ()$/;"	f
func_append	test/gtest/configure	/^func_append ()\\$/;"	f
func_append_quoted	test/gtest/build-aux/ltmain.sh	/^func_append_quoted ()$/;"	f
func_append_quoted	test/gtest/configure	/^func_append_quoted ()\\$/;"	f
func_arith	test/gtest/build-aux/ltmain.sh	/^func_arith ()$/;"	f
func_arith	test/gtest/configure	/^func_arith ()\\$/;"	f
func_basename	test/gtest/build-aux/ltmain.sh	/^func_basename ()$/;"	f
func_basename	test/gtest/configure	/^func_basename ()\\$/;"	f
func_check_version_match	test/gtest/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	test/gtest/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	test/gtest/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	test/gtest/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	test/gtest/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	test/gtest/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	test/gtest/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	test/gtest/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	test/gtest/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	test/gtest/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	test/gtest/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	test/gtest/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	test/gtest/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	test/gtest/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	test/gtest/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	test/gtest/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	test/gtest/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	test/gtest/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	test/gtest/build-aux/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname	test/gtest/configure	/^func_dirname ()\\$/;"	f
func_dirname_and_basename	test/gtest/build-aux/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	test/gtest/configure	/^func_dirname_and_basename ()\\$/;"	f
func_echo	test/gtest/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	test/gtest/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	test/gtest/configure	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	test/gtest/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	test/gtest/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	test/gtest/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	test/gtest/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	test/gtest/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	test/gtest/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	test/gtest/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	test/gtest/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	test/gtest/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	test/gtest/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	test/gtest/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	test/gtest/configure	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	test/gtest/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	test/gtest/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	test/gtest/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	test/gtest/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	test/gtest/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	test/gtest/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_help	test/gtest/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	test/gtest/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	test/gtest/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	test/gtest/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	test/gtest/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	test/gtest/build-aux/ltmain.sh	/^func_len ()$/;"	f
func_len	test/gtest/configure	/^func_len ()\\$/;"	f
func_lo2o	test/gtest/build-aux/ltmain.sh	/^func_lo2o ()$/;"	f
func_lo2o	test/gtest/configure	/^func_lo2o ()\\$/;"	f
func_lt_dump_args	test/gtest/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	test/gtest/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	test/gtest/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	test/gtest/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	test/gtest/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	test/gtest/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	test/gtest/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	test/gtest/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	test/gtest/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	test/gtest/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	test/gtest/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	test/gtest/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	test/gtest/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	test/gtest/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	test/gtest/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	test/gtest/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	test/gtest/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	test/gtest/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	test/gtest/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	test/gtest/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	test/gtest/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	test/gtest/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	test/gtest/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	test/gtest/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	test/gtest/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	test/gtest/build-aux/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_long_opt	test/gtest/configure	/^func_split_long_opt ()\\$/;"	f
func_split_short_opt	test/gtest/build-aux/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_split_short_opt	test/gtest/configure	/^func_split_short_opt ()\\$/;"	f
func_stripname	test/gtest/build-aux/ltmain.sh	/^func_stripname ()$/;"	f
func_stripname	test/gtest/configure	/^func_stripname ()\\$/;"	f
func_stripname_cnf	test/gtest/configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	test/gtest/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	test/gtest/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	test/gtest/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	test/gtest/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	test/gtest/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_verbose	test/gtest/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_version	test/gtest/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_warning	test/gtest/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	test/gtest/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	test/gtest/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	test/gtest/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	test/gtest/build-aux/ltmain.sh	/^func_xform ()$/;"	f
func_xform	test/gtest/configure	/^func_xform ()\\$/;"	f
further_from_infinity	test/gtest/test/gtest_unittest.cc	/^    RawType further_from_infinity;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
further_from_negative_zero	test/gtest/test/gtest_unittest.cc	/^    RawType further_from_negative_zero;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
further_from_one	test/gtest/test/gtest_unittest.cc	/^    RawType further_from_one;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
fvecdump	experiments/backup/benchmarks/src/sgefa/driver.c	/^void fvecdump( vec, len, head )$/;"	f
fvecdump	experiments/benchmarks/src/sgefa/driver.c	/^void fvecdump( vec, len, head )$/;"	f
g10_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator10 g10_;$/;"	m	class:testing::internal::CartesianProductHolder10
g10_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T10> g10_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator10 g10_;$/;"	m	class:testing::internal::CartesianProductHolder10
g10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T10> g10_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder10
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder2
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder3
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder4
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder5
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder6
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder7
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder8
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder9
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g1_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder10
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder2
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder3
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder4
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder5
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder6
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder7
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder8
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder9
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder10
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder2
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder3
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder4
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder5
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder6
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder7
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder8
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder9
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g2_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder10
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder2
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder3
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder4
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder5
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder6
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder7
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder8
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder9
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder10
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder3
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder4
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder5
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder6
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder7
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder8
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder9
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g3_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder10
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder3
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder4
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder5
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder6
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder7
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder8
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder9
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder10
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder4
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder5
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder6
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder7
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder8
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder9
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g4_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder10
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder4
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder5
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder6
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder7
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder8
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder9
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder10
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder5
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder6
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder7
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder8
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder9
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g5_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder10
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder5
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder6
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder7
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder8
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder9
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder10
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder6
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder7
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder8
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder9
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g6_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder10
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder6
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder7
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder8
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder9
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder10
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder7
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder8
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder9
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g7_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder10
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder7
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder8
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder9
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder10
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder8
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder9
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g8_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder10
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder8
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder9
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g9_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder10
g9_	test/gtest/fused-src/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder9
g9_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g9_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder10
g9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder9
g9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g_argvs	test/gtest/fused-src/gtest/gtest-all.cc	/^::std::vector<testing::internal::string> g_argvs;$/;"	m	namespace:testing::internal	file:
g_argvs	test/gtest/src/gtest-port.cc	/^::std::vector<testing::internal::string> g_argvs;$/;"	m	namespace:testing::internal	file:
g_captured_stderr	test/gtest/fused-src/gtest/gtest-all.cc	/^static CapturedStream* g_captured_stderr = NULL;$/;"	m	namespace:testing::internal	file:
g_captured_stderr	test/gtest/src/gtest-port.cc	/^static CapturedStream* g_captured_stderr = NULL;$/;"	m	namespace:testing::internal	file:
g_captured_stdout	test/gtest/fused-src/gtest/gtest-all.cc	/^static CapturedStream* g_captured_stdout = NULL;$/;"	m	namespace:testing::internal	file:
g_captured_stdout	test/gtest/src/gtest-port.cc	/^static CapturedStream* g_captured_stdout = NULL;$/;"	m	namespace:testing::internal	file:
g_death_test_count	test/gtest/test/gtest_repeat_test.cc	/^int g_death_test_count = 0;$/;"	m	namespace:__anon33	file:
g_destroyed	test/gtest/test/gtest-port_test.cc	/^static std::vector<bool> g_destroyed;$/;"	m	namespace:testing::internal	file:
g_environment_set_up_count	test/gtest/test/gtest_repeat_test.cc	/^int g_environment_set_up_count = 0;$/;"	m	namespace:__anon33	file:
g_environment_tear_down_count	test/gtest/test/gtest_repeat_test.cc	/^int g_environment_tear_down_count = 0;$/;"	m	namespace:__anon33	file:
g_executable_path	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string g_executable_path;$/;"	m	namespace:testing::internal	file:
g_executable_path	test/gtest/src/gtest.cc	/^std::string g_executable_path;$/;"	m	namespace:testing::internal	file:
g_help_flag	test/gtest/fused-src/gtest/gtest-all.cc	/^bool g_help_flag = false;$/;"	m	namespace:testing::internal	file:
g_help_flag	test/gtest/src/gtest.cc	/^bool g_help_flag = false;$/;"	m	namespace:testing::internal	file:
g_in_fast_death_test_child	test/gtest/fused-src/gtest/gtest-all.cc	/^static bool g_in_fast_death_test_child = false;$/;"	m	namespace:testing::internal	file:
g_in_fast_death_test_child	test/gtest/src/gtest-death-test.cc	/^static bool g_in_fast_death_test_child = false;$/;"	m	namespace:testing::internal	file:
g_init_gtest_count	test/gtest/fused-src/gtest/gtest-all.cc	/^GTEST_API_ int g_init_gtest_count = 0;$/;"	m	namespace:testing::internal	file:
g_init_gtest_count	test/gtest/src/gtest.cc	/^GTEST_API_ int g_init_gtest_count = 0;$/;"	m	namespace:testing::internal	file:
g_injected_test_argvs	test/gtest/fused-src/gtest/gtest-all.cc	/^static const ::std::vector<testing::internal::string>* g_injected_test_argvs =$/;"	m	namespace:testing::internal	file:
g_injected_test_argvs	test/gtest/src/gtest-port.cc	/^static const ::std::vector<testing::internal::string>* g_injected_test_argvs =$/;"	m	namespace:testing::internal	file:
g_param_test_count	test/gtest/test/gtest_repeat_test.cc	/^int g_param_test_count = 0;$/;"	m	namespace:__anon33	file:
g_should_fail_count	test/gtest/test/gtest_repeat_test.cc	/^int g_should_fail_count = 0;$/;"	m	namespace:__anon33	file:
g_should_pass_count	test/gtest/test/gtest_repeat_test.cc	/^int g_should_pass_count = 0;$/;"	m	namespace:__anon33	file:
g_sum	test/gtest/test/gtest_unittest.cc	/^static int g_sum = 0;$/;"	m	namespace:__anon14	file:
game_tree	experiments/backup/benchmarks/src/base/chomp.c	/^} *game_tree;$/;"	v	typeref:struct:_play
game_tree	experiments/benchmarks/src/base/chomp.c	/^} *game_tree;$/;"	v	typeref:struct:_play
gen_poly	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static void gen_poly()$/;"	f	file:
gen_poly	experiments/benchmarks/src/base/reedsolomon.c	/^static void gen_poly()$/;"	f	file:
gen_random	experiments/backup/benchmarks/src/base/heapsort.c	/^gen_random(double max) {$/;"	f
gen_random	experiments/backup/benchmarks/src/base/random.c	/^inline double gen_random(double max) {$/;"	f
gen_random	experiments/benchmarks/src/base/heapsort.c	/^gen_random(double max) {$/;"	f
gen_random	experiments/benchmarks/src/base/random.c	/^inline double gen_random(double max) {$/;"	f
generateMoveList	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonMoveList *HexxagonBoard::generateMoveList()$/;"	f	class:HexxagonBoard
generateMoveList	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonMoveList *HexxagonBoard::generateMoveList()$/;"	f	class:HexxagonBoard
generate_gf	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static void generate_gf()$/;"	f	file:
generate_gf	experiments/benchmarks/src/base/reedsolomon.c	/^static void generate_gf()$/;"	f	file:
generate_test_data	experiments/backup/benchmarks/src/base/huffbench.c	/^byte * generate_test_data(size_t n)$/;"	f
generate_test_data	experiments/benchmarks/src/base/huffbench.c	/^byte * generate_test_data(size_t n)$/;"	f
get	test/gtest/fused-src/gtest/gtest.h	/^  T* get() const { return ptr_; }$/;"	f	struct:std::tr1::tuple_element
get	test/gtest/fused-src/gtest/gtest.h	/^  T* get() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
get	test/gtest/fused-src/gtest/gtest.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:std::tr1::ThreadLocal
get	test/gtest/fused-src/gtest/gtest.h	/^  const T& get() const { return value_; }$/;"	f	class:std::tr1::ThreadLocal
get	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  T* get() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
get	test/gtest/include/gtest/internal/gtest-port.h	/^  T* get() const { return ptr_; }$/;"	f	class:testing::internal::scoped_ptr
get	test/gtest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:testing::internal::ThreadLocal
get	test/gtest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return value_; }$/;"	f	class:testing::internal::ThreadLocal
getAnalysisFor	include/CostEstimator/CostEstimatorOptions.h	/^  std::vector<CostAnalysisKind> getAnalysisFor(CostEstimatorOptionsSet S) {$/;"	f	namespace:__anon4
getAnalysisUsage	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:MachineAST
getAnalysisUsage	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^void MachineFunctionAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MachineFunctionAnalysis
getAnalysisUsage	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^CostModelAnalysis::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:CostModelAnalysis
getAnalysisUsage	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:__anon3::CallCost	file:
getBBBoard	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 getBBBoard() {return board;};$/;"	f	class:HexxagonBoard
getBBBoard	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 getBBBoard() {return board;};$/;"	f	class:HexxagonBoard
getBBColor	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 getBBColor() {return color;};$/;"	f	class:HexxagonBoard
getBBColor	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	BitBoard64 getBBColor() {return color;};$/;"	f	class:HexxagonBoard
getBFP	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^int getBFP(int x, int y)$/;"	f
getBFP	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^int getBFP(int x, int y)$/;"	f
getBasicBlockFrequency	src/ProfileModule/ProfileModule.cpp	/^uint64_t ProfileModule::getBasicBlockFrequency(const BasicBlock &BB) const {$/;"	f	class:ProfileModule
getBestMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^HexxagonMove *HexxagonMoveList::getBestMove()$/;"	f	class:HexxagonMoveList
getBestMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^HexxagonMove *HexxagonMoveList::getBestMove()$/;"	f	class:HexxagonMoveList
getBit	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::getBit(int bit)$/;"	f	class:BitBoard64
getBit	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::getBit(int bit)$/;"	f	class:BitBoard64
getBoard	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	HexxagonBoard *getBoard() {return (HexxagonBoard*) curr; };$/;"	f	class:HexxagonGame
getBoard	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	HexxagonBoard *getBoard() {return (HexxagonBoard*) curr; };$/;"	f	class:HexxagonGame
getCallCost	src/ProfileModule/ProfileModule.cpp	/^double ProfileModule::getCallCost(const CallInst &I) const {$/;"	f	class:ProfileModule
getChecksum	include/Profiling/GCOV.h	/^  uint32_t getChecksum() const { return Checksum; }$/;"	f	class:llvm::GCOVFile
getCopy	src/ProfileModule/ProfileModule.cpp	/^ProfileModule* ProfileModule::getCopy() const {$/;"	f	class:ProfileModule
getCount	include/Profiling/GCOV.h	/^  uint64_t getCount() const { return Counter; }$/;"	f	class:llvm::GCOVBlock
getCoveragePath	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^std::string FileInfo::getCoveragePath(StringRef Filename,$/;"	f	class:FileInfo
getCursor	include/Profiling/GCOV.h	/^  uint64_t getCursor() const { return Cursor; }$/;"	f	class:llvm::GCOVBuffer
getEmpty	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^long long int getEmpty(int* Events, long long int *Values) { $/;"	f
getEncodedSize	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned getEncodedSize(MachineInstr &MI) { $/;"	f	struct:MachineAST
getEntryCount	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^uint64_t GCOVFunction::getEntryCount() const {$/;"	f	class:GCOVFunction
getExecutionFreqUsingPredecessors	src/ProfileModule/ProfileModule.cpp	/^ProfileModule::getExecutionFreqUsingPredecessors(BasicBlock *BB) {$/;"	f	class:ProfileModule
getExecutionFreqUsingSuccessors	src/ProfileModule/ProfileModule.cpp	/^ProfileModule::getExecutionFreqUsingSuccessors(BasicBlock *BB) {$/;"	f	class:ProfileModule
getExitCount	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^uint64_t GCOVFunction::getExitCount() const {$/;"	f	class:GCOVFunction
getFilename	include/Profiling/GCOV.h	/^  StringRef getFilename() const { return Filename; }$/;"	f	class:llvm::GCOVFunction
getFunctionCost	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  double getFunctionCost(Function &F) {$/;"	f	struct:MachineAST
getFunctionCost	src/CostEstimator/CostEstimator.cpp	/^CostEstimator::getFunctionCost(StringRef FuncName, const ProfileModule *Profile,$/;"	f	class:CostEstimator
getHexxagon	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::getHexxagon(int i)$/;"	f	class:HexxagonBoard
getHexxagon	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::getHexxagon(int i)$/;"	f	class:HexxagonBoard
getHexxagonIndex	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int getHexxagonIndex(int x, int y)$/;"	f
getHexxagonIndex	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int getHexxagonIndex(int x, int y)$/;"	f
getID	src/ProfileModule/ProfileModule.cpp	/^int ProfileModule::getID(const Instruction &I) {$/;"	f	class:ProfileModule
getInstructionCost	src/CostEstimator/CostAnalysis/Instruction/StaticCost/InstructionCostEstimator.cpp	/^InstructionCostEstimator::getInstructionCost(const llvm::Instruction &I) {$/;"	f	class:InstructionCostEstimator
getInstructionCost	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^unsigned CostModelAnalysis::getInstructionCost(const Instruction *I) const {$/;"	f	class:CostModelAnalysis
getLLVMModule	src/ProfileModule/ProfileModule.cpp	/^Module* ProfileModule::getLLVMModule() const {$/;"	f	class:ProfileModule
getLastLine	include/Profiling/GCOV.h	/^  uint32_t getLastLine() const { return Lines.back(); }$/;"	f	class:llvm::GCOVBlock
getLineStart	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  unsigned getLineStart(unsigned Addr) {$/;"	f	class:CacheSet	file:
getMove	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^HexxagonMove *HexxagonMoveList::getMove(int i)$/;"	f	class:HexxagonMoveList
getMove	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^HexxagonMove *HexxagonMoveList::getMove(int i)$/;"	f	class:HexxagonMoveList
getName	include/Profiling/GCOV.h	/^  StringRef getName() const { return Name; }$/;"	f	class:llvm::GCOVFunction
getNrMoves	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int HexxagonMoveList::getNrMoves()$/;"	f	class:HexxagonMoveList
getNrMoves	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int HexxagonMoveList::getNrMoves()$/;"	f	class:HexxagonMoveList
getNumBlocks	include/Profiling/GCOV.h	/^  size_t getNumBlocks() const { return Blocks.size(); }$/;"	f	class:llvm::GCOVFunction
getNumDstEdges	include/Profiling/GCOV.h	/^  size_t getNumDstEdges() const { return DstEdges.size(); }$/;"	f	class:llvm::GCOVBlock
getNumSrcEdges	include/Profiling/GCOV.h	/^  size_t getNumSrcEdges() const { return SrcEdges.size(); }$/;"	f	class:llvm::GCOVBlock
getOperandInfo	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static TargetTransformInfo::OperandValueKind getOperandInfo(Value *V) {$/;"	f	file:
getParent	include/Profiling/GCOV.h	/^  const GCOVFunction &getParent() const { return Parent; }$/;"	f	class:llvm::GCOVBlock
getPass	src/GEOS.cpp	/^Pass* GEOS::getPass(OptimizationKind OptChoosed) {$/;"	f	class:GEOS
getShuffleAndOtherOprd	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^getShuffleAndOtherOprd(BinaryOperator *B) {$/;"	f	file:
getTime	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int getTime()$/;"	f
getTime	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^int getTime()$/;"	f
getTurn	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	int getTurn() {return turn;};$/;"	f	class:HexxagonGame
getTurn	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	int getTurn() {return turn;};$/;"	f	class:HexxagonGame
getWeight	src/ProfileModule/ProfileModule.cpp	/^double getWeight(const Instruction &I) {$/;"	f
getXPos	docs/html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	docs/html/search/search.js	/^function getYPos(item)$/;"	f
get_good_move	experiments/backup/benchmarks/src/base/chomp.c	/^int *get_good_move(struct _list *list) \/* gets the first good move from a _list *\/$/;"	f
get_good_move	experiments/benchmarks/src/base/chomp.c	/^int *get_good_move(struct _list *list) \/* gets the first good move from a _list *\/$/;"	f
get_real_move	experiments/backup/benchmarks/src/base/chomp.c	/^void get_real_move(int *data1,int *data2,int *row,int *col) \/* returns row & col of the move *\/$/;"	f
get_real_move	experiments/benchmarks/src/base/chomp.c	/^void get_real_move(int *data1,int *data2,int *row,int *col) \/* returns row & col of the move *\/$/;"	f
get_results	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^void get_results() {$/;"	f
get_space	experiments/backup/benchmarks/src/sgefa/driver.c	/^int get_space( a, x, b, bt, ipvt )$/;"	f
get_space	experiments/benchmarks/src/sgefa/driver.c	/^int get_space( a, x, b, bt, ipvt )$/;"	f
get_time	experiments/backup/benchmarks/src/base/oourafft.c	/^double get_time(void)$/;"	f
get_time	experiments/benchmarks/src/base/oourafft.c	/^double get_time(void)$/;"	f
get_time_stamp	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^double get_time_stamp() {$/;"	f
get_value	experiments/backup/benchmarks/src/base/chomp.c	/^int get_value(int *data) \/* get the value (0 or 1) for a specific _data *\/$/;"	f
get_value	experiments/benchmarks/src/base/chomp.c	/^int get_value(int *data) \/* get the value (0 or 1) for a specific _data *\/$/;"	f
get_winning_move	experiments/backup/benchmarks/src/base/chomp.c	/^int *get_winning_move(struct _play *play) \/* just scans for the first good move *\/$/;"	f
get_winning_move	experiments/benchmarks/src/base/chomp.c	/^int *get_winning_move(struct _play *play) \/* just scans for the first good move *\/$/;"	f
getrusage	experiments/backup/benchmarks/src/base/flops.c	1111;"	d	file:
getrusage	experiments/backup/benchmarks/src/base/flops.c	740;"	d	file:
getrusage	experiments/benchmarks/src/base/flops.c	1111;"	d	file:
getrusage	experiments/benchmarks/src/base/flops.c	740;"	d	file:
gg	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
gg	experiments/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
global_count_	test/gtest/test/gtest-param-test_test.cc	/^  static int global_count_;$/;"	m	class:ParameterizedDerivedTest	file:
global_count_	test/gtest/test/gtest-param-test_test.cc	/^  static int global_count_;$/;"	m	class:SeparateInstanceTest	file:
global_count_	test/gtest/test/gtest-param-test_test.cc	/^int ParameterizedDerivedTest::global_count_ = 0;$/;"	m	class:ParameterizedDerivedTest	file:
global_count_	test/gtest/test/gtest-param-test_test.cc	/^int SeparateInstanceTest::global_count_ = 0;$/;"	m	class:SeparateInstanceTest	file:
global_integer	test/gtest/test/gtest_output_test_.cc	/^int global_integer = 0;$/;"	v
global_test_part_result_reporter_mutex_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl	file:
global_test_part_result_reporter_mutex_	test/gtest/src/gtest-internal-inl.h	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl
global_test_part_result_repoter_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
global_test_part_result_repoter_	test/gtest/src/gtest-internal-inl.h	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl
global_var	test/gtest/test/gtest_unittest.cc	/^static int global_var = 0;$/;"	m	namespace:__anon14	file:
grad	experiments/backup/benchmarks/src/base/perlin.c	/^static double grad(int hash, double x, double y, double z) {$/;"	f	file:
grad	experiments/benchmarks/src/base/perlin.c	/^static double grad(int hash, double x, double y, double z) {$/;"	f	file:
granularity	include/Profiling/papi.h	/^      PAPI_granularity_option_t granularity;$/;"	m	union:__anon7
granularity	include/Profiling/papi.h	/^      int granularity;$/;"	m	struct:_papi_granularity_option
gtest_flag_saver_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::GTestFlagSaver* const gtest_flag_saver_;$/;"	m	class:testing::Test::internal
gtest_flag_saver_	test/gtest/include/gtest/gtest.h	/^  const internal::GTestFlagSaver* const gtest_flag_saver_;$/;"	m	class:testing::Test::internal
gtest_internal	test/gtest/fused-src/gtest/gtest.h	/^namespace gtest_internal {$/;"	n	namespace:std::tr1
gtest_internal	test/gtest/include/gtest/internal/gtest-tuple.h	/^namespace gtest_internal {$/;"	n	namespace:std::tr1
gtest_printers_test	test/gtest/test/gtest-printers_test.cc	/^namespace gtest_printers_test {$/;"	n	namespace:testing	file:
gtest_trace_stack	test/gtest/fused-src/gtest/gtest-all.cc	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack	test/gtest/src/gtest-internal-inl.h	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack	test/gtest/src/gtest-internal-inl.h	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl	file:
gtest_trace_stack_	test/gtest/src/gtest-internal-inl.h	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl
h	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:function
handle_	test/gtest/fused-src/gtest/gtest-all.cc	/^  HANDLE handle_;$/;"	m	class:testing::internal::AutoHandle	file:
handle_	test/gtest/src/gtest-internal-inl.h	/^  HANDLE handle_;$/;"	m	class:testing::internal::AutoHandle
handler	include/Profiling/papi.h	/^      PAPI_debug_handler_t handler;$/;"	m	struct:_papi_debug_option
handlerfn	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *handlerfn(struct packet *pkt)$/;"	f
handlerfn	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *handlerfn(struct packet *pkt)$/;"	f
hasBasicBlockFrequency	src/ProfileModule/ProfileModule.cpp	/^bool ProfileModule::hasBasicBlockFrequency(const BasicBlock &BB) const {$/;"	f	class:ProfileModule
hasCallCost	src/ProfileModule/ProfileModule.cpp	/^bool ProfileModule::hasCallCost(const CallInst &I) const {$/;"	f	class:ProfileModule
hasID	src/ProfileModule/ProfileModule.cpp	/^bool ProfileModule::hasID(const Instruction &I) const {$/;"	f	class:ProfileModule
hasWeight	src/ProfileModule/ProfileModule.cpp	/^bool hasWeight(const Instruction &I) {$/;"	f
has_new_fatal_failure	test/gtest/fused-src/gtest/gtest.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper
has_new_fatal_failure	test/gtest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper
has_new_fatal_failure_	test/gtest/fused-src/gtest/gtest.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
has_new_fatal_failure_	test/gtest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
has_owner_	test/gtest/fused-src/gtest/gtest.h	/^  bool has_owner_;$/;"	m	class:std::tr1::MutexBase
has_owner_	test/gtest/include/gtest/internal/gtest-port.h	/^  bool has_owner_;$/;"	m	class:testing::internal::MutexBase
haveRange	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  int \/*boolean*\/ haveRange;            \/* = false; *\/$/;"	m	struct:__anon58
haveRange	experiments/benchmarks/src/SciMark2-C/Random.h	/^  int \/*boolean*\/ haveRange;            \/* = false; *\/$/;"	m	struct:__anon45
head_	test/gtest/samples/sample3-inl.h	/^  QueueNode<E>* head_;  \/\/ The first node of the queue.$/;"	m	class:Queue
heap_adjust	experiments/backup/benchmarks/src/base/huffbench.c	/^static void heap_adjust(size_t * freq, size_t * heap, int n, int k)$/;"	f	file:
heap_adjust	experiments/benchmarks/src/base/huffbench.c	/^static void heap_adjust(size_t * freq, size_t * heap, int n, int k)$/;"	f	file:
heapsort	experiments/backup/benchmarks/src/base/heapsort.c	/^heapsort(int n, double *ra) {$/;"	f
heapsort	experiments/backup/benchmarks/src/base/heapsort.c	9;"	d	file:
heapsort	experiments/benchmarks/src/base/heapsort.c	/^heapsort(int n, double *ra) {$/;"	f
heapsort	experiments/benchmarks/src/base/heapsort.c	9;"	d	file:
hexx_count	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^char hexx_count;$/;"	v
hexx_count	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^char hexx_count;$/;"	v
highbits	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	/^	uint32_t lowbits, highbits;$/;"	m	class:BitBoard64
highbits	experiments/benchmarks/src/.hexxagon/bitboard64.h	/^	uint32_t lowbits, highbits;$/;"	m	class:BitBoard64
history	test/gtest/test/gtest-linked_ptr_test.cc	/^Message* history = NULL;$/;"	m	namespace:__anon25	file:
holdcount	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^int     holdcount    =  0;$/;"	v
holdcount	experiments/benchmarks/src/base/richards_benchmark.c	/^int     holdcount    =  0;$/;"	v
holdself	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *holdself(void)$/;"	f
holdself	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *holdself(void)$/;"	f
host_name_	test/gtest/fused-src/gtest/gtest-all.cc	/^    const string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
host_name_	test/gtest/src/gtest-internal-inl.h	/^    const string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter
ht_count	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline int ht_count(struct ht_ht *ht) {$/;"	f
ht_count	experiments/benchmarks/src/base/simple_hash.h	/^inline int ht_count(struct ht_ht *ht) {$/;"	f
ht_create	experiments/backup/benchmarks/src/base/simple_hash.h	/^struct ht_ht *ht_create(int size) {$/;"	f
ht_create	experiments/benchmarks/src/base/simple_hash.h	/^struct ht_ht *ht_create(int size) {$/;"	f
ht_destroy	experiments/backup/benchmarks/src/base/simple_hash.h	/^void ht_destroy(struct ht_ht *ht) {$/;"	f
ht_destroy	experiments/benchmarks/src/base/simple_hash.h	/^void ht_destroy(struct ht_ht *ht) {$/;"	f
ht_find	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_find(struct ht_ht *ht, char *key) {$/;"	f
ht_find	experiments/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_find(struct ht_ht *ht, char *key) {$/;"	f
ht_find_new	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_find_new(struct ht_ht *ht, char *key) {$/;"	f
ht_find_new	experiments/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_find_new(struct ht_ht *ht, char *key) {$/;"	f
ht_first	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_first(struct ht_ht *ht) {$/;"	f
ht_first	experiments/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_first(struct ht_ht *ht) {$/;"	f
ht_hashcode	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline int ht_hashcode(struct ht_ht *ht, char *key) {$/;"	f
ht_hashcode	experiments/benchmarks/src/base/simple_hash.h	/^inline int ht_hashcode(struct ht_ht *ht, char *key) {$/;"	f
ht_ht	experiments/backup/benchmarks/src/base/simple_hash.h	/^struct ht_ht {$/;"	s
ht_ht	experiments/benchmarks/src/base/simple_hash.h	/^struct ht_ht {$/;"	s
ht_key	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline char *ht_key(struct ht_node *node) {$/;"	f
ht_key	experiments/benchmarks/src/base/simple_hash.h	/^inline char *ht_key(struct ht_node *node) {$/;"	f
ht_next	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_next(struct ht_ht *ht) {$/;"	f
ht_next	experiments/benchmarks/src/base/simple_hash.h	/^inline struct ht_node *ht_next(struct ht_ht *ht) {$/;"	f
ht_node	experiments/backup/benchmarks/src/base/simple_hash.h	/^struct ht_node {$/;"	s
ht_node	experiments/benchmarks/src/base/simple_hash.h	/^struct ht_node {$/;"	s
ht_node_create	experiments/backup/benchmarks/src/base/simple_hash.h	/^struct ht_node *ht_node_create(char *key) {$/;"	f
ht_node_create	experiments/benchmarks/src/base/simple_hash.h	/^struct ht_node *ht_node_create(char *key) {$/;"	f
ht_num_primes	experiments/backup/benchmarks/src/base/simple_hash.h	/^enum { ht_num_primes = 28 };$/;"	e	enum:__anon63
ht_num_primes	experiments/benchmarks/src/base/simple_hash.h	/^enum { ht_num_primes = 28 };$/;"	e	enum:__anon50
ht_prime_list	experiments/backup/benchmarks/src/base/simple_hash.h	/^static unsigned long ht_prime_list[ht_num_primes] = {$/;"	v
ht_prime_list	experiments/benchmarks/src/base/simple_hash.h	/^static unsigned long ht_prime_list[ht_num_primes] = {$/;"	v
ht_val	experiments/backup/benchmarks/src/base/simple_hash.h	/^inline int ht_val(struct ht_node *node) {$/;"	f
ht_val	experiments/benchmarks/src/base/simple_hash.h	/^inline int ht_val(struct ht_node *node) {$/;"	f
hw_info	include/Profiling/papi.h	/^      PAPI_hw_info_t *hw_info;$/;"	m	union:__anon7
i	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  int i;                                \/* originally = 4 *\/$/;"	m	struct:__anon58
i	experiments/benchmarks/src/SciMark2-C/Random.h	/^  int i;                                \/* originally = 4 *\/$/;"	m	struct:__anon45
id_	test/gtest/test/gtest_unittest.cc	/^  const char* const id_;$/;"	m	class:SequenceTestingListener	file:
idamax	experiments/backup/benchmarks/src/base/lpbench.c	/^int idamax(int n, double * dx, int dx_off, int incx)$/;"	f
idamax	experiments/benchmarks/src/base/lpbench.c	/^int idamax(int n, double * dx, int dx_off, int incx)$/;"	f
identifying_attribute	test/gtest/test/gtest_xml_test_utils.py	/^  identifying_attribute = {$/;"	v	class:GTestXMLTestCase
idlefn	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *idlefn(struct packet *pkt)$/;"	f
idlefn	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *idlefn(struct packet *pkt)$/;"	f
ima	experiments/backup/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/oscar.c	/^int ima[rowsize + 1][rowsize + 1], imb[rowsize + 1][rowsize + 1],$/;"	v
ima	experiments/backup/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/backup/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/oscar.c	/^int ima[rowsize + 1][rowsize + 1], imb[rowsize + 1][rowsize + 1],$/;"	v
ima	experiments/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
ima	experiments/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/oscar.c	/^int ima[rowsize + 1][rowsize + 1], imb[rowsize + 1][rowsize + 1],$/;"	v
imb	experiments/backup/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/backup/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/oscar.c	/^int ima[rowsize + 1][rowsize + 1], imb[rowsize + 1][rowsize + 1],$/;"	v
imb	experiments/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imb	experiments/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
impl	test/gtest/fused-src/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest
impl	test/gtest/fused-src/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest
impl	test/gtest/include/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest
impl	test/gtest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest
impl_	test/gtest/fused-src/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest
impl_	test/gtest/fused-src/gtest/gtest.h	/^  linked_ptr<const ParamGeneratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamGenerator
impl_	test/gtest/fused-src/gtest/gtest.h	/^  scoped_ptr<ParamIteratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamIterator
impl_	test/gtest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest
impl_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  linked_ptr<const ParamGeneratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamGenerator
impl_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  scoped_ptr<ParamIteratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamIterator
imr	experiments/backup/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/oscar.c	/^  imr[rowsize + 1][rowsize + 1];$/;"	v
imr	experiments/backup/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/backup/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/bubblesort.c	/^int ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/intmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/oscar.c	/^  imr[rowsize + 1][rowsize + 1];$/;"	v
imr	experiments/benchmarks/src/base/perm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/puzzle-stanford.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/queens.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/quicksort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/realmm.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/towers.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
imr	experiments/benchmarks/src/base/treesort.c	/^int   ima[rowsize+1][rowsize+1], imb[rowsize+1][rowsize+1], imr[rowsize+1][rowsize+1];$/;"	v
in_wanted	experiments/backup/benchmarks/src/base/chomp.c	/^int in_wanted(int *data) \/* checks if the current _data is in the wanted list *\/$/;"	f
in_wanted	experiments/benchmarks/src/base/chomp.c	/^int in_wanted(int *data) \/* checks if the current _data is in the wanted list *\/$/;"	f
increment	experiments/backup/benchmarks/src/aha/aha.c	/^increment(void)$/;"	f	file:
increment	experiments/benchmarks/src/aha/aha.c	/^increment(void)$/;"	f	file:
increment_death_test_count	test/gtest/fused-src/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult
increment_death_test_count	test/gtest/fused-src/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo
increment_death_test_count	test/gtest/include/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult
increment_death_test_count	test/gtest/include/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo
index	test/gtest/fused-src/gtest/gtest.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
index	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
index_	test/gtest/fused-src/gtest/gtest.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
index_	test/gtest/fused-src/gtest/gtest.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
index_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
index_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
index_	test/gtest/test/gtest-port_test.cc	/^  const int index_;$/;"	m	class:testing::internal::DestructorTracker	file:
index_of	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
index_of	experiments/benchmarks/src/base/reedsolomon.c	/^static int alpha_to [nn+1], index_of [nn+1], gg [nn-kk+1] ;$/;"	v	file:
index_var_	test/gtest/test/gtest_unittest.cc	/^  const char* index_var_;$/;"	m	class:__anon14::ShouldShardTest	file:
infinity	test/gtest/test/gtest_unittest.cc	/^    RawType infinity;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
info_arch	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
inherit	include/Profiling/papi.h	/^      int inherit;$/;"	m	struct:_papi_inherit_option
init	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void HexxagonBoard::init(void)$/;"	f	class:HexxagonBoard
init	experiments/backup/benchmarks/src/base/misr.c	/^void init(misr_type *present)$/;"	f
init	experiments/backup/benchmarks/src/base/perlin.c	/^static init() { $/;"	f	file:
init	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void HexxagonBoard::init(void)$/;"	f	class:HexxagonBoard
init	experiments/benchmarks/src/base/misr.c	/^void init(misr_type *present)$/;"	f
init	experiments/benchmarks/src/base/perlin.c	/^static init() { $/;"	f	file:
init	src/GEOS.cpp	/^void GEOS::init() {$/;"	f	class:GEOS
initCloneLookups	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void initCloneLookups()$/;"	f
initCloneLookups	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void initCloneLookups()$/;"	f
initJumpLookups	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void initJumpLookups()$/;"	f
initJumpLookups	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^void initJumpLookups()$/;"	f
initPapi	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      void initPapi(Module &M, int NumberOfBasicBlocks) {$/;"	f	struct:__anon3::CallCost	file:
init_NthToggle	experiments/backup/benchmarks/src/base/methcall.c	/^NthToggle *init_NthToggle(NthToggle *this, int max_count) {$/;"	f
init_NthToggle	experiments/backup/benchmarks/src/base/objinst.c	/^NthToggle *init_NthToggle(NthToggle *this, int max_count) {$/;"	f
init_NthToggle	experiments/benchmarks/src/base/methcall.c	/^NthToggle *init_NthToggle(NthToggle *this, int max_count) {$/;"	f
init_NthToggle	experiments/benchmarks/src/base/objinst.c	/^NthToggle *init_NthToggle(NthToggle *this, int max_count) {$/;"	f
init_PAPI	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^void init_PAPI(int Size) {$/;"	f
init_Toggle	experiments/backup/benchmarks/src/base/methcall.c	/^Toggle *init_Toggle(Toggle *this, char start_state) {$/;"	f
init_Toggle	experiments/backup/benchmarks/src/base/objinst.c	/^Toggle *init_Toggle(Toggle *this, char start_state) {$/;"	f
init_Toggle	experiments/benchmarks/src/base/methcall.c	/^Toggle *init_Toggle(Toggle *this, char start_state) {$/;"	f
init_Toggle	experiments/benchmarks/src/base/objinst.c	/^Toggle *init_Toggle(Toggle *this, char start_state) {$/;"	f
init_array	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void init_array (int m,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void init_array (int m, int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void init_array(int ni, int nj, int nk, int nl,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void init_array(int ni, int nj, int nk, int nl, int nm,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void init_array (int nx, int ny,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void init_array (int nx, int ny,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void init_array(int nr, int nq, int np,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void init_array(int ni, int nj, int nk,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void init_array(int ni,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void init_array(int length,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void init_array(int maxgrid,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void init_array (int nx,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void init_array (int cz,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void init_array(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void init_array (int m,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void init_array (int m, int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void init_array(int ni, int nj, int nk, int nl,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void init_array(int ni, int nj, int nk, int nl, int nm,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void init_array (int nx, int ny,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void init_array (int nx, int ny,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void init_array(int nr, int nq, int np,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void init_array(int ni, int nj, int nk,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void init_array(int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void init_array(int ni,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void init_array(int length,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void init_array(int ni, int nj,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void init_array(int maxgrid,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/adi/adi.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void init_array (int nx,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void init_array (int cz,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void init_array (int n,$/;"	f	file:
init_array	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void init_array(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
inited	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static inited = 0;$/;"	v	file:
inited	experiments/benchmarks/src/base/reedsolomon.c	/^static inited = 0;$/;"	v	file:
initialize	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^static void initialize(Random R, int seed) $/;"	f	file:
initialize	experiments/benchmarks/src/SciMark2-C/Random.c	/^static void initialize(Random R, int seed) $/;"	f	file:
initially_allocated_	test/gtest/samples/sample10_unittest.cc	/^  int initially_allocated_;$/;"	m	class:__anon35::LeakChecker	file:
inline	experiments/backup/benchmarks/src/base/lists.c	11;"	d	file:
inline	experiments/backup/benchmarks/src/base/random.c	10;"	d	file:
inline	experiments/backup/benchmarks/src/base/simple_hash.h	11;"	d
inline	experiments/benchmarks/src/base/lists.c	11;"	d	file:
inline	experiments/benchmarks/src/base/random.c	10;"	d	file:
inline	experiments/benchmarks/src/base/simple_hash.h	11;"	d
input_dir	test/gtest/xcode/Scripts/versiongenerate.py	/^  input_dir = sys.argv[1]$/;"	v
insert	include/CostEstimator/LRUCache.h	/^      typename list_t::iterator insert( const K &k, const V &v ) {$/;"	f	class:lru::cache
insert	include/CostEstimator/LRUCache.h	/^      typename list_t::iterator insert( const V &v ) {$/;"	f	class:lru::cache
instantiations_	test/gtest/fused-src/gtest/gtest.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
instantiations_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
instrumentCall	src/Profiling/CallCostAnalyzer/CallCostPass/CallCost.cpp	/^      bool instrumentCall(Instruction  &I, Module &M, int ID) {$/;"	f	struct:__anon3::CallCost	file:
int_log2	experiments/backup/benchmarks/src/SciMark2-C/FFT.c	/^static int int_log2 (int n)$/;"	f	file:
int_log2	experiments/benchmarks/src/SciMark2-C/FFT.c	/^static int int_log2 (int n)$/;"	f	file:
intentPollInterval	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
intentSensitivity	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
intercept_mode_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
intercept_mode_	test/gtest/include/gtest/gtest-spi.h	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter
internal	test/gtest/fused-src/gtest/gtest-all.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/fused-src/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest-death-test.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest-message.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest-printers.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest-spi.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest-test-part.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-filepath.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-param-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-port.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-string.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/include/gtest/internal/gtest-type-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/src/gtest-death-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest-filepath.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest-internal-inl.h	/^namespace internal {$/;"	n	namespace:testing
internal	test/gtest/src/gtest-port.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest-printers.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest-test-part.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest-typed-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/src/gtest.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-death-test_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-filepath_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-listener_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-options_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-port_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest-unittest-api_test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	test/gtest/test/gtest_unittest.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal2	test/gtest/fused-src/gtest/gtest-all.cc	/^namespace internal2 {$/;"	n	namespace:testing	file:
internal2	test/gtest/fused-src/gtest/gtest.h	/^namespace internal2 {$/;"	n	namespace:testing
internal2	test/gtest/include/gtest/gtest-printers.h	/^namespace internal2 {$/;"	n	namespace:testing
internal2	test/gtest/src/gtest-printers.cc	/^namespace internal2 {$/;"	n	namespace:testing	file:
internal_run_death_test_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
internal_run_death_test_	test/gtest/src/gtest-internal-inl.h	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver
internal_run_death_test_flag	test/gtest/fused-src/gtest/gtest-all.cc	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl
internal_run_death_test_flag	test/gtest/src/gtest-internal-inl.h	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl
internal_run_death_test_flag_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl	file:
internal_run_death_test_flag_	test/gtest/src/gtest-internal-inl.h	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl
internal_skip_environment_and_ad_hoc_tests	test/gtest/test/gtest_output_test_.cc	/^bool GTEST_FLAG(internal_skip_environment_and_ad_hoc_tests) = false;$/;"	v
intmmbase	experiments/backup/benchmarks/src/base/bubblesort.c	12;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/intmm.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/oscar.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/perm.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/queens.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/quicksort.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/realmm.c	15;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/towers.c	13;"	d	file:
intmmbase	experiments/backup/benchmarks/src/base/treesort.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/bubblesort.c	12;"	d	file:
intmmbase	experiments/benchmarks/src/base/intmm.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/oscar.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/perm.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/puzzle-stanford.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/queens.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/quicksort.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/realmm.c	15;"	d	file:
intmmbase	experiments/benchmarks/src/base/towers.c	13;"	d	file:
intmmbase	experiments/benchmarks/src/base/treesort.c	13;"	d	file:
ip	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/oscar.c	/^  float rp, ip;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/backup/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/oscar.c	/^  float rp, ip;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
ip	experiments/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
isAlternateVectorMask	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool isAlternateVectorMask(SmallVectorImpl<int> &Mask) {$/;"	f	file:
isCached	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  bool isCached(unsigned Addr) {$/;"	f	class:CacheSet
isCached	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  bool isCached(unsigned Addr) {$/;"	f	struct:AbstractCacheState
isClosing	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
isFixedTipOpen	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
isMoveValid	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::isMoveValid(HexxagonMove &move)$/;"	f	class:HexxagonBoard
isMoveValid	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	int isMoveValid(HexxagonMove &move){ return curr->isMoveValid(move);};$/;"	f	class:HexxagonGame
isMoveValid	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::isMoveValid(HexxagonMove &move)$/;"	f	class:HexxagonBoard
isMoveValid	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	int isMoveValid(HexxagonMove &move){ return curr->isMoveValid(move);};$/;"	f	class:HexxagonGame
isReverseVectorMask	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool isReverseVectorMask(SmallVectorImpl<int> &Mask) {$/;"	f	file:
isTipOpen	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
isUnmarked	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^bool isUnmarked(std::pair<Function*, Mark> Elem) {$/;"	f
is_destroyed_	test/gtest/test/gtest_unittest.cc	/^  bool* is_destroyed_;$/;"	m	class:TestListener	file:
is_disabled_	test/gtest/fused-src/gtest/gtest.h	/^  bool is_disabled_;                \/\/ True iff this test is disabled$/;"	m	class:testing::TestInfo
is_disabled_	test/gtest/include/gtest/gtest.h	/^  bool is_disabled_;                \/\/ True iff this test is disabled$/;"	m	class:testing::TestInfo
is_nan	test/gtest/fused-src/gtest/gtest.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint
is_nan	test/gtest/include/gtest/internal/gtest-internal.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint
is_pointer	test/gtest/fused-src/gtest/gtest.h	/^struct is_pointer : public false_type {};$/;"	s	namespace:std::tr1
is_pointer	test/gtest/fused-src/gtest/gtest.h	/^struct is_pointer<T*> : public true_type {};$/;"	s	namespace:std::tr1
is_pointer	test/gtest/include/gtest/internal/gtest-port.h	/^struct is_pointer : public false_type {};$/;"	s	namespace:testing::internal
is_pointer	test/gtest/include/gtest/internal/gtest-port.h	/^struct is_pointer<T*> : public true_type {};$/;"	s	namespace:testing::internal
is_prime_	test/gtest/samples/prime_tables.h	/^  bool* const is_prime_;$/;"	m	class:PreCalculatedPrimeTable
is_prime_size_	test/gtest/samples/prime_tables.h	/^  const int is_prime_size_;$/;"	m	class:PreCalculatedPrimeTable
is_reportable	test/gtest/fused-src/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo
is_reportable	test/gtest/include/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo
is_valid_	test/gtest/fused-src/gtest/gtest.h	/^  bool is_valid_;$/;"	m	class:std::tr1::RE
is_valid_	test/gtest/include/gtest/internal/gtest-port.h	/^  bool is_valid_;$/;"	m	class:testing::internal::RE
isa	experiments/backup/benchmarks/src/aha/aha.h	/^} isa[] = {$/;"	v	typeref:struct:__anon59
isa	experiments/benchmarks/src/aha/aha.h	/^} isa[] = {$/;"	v	typeref:struct:__anon46
isamax	experiments/backup/benchmarks/src/sgefa/blas.c	/^int isamax( n, sx, incx )$/;"	f
isamax	experiments/benchmarks/src/sgefa/blas.c	/^int isamax( n, sx, incx )$/;"	f
items	experiments/backup/benchmarks/src/base/simple_hash.h	/^    int items;$/;"	m	struct:ht_ht
items	experiments/benchmarks/src/base/simple_hash.h	/^    int items;$/;"	m	struct:ht_ht
iter_index	experiments/backup/benchmarks/src/base/simple_hash.h	/^    int iter_index;$/;"	m	struct:ht_ht
iter_index	experiments/benchmarks/src/base/simple_hash.h	/^    int iter_index;$/;"	m	struct:ht_ht
iter_next	experiments/backup/benchmarks/src/base/simple_hash.h	/^    struct ht_node *iter_next;$/;"	m	struct:ht_ht	typeref:struct:ht_ht::ht_node
iter_next	experiments/benchmarks/src/base/simple_hash.h	/^    struct ht_node *iter_next;$/;"	m	struct:ht_ht	typeref:struct:ht_ht::ht_node
iterator	test/gtest/fused-src/gtest/gtest.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray
iterator	test/gtest/fused-src/gtest/gtest.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator
iterator	test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray
iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator
iterator	test/gtest/test/gtest-printers_test.cc	/^struct iterator {$/;"	s	namespace:testing::gtest_printers_test	file:
iterator_	test/gtest/fused-src/gtest/gtest.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
iterator_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
itercount	experiments/backup/benchmarks/src/base/fbench.c	/^int itercount;			   \/* The iteration counter for the main loop$/;"	v
itercount	experiments/benchmarks/src/base/fbench.c	/^int itercount;			   \/* The iteration counter for the main loop$/;"	v
ivecdump	experiments/backup/benchmarks/src/sgefa/driver.c	/^void ivecdump( vec, len, head )$/;"	f
ivecdump	experiments/benchmarks/src/sgefa/driver.c	/^void ivecdump( vec, len, head )$/;"	f
j	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  int j;                                \/* originally =  16 *\/$/;"	m	struct:__anon58
j	experiments/benchmarks/src/SciMark2-C/Random.h	/^  int j;                                \/* originally =  16 *\/$/;"	m	struct:__anon45
jacobi	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^jacobi(int nn, Matrix* a,Matrix* b,Matrix* c,$/;"	f
jacobi	experiments/benchmarks/src/base/himenobmtxpa.c	/^jacobi(int nn, Matrix* a,Matrix* b,Matrix* c,$/;"	f
join_new	test/gtest/fused-src/gtest/gtest.h	/^  void join_new() {$/;"	f	class:testing::internal::linked_ptr_internal
join_new	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  void join_new() {$/;"	f	class:testing::internal::linked_ptr_internal
jump_lookups	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^BitBoard64 *jump_lookups = 0; $/;"	v
jump_lookups	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^BitBoard64 *jump_lookups = 0; $/;"	v
k.fn.powerTip	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	c
kAE1	test/gtest/test/gtest-printers_test.cc	/^  kAE1 = -1,$/;"	e	enum:AnonymousEnum	file:
kAE2	test/gtest/test/gtest-printers_test.cc	/^  kAE2 = 1$/;"	e	enum:AnonymousEnum	file:
kAlsoRunDisabledTestsFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";$/;"	m	namespace:testing::internal	file:
kAlsoRunDisabledTestsFlag	test/gtest/src/gtest-internal-inl.h	/^const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";$/;"	m	namespace:testing::internal
kAlternatePathSeparator	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kAlternatePathSeparator = '\/';$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparator	test/gtest/src/gtest-filepath.cc	/^const char kAlternatePathSeparator = '\/';$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparatorString	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparatorString	test/gtest/src/gtest-filepath.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	m	namespace:testing::internal	file:
kAsIs	test/gtest/fused-src/gtest/gtest-all.cc	/^  kAsIs,$/;"	e	enum:testing::internal::CharFormat	file:
kAsIs	test/gtest/src/gtest-printers.cc	/^  kAsIs,$/;"	e	enum:testing::internal::CharFormat	file:
kBiggestParsableMax	test/gtest/test/gtest-death-test_test.cc	/^const BiggestParsable kBiggestParsableMax = ULLONG_MAX;$/;"	v
kBiggestSignedParsableMax	test/gtest/test/gtest-death-test_test.cc	/^const BiggestSignedParsable kBiggestSignedParsableMax = LLONG_MAX;$/;"	v
kBitCount	test/gtest/fused-src/gtest/gtest.h	/^  static const size_t kBitCount = 8*sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint
kBitCount	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kBitCount = 8*sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint
kBreakOnFailureFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kBreakOnFailureFlag[] = "break_on_failure";$/;"	m	namespace:testing::internal	file:
kBreakOnFailureFlag	test/gtest/src/gtest-internal-inl.h	/^const char kBreakOnFailureFlag[] = "break_on_failure";$/;"	m	namespace:testing::internal
kCaseA	test/gtest/test/gtest_unittest.cc	/^  kCaseA = -1,$/;"	e	enum:__anon14::__anon15	file:
kCaseB	test/gtest/test/gtest_unittest.cc	/^  kCaseB = testing::internal::kMaxBiggestInt,$/;"	e	enum:__anon14::__anon15	file:
kCaseC	test/gtest/test/gtest_unittest.cc	/^  kCaseC = 42$/;"	e	enum:__anon14::__anon15	file:
kCatchExceptionsFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kCatchExceptionsFlag[] = "catch_exceptions";$/;"	m	namespace:testing::internal	file:
kCatchExceptionsFlag	test/gtest/src/gtest-internal-inl.h	/^const char kCatchExceptionsFlag[] = "catch_exceptions";$/;"	m	namespace:testing::internal
kColorEncodedHelpMessage	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	m	namespace:testing::internal	file:
kColorEncodedHelpMessage	test/gtest/src/gtest.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	m	namespace:testing::internal	file:
kColorFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kColorFlag[] = "color";$/;"	m	namespace:testing::internal	file:
kColorFlag	test/gtest/src/gtest-internal-inl.h	/^const char kColorFlag[] = "color";$/;"	m	namespace:testing::internal
kConvertibleToInteger	test/gtest/fused-src/gtest/gtest.h	/^  kConvertibleToInteger,  \/\/ a type implicitly convertible to BiggestInt$/;"	e	enum:testing::internal2::TypeKind
kConvertibleToInteger	test/gtest/include/gtest/gtest-printers.h	/^  kConvertibleToInteger,  \/\/ a type implicitly convertible to BiggestInt$/;"	e	enum:testing::internal2::TypeKind
kCopy	test/gtest/fused-src/gtest/gtest.h	/^  kCopy        \/\/ The NativeArray makes a copy of the native array and$/;"	e	enum:testing::internal::RelationToSource
kCopy	test/gtest/include/gtest/internal/gtest-internal.h	/^  kCopy        \/\/ The NativeArray makes a copy of the native array and$/;"	e	enum:testing::internal::RelationToSource
kCurrentDirectoryString	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	m	namespace:testing::internal	file:
kCurrentDirectoryString	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kCurrentDirectoryString	test/gtest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	m	namespace:testing::internal	file:
kCurrentDirectoryString	test/gtest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kDeathTestCaseFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest\/*";$/;"	m	namespace:testing	file:
kDeathTestCaseFilter	test/gtest/src/gtest.cc	/^static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest\/*";$/;"	m	namespace:testing	file:
kDeathTestInternalError	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDeathTestInternalError = 'I';$/;"	m	namespace:testing::internal	file:
kDeathTestInternalError	test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestInternalError = 'I';$/;"	m	namespace:testing::internal	file:
kDeathTestLived	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDeathTestLived = 'L';$/;"	m	namespace:testing::internal	file:
kDeathTestLived	test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestLived = 'L';$/;"	m	namespace:testing::internal	file:
kDeathTestReturned	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDeathTestReturned = 'R';$/;"	m	namespace:testing::internal	file:
kDeathTestReturned	test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestReturned = 'R';$/;"	m	namespace:testing::internal	file:
kDeathTestStyleFlag	test/gtest/fused-src/gtest/gtest.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	m	namespace:testing::internal
kDeathTestStyleFlag	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	m	namespace:testing::internal
kDeathTestThrew	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDeathTestThrew = 'T';$/;"	m	namespace:testing::internal	file:
kDeathTestThrew	test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestThrew = 'T';$/;"	m	namespace:testing::internal	file:
kDeathTestUseFork	test/gtest/fused-src/gtest/gtest.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	m	namespace:testing::internal
kDeathTestUseFork	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	m	namespace:testing::internal
kDefaultDeathTestStyle	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDefaultDeathTestStyle[] = "fast";$/;"	m	namespace:testing	file:
kDefaultDeathTestStyle	test/gtest/src/gtest-death-test.cc	/^static const char kDefaultDeathTestStyle[] = "fast";$/;"	m	namespace:testing	file:
kDefaultOutputFile	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDefaultOutputFile[] = "test_detail.xml";$/;"	m	namespace:testing	file:
kDefaultOutputFile	test/gtest/src/gtest.cc	/^static const char kDefaultOutputFile[] = "test_detail.xml";$/;"	m	namespace:testing	file:
kDisableTestFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	m	namespace:testing	file:
kDisableTestFilter	test/gtest/src/gtest.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	m	namespace:testing	file:
kE1	test/gtest/test/gtest_unittest.cc	/^  kE1 = 0,$/;"	e	enum:__anon14::NamedEnum	file:
kE2	test/gtest/test/gtest_unittest.cc	/^  kE2 = 1$/;"	e	enum:__anon14::NamedEnum	file:
kEWP1	test/gtest/test/gtest-printers_test.cc	/^  kEWP1 = -2,$/;"	e	enum:EnumWithoutPrinter	file:
kEWP2	test/gtest/test/gtest-printers_test.cc	/^  kEWP2 = 42$/;"	e	enum:EnumWithoutPrinter	file:
kEWPT1	test/gtest/test/gtest-printers_test.cc	/^  kEWPT1 = 1$/;"	e	enum:EnumWithPrintTo	file:
kEWS1	test/gtest/test/gtest-printers_test.cc	/^  kEWS1 = 10$/;"	e	enum:EnumWithStreaming	file:
kElidedFramesMarker	test/gtest/fused-src/gtest/gtest-all.cc	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetter	file:
kElidedFramesMarker	test/gtest/fused-src/gtest/gtest-all.cc	/^OsStackTraceGetter::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetter	file:
kElidedFramesMarker	test/gtest/src/gtest-internal-inl.h	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetter
kElidedFramesMarker	test/gtest/src/gtest.cc	/^OsStackTraceGetter::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetter	file:
kExponentBitCount	test/gtest/fused-src/gtest/gtest.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint
kExponentBitCount	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint
kExponentBitMask	test/gtest/fused-src/gtest/gtest.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint
kExponentBitMask	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint
kFatalFailure	test/gtest/fused-src/gtest/gtest.h	/^    kFatalFailure      \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFatalFailure	test/gtest/include/gtest/gtest-test-part.h	/^    kFatalFailure      \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFilterFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kFilterFlag[] = "filter";$/;"	m	namespace:testing::internal	file:
kFilterFlag	test/gtest/src/gtest-internal-inl.h	/^const char kFilterFlag[] = "filter";$/;"	m	namespace:testing::internal
kFractionBitCount	test/gtest/fused-src/gtest/gtest.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint
kFractionBitCount	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint
kFractionBitMask	test/gtest/fused-src/gtest/gtest.h	/^  static const Bits kFractionBitMask =$/;"	m	class:testing::internal::FloatingPoint
kFractionBitMask	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kFractionBitMask =$/;"	m	class:testing::internal::FloatingPoint
kGoldenString	test/gtest/test/gtest_output_test_.cc	/^static const char kGoldenString[] = "\\"Line\\0 1\\"\\nLine 2";$/;"	v	file:
kHelloString	test/gtest/samples/sample2_unittest.cc	/^const char kHelloString[] = "Hello, world!";$/;"	v
kHexEscape	test/gtest/fused-src/gtest/gtest-all.cc	/^  kHexEscape,$/;"	e	enum:testing::internal::CharFormat	file:
kHexEscape	test/gtest/src/gtest-printers.cc	/^  kHexEscape,$/;"	e	enum:testing::internal::CharFormat	file:
kInternalRunDeathTestFlag	test/gtest/fused-src/gtest/gtest.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	m	namespace:testing::internal
kInternalRunDeathTestFlag	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	m	namespace:testing::internal
kInvalidFileAttributes	test/gtest/fused-src/gtest/gtest-all.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	m	namespace:testing::internal	file:
kInvalidFileAttributes	test/gtest/src/gtest-filepath.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	m	namespace:testing::internal	file:
kListTestsFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kListTestsFlag[] = "list_tests";$/;"	m	namespace:testing::internal	file:
kListTestsFlag	test/gtest/src/gtest-internal-inl.h	/^const char kListTestsFlag[] = "list_tests";$/;"	m	namespace:testing::internal
kMaxBiggestInt	test/gtest/fused-src/gtest/gtest.h	/^const BiggestInt kMaxBiggestInt =$/;"	m	namespace:std::tr1
kMaxBiggestInt	test/gtest/include/gtest/internal/gtest-port.h	/^const BiggestInt kMaxBiggestInt =$/;"	m	namespace:testing::internal
kMaxCodePoint1	test/gtest/fused-src/gtest/gtest-all.cc	/^const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint1	test/gtest/src/gtest.cc	/^const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint2	test/gtest/fused-src/gtest/gtest-all.cc	/^const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint2	test/gtest/src/gtest.cc	/^const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint3	test/gtest/fused-src/gtest/gtest-all.cc	/^const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint3	test/gtest/src/gtest.cc	/^const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint4	test/gtest/fused-src/gtest/gtest-all.cc	/^const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint4	test/gtest/src/gtest.cc	/^const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxRandomSeed	test/gtest/fused-src/gtest/gtest-all.cc	/^const int kMaxRandomSeed = 99999;$/;"	m	namespace:testing::internal	file:
kMaxRandomSeed	test/gtest/src/gtest-internal-inl.h	/^const int kMaxRandomSeed = 99999;$/;"	m	namespace:testing::internal
kMaxRange	test/gtest/fused-src/gtest/gtest.h	/^  static const UInt32 kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random
kMaxRange	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const UInt32 kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random
kMaxStackTraceDepth	test/gtest/fused-src/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	m	namespace:testing
kMaxStackTraceDepth	test/gtest/include/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	m	namespace:testing
kMaxUlps	test/gtest/fused-src/gtest/gtest.h	/^  static const size_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint
kMaxUlps	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint
kMillisPerSec	test/gtest/test/gtest_unittest.cc	/^  static const TimeInMillis kMillisPerSec = 1000;$/;"	m	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
kMillisPerSec	test/gtest/test/gtest_unittest.cc	/^const TimeInMillis FormatEpochTimeInMillisAsIso8601Test::kMillisPerSec;$/;"	m	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
kNonFatalFailure	test/gtest/fused-src/gtest/gtest.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNonFatalFailure	test/gtest/include/gtest/gtest-test-part.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNull	test/gtest/test/gtest_unittest.cc	/^static const wchar_t* const kNull = NULL;$/;"	m	namespace:__anon14	file:
kNumberOfParamTests	test/gtest/test/gtest_repeat_test.cc	/^const int kNumberOfParamTests = 10;$/;"	m	namespace:__anon33	file:
kOtherType	test/gtest/fused-src/gtest/gtest.h	/^  kOtherType              \/\/ anything else$/;"	e	enum:testing::internal2::TypeKind
kOtherType	test/gtest/include/gtest/gtest-printers.h	/^  kOtherType              \/\/ anything else$/;"	e	enum:testing::internal2::TypeKind
kOutputFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kOutputFlag[] = "output";$/;"	m	namespace:testing::internal	file:
kOutputFlag	test/gtest/src/gtest-internal-inl.h	/^const char kOutputFlag[] = "output";$/;"	m	namespace:testing::internal
kPathSeparator	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kPathSeparator = '\\\\';$/;"	m	namespace:testing::internal	file:
kPathSeparator	test/gtest/src/gtest-filepath.cc	/^const char kPathSeparator = '\\\\';$/;"	m	namespace:testing::internal	file:
kPathSeparatorString	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kPathSeparatorString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kPathSeparatorString	test/gtest/src/gtest-filepath.cc	/^const char kPathSeparatorString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kPrintTimeFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kPrintTimeFlag[] = "print_time";$/;"	m	namespace:testing::internal	file:
kPrintTimeFlag	test/gtest/src/gtest-internal-inl.h	/^const char kPrintTimeFlag[] = "print_time";$/;"	m	namespace:testing::internal
kProtobuf	test/gtest/fused-src/gtest/gtest.h	/^  kProtobuf,              \/\/ a protobuf type$/;"	e	enum:testing::internal2::TypeKind
kProtobuf	test/gtest/include/gtest/gtest-printers.h	/^  kProtobuf,              \/\/ a protobuf type$/;"	e	enum:testing::internal2::TypeKind
kProtobufOneLinerMaxLength	test/gtest/fused-src/gtest/gtest.h	/^const size_t kProtobufOneLinerMaxLength = 50;$/;"	m	namespace:testing::internal2
kProtobufOneLinerMaxLength	test/gtest/include/gtest/gtest-printers.h	/^const size_t kProtobufOneLinerMaxLength = 50;$/;"	m	namespace:testing::internal2
kRandomSeedFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kRandomSeedFlag[] = "random_seed";$/;"	m	namespace:testing::internal	file:
kRandomSeedFlag	test/gtest/src/gtest-internal-inl.h	/^const char kRandomSeedFlag[] = "random_seed";$/;"	m	namespace:testing::internal
kReference	test/gtest/fused-src/gtest/gtest.h	/^  kReference,  \/\/ The NativeArray references the native array.$/;"	e	enum:testing::internal::RelationToSource
kReference	test/gtest/include/gtest/internal/gtest-internal.h	/^  kReference,  \/\/ The NativeArray references the native array.$/;"	e	enum:testing::internal::RelationToSource
kRepeatFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kRepeatFlag[] = "repeat";$/;"	m	namespace:testing::internal	file:
kRepeatFlag	test/gtest/src/gtest-internal-inl.h	/^const char kRepeatFlag[] = "repeat";$/;"	m	namespace:testing::internal
kReservedTestCaseAttributes	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestCaseAttributes	test/gtest/src/gtest.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuiteAttributes	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuiteAttributes	test/gtest/src/gtest.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuitesAttributes	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuitesAttributes	test/gtest/src/gtest.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	m	namespace:testing	file:
kShuffleFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kShuffleFlag[] = "shuffle";$/;"	m	namespace:testing::internal	file:
kShuffleFlag	test/gtest/src/gtest-internal-inl.h	/^const char kShuffleFlag[] = "shuffle";$/;"	m	namespace:testing::internal
kSignBitMask	test/gtest/fused-src/gtest/gtest.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint
kSignBitMask	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint
kSpecialEscape	test/gtest/fused-src/gtest/gtest-all.cc	/^  kSpecialEscape$/;"	e	enum:testing::internal::CharFormat	file:
kSpecialEscape	test/gtest/src/gtest-printers.cc	/^  kSpecialEscape$/;"	e	enum:testing::internal::CharFormat	file:
kStackTraceDepthFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kStackTraceDepthFlag[] = "stack_trace_depth";$/;"	m	namespace:testing::internal	file:
kStackTraceDepthFlag	test/gtest/src/gtest-internal-inl.h	/^const char kStackTraceDepthFlag[] = "stack_trace_depth";$/;"	m	namespace:testing::internal
kStackTraceMarker	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	m	namespace:testing::internal	file:
kStackTraceMarker	test/gtest/src/gtest.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	m	namespace:testing::internal	file:
kStdErrFileno	test/gtest/fused-src/gtest/gtest-all.cc	/^const int kStdErrFileno = 2;$/;"	m	namespace:testing::internal	file:
kStdErrFileno	test/gtest/src/gtest-port.cc	/^const int kStdErrFileno = 2;$/;"	m	namespace:testing::internal	file:
kStdOutFileno	test/gtest/fused-src/gtest/gtest-all.cc	/^const int kStdOutFileno = 1;$/;"	m	namespace:testing::internal	file:
kStdOutFileno	test/gtest/src/gtest-port.cc	/^const int kStdOutFileno = 1;$/;"	m	namespace:testing::internal	file:
kStreamResultToFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kStreamResultToFlag[] = "stream_result_to";$/;"	m	namespace:testing::internal	file:
kStreamResultToFlag	test/gtest/src/gtest-internal-inl.h	/^const char kStreamResultToFlag[] = "stream_result_to";$/;"	m	namespace:testing::internal
kSuccess	test/gtest/fused-src/gtest/gtest.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kSuccess	test/gtest/include/gtest/gtest-test-part.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kTestPrematureExitFileEnvVarShouldBeSet	test/gtest/test/gtest_premature_exit_test.cc	/^const bool kTestPrematureExitFileEnvVarShouldBeSet = false;$/;"	m	namespace:__anon29	file:
kTestShardIndex	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	m	namespace:testing	file:
kTestShardIndex	test/gtest/src/gtest.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	m	namespace:testing	file:
kTestShardStatusFile	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	m	namespace:testing	file:
kTestShardStatusFile	test/gtest/src/gtest.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	m	namespace:testing	file:
kTestTotalShards	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	m	namespace:testing	file:
kTestTotalShards	test/gtest/src/gtest.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	m	namespace:testing	file:
kTestTypeIdInGoogleTest	test/gtest/fused-src/gtest/gtest-all.cc	/^extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();$/;"	m	namespace:testing::internal	file:
kTestTypeIdInGoogleTest	test/gtest/src/gtest.cc	/^extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();$/;"	m	namespace:testing::internal	file:
kThreadCount	test/gtest/test/gtest_stress_test.cc	/^const int kThreadCount = 50;$/;"	m	namespace:testing::__anon23	file:
kThrowOnFailureFlag	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kThrowOnFailureFlag[] = "throw_on_failure";$/;"	m	namespace:testing::internal	file:
kThrowOnFailureFlag	test/gtest/src/gtest-internal-inl.h	/^const char kThrowOnFailureFlag[] = "throw_on_failure";$/;"	m	namespace:testing::internal
kTypeParamLabel	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	m	namespace:testing::internal	file:
kTypeParamLabel	test/gtest/src/gtest.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	m	namespace:testing::internal	file:
kTypedTestCases	test/gtest/test/gtest-unittest-api_test.cc	/^const int kTypedTestCases = 0;$/;"	m	namespace:testing::internal	file:
kTypedTestCases	test/gtest/test/gtest-unittest-api_test.cc	/^const int kTypedTestCases = 1;$/;"	m	namespace:testing::internal	file:
kTypedTests	test/gtest/test/gtest-unittest-api_test.cc	/^const int kTypedTests = 0;$/;"	m	namespace:testing::internal	file:
kTypedTests	test/gtest/test/gtest-unittest-api_test.cc	/^const int kTypedTests = 1;$/;"	m	namespace:testing::internal	file:
kUniversalFilter	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kUniversalFilter[] = "*";$/;"	m	namespace:testing	file:
kUniversalFilter	test/gtest/src/gtest.cc	/^static const char kUniversalFilter[] = "*";$/;"	m	namespace:testing	file:
kUnknownFile	test/gtest/fused-src/gtest/gtest-all.cc	/^const char kUnknownFile[] = "unknown file";$/;"	m	namespace:testing::internal	file:
kUnknownFile	test/gtest/src/gtest-port.cc	/^const char kUnknownFile[] = "unknown file";$/;"	m	namespace:testing::internal	file:
kValueParamLabel	test/gtest/fused-src/gtest/gtest-all.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	m	namespace:testing::internal	file:
kValueParamLabel	test/gtest/src/gtest.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	m	namespace:testing::internal	file:
kVectorSize	test/gtest/test/gtest_unittest.cc	/^  static const int kVectorSize = 20;$/;"	m	class:__anon14::VectorShuffleTest	file:
kVectorSize	test/gtest/test/gtest_unittest.cc	/^const int VectorShuffleTest::kVectorSize;$/;"	m	class:__anon14::VectorShuffleTest	file:
kernel_2mm	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void kernel_2mm(int ni, int nj, int nk, int nl,$/;"	f	file:
kernel_2mm	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void kernel_2mm(int ni, int nj, int nk, int nl,$/;"	f	file:
kernel_3mm	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void kernel_3mm(int ni, int nj, int nk, int nl, int nm,$/;"	f	file:
kernel_3mm	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void kernel_3mm(int ni, int nj, int nk, int nl, int nm,$/;"	f	file:
kernel_adi	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.c	/^void kernel_adi(int tsteps,$/;"	f	file:
kernel_adi	experiments/benchmarks/src/polybench/stencils/adi/adi.c	/^void kernel_adi(int tsteps,$/;"	f	file:
kernel_atax	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void kernel_atax(int nx, int ny,$/;"	f	file:
kernel_atax	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void kernel_atax(int nx, int ny,$/;"	f	file:
kernel_bicg	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void kernel_bicg(int nx, int ny,$/;"	f	file:
kernel_bicg	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void kernel_bicg(int nx, int ny,$/;"	f	file:
kernel_cholesky	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void kernel_cholesky(int n,$/;"	f	file:
kernel_cholesky	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void kernel_cholesky(int n,$/;"	f	file:
kernel_correlation	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void kernel_correlation(int m, int n,$/;"	f	file:
kernel_correlation	experiments/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void kernel_correlation(int m, int n,$/;"	f	file:
kernel_covariance	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void kernel_covariance(int m, int n,$/;"	f	file:
kernel_covariance	experiments/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void kernel_covariance(int m, int n,$/;"	f	file:
kernel_doitgen	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void kernel_doitgen(int nr, int nq, int np,$/;"	f	file:
kernel_doitgen	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void kernel_doitgen(int nr, int nq, int np,$/;"	f	file:
kernel_durbin	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void kernel_durbin(int n,$/;"	f	file:
kernel_durbin	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void kernel_durbin(int n,$/;"	f	file:
kernel_dynprog	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void kernel_dynprog(int tsteps, int length,$/;"	f	file:
kernel_dynprog	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void kernel_dynprog(int tsteps, int length,$/;"	f	file:
kernel_fdtd_2d	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void kernel_fdtd_2d(int tmax,$/;"	f	file:
kernel_fdtd_2d	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void kernel_fdtd_2d(int tmax,$/;"	f	file:
kernel_fdtd_apml	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void kernel_fdtd_apml(int cz,$/;"	f	file:
kernel_fdtd_apml	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void kernel_fdtd_apml(int cz,$/;"	f	file:
kernel_floyd_warshall	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void kernel_floyd_warshall(int n,$/;"	f	file:
kernel_floyd_warshall	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void kernel_floyd_warshall(int n,$/;"	f	file:
kernel_gemm	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void kernel_gemm(int ni, int nj, int nk,$/;"	f	file:
kernel_gemm	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void kernel_gemm(int ni, int nj, int nk,$/;"	f	file:
kernel_gemver	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void kernel_gemver(int n,$/;"	f	file:
kernel_gemver	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void kernel_gemver(int n,$/;"	f	file:
kernel_gesummv	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void kernel_gesummv(int n,$/;"	f	file:
kernel_gesummv	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void kernel_gesummv(int n,$/;"	f	file:
kernel_gramschmidt	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void kernel_gramschmidt(int ni, int nj,$/;"	f	file:
kernel_gramschmidt	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void kernel_gramschmidt(int ni, int nj,$/;"	f	file:
kernel_jacobi_1d_imper	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void kernel_jacobi_1d_imper(int tsteps,$/;"	f	file:
kernel_jacobi_1d_imper	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void kernel_jacobi_1d_imper(int tsteps,$/;"	f	file:
kernel_jacobi_2d_imper	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void kernel_jacobi_2d_imper(int tsteps,$/;"	f	file:
kernel_jacobi_2d_imper	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void kernel_jacobi_2d_imper(int tsteps,$/;"	f	file:
kernel_lu	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void kernel_lu(int n,$/;"	f	file:
kernel_lu	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void kernel_lu(int n,$/;"	f	file:
kernel_ludcmp	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void kernel_ludcmp(int n,$/;"	f	file:
kernel_ludcmp	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void kernel_ludcmp(int n,$/;"	f	file:
kernel_measureFFT	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureFFT(int N, double mintime, Random R)$/;"	f
kernel_measureFFT	experiments/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureFFT(int N, double mintime, Random R)$/;"	f
kernel_measureLU	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureLU(int N, double min_time, Random R)$/;"	f
kernel_measureLU	experiments/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureLU(int N, double min_time, Random R)$/;"	f
kernel_measureMonteCarlo	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureMonteCarlo(double min_time, Random R)$/;"	f
kernel_measureMonteCarlo	experiments/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureMonteCarlo(double min_time, Random R)$/;"	f
kernel_measureSOR	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureSOR(int N, double min_time, Random R)$/;"	f
kernel_measureSOR	experiments/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureSOR(int N, double min_time, Random R)$/;"	f
kernel_measureSparseMatMult	experiments/backup/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureSparseMatMult(int N, int nz, $/;"	f
kernel_measureSparseMatMult	experiments/benchmarks/src/SciMark2-C/kernel.c	/^    double kernel_measureSparseMatMult(int N, int nz, $/;"	f
kernel_mvt	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void kernel_mvt(int n,$/;"	f	file:
kernel_mvt	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void kernel_mvt(int n,$/;"	f	file:
kernel_reg_detect	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void kernel_reg_detect(int niter, int maxgrid, int length,$/;"	f	file:
kernel_reg_detect	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void kernel_reg_detect(int niter, int maxgrid, int length,$/;"	f	file:
kernel_seidel_2d	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void kernel_seidel_2d(int tsteps,$/;"	f	file:
kernel_seidel_2d	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void kernel_seidel_2d(int tsteps,$/;"	f	file:
kernel_symm	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void kernel_symm(int ni, int nj,$/;"	f	file:
kernel_symm	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void kernel_symm(int ni, int nj,$/;"	f	file:
kernel_syr2k	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void kernel_syr2k(int ni, int nj,$/;"	f	file:
kernel_syr2k	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void kernel_syr2k(int ni, int nj,$/;"	f	file:
kernel_syrk	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void kernel_syrk(int ni, int nj,$/;"	f	file:
kernel_syrk	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void kernel_syrk(int ni, int nj,$/;"	f	file:
kernel_template	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void kernel_template(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
kernel_template	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void kernel_template(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
kernel_trisolv	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void kernel_trisolv(int n,$/;"	f	file:
kernel_trisolv	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void kernel_trisolv(int n,$/;"	f	file:
kernel_trmm	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void kernel_trmm(int ni,$/;"	f	file:
kernel_trmm	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void kernel_trmm(int ni,$/;"	f	file:
key	experiments/backup/benchmarks/src/base/simple_hash.h	/^    char *key;$/;"	m	struct:ht_node
key	experiments/benchmarks/src/base/simple_hash.h	/^    char *key;$/;"	m	struct:ht_node
key	test/gtest/fused-src/gtest/gtest.h	/^  const char* key() const {$/;"	f	class:testing::TestProperty
key	test/gtest/include/gtest/gtest.h	/^  const char* key() const {$/;"	f	class:testing::TestProperty
key_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs	file:
key_	test/gtest/fused-src/gtest/gtest.h	/^  const pthread_key_t key_;$/;"	m	class:std::tr1::ThreadLocal
key_	test/gtest/fused-src/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty
key_	test/gtest/include/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty
key_	test/gtest/include/gtest/internal/gtest-port.h	/^  const pthread_key_t key_;$/;"	m	class:testing::internal::ThreadLocal
key_	test/gtest/src/gtest-internal-inl.h	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs
kill_list	experiments/backup/benchmarks/src/base/misr.c	/^void kill_list(misr_type *present)$/;"	f
kill_list	experiments/benchmarks/src/base/misr.c	/^void kill_list(misr_type *present)$/;"	f
kk	experiments/backup/benchmarks/src/base/reedsolomon.c	54;"	d	file:
kk	experiments/benchmarks/src/base/reedsolomon.c	54;"	d	file:
kount	experiments/backup/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/backup/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
kount	experiments/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
l00001	docs/html/AnalysisMethod_8h_source.html	/^<a href="AnalysisMethod_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===--- include\/AnalysisMethod.h - Basic Block Cost Estimator -*- C++ -*--===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBDescriptor_8cpp_source.html	/^<a href="BBDescriptor_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------------ BBDescriptor.cpp - Basic Block Hash -*- C++ -*-----------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBDescriptor_8h_source.html	/^<a href="BBDescriptor_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===---- include\/BBDescriptor.h - Basic Block Hash Manager  -*- C++ -*----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<a href="BBHashExtractorFromIR_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/== BBHashExtractorFromIR.cpp - Add PAPI instructions in each basic block  ==\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBHash_8cpp_source.html	/^<a href="BBHash_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------------ BBHash.cpp - Basic Block Hash -*- C++ -*-----------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBHash_8h_source.html	/^<a href="BBHash_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===---- include\/BBHash.h - Basic Block Hash Manager  -*- C++ -*----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/BBProf_8cpp_source.html	/^<a href="BBProf_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------ BBProf.cpp - Add PAPI instructions in each basic block  -------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/CostEstimator_8h_source.html	/^<a href="CostEstimator_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- include\/CostEstimator.h - llvm::Instruction Cost Estimator  -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/DatabaseManager_8cpp_source.html	/^<a href="DatabaseManager_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===---- DatabaseManager.cpp - Basic Block Database Manager -*- C++ -*----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/DatabaseManager_8h_source.html	/^<a href="DatabaseManager_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/=== include\/DatabaseManager.h - Basic Block Database Manager  -*- C++ -*-===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/FrequencyMethod_8cpp_source.html	/^<a href="FrequencyMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/ analyser\/AnalysisMethod\/FrequencyMethod.cpp - BB Cost Estimative -*- C++ -*-<\/span><\/div>$/;"	a
l00001	docs/html/GEOS_8cpp_source.html	/^<a href="GEOS_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- GEOS.cpp -  Guide to Exploration of Otimization&#39;s Set -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/GEOS_8h_source.html	/^<a href="GEOS_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/== include\/GEOS.h - Guide to Exploration of Otimization&#39;s Set  -*- C++ -*===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/HashMethod_8cpp_source.html	/^<a href="HashMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/== analyser\/AnalysisMethod\/HashMethod.cpp - BB Cost Estimative -*- C++ -*-==\/\/<\/span><\/div>$/;"	a
l00001	docs/html/HashWeighted_8cpp_source.html	/^<a href="HashWeighted_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/= analyser\/AnalysisMethod\/HashWeighted.cpp - BB Cost Estimative -*- C++ -*-=\/\/<\/span><\/div>$/;"	a
l00001	docs/html/InstructionCost_8cpp_source.html	/^<a href="InstructionCost_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/ analyser\/AnalysisMethod\/InstructionCost.cpp - BB Cost Estimative -*- C++ -*-<\/span><\/div>$/;"	a
l00001	docs/html/InstructionMethod_8cpp_source.html	/^<a href="InstructionMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/analyser\/AnalysisMethod\/InstructionMethod.cpp - BB Cost Estimative -*- C++ -*-<\/span><\/div>$/;"	a
l00001	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<a href="InstructionPlusHashMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/  analyser\/AnalysisMethod\/InstructionPlusHashMethod.cpp - BB Cost Estimative <\/span><\/div>$/;"	a
l00001	docs/html/PAPI_8cpp_source.html	/^<a href="PAPI_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------ PAPI.cpp - PAPI Functions for time mensurements -*- C -*-------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/ProfMethod_8cpp_source.html	/^<a href="ProfMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/== analyser\/AnalysisMethod\/ProfMethod.cpp - BB Cost Estimative -*- C++ -*-==\/\/<\/span><\/div>$/;"	a
l00001	docs/html/ProfileModule_8cpp_source.html	/^<a href="ProfileModule_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- ProfileModule.cpp -  The Profile Module -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/ProfileModule_8h_source.html	/^<a href="ProfileModule_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------- include\/ProfileModule.h - The Profile Module  -*- C++ -*------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/RandomMethod_8cpp_source.html	/^<a href="RandomMethod_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/  analyser\/AnalysisMethod\/RandomMethod.cpp - BB Cost Estimative -*- C++ -*- \/\/<\/span><\/div>$/;"	a
l00001	docs/html/RandomOnFunction_8cpp_source.html	/^<a href="RandomOnFunction_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- GEOS.cpp -  Guide to Exploration of Otimization&#39;s Set -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/Random_8cpp_source.html	/^<a href="Random_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- GEOS.cpp -  Guide to Exploration of Otimization&#39;s Set -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/Test_8cpp_source.html	/^<a href="Test_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===-- GEOS.cpp -  Guide to Exploration of Otimization&#39;s Set -*- C++ -*---===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<a href="include_2llvm_2Analysis_2BBDescriptor_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===---- include\/BBDescriptor.h - Basic Block Hash Manager  -*- C++ -*----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<a href="lib_2Transforms_2BBHash_2BBHash_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===- bb-prof.cpp - Add PAPI instructions in each basic block  -----------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<a href="lib_2Transforms_2BBProf_2BBProf_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===- bb-prof.cpp - Add PAPI instructions in each basic block  -----------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/main_8cpp_source.html	/^<a href="main_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===--------- analyser\/main.cpp - BB Cost Estimative -*- C++ -*- ---------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/mergeDatabase_8cpp_source.html	/^<a href="mergeDatabase_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===------ mergeDatabase.cpp - Basic Block Database Merger -*- C++ -*-----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<a href="projects_2llvm-project_2include_2BBDescriptor_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===---- include\/BBDescriptor.h - Basic Block Hash Manager  -*- C++ -*----===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<a href="projects_2llvm-project_2src_2passes_2BBHash_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===- bb-prof.cpp - Add PAPI instructions in each basic block  -----------===\/\/<\/span><\/div>$/;"	a
l00001	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<a href="projects_2llvm-project_2src_2passes_2BBProf_8cpp.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/\/===- bb-prof.cpp - Add PAPI instructions in each basic block  -----------===\/\/<\/span><\/div>$/;"	a
l00002	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/  -*- C++ -*-<\/span><\/div>$/;"	a
l00002	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00002	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00003	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00003	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00003	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment">\/\/                     The LLVM Compiler Infrastructure<\/span><\/div>$/;"	a
l00004	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/              The LLVM Time Cost Analyser Infrastructure<\/span><\/div>$/;"	a
l00004	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00004	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00005	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00005	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00005	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00005	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00005	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00005	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00005	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00005	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment">\/\/ This file is distributed under the University of Illinois Open Source<\/span><\/div>$/;"	a
l00006	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00006	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00006	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/  This file is distributed under the MIT License. See LICENSE.txt for details.<\/span><\/div>$/;"	a
l00006	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00006	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00006	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00006	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00006	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">\/\/ License. See LICENSE.TXT for details.<\/span><\/div>$/;"	a
l00007	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00007	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00007	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/              <\/span><\/div>$/;"	a
l00007	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00007	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00007	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00007	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00007	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00008	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00008	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00008	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00008	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00008	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00008	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00008	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00009	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00009	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00009	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00009	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00009	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00009	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00009	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00009	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00010	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of every method for analysis the <\/span><\/div>$/;"	a
l00010	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of a Basic Block Hash <\/span><\/div>$/;"	a
l00010	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of a Basic Block Hash representation. <\/span><\/div>$/;"	a
l00010	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00010	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of a Basic Block Hash <\/span><\/div>$/;"	a
l00010	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of a Basic Block Hash representation. <\/span><\/div>$/;"	a
l00010	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00010	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations and implementation of <\/span><\/div>$/;"	a
l00010	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of a basic block database. <\/span><\/div>$/;"	a
l00010	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of the Basic Block Database Manager.<\/span><\/div>$/;"	a
l00010	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the GEOS&#39;s main functions. Which<\/span><\/div>$/;"	a
l00010	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of GEOS main functions. <\/span><\/div>$/;"	a
l00010	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\file<\/span><\/div>$/;"	a
l00010	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of a set of functions used to<\/span><\/div>$/;"	a
l00010	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the Profile Module. Which<\/span><\/div>$/;"	a
l00010	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the Profile Module. Which<\/span><\/div>$/;"	a
l00010	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00010	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the GEOS&#39;s main functions. Which<\/span><\/div>$/;"	a
l00010	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the GEOS&#39;s main functions. Which<\/span><\/div>$/;"	a
l00010	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains implementation of the GEOS&#39;s main functions. Which<\/span><\/div>$/;"	a
l00010	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of a Basic Block Hash representation. <\/span><\/div>$/;"	a
l00010	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00010	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00010	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of the program cost <\/span><\/div>$/;"	a
l00010	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of a basic block database. <\/span><\/div>$/;"	a
l00010	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains declarations of a Basic Block Hash representation. <\/span><\/div>$/;"	a
l00010	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00010	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">\/\/ This file implements a Basic Block Pass that adds calls to PAPI functions at<\/span><\/div>$/;"	a
l00011	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ execution cost of a LLVM function.<\/span><\/div>$/;"	a
l00011	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ representation in memory. Which is responsable for creating, loading and <\/span><\/div>$/;"	a
l00011	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ Which is responsable for creating, loading and comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00011	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00011	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ representation in memory. Which is responsable for creating, loading and <\/span><\/div>$/;"	a
l00011	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ Which is responsable for creating, loading and comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00011	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00011	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ a LLVM llvm::Instruction Cost Estimator. From an LLVM instruction it gives a cost<\/span><\/div>$/;"	a
l00011	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ It&#39;s responsable for loading and saving BB&#39;s databases. Those<\/span><\/div>$/;"	a
l00011	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00011	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the frequency of execution of the basic block to give its <\/span><\/div>$/;"	a
l00011	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ are responsable for interfacing heuristics that want to explore, in a <\/span><\/div>$/;"	a
l00011	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ Which are responsable for interfacing with heuristics for otimization&#39;s set<\/span><\/div>$/;"	a
l00011	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by a weight given <\/span><\/div>$/;"	a
l00011	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by a weight given <\/span><\/div>$/;"	a
l00011	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by the sum of the<\/span><\/div>$/;"	a
l00011	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by the number of <\/span><\/div>$/;"	a
l00011	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ \\brief This file contains the implementation of an basic block cost <\/span><\/div>$/;"	a
l00011	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ mensure the execution time of blocks of codes. Calls for this functions can<\/span><\/div>$/;"	a
l00011	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It use information from program&#39;s profiling. Because of that the <\/span><\/div>$/;"	a
l00011	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ encapsulate a LLVMModule and also the profiling information of this module. <\/span><\/div>$/;"	a
l00011	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ encapsulate a LLVMModule and also the profiling information of this module. <\/span><\/div>$/;"	a
l00011	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by a random number. <\/span><\/div>$/;"	a
l00011	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ are responsable for interfacing heuristics that want to explore, in a <\/span><\/div>$/;"	a
l00011	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ are responsable for interfacing heuristics that want to explore, in a <\/span><\/div>$/;"	a
l00011	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ are responsable for interfacing heuristics that want to explore, in a <\/span><\/div>$/;"	a
l00011	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ Which is responsable for creating, loading and comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00011	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00011	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00011	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ analyser. It uses the the AnalysisMethods to calculate the cost of each<\/span><\/div>$/;"	a
l00011	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ It&#39;s responsable for merging databases. Those databases constains hashs <\/span><\/div>$/;"	a
l00011	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/\/ Which is responsable for creating, loading and comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00011	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00011	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">\/\/ each Basic Block. Those PAPI instructions measure the number of clocks used <\/span><\/div>$/;"	a
l00012	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00012	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00012	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ comparing BB&#39;s Hashs. <\/span><\/div>$/;"	a
l00012	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00012	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ based in its execution time. <\/span><\/div>$/;"	a
l00012	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ databases constains hashs that represents each basic block and also <\/span><\/div>$/;"	a
l00012	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00012	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ execution cost.<\/span><\/div>$/;"	a
l00012	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ fast way, the otmization&#39;s space set. <\/span><\/div>$/;"	a
l00012	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ exploration. <\/span><\/div>$/;"	a
l00012	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ by a database. This database is create by the execution of other programs <\/span><\/div>$/;"	a
l00012	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ by a database. This database is create by the execution of other programs <\/span><\/div>$/;"	a
l00012	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ weight of each instruction in the basic block. <\/span><\/div>$/;"	a
l00012	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ instruction in the basic block. <\/span><\/div>$/;"	a
l00012	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ analysis. It uses the execution frequency multiplied by the number of <\/span><\/div>$/;"	a
l00012	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ be inserted in a code two get information of its execution.<\/span><\/div>$/;"	a
l00012	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ programa must be executed before this analysis.<\/span><\/div>$/;"	a
l00012	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ fast way, the otmization&#39;s space set. <\/span><\/div>$/;"	a
l00012	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ fast way, the otmization&#39;s space set. <\/span><\/div>$/;"	a
l00012	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ fast way, the otmization&#39;s space set. <\/span><\/div>$/;"	a
l00012	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00012	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00012	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ function. <\/span><\/div>$/;"	a
l00012	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/ that represents each basic block and also their execution time.<\/span><\/div>$/;"	a
l00012	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00012	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00012	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment">\/\/ by the basic block and print this information in stdout. <\/span><\/div>$/;"	a
l00013	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00013	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/ their execution time.<\/span><\/div>$/;"	a
l00013	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div>$/;"	a
l00013	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/ and contains hashs and executions time for each basic block of this ones.<\/span><\/div>$/;"	a
l00013	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/ and contains hashs and executions time for each basic block of this ones. <\/span><\/div>$/;"	a
l00013	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/ instruction in the basic block plus the HashMethod weight. <\/span><\/div>$/;"	a
l00013	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00013	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00013	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00013	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00013	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00013	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">\/\/<\/span><\/div>$/;"	a
l00014	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00014	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="BBHash_8h.html">BBHash.h<\/a>&quot;<\/span><\/div>$/;"	a
l00014	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00014	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/\/ Furthermore, for each basic block will be done a search for an equivalent in <\/span><\/div>$/;"	a
l00014	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00014	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00014	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div>$/;"	a
l00014	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00014	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00015	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#ifndef ANALYSISMETHOD_H<\/span><\/div>$/;"	a
l00015	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00015	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00015	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00015	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00015	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment">\/\/\/ the database and this search is done using weights for diferents parts of <\/span><\/div>$/;"	a
l00015	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00015	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ProfileModule_8h.html">ProfileModule.h<\/a>&quot;<\/span><\/div>$/;"	a
l00015	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00015	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00015	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00015	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00015	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div>$/;"	a
l00016	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define ANALYSISMETHOD_H<\/span><\/div>$/;"	a
l00016	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="BBDescriptor_8h.html">BBDescriptor.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="BBHash_8h.html">BBHash.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="BBHash_8h.html">BBHash.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div>$/;"	a
l00016	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00016	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GEOS_8h.html">GEOS.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#ifndef GEOS_H<\/span><\/div>$/;"	a
l00016	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div>$/;"	a
l00016	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">\/\/\/ the hash. <\/span><\/div>$/;"	a
l00016	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div>$/;"	a
l00016	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a2cc8f2d83039de1aef6590f9782921ee">   16<\/a><\/span>&#160;<span class="preprocessor">#define STACK true<\/span><\/div>$/;"	a
l00016	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div>$/;"	a
l00016	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/GCOV.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;time.h&gt;<\/span> <\/div>$/;"	a
l00016	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GEOS_8h.html">GEOS.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GEOS_8h.html">GEOS.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GEOS_8h.html">GEOS.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html">llvm\/Analysis\/BBDescriptor.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="DatabaseManager_8h.html">DatabaseManager.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00016	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html">llvm\/Analysis\/BBDescriptor.h<\/a>&quot;<\/span><\/div>$/;"	a
l00016	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00017	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Instructions.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="DatabaseManager_8h.html">DatabaseManager.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00017	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">#define GEOS_H<\/span><\/div>$/;"	a
l00017	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">\/\/\/<\/span><\/div>$/;"	a
l00017	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="CostEstimator_8h.html">CostEstimator.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00017	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="CostEstimator_8h.html">CostEstimator.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Transforms\/Utils\/Cloning.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div>$/;"	a
l00017	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="CostEstimator_8h.html">CostEstimator.h<\/a>&quot;<\/span><\/div>$/;"	a
l00017	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div>$/;"	a
l00017	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00017	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="DatabaseManager_8h.html">DatabaseManager.h<\/a>&quot;<\/span><\/div>$/;"	a
l00018	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00018	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/ADT\/Statistic.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00018	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IntrinsicInst.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00018	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00018	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00018	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment"><\/span><span class="comment">\/\/===----------------------------------------------------------------------===\/\/<\/span><\/div>$/;"	a
l00018	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00018	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div>$/;"	a
l00018	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Instructions.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00018	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Bitcode\/ReaderWriter.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Bitcode\/ReaderWriter.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Bitcode\/ReaderWriter.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GEOS_8h.html">GEOS.h<\/a>&quot;<\/span><\/div>$/;"	a
l00018	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/CommandLine.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div>$/;"	a
l00018	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00018	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00019	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Function.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00019	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Value.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsible for loading and saving hashes databases. <\/span><\/div>$/;"	a
l00019	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Transforms\/Scalar.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00019	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00019	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00019	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00019	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;<\/span><\/div>$/;"	a
l00019	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div>$/;"	a
l00019	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IntrinsicInst.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;list&gt;<\/span><\/div>$/;"	a
l00019	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00019	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IRReader\/IRReader.h&quot;<\/span>   <\/div>$/;"	a
l00019	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IRReader\/IRReader.h&quot;<\/span>   <\/div>$/;"	a
l00019	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IRReader\/IRReader.h&quot;<\/span>   <\/div>$/;"	a
l00019	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00019	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div>$/;"	a
l00019	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00019	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00019	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IRReader\/IRReader.h&quot;<\/span>   <\/div>$/;"	a
l00020	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00020	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div>$/;"	a
l00020	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Module.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00020	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div>$/;"	a
l00020	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;llvm\/Support\/raw_ostream.h&gt;<\/span><\/div>$/;"	a
l00020	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">\/\/\/ It is a representation in memory of a hash database and has functions to <\/span><\/div>$/;"	a
l00020	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classFrequencyMethod.html#a3596e36d5837f5d20671089dfab07c73">FrequencyMethod::<\/a><\/div>$/;"	a
l00020	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="AnalysisMethod_8h.html">AnalysisMethod.h<\/a>&quot;<\/span><\/div>$/;"	a
l00020	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classInstructionMethod.html#a65b25c5582210ff6f9a6ce5f1f6838bc">InstructionMethod::<\/a><\/div>$/;"	a
l00020	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#if STACK<\/span><\/div>$/;"	a
l00020	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/Type.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00020	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/FileSystem.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/FileSystem.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/FileSystem.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div>$/;"	a
l00020	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div>$/;"	a
l00020	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div>$/;"	a
l00020	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00020	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/SourceMgr.h&quot;<\/span>       <\/div>$/;"	a
l00021	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div>$/;"	a
l00021	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00021	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/IRBuilder.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div>$/;"	a
l00021	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00021	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00021	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div>$/;"	a
l00021	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">\/\/\/ use and manipulate it.<\/span><\/div>$/;"	a
l00021	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classFrequencyMethod.html#a3596e36d5837f5d20671089dfab07c73">   21<\/a><\/span>&#160;<a class="code" href="classFrequencyMethod.html#a3596e36d5837f5d20671089dfab07c73">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00021	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;<\/span><\/div>$/;"	a
l00021	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/PassManager.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classHashMethod.html#acfc2b6704f2e409756a9891a2d0bff46">   21<\/a><\/span>&#160;<a class="code" href="classHashMethod.html#acfc2b6704f2e409756a9891a2d0bff46">HashMethod::HashMethod<\/a>(StringRef Filename) {<\/div>$/;"	a
l00021	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div>$/;"	a
l00021	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classInstructionCostMethod.html#a1f2097ab2874ee073714ceeb50045a30">InstructionCostMethod::<\/a><\/div>$/;"	a
l00021	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classInstructionMethod.html#a65b25c5582210ff6f9a6ce5f1f6838bc">   21<\/a><\/span>&#160;<a class="code" href="classInstructionMethod.html#a65b25c5582210ff6f9a6ce5f1f6838bc">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00021	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classInstructionPlusHashMethod.html#a09f57efa6a544d49e0ec90ae686a8ef8">   21<\/a><\/span>&#160;<a class="code" href="classInstructionPlusHashMethod.html#a09f57efa6a544d49e0ec90ae686a8ef8">InstructionPlusHashMethod::InstructionPlusHashMethod<\/a>(StringRef Filename) {<\/div>$/;"	a
l00021	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor"><\/span><span class="preprocessor">  #include &lt;stack&gt;<\/span><\/div>$/;"	a
l00021	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00021	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/IR\/CFG.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00021	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classRandomMethod.html#ac1c0379dcdd48bbeaf287e38838ad03d">RandomMethod::<\/a><\/div>$/;"	a
l00021	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/MemoryBuffer.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00021	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div>$/;"	a
l00021	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00021	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00021	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00021	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00022	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keywordtype">void<\/span> BBDescriptor::loadBB(BasicBlock &amp;BB) {<\/div>$/;"	a
l00022	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00022	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Pass.h&quot;<\/span><\/div>$/;"	a
l00022	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keywordtype">void<\/span> BBHash::loadBB(BasicBlock &amp;BB) {<\/div>$/;"	a
l00022	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00022	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;  <span class="keyword">class <\/span>CostEstimator {<\/div>$/;"	a
l00022	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00022	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html">   22<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classDatabaseManager.html">DatabaseManager<\/a> {<\/div>$/;"	a
l00022	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00022	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;  DBManager = <span class="keyword">new<\/span> <a class="code" href="classDatabaseManager.html">DatabaseManager<\/a>(Filename);<\/div>$/;"	a
l00022	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00022	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classInstructionCostMethod.html#a1f2097ab2874ee073714ceeb50045a30">   22<\/a><\/span>&#160;<a class="code" href="classInstructionCostMethod.html#a1f2097ab2874ee073714ceeb50045a30">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00022	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00022	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;  IM = <span class="keyword">new<\/span> <a class="code" href="classInstructionCostMethod.html">InstructionCostMethod<\/a>();<\/div>$/;"	a
l00022	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00022	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsable for encapsulating, copying, and mantaing <\/span><\/div>$/;"	a
l00022	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classRandomMethod.html#ac1c0379dcdd48bbeaf287e38838ad03d">   22<\/a><\/span>&#160;<a class="code" href="classRandomMethod.html#ac1c0379dcdd48bbeaf287e38838ad03d">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00022	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00022	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00022	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00022	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00022	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &lt;fstream&gt;<\/span><\/div>$/;"	a
l00022	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00022	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00022	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ProfileModule_8h.html">ProfileModule.h<\/a>&quot;<\/span><\/div>$/;"	a
l00023	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keywordtype">int<\/span> BBSize = BB.getInstList().size();<\/div>$/;"	a
l00023	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00023	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &quot;llvm\/Support\/raw_ostream.h&quot;<\/span><\/div>$/;"	a
l00023	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keywordtype">int<\/span> BBSize = BB.getInstList().size();<\/div>$/;"	a
l00023	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00023	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00023	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00023	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00023	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00023	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">   23<\/a><\/span>&#160;<span class="keyword">enum<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a> {<\/div>$/;"	a
l00023	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;}<\/div>$/;"	a
l00023	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00023	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  HM = <span class="keyword">new<\/span> <a class="code" href="classHashWeightedMethod.html">HashWeightedMethod<\/a>(Filename);<\/div>$/;"	a
l00023	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00023	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classProfMethod.html#a1ae622ee97d00f7cfc729157e19effbd">   23<\/a><\/span>&#160;<a class="code" href="classProfMethod.html#a1ae622ee97d00f7cfc729157e19effbd">ProfMethod::ProfMethod<\/a>(StringRef Filename) {<\/div>$/;"	a
l00023	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;stack&gt;<\/span><\/div>$/;"	a
l00023	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">\/\/\/ consistency of a LLVM Module and its profiling information.<\/span><\/div>$/;"	a
l00023	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00023	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;stack&gt;<\/span><\/div>$/;"	a
l00023	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;stack&gt;<\/span><\/div>$/;"	a
l00023	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;stack&gt;<\/span><\/div>$/;"	a
l00023	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00023	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00023	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00023	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00023	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div>$/;"	a
l00023	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00024	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00024	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00024	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> getInstructionCost(<span class="keyword">const<\/span> llvm::Instruction *<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>);<\/div>$/;"	a
l00024	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="comment">\/\/ For the next values read the paper:<\/span><\/div>$/;"	a
l00024	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="comment">    \/\/\/ \\brief The database itself. Each element has a key, a BBHash, that <\/span><\/div>$/;"	a
l00024	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;  <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : *Func) <\/div>$/;"	a
l00024	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adaca107cdd5179bc30b56f2f343b6ee1">   24<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adaca107cdd5179bc30b56f2f343b6ee1">ConstantPropagation<\/a>,<\/div>$/;"	a
l00024	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classHashWeightedMethod.html#af93c7d3bc87656111b93bfa1a022755c">   24<\/a><\/span>&#160;<a class="code" href="classHashWeightedMethod.html#af93c7d3bc87656111b93bfa1a022755c">HashWeightedMethod::HashWeightedMethod<\/a>(StringRef Filename) {<\/div>$/;"	a
l00024	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;  printf(<span class="stringliteral">&quot;%s \\n&quot;<\/span>, Func-&gt;getName().str().c_str());<\/div>$/;"	a
l00024	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;}<\/div>$/;"	a
l00024	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &quot;..\/include\/papi.h&quot;<\/span><\/div>$/;"	a
l00024	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;  ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt;&gt; FileBuffer =<\/div>$/;"	a
l00024	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classProfileModule.html">   24<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classProfileModule.html">ProfileModule<\/a> {<\/div>$/;"	a
l00024	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;limits&gt;<\/span><\/div>$/;"	a
l00024	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;limits&gt;<\/span><\/div>$/;"	a
l00024	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;limits&gt;<\/span><\/div>$/;"	a
l00024	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00024	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00024	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00024	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00024	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00024	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00024	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00024	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div>$/;"	a
l00025	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00025	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  set(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">Descriptor::NumberOfInstructions<\/a>, BBSize);<\/div>$/;"	a
l00025	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00025	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div>$/;"	a
l00025	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  setDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a50d8f4339c9e643bb1dc8f040f32dd27">DescriptorKind::NumberOfInstructions<\/a>, BBSize);<\/div>$/;"	a
l00025	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00025	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="BBProf_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   25<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;bb-prof&quot;<\/span><\/div>$/;"	a
l00025	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  };<\/div>$/;"	a
l00025	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="comment">\/\/    Locality-Sensitive Hashing for Finding Nearest Neighbors <\/span><\/div>$/;"	a
l00025	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="comment">    \/\/\/ represents a BasicBlock and a double value which represents the <\/span><\/div>$/;"	a
l00025	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;    PerformanceMensurment = Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB);<\/div>$/;"	a
l00025	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a>*<\/div>$/;"	a
l00025	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aa2596c509790d24bfc5127b1ee650824">   25<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aa2596c509790d24bfc5127b1ee650824">AlignmentFromAssumptions<\/a>,<\/div>$/;"	a
l00025	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classHashMethod.html#ae1e33b75ec5e86d4edf5f263b0c87f8a">HashMethod::<\/a><\/div>$/;"	a
l00025	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  DBManager = <span class="keyword">new<\/span> <a class="code" href="classDatabaseManager.html">DatabaseManager<\/a>(Filename);<\/div>$/;"	a
l00025	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00025	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00025	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div>$/;"	a
l00025	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div>$/;"	a
l00025	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;      MemoryBuffer::getFileOrSTDIN(Filename);<\/div>$/;"	a
l00025	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00025	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00025	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func)<\/div>$/;"	a
l00025	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div>$/;"	a
l00025	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div>$/;"	a
l00025	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;random&gt;<\/span><\/div>$/;"	a
l00025	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00025	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00025	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="lib_2Transforms_2BBProf_2BBProf_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   25<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;bb-prof&quot;<\/span><\/div>$/;"	a
l00025	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<a class="code" href="main_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>(<span class="stringliteral">&quot;llvm-file&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;LLVM file to do time analysis&quot;<\/span>), <\/div>$/;"	a
l00025	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div>$/;"	a
l00025	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00025	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00025	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2src_2passes_2BBProf_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   25<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;bb-prof&quot;<\/span><\/div>$/;"	a
l00026	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00026	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">\/\/\/ \\brief Represent each item in the basic block&#39;s hash<\/span><\/div>$/;"	a
l00026	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div>$/;"	a
l00026	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">\/\/\/ \\brief Represent each item in the basic block&#39;s hash<\/span><\/div>$/;"	a
l00026	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00026	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">\/\/    by Malcolm Slaney and Michael Casey; 2008.<\/span><\/div>$/;"	a
l00026	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">    \/\/\/ execution time of this BasicBlock.<\/span><\/div>$/;"	a
l00026	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">GEOS::getAnalyser<\/a>(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a> Method, StringRef <a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a> = <span class="stringliteral">&quot;&quot;<\/span>) {<\/div>$/;"	a
l00026	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8e290eb8008f933e36d572737c5dca9c">   26<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8e290eb8008f933e36d572737c5dca9c">SCCP<\/a>,<\/div>$/;"	a
l00026	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classHashMethod.html#ae1e33b75ec5e86d4edf5f263b0c87f8a">   26<\/a><\/span>&#160;<a class="code" href="classHashMethod.html#ae1e33b75ec5e86d4edf5f263b0c87f8a">estimateExecutionTime<\/a>(Function *Func, <\/div>$/;"	a
l00026	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;}<\/div>$/;"	a
l00026	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;    <span class="keyword">auto<\/span> BBCost = 0;<\/div>$/;"	a
l00026	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;    printf(<span class="stringliteral">&quot;\\t%s : %ld \\n&quot;<\/span>, BB.getName().str().c_str(), <\/div>$/;"	a
l00026	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classInstructionPlusHashMethod.html#abbac8b450ee415c8f03cfb99575b8c82">InstructionPlusHashMethod::<\/a><\/div>$/;"	a
l00026	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="comment">    \/\/\/ \\brief The LLVM Module.<\/span><\/div>$/;"	a
l00026	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;    PerformanceMensurment += <\/div>$/;"	a
l00026	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00026	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.ll&quot;<\/span>),<\/div>$/;"	a
l00026	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div>$/;"	a
l00026	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div>$/;"	a
l00026	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00027	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="comment">\/\/\/ \\brief An enumeration to represent each different type of time cost analysis<\/span><\/div>$/;"	a
l00027	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;i : BB) {<\/div>$/;"	a
l00027	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">   27<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">enum<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> {<\/div>$/;"	a
l00027	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;i : BB) {<\/div>$/;"	a
l00027	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">   27<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">enum<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> {<\/div>$/;"	a
l00027	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00027	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="CostEstimator_8h.html#a63eab158c3939d16044f28fedc267267">   27<\/a><\/span>&#160;  <span class="keyword">enum<\/span> <a class="code" href="CostEstimator_8h.html#a63eab158c3939d16044f28fedc267267">Cost<\/a> {<\/div>$/;"	a
l00027	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="comment"><\/span>    std::unordered_map&lt;BBHash, double&gt; DB;<\/div>$/;"	a
l00027	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00027	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser;<\/div>$/;"	a
l00027	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7f60f19030c179eaebed8b802771ca3e">   27<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7f60f19030c179eaebed8b802771ca3e">DeadInstElimination<\/a>,<\/div>$/;"	a
l00027	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;    std::unique_ptr&lt;GCOVFunction, <\/div>$/;"	a
l00027	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div>$/;"	a
l00027	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a> : BB) <\/div>$/;"	a
l00027	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB));<\/div>$/;"	a
l00027	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classInstructionPlusHashMethod.html#abbac8b450ee415c8f03cfb99575b8c82">   27<\/a><\/span>&#160;<a class="code" href="classInstructionPlusHashMethod.html#abbac8b450ee415c8f03cfb99575b8c82">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00027	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a078b6c12f1ac6819cecef90ab5870276">   27<\/a><\/span>&#160;<span class="preprocessor">#define TIME 200<\/span><\/div>$/;"	a
l00027	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  std::pair&lt;StringRef, StringRef&gt; LineAndTail =<\/div>$/;"	a
l00027	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">   27<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a> = 0;<\/div>$/;"	a
l00027	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="comment"><\/span>    llvm::Module *LLVMModule;<\/div>$/;"	a
l00027	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;      Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) * rand() % 10 + 1;<\/div>$/;"	a
l00027	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00027	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00027	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00027	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>std;<\/div>$/;"	a
l00027	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00027	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00027	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;    cl::Required);<\/div>$/;"	a
l00027	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div>$/;"	a
l00027	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>std;<\/div>$/;"	a
l00027	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00027	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00028	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">   28<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">enum<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a> {<\/div>$/;"	a
l00028	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">Descriptor::NumberOfInstructions<\/a>);<\/div>$/;"	a
l00028	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">   28<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">NumberOfInstructions<\/a> = 0,<\/div>$/;"	a
l00028	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00028	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a50d8f4339c9e643bb1dc8f040f32dd27">DescriptorKind::NumberOfInstructions<\/a>);<\/div>$/;"	a
l00028	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a50d8f4339c9e643bb1dc8f040f32dd27">   28<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a50d8f4339c9e643bb1dc8f040f32dd27">NumberOfInstructions<\/a> = 0,<\/div>$/;"	a
l00028	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;  <span class="keyword">struct <\/span>BBProf : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00028	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    High   = 4,<\/div>$/;"	a
l00028	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="comment">\/\/ w constant is related with the size of each bucket. Smaller values creates<\/span><\/div>$/;"	a
l00028	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    <span class="comment"><\/span><\/div>$/;"	a
l00028	docs/html/FrequencyMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;} <\/div>$/;"	a
l00028	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a24a8c391ec8500eb9a170798c21f2c2e">   28<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a24a8c391ec8500eb9a170798c21f2c2e">DeadCodeElimination<\/a>,<\/div>$/;"	a
l00028	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    std::default_delete&lt;GCOVFunction&gt; &gt; &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>) {<\/div>$/;"	a
l00028	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classHashWeightedMethod.html#a8001089ccb3cb34ec6a07825f1727102">HashWeightedMethod::<\/a><\/div>$/;"	a
l00028	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;      BBCost += CostEstimator::getInstructionCost(&amp;<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>);<\/div>$/;"	a
l00028	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    PerformanceMensurment += <\/div>$/;"	a
l00028	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;  <span class="keywordflow">return<\/span>    (IM-&gt;estimateExecutionTime(Func, Freq) + <\/div>$/;"	a
l00028	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00028	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;      (*FileBuffer)-&gt;getBuffer().split(<span class="charliteral">&#39;\\n&#39;<\/span>);<\/div>$/;"	a
l00028	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;ProfileModule::ProfileModule(Module* M, <\/div>$/;"	a
l00028	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00028	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00028	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;  <span class="keyword">struct <\/span>BBProf : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00028	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00028	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00028	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div>$/;"	a
l00028	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;  <span class="keyword">struct <\/span>BBProf : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00029	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">   29<\/a><\/span>&#160;  <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>, <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>, <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>, <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>, <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>, <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a><\/div>$/;"	a
l00029	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keywordflow">switch<\/span> (i.getOpcode()) {<\/div>$/;"	a
l00029	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">   29<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">GetElementPtr<\/a> = 1,<\/div>$/;"	a
l00029	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div>$/;"	a
l00029	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keywordflow">switch<\/span> (i.getOpcode()) {<\/div>$/;"	a
l00029	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2d34789e0cc198cc21088e69c2c641f0">   29<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2d34789e0cc198cc21088e69c2c641f0">GetElementPtr<\/a> = 1,<\/div>$/;"	a
l00029	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00029	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    Medium = 1,<\/div>$/;"	a
l00029	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment">\/\/ buckets with less Hashes, but also decrease the precision.<\/span><\/div>$/;"	a
l00029	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment">    \/\/\/ \\brief Buckets for nearest hashes. Each BBHash readed is applied to a<\/span><\/div>$/;"	a
l00029	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;  <span class="keywordflow">switch<\/span> (Method) {<\/div>$/;"	a
l00029	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a131ca383118296cb4c269d8345f13392">   29<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a131ca383118296cb4c269d8345f13392">DeadStoreElimination<\/a>,<\/div>$/;"	a
l00029	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;  <\/div>$/;"	a
l00029	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classHashWeightedMethod.html#a8001089ccb3cb34ec6a07825f1727102">   29<\/a><\/span>&#160;<a class="code" href="classHashWeightedMethod.html#a8001089ccb3cb34ec6a07825f1727102">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00029	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    PerformanceMensurment += Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) * BBCost * 1.2;<\/div>$/;"	a
l00029	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;      Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) * BB.getInstList().size() * 0.8;<\/div>$/;"	a
l00029	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;             HM-&gt;estimateExecutionTime(Func, Freq)) \/ 2;<\/div>$/;"	a
l00029	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">   29<\/a><\/span>&#160;<span class="keywordtype">int<\/span>     <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>;<\/div>$/;"	a
l00029	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;  <\/div>$/;"	a
l00029	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    std::list&lt;MemoryBuffer*&gt; GCDA, <\/div>$/;"	a
l00029	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment">    \/\/\/ \\brief This function loads from files (GCDA and GCNO) the GCOV profiling<\/span><\/div>$/;"	a
l00029	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00029	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00029	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00029	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00029	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00029	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="lib_2Transforms_2BBHash_2BBHash_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   29<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;bb-hash&quot;<\/span><\/div>$/;"	a
l00029	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00029	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<a class="code" href="main_8cpp.html#a176f4c81087bd5ba2953134ff727f117">llAlias<\/a>(<span class="stringliteral">&quot;ll&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -llvm-file&quot;<\/span>), cl::aliasopt(<a class="code" href="main_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>));<\/div>$/;"	a
l00029	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="keyword">using namespace <\/span>llvm;<\/div>$/;"	a
l00029	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00029	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2src_2passes_2BBHash_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   29<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;bb-hash&quot;<\/span><\/div>$/;"	a
l00029	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00030	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;};<\/div>$/;"	a
l00030	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">Instruction::GetElementPtr<\/a>:<\/div>$/;"	a
l00030	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">   30<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">Ret<\/a>  = 2,<\/div>$/;"	a
l00030	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="BBHashExtractorFromIR_8cpp.html#ad78e062f62e0d6e453941fb4ca843e4d">   30<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG_TYPE &quot;extract-bb-hash&quot;<\/span><\/div>$/;"	a
l00030	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2d34789e0cc198cc21088e69c2c641f0">Instruction::GetElementPtr<\/a>:<\/div>$/;"	a
l00030	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a25d7142d3b1514bc4f4b4ac596862449">   30<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a25d7142d3b1514bc4f4b4ac596862449">Ret<\/a>  = 2,<\/div>$/;"	a
l00030	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;      <span class="keywordtype">void<\/span> addAttributes(Function* F) {<\/div>$/;"	a
l00030	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    Low    = 1,<\/div>$/;"	a
l00030	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="DatabaseManager_8cpp.html#ae2d717de66eb9765dbeb4f152f4812ca">   30<\/a><\/span>&#160;constexpr <span class="keywordtype">int<\/span> <a class="code" href="DatabaseManager_8cpp.html#ae2d717de66eb9765dbeb4f152f4812ca">w<\/a> = 5;<\/div>$/;"	a
l00030	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">    \/\/\/ locality-sensitive hash that returns the same int for near points. So <\/span><\/div>$/;"	a
l00030	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a>:<\/div>$/;"	a
l00030	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a28a8ba97dd8730b3b3243562d2173819">   30<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a28a8ba97dd8730b3b3243562d2173819">AggressiveDCE<\/a>,<\/div>$/;"	a
l00030	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00030	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00030	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  } <\/div>$/;"	a
l00030	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  } <\/div>$/;"	a
l00030	docs/html/InstructionPlusHashMethod_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;} <\/div>$/;"	a
l00030	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">   30<\/a><\/span>&#160;<span class="keywordtype">int<\/span>    *<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>;<\/div>$/;"	a
l00030	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  <span class="keywordflow">while<\/span> (!LineAndTail.first.empty()) {<\/div>$/;"	a
l00030	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    std::list&lt;MemoryBuffer*&gt; GCNO) {<\/div>$/;"	a
l00030	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">    \/\/\/ information.<\/span><\/div>$/;"	a
l00030	docs/html/RandomMethod_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;} <\/div>$/;"	a
l00030	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>(<span class="stringliteral">&quot;llvm-file&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;LLVM file to do time analysis&quot;<\/span>), <\/div>$/;"	a
l00030	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<a class="code" href="Random_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>(<span class="stringliteral">&quot;llvm-file&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;LLVM file to do time analysis&quot;<\/span>), <\/div>$/;"	a
l00030	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<a class="code" href="Test_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>(<span class="stringliteral">&quot;llvm-file&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;LLVM file to do time analysis&quot;<\/span>), <\/div>$/;"	a
l00030	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/\/ \\brief Represent each item in the basic block&#39;s hash<\/span><\/div>$/;"	a
l00030	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00030	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;      <span class="keywordtype">void<\/span> addAttributes(Function* F) {<\/div>$/;"	a
l00030	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div>$/;"	a
l00030	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div>$/;"	a
l00030	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">\/\/\/ \\brief Represent each item in the basic block&#39;s hash<\/span><\/div>$/;"	a
l00030	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00030	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;      <span class="keywordtype">void<\/span> addAttributes(Function* F) {<\/div>$/;"	a
l00031	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00031	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">Descriptor::GetElementPtr<\/a>);<\/div>$/;"	a
l00031	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">   31<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">Phi<\/a>  = 3,<\/div>$/;"	a
l00031	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00031	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2d34789e0cc198cc21088e69c2c641f0">DescriptorKind::GetElementPtr<\/a>);<\/div>$/;"	a
l00031	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2080ec0fb32affa9961922fadd7ad95e">   31<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2080ec0fb32affa9961922fadd7ad95e">Phi<\/a>  = 3,<\/div>$/;"	a
l00031	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;        <span class="comment">\/\/ { &quot;less-precise-fpmad&quot;=&quot;false&quot; &quot;no-frame-pointer-elim&quot;=&quot;true&quot; <\/span><\/div>$/;"	a
l00031	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    None   = 0<\/div>$/;"	a
l00031	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment">    \/\/\/ when looking for a nearest hash it just need to look into the specified<\/span><\/div>$/;"	a
l00031	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;      <span class="keywordflow">if<\/span> (!<a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.empty())<\/div>$/;"	a
l00031	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7ac50c7e2967e030c454d08d95e890d8">   31<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7ac50c7e2967e030c454d08d95e890d8">SROA<\/a>,<\/div>$/;"	a
l00031	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;  <span class="keyword">auto<\/span> MBB = <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>-&gt;block_begin(); <\/div>$/;"	a
l00031	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">   31<\/a><\/span>&#160;<span class="keywordtype">double<\/span> *<a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>;<\/div>$/;"	a
l00031	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    <span class="keywordtype">int<\/span>    Id;<\/div>$/;"	a
l00031	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div>$/;"	a
l00031	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment"><\/span>    std::vector&lt;llvm::GCOVFunction*&gt;<\/div>$/;"	a
l00031	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.ll&quot;<\/span>),<\/div>$/;"	a
l00031	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.ll&quot;<\/span>),<\/div>$/;"	a
l00031	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.ll&quot;<\/span>),<\/div>$/;"	a
l00031	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">   31<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">enum<\/span> <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> {<\/div>$/;"	a
l00031	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00031	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;        <span class="comment">\/\/ { &quot;less-precise-fpmad&quot;=&quot;false&quot; &quot;no-frame-pointer-elim&quot;=&quot;true&quot; <\/span><\/div>$/;"	a
l00031	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00031	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00031	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">   31<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">enum<\/span> <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> {<\/div>$/;"	a
l00031	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00031	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;        <span class="comment">\/\/ { &quot;less-precise-fpmad&quot;=&quot;false&quot; &quot;no-frame-pointer-elim&quot;=&quot;true&quot; <\/span><\/div>$/;"	a
l00032	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="comment">\/\/\/ \\brief Every execution time cost analysis must inherit from this class<\/span><\/div>$/;"	a
l00032	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00032	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">   32<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">Br<\/a>   = 4,<\/div>$/;"	a
l00032	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="keyword">namespace <\/span>{<\/div>$/;"	a
l00032	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00032	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a8e6496e168fba215d2885ec336e48475">   32<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a8e6496e168fba215d2885ec336e48475">Br<\/a>   = 4,<\/div>$/;"	a
l00032	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="comment">\/\/ &quot;no-frame-pointer-elim-non-leaf&quot;=&quot;8&quot; &quot;no-infs-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00032	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  };<\/div>$/;"	a
l00032	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="comment">\/\/ PrimeNumber define the largest locality-sensitive hash number. <\/span><\/div>$/;"	a
l00032	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="comment">    \/\/\/ bucket, saving time.<\/span><\/div>$/;"	a
l00032	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        Analyser = <span class="keyword">new<\/span> <a class="code" href="classHashWeightedMethod.html">HashWeightedMethod<\/a>(<a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>);<\/div>$/;"	a
l00032	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ac3fa3b53483ad9f43e4bc351293faf4f">   32<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ac3fa3b53483ad9f43e4bc351293faf4f">ScalarReplAggregates<\/a>,<\/div>$/;"	a
l00032	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00032	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00032	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00032	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00032	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a121b8bab5c0ceda3e33140d406f4887e">   32<\/a><\/span>&#160;<span class="keywordtype">int<\/span>     <a class="code" href="PAPI_8cpp.html#a121b8bab5c0ceda3e33140d406f4887e">SIZE<\/a>;<\/div>$/;"	a
l00032	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    <span class="keywordtype">double<\/span> Time;<\/div>$/;"	a
l00032	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  LLVMModule = M;<\/div>$/;"	a
l00032	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    readFunctions(<\/div>$/;"	a
l00032	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    cl::Required);<\/div>$/;"	a
l00032	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    cl::Required);<\/div>$/;"	a
l00032	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    cl::Required);<\/div>$/;"	a
l00032	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">   32<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">NumberOfInstructions<\/a> = 0,<\/div>$/;"	a
l00032	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keyword">struct <\/span>BBHash : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00032	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="comment">\/\/ &quot;no-frame-pointer-elim-non-leaf&quot;=&quot;8&quot; &quot;no-infs-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00032	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<a class="code" href="main_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>(<span class="stringliteral">&quot;gcno&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCNO files&quot;<\/span>), <\/div>$/;"	a
l00032	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<a class="code" href="mergeDatabase_8cpp.html#a55b7f43cf34c884a1c549502b46685e2">DatabaseFilename<\/a>(<span class="stringliteral">&quot;database&quot;<\/span>, <\/div>$/;"	a
l00032	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">   32<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a50d8f4339c9e643bb1dc8f040f32dd27">NumberOfInstructions<\/a> = 0,<\/div>$/;"	a
l00032	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;  <span class="keyword">struct <\/span>BBHash : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00032	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="comment">\/\/ &quot;no-frame-pointer-elim-non-leaf&quot;=&quot;8&quot; &quot;no-infs-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00033	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="classAnalysisMethod.html">   33<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00033	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">Instruction::Ret<\/a>:<\/div>$/;"	a
l00033	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">   33<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">FRem<\/a> = 5,<\/div>$/;"	a
l00033	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;  <span class="keyword">struct <\/span>BBHashExtractorFromIR : <span class="keyword">public<\/span> ModulePass {<\/div>$/;"	a
l00033	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a25d7142d3b1514bc4f4b4ac596862449">Instruction::Ret<\/a>:<\/div>$/;"	a
l00033	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">   33<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">FRem<\/a> = 5,<\/div>$/;"	a
l00033	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        <span class="comment">\/\/ &quot;no-nans-fp-math&quot;=&quot;false&quot; &quot;unsafe-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00033	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="comment">\/\/ In other words, it defines the size of CDB.<\/span><\/div>$/;"	a
l00033	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="comment"><\/span>    std::unordered_map&lt;int, std::vector&lt;BBHash&gt;&gt; CDB;<\/div>$/;"	a
l00033	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;      <span class="keywordflow">else<\/span><\/div>$/;"	a
l00033	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ae3715eed67639f26db9b5d70a126cc47">   33<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ae3715eed67639f26db9b5d70a126cc47">InductionVariableSimplify<\/a>,<\/div>$/;"	a
l00033	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> Hash(BB);<\/div>$/;"	a
l00033	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <a class="code" href="classBBHash.html">BBHash<\/a> Hash(BB);<\/div>$/;"	a
l00033	docs/html/InstructionCost_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;} <\/div>$/;"	a
l00033	docs/html/InstructionMethod_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;} <\/div>$/;"	a
l00033	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div>$/;"	a
l00033	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        llvm::GCOVFile&amp; GF, llvm::GCOVBuffer &amp;GCNOBuffer, <\/div>$/;"	a
l00033	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00033	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00033	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00033	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">   33<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">GetElementPtr<\/a> = 1,<\/div>$/;"	a
l00033	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00033	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        <span class="comment">\/\/ &quot;no-nans-fp-math&quot;=&quot;false&quot; &quot;unsafe-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00033	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcno&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00033	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                  cl::desc(<span class="stringliteral">&quot;Database filename to check for duplicates&quot;<\/span>), <\/div>$/;"	a
l00033	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">   33<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2d34789e0cc198cc21088e69c2c641f0">GetElementPtr<\/a> = 1,<\/div>$/;"	a
l00033	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00033	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        <span class="comment">\/\/ &quot;no-nans-fp-math&quot;=&quot;false&quot; &quot;unsafe-fp-math&quot;=&quot;false&quot; <\/span><\/div>$/;"	a
l00034	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00034	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">Descriptor::Ret<\/a>);<\/div>$/;"	a
l00034	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">   34<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">FAdd<\/a> = 6,<\/div>$/;"	a
l00034	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    <span class="keyword">private<\/span>:<\/div>$/;"	a
l00034	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a25d7142d3b1514bc4f4b4ac596862449">DescriptorKind::Ret<\/a>);<\/div>$/;"	a
l00034	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">   34<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">FAdd<\/a> = 6,<\/div>$/;"	a
l00034	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        <span class="comment">\/\/ &quot;use-soft-float&quot;=&quot;false&quot; }<\/span><\/div>$/;"	a
l00034	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;  <span class="keywordtype">unsigned<\/span> CostEstimator::getInstructionCost(<span class="keyword">const<\/span> llvm::Instruction *<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>) {<\/div>$/;"	a
l00034	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="DatabaseManager_8cpp.html#a8fe95d68ae73e02aa604a3430b1cecc1">   34<\/a><\/span>&#160;constexpr <span class="keywordtype">int<\/span> <a class="code" href="DatabaseManager_8cpp.html#a8fe95d68ae73e02aa604a3430b1cecc1">PrimeNumber<\/a> = 101;<\/div>$/;"	a
l00034	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00034	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        errs() <\/div>$/;"	a
l00034	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0dc4d369f85330b42f676548c28b3040">   34<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0dc4d369f85330b42f676548c28b3040">InstructionCombining<\/a>,<\/div>$/;"	a
l00034	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    PerformanceMensurment += (*MBB)-&gt;getCount() * <\/div>$/;"	a
l00034	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    PerformanceMensurment += Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) * <\/div>$/;"	a
l00034	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#if STACK<\/span><\/div>$/;"	a
l00034	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    sscanf(LineAndTail.first.str().c_str(), <span class="stringliteral">&quot;%d: %lf&quot;<\/span>, &amp;Id, &amp;Time); <\/div>$/;"	a
l00034	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;Func : *LLVMModule) {<\/div>$/;"	a
l00034	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        llvm::GCOVBuffer &amp;GCDABuffer); <\/div>$/;"	a
l00034	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#a176f4c81087bd5ba2953134ff727f117">llAlias<\/a>(<span class="stringliteral">&quot;ll&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -llvm-file&quot;<\/span>), cl::aliasopt(<a class="code" href="RandomOnFunction_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>));<\/div>$/;"	a
l00034	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<a class="code" href="Random_8cpp.html#a176f4c81087bd5ba2953134ff727f117">llAlias<\/a>(<span class="stringliteral">&quot;ll&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -llvm-file&quot;<\/span>), cl::aliasopt(<a class="code" href="Random_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>));<\/div>$/;"	a
l00034	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<a class="code" href="Test_8cpp.html#a176f4c81087bd5ba2953134ff727f117">llAlias<\/a>(<span class="stringliteral">&quot;ll&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -llvm-file&quot;<\/span>), cl::aliasopt(<a class="code" href="Test_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>));<\/div>$/;"	a
l00034	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">   34<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">Ret<\/a>  = 2,<\/div>$/;"	a
l00034	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;      std::string GenerateHash(BasicBlock &amp;BB) {<\/div>$/;"	a
l00034	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        <span class="comment">\/\/ &quot;use-soft-float&quot;=&quot;false&quot; }<\/span><\/div>$/;"	a
l00034	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00034	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                  cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>), cl::Required);<\/div>$/;"	a
l00034	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">   34<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a25d7142d3b1514bc4f4b4ac596862449">Ret<\/a>  = 2,<\/div>$/;"	a
l00034	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;      std::string GenerateHash(BasicBlock &amp;BB) {<\/div>$/;"	a
l00034	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;        <span class="comment">\/\/ &quot;use-soft-float&quot;=&quot;false&quot; }<\/span><\/div>$/;"	a
l00035	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment">    \/\/\/ \\brief This function is responsible for calculating the cost of a LLVM <\/span><\/div>$/;"	a
l00035	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00035	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">   35<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">FSub<\/a> = 7,<\/div>$/;"	a
l00035	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;      StringRef generateHash(BasicBlock &amp;BB) {<\/div>$/;"	a
l00035	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00035	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">   35<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">FSub<\/a> = 7,<\/div>$/;"	a
l00035	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;less-precise-fpmad&quot;<\/span>   , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00035	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    <span class="keywordflow">switch<\/span> (I-&gt;getOpcode()) {<\/div>$/;"	a
l00035	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment">    \/\/\/ \\brief Loads from a file, which the path is given as parameter, the <\/span><\/div>$/;"	a
l00035	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;          &lt;&lt; <span class="stringliteral">&quot;For hashM you must pass a database filename with -database\\n&quot;<\/span>;<\/div>$/;"	a
l00035	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5af6bdb8ebac29c448de121bac9261261d">   35<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5af6bdb8ebac29c448de121bac9261261d">LICM<\/a>,<\/div>$/;"	a
l00035	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                   DBManager-&gt;getTime(*DBManager-&gt;getNearest(Hash, <span class="keyword">false<\/span>));<\/div>$/;"	a
l00035	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                   DBManager-&gt;getTime(*DBManager-&gt;getNearest(Hash)) * 0.15;<\/div>$/;"	a
l00035	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor"><\/span><span class="keywordtype">bool<\/span> NotFinished = <span class="keyword">false<\/span>;<\/div>$/;"	a
l00035	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    Times[Id] = Time;<\/div>$/;"	a
l00035	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : Func) {<\/div>$/;"	a
l00035	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00035	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div>$/;"	a
l00035	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">   35<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">Phi<\/a>  = 3,<\/div>$/;"	a
l00035	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> BBHashGenerator(BB);<\/div>$/;"	a
l00035	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;less-precise-fpmad&quot;<\/span>   , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00035	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<a class="code" href="main_8cpp.html#a1a21d35d8ae37eb80e05b9460db34bc5">goAlias<\/a>(<span class="stringliteral">&quot;go&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcno&quot;<\/span>), cl::aliasopt(<a class="code" href="main_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>));<\/div>$/;"	a
l00035	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;cl::alias <a class="code" href="mergeDatabase_8cpp.html#a910759309abebd439c64e4a08ccd9549">dbAlias<\/a>(<span class="stringliteral">&quot;db&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -database&quot;<\/span>), <\/div>$/;"	a
l00035	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">   35<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">Phi<\/a>  = 3,<\/div>$/;"	a
l00035	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> BBHashGenerator(BB);<\/div>$/;"	a
l00035	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;less-precise-fpmad&quot;<\/span>   , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00036	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">    \/\/\/ function. This cost must reflect on the execution time of this function. <\/span><\/div>$/;"	a
l00036	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      <span class="keywordflow">case<\/span> Instruction::PHI:<\/div>$/;"	a
l00036	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">   36<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">FMul<\/a> = 8,<\/div>$/;"	a
l00036	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;        <a class="code" href="classBBHash.html">BBHash<\/a> BBHashGenerator(BB);<\/div>$/;"	a
l00036	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      <span class="keywordflow">case<\/span> Instruction::PHI:<\/div>$/;"	a
l00036	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">   36<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">FMul<\/a> = 8,<\/div>$/;"	a
l00036	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim&quot;<\/span>, <span class="stringliteral">&quot;true&quot;<\/span>);<\/div>$/;"	a
l00036	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2d34789e0cc198cc21088e69c2c641f0">llvm::Instruction::GetElementPtr<\/a>:<\/div>$/;"	a
l00036	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">\/\/ A randomic hash used to calculate the locality-sensitive hash using <\/span><\/div>$/;"	a
l00036	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">    \/\/\/ BB Hash Database.<\/span><\/div>$/;"	a
l00036	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00036	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab1dad8e03577ba10d9f2982766209f2f">   36<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab1dad8e03577ba10d9f2982766209f2f">LoopStrengthReduce<\/a>,<\/div>$/;"	a
l00036	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;    ++MBB;<\/div>$/;"	a
l00036	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;  } <\/div>$/;"	a
l00036	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;std::stack&lt;int&gt; IDsStack;<\/div>$/;"	a
l00036	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;      BB.setName(std::to_string(<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>));<\/div>$/;"	a
l00036	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">    \/\/\/ \\brief Maps basic block&#39;s name with its execution frequency.<\/span><\/div>$/;"	a
l00036	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00036	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00036	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00036	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">   36<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">Br<\/a>   = 4,<\/div>$/;"	a
l00036	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim&quot;<\/span>, <span class="stringliteral">&quot;true&quot;<\/span>);<\/div>$/;"	a
l00036	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;              cl::aliasopt(<a class="code" href="mergeDatabase_8cpp.html#a55b7f43cf34c884a1c549502b46685e2">DatabaseFilename<\/a>));<\/div>$/;"	a
l00036	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">   36<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">Br<\/a>   = 4,<\/div>$/;"	a
l00036	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div>$/;"	a
l00036	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim&quot;<\/span>, <span class="stringliteral">&quot;true&quot;<\/span>);<\/div>$/;"	a
l00037	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00037	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a2080ec0fb32affa9961922fadd7ad95e">Descriptor::Phi<\/a>);<\/div>$/;"	a
l00037	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">   37<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">FDiv<\/a> = 9,<\/div>$/;"	a
l00037	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        <span class="keywordflow">return<\/span> BBHashGenerator.<a class="code" href="classBBHash.html#ad6b7566aa610f818d6dd2a9caf62ff17">getString<\/a>();<\/div>$/;"	a
l00037	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a2080ec0fb32affa9961922fadd7ad95e">DescriptorKind::Phi<\/a>);<\/div>$/;"	a
l00037	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">   37<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">FDiv<\/a> = 9,<\/div>$/;"	a
l00037	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-infs-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00037	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00037	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="comment">\/\/ dotProduct to reduce the dimensions to a scalar.<\/span><\/div>$/;"	a
l00037	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> loadDatabase(llvm::StringRef);<\/div>$/;"	a
l00037	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>:<\/div>$/;"	a
l00037	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a69083450061722c9045597433f460fc7">   37<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a69083450061722c9045597433f460fc7">LoopUnswitch<\/a>,<\/div>$/;"	a
l00037	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;  } <\/div>$/;"	a
l00037	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div>$/;"	a
l00037	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00037	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;    LineAndTail = LineAndTail.second.split(<span class="charliteral">&#39;\\n&#39;<\/span>); <\/div>$/;"	a
l00037	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;      <a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>++;<\/div>$/;"	a
l00037	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="comment"><\/span>    std::unordered_map&lt;std::string, uint64_t&gt; BasicBlockFrequency;<\/div>$/;"	a
l00037	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>(<span class="stringliteral">&quot;gcno&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCNO files&quot;<\/span>), <\/div>$/;"	a
l00037	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<a class="code" href="Random_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>(<span class="stringliteral">&quot;gcno&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCNO files&quot;<\/span>), <\/div>$/;"	a
l00037	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<a class="code" href="Test_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>(<span class="stringliteral">&quot;gcno&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCNO files&quot;<\/span>), <\/div>$/;"	a
l00037	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">   37<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">FRem<\/a> = 5,<\/div>$/;"	a
l00037	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        <span class="keywordflow">return<\/span> BBHashGenerator.<a class="code" href="classBBDescriptor.html#acc7e464cf2d5ecd54e04cfaeb88c1972">getString<\/a>();<\/div>$/;"	a
l00037	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-infs-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00037	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00037	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div>$/;"	a
l00037	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">   37<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">FRem<\/a> = 5,<\/div>$/;"	a
l00037	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        <span class="keywordflow">return<\/span> BBHashGenerator.<a class="code" href="classBBDescriptor.html#acc7e464cf2d5ecd54e04cfaeb88c1972">getString<\/a>();<\/div>$/;"	a
l00037	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-infs-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00038	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="comment">    \/\/\/ \\returns A double value that represents the execution cost of the LLVM <\/span><\/div>$/;"	a
l00038	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00038	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">   38<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">Add<\/a>  = 10,<\/div>$/;"	a
l00038	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;      }<\/div>$/;"	a
l00038	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00038	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0d592a4b562059bc283e00b3704865c9">   38<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0d592a4b562059bc283e00b3704865c9">Add<\/a>  = 10,<\/div>$/;"	a
l00038	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-nans-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00038	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a25d7142d3b1514bc4f4b4ac596862449">llvm::Instruction::Ret<\/a>:<\/div>$/;"	a
l00038	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">   38<\/a><\/span>&#160;<a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a>;<\/div>$/;"	a
l00038	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div>$/;"	a
l00038	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;      Analyser = <span class="keyword">new<\/span> <a class="code" href="classInstructionMethod.html">InstructionMethod<\/a>();<\/div>$/;"	a
l00038	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2085fa2d2fec0d75e84811a4bca86a22">   38<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2085fa2d2fec0d75e84811a4bca86a22">LoopInstSimplify<\/a>,<\/div>$/;"	a
l00038	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div>$/;"	a
l00038	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00038	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00038	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;  }<\/div>$/;"	a
l00038	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    }<\/div>$/;"	a
l00038	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00038	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcno&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00038	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcno&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00038	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcno&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00038	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">   38<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">FAdd<\/a> = 6,<\/div>$/;"	a
l00038	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;      }<\/div>$/;"	a
l00038	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-nans-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00038	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<a class="code" href="main_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>(<span class="stringliteral">&quot;gcda&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCDA files&quot;<\/span>), <\/div>$/;"	a
l00038	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00038	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">   38<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">FAdd<\/a> = 6,<\/div>$/;"	a
l00038	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;      }<\/div>$/;"	a
l00038	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-nans-fp-math&quot;<\/span>      , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00039	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="comment">    \/\/\/ function (Function) when executed in the given frequency (GCOVFunction).<\/span><\/div>$/;"	a
l00039	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">Instruction::Br<\/a>: <\/div>$/;"	a
l00039	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">   39<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">Sub<\/a>  = 11,<\/div>$/;"	a
l00039	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a8e6496e168fba215d2885ec336e48475">Instruction::Br<\/a>: <\/div>$/;"	a
l00039	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3e53f06234367d0e453fa5ea0ad2ab34">   39<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3e53f06234367d0e453fa5ea0ad2ab34">Sub<\/a>  = 11,<\/div>$/;"	a
l00039	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;unsafe-fp-math&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00039	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::PHI:<\/div>$/;"	a
l00039	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00039	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00039	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5add49f6d5c9a7264335d8fc11078b90fd">   39<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5add49f6d5c9a7264335d8fc11078b90fd">LoopUnroll<\/a>,<\/div>$/;"	a
l00039	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00039	docs/html/HashWeighted_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;} <\/div>$/;"	a
l00039	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">   39<\/a><\/span>&#160;<span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">getEmpty<\/a>(<span class="keywordtype">int<\/span>* Events, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> *Values) { <\/div>$/;"	a
l00039	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;}<\/div>$/;"	a
l00039	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;  }<\/div>$/;"	a
l00039	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="comment">    \/\/\/ \\brief Uses the predecessors of a Basic Block to try to update its <\/span><\/div>$/;"	a
l00039	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00039	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00039	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00039	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">   39<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">FSub<\/a> = 7,<\/div>$/;"	a
l00039	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;unsafe-fp-math&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00039	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcda&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00039	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<a class="code" href="mergeDatabase_8cpp.html#abea0037e7534e741dea8f00a26aac0a9">HashFilename<\/a>(<span class="stringliteral">&quot;hash&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Hash filename&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>), <\/div>$/;"	a
l00039	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">   39<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">FSub<\/a> = 7,<\/div>$/;"	a
l00039	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div>$/;"	a
l00039	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;unsafe-fp-math&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00040	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">double<\/span> <\/div>$/;"	a
l00040	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a8e6496e168fba215d2885ec336e48475">Descriptor::Br<\/a>);<\/div>$/;"	a
l00040	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">   40<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">Mul<\/a>  = 12,<\/div>$/;"	a
l00040	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, <span class="keywordtype">int<\/span> <span class="keywordtype">id<\/span>) {<\/div>$/;"	a
l00040	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a8e6496e168fba215d2885ec336e48475">DescriptorKind::Br<\/a>);<\/div>$/;"	a
l00040	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ad1a89d2811b2de2dd196b698721391d6">   40<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ad1a89d2811b2de2dd196b698721391d6">Mul<\/a>  = 12,<\/div>$/;"	a
l00040	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;use-soft-float&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00040	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a8e6496e168fba215d2885ec336e48475">llvm::Instruction::Br<\/a>: <\/div>$/;"	a
l00040	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="keywordtype">void<\/span> DatabaseManager::loadDatabase(StringRef Filename) {<\/div>$/;"	a
l00040	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="comment">    \/\/\/ \\brief Creates a database loading it from a file.<\/span><\/div>$/;"	a
l00040	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>:<\/div>$/;"	a
l00040	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a267899c27f98246e22e234ba11c8df99">   40<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a267899c27f98246e22e234ba11c8df99">LoopReroll<\/a>,<\/div>$/;"	a
l00040	docs/html/HashMethod_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;} <\/div>$/;"	a
l00040	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;  PAPI_start_counters(Events, 2);<\/div>$/;"	a
l00040	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div>$/;"	a
l00040	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div>$/;"	a
l00040	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="comment">    \/\/\/  execution frequency. <\/span><\/div>$/;"	a
l00040	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#a1a21d35d8ae37eb80e05b9460db34bc5">goAlias<\/a>(<span class="stringliteral">&quot;go&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcno&quot;<\/span>), cl::aliasopt(<a class="code" href="RandomOnFunction_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>));<\/div>$/;"	a
l00040	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<a class="code" href="Random_8cpp.html#a1a21d35d8ae37eb80e05b9460db34bc5">goAlias<\/a>(<span class="stringliteral">&quot;go&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcno&quot;<\/span>), cl::aliasopt(<a class="code" href="Random_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>));<\/div>$/;"	a
l00040	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<a class="code" href="Test_8cpp.html#a1a21d35d8ae37eb80e05b9460db34bc5">goAlias<\/a>(<span class="stringliteral">&quot;go&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcno&quot;<\/span>), cl::aliasopt(<a class="code" href="Test_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>));<\/div>$/;"	a
l00040	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">   40<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">FMul<\/a> = 8,<\/div>$/;"	a
l00040	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, <span class="keywordtype">int<\/span> <span class="keywordtype">id<\/span>) {<\/div>$/;"	a
l00040	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;use-soft-float&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00040	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00040	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;              cl::Required);<\/div>$/;"	a
l00040	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">   40<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">FMul<\/a> = 8,<\/div>$/;"	a
l00040	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, <span class="keywordtype">int<\/span> <span class="keywordtype">id<\/span>) {<\/div>$/;"	a
l00040	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;use-soft-float&quot;<\/span>       , <span class="stringliteral">&quot;false&quot;<\/span>);<\/div>$/;"	a
l00041	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;      <a class="code" href="classAnalysisMethod.html#afd5a51fbd8aec6dd39f51155805e9b38">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span> = 0;<\/div>$/;"	a
l00041	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00041	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">   41<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">UDiv<\/a> = 13, <\/div>$/;"	a
l00041	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">if<\/span> (BB.getInstList().size() &gt; 3) <\/div>$/;"	a
l00041	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00041	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a450e6aabe3299214f6227faeee262109">   41<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a450e6aabe3299214f6227faeee262109">UDiv<\/a> = 13, <\/div>$/;"	a
l00041	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::None;<\/div>$/;"	a
l00041	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;  ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt;&gt; DatabaseFileBuffer = <\/div>$/;"	a
l00041	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classDatabaseManager.html#a88c96f35ec87bc4bd76bd81c70c4f37b">DatabaseManager<\/a>(llvm::StringRef);<\/div>$/;"	a
l00041	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;      Analyser = <span class="keyword">new<\/span> <a class="code" href="classInstructionCostMethod.html">InstructionCostMethod<\/a>();<\/div>$/;"	a
l00041	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab65fd21f87df39a549b72d3c452857c8">   41<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab65fd21f87df39a549b72d3c452857c8">LoopRotate<\/a>,<\/div>$/;"	a
l00041	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;  <span class="keywordflow">if<\/span> (IDsStack.empty()) {<\/div>$/;"	a
l00041	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classProfMethod.html#ab0505bfd5a287c0fe042dd0efac159b7">ProfMethod::<\/a><\/div>$/;"	a
l00041	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;  std::list&lt;MemoryBuffer*&gt;::iterator iGCDA = GCDA.begin();<\/div>$/;"	a
l00041	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="comment"><\/span>    uint64_t getExecutionFreqUsingPredecessors(llvm::BasicBlock* BB);<\/div>$/;"	a
l00041	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">   41<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">FDiv<\/a> = 9,<\/div>$/;"	a
l00041	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">if<\/span>(BB.getInstList().size() &gt; 3) {<\/div>$/;"	a
l00041	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00041	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<a class="code" href="main_8cpp.html#a7eb79acc3135c46195a18be4fa261b7c">gaAlias<\/a>(<span class="stringliteral">&quot;ga&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcda&quot;<\/span>), cl::aliasopt(<a class="code" href="main_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>));<\/div>$/;"	a
l00041	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;cl::alias <a class="code" href="mergeDatabase_8cpp.html#a76ed812fd13d79ebbdd92a2fc9517b08">hsAlias<\/a>(<span class="stringliteral">&quot;hs&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -hash&quot;<\/span>), <\/div>$/;"	a
l00041	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">   41<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">FDiv<\/a> = 9,<\/div>$/;"	a
l00041	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        <span class="keywordflow">if<\/span>(BB.getInstList().size() &gt; 3) {<\/div>$/;"	a
l00041	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div>$/;"	a
l00042	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00042	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">Instruction::FRem<\/a>:<\/div>$/;"	a
l00042	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">   42<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">SDiv<\/a> = 14,<\/div>$/;"	a
l00042	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;          outs() &lt;&lt; <span class="keywordtype">id<\/span> &lt;&lt; <span class="stringliteral">&quot;: &quot;<\/span> &lt;&lt; generateHash(BB) &lt;&lt; <span class="stringliteral">&quot;\\n&quot;<\/span>;<\/div>$/;"	a
l00042	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">Instruction::FRem<\/a>:<\/div>$/;"	a
l00042	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0a42815c96e082b2d600f6cd5f553e91">   42<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0a42815c96e082b2d600f6cd5f553e91">SDiv<\/a> = 14,<\/div>$/;"	a
l00042	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim-non-leaf&quot;<\/span>, <span class="stringliteral">&quot;8&quot;<\/span>);<\/div>$/;"	a
l00042	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">llvm::Instruction::FRem<\/a>:<\/div>$/;"	a
l00042	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;    MemoryBuffer::getFile(Filename);<\/div>$/;"	a
l00042	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00042	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00042	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5acdc805b7881bdeebbf058395419c5c6e">   42<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5acdc805b7881bdeebbf058395419c5c6e">LoopIdiom<\/a>,<\/div>$/;"	a
l00042	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;  <\/div>$/;"	a
l00042	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="classProfMethod.html#ab0505bfd5a287c0fe042dd0efac159b7">   42<\/a><\/span>&#160;<a class="code" href="classProfMethod.html#ab0505bfd5a287c0fe042dd0efac159b7">estimateExecutionTime<\/a>(llvm::Function* Func, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a> &amp;<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00042	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;  std::list&lt;MemoryBuffer*&gt;::iterator iGCNO = GCNO.begin();<\/div>$/;"	a
l00042	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00042	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00042	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00042	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="keyword">static<\/span> cl::list&lt;std::string&gt; <\/div>$/;"	a
l00042	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">   42<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">Add<\/a>  = 10,<\/div>$/;"	a
l00042	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;          std::cout &lt;&lt; <span class="keywordtype">id<\/span> &lt;&lt; <span class="stringliteral">&quot;: &quot;<\/span> &lt;&lt; GenerateHash(BB) &lt;&lt; std::endl;<\/div>$/;"	a
l00042	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim-non-leaf&quot;<\/span>, <span class="stringliteral">&quot;8&quot;<\/span>);<\/div>$/;"	a
l00042	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div>$/;"	a
l00042	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;              cl::aliasopt(<a class="code" href="mergeDatabase_8cpp.html#abea0037e7534e741dea8f00a26aac0a9">HashFilename<\/a>));<\/div>$/;"	a
l00042	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">   42<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">Add<\/a>  = 10,<\/div>$/;"	a
l00042	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;          std::cout &lt;&lt; <span class="keywordtype">id<\/span> &lt;&lt; <span class="stringliteral">&quot;: &quot;<\/span> &lt;&lt; GenerateHash(BB) &lt;&lt; std::endl;<\/div>$/;"	a
l00042	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;        F-&gt;addFnAttr(<span class="stringliteral">&quot;no-frame-pointer-elim-non-leaf&quot;<\/span>, <span class="stringliteral">&quot;8&quot;<\/span>);<\/div>$/;"	a
l00043	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="classAnalysisMethod.html#a980f19ac6d6978ab68c8a1f0f1587309">   43<\/a><\/span>&#160;    <span class="keyword">virtual<\/span> <a class="code" href="classAnalysisMethod.html#a980f19ac6d6978ab68c8a1f0f1587309">~AnalysisMethod<\/a>() {};<\/div>$/;"	a
l00043	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">Descriptor::FRem<\/a>);<\/div>$/;"	a
l00043	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">   43<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">URem<\/a> = 15,<\/div>$/;"	a
l00043	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00043	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">DescriptorKind::FRem<\/a>);<\/div>$/;"	a
l00043	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5ab66ee6d990657209434c5c244b015">   43<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5ab66ee6d990657209434c5c244b015">URem<\/a> = 15,<\/div>$/;"	a
l00043	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;      }<\/div>$/;"	a
l00043	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">llvm::Instruction::FAdd<\/a>:<\/div>$/;"	a
l00043	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div>$/;"	a
l00043	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns the number of different BB hashes which there are in the <\/span><\/div>$/;"	a
l00043	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>:<\/div>$/;"	a
l00043	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aea6c57bb843155160c2e78843349ba1c">   43<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aea6c57bb843155160c2e78843349ba1c">PromoteMemoryToRegister<\/a>,<\/div>$/;"	a
l00043	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;  } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00043	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00043	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div>$/;"	a
l00043	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="comment">    \/\/\/ \\brief Uses the predecessors of a Basic Block to try to update its <\/span><\/div>$/;"	a
l00043	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>(<span class="stringliteral">&quot;gcda&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCDA files&quot;<\/span>), <\/div>$/;"	a
l00043	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<a class="code" href="Random_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>(<span class="stringliteral">&quot;gcda&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCDA files&quot;<\/span>), <\/div>$/;"	a
l00043	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<a class="code" href="Test_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>(<span class="stringliteral">&quot;gcda&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;One or more GCOV GCDA files&quot;<\/span>), <\/div>$/;"	a
l00043	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">   43<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">Sub<\/a>  = 11,<\/div>$/;"	a
l00043	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;        } <\/div>$/;"	a
l00043	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;      }<\/div>$/;"	a
l00043	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;AnalysisMethodKind&gt; <\/div>$/;"	a
l00043	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div>$/;"	a
l00043	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">   43<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">Sub<\/a>  = 11,<\/div>$/;"	a
l00043	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;        } <\/div>$/;"	a
l00043	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;      }<\/div>$/;"	a
l00044	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;};<\/div>$/;"	a
l00044	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00044	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">   44<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">SRem<\/a> = 16,<\/div>$/;"	a
l00044	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;      }<\/div>$/;"	a
l00044	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00044	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5af2c83c184717144ccd1c4cfc1122a">   44<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5af2c83c184717144ccd1c4cfc1122a">SRem<\/a> = 16,<\/div>$/;"	a
l00044	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">llvm::Instruction::FSub<\/a>:<\/div>$/;"	a
l00044	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;  assert(DatabaseFileBuffer &amp;&amp; <span class="stringliteral">&quot;Impossible to open the database file.&quot;<\/span>);<\/div>$/;"	a
l00044	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="comment">    \/\/\/ database.<\/span><\/div>$/;"	a
l00044	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;      Analyser = <span class="keyword">new<\/span> <a class="code" href="classRandomMethod.html">RandomMethod<\/a>();<\/div>$/;"	a
l00044	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a88e9e6c952a4661885988a186c6ed298">   44<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a88e9e6c952a4661885988a186c6ed298">DemoteRegisterToMemory<\/a>,<\/div>$/;"	a
l00044	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;  <span class="keywordflow">while<\/span> (iGCDA != GCDA.end() &amp;&amp; iGCNO != GCNO.end()) {<\/div>$/;"	a
l00044	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="comment">    \/\/\/  execution frequency. <\/span><\/div>$/;"	a
l00044	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcda&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00044	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcda&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00044	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;filename.gcda&quot;<\/span>), cl::OneOrMore);<\/div>$/;"	a
l00044	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">   44<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">Mul<\/a>  = 12,<\/div>$/;"	a
l00044	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00044	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00044	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<a class="code" href="main_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>(cl::desc(<span class="stringliteral">&quot;Choose an analysis method:&quot;<\/span>),<\/div>$/;"	a
l00044	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <\/div>$/;"	a
l00044	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">   44<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">Mul<\/a>  = 12,<\/div>$/;"	a
l00044	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00044	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div>$/;"	a
l00045	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00045	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">Instruction::FAdd<\/a>:<\/div>$/;"	a
l00045	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">   45<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">Shl<\/a>  = 17, <\/div>$/;"	a
l00045	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div>$/;"	a
l00045	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">Instruction::FAdd<\/a>:<\/div>$/;"	a
l00045	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ada89cb9eb438de663a3cc3083e0e8e4a">   45<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ada89cb9eb438de663a3cc3083e0e8e4a">Shl<\/a>  = 17, <\/div>$/;"	a
l00045	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordtype">void<\/span> initPapi(Module &amp;M, <span class="keywordtype">int<\/span> NumberOfBasicBlocks) {<\/div>$/;"	a
l00045	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">llvm::Instruction::FMul<\/a>:<\/div>$/;"	a
l00045	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div>$/;"	a
l00045	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">int<\/span> <a class="code" href="classDatabaseManager.html#aa862ee94fbe4124adb856abcf0e4f159">size<\/a>() <span class="keyword">const<\/span>;<\/div>$/;"	a
l00045	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00045	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6f69c0907f02545fafb02f83689814e4">   45<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6f69c0907f02545fafb02f83689814e4">Reassociate<\/a>,<\/div>$/;"	a
l00045	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;  }<\/div>$/;"	a
l00045	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;  <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00045	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    llvm::GCOVFile GF;<\/div>$/;"	a
l00045	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="comment"><\/span>    uint64_t getExecutionFreqUsingSuccessors(llvm::BasicBlock* BB);<\/div>$/;"	a
l00045	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00045	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00045	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00045	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">   45<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">UDiv<\/a> = 13, <\/div>$/;"	a
l00045	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      }<\/div>$/;"	a
l00045	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordtype">void<\/span> InitPapi(Module &amp;M, <span class="keywordtype">int<\/span> NumberOfBasicBlocks) {<\/div>$/;"	a
l00045	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    cl::values(<\/div>$/;"	a
l00045	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<a class="code" href="mergeDatabase_8cpp.html#aadb1ba8554c12536ac3b2b590a7f711a">ProfFilename<\/a>(<span class="stringliteral">&quot;profile&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Profile filename&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>), <\/div>$/;"	a
l00045	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">   45<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">UDiv<\/a> = 13, <\/div>$/;"	a
l00045	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      }<\/div>$/;"	a
l00045	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;      <span class="keywordtype">void<\/span> InitPapi(Module &amp;M, <span class="keywordtype">int<\/span> NumberOfBasicBlocks) {<\/div>$/;"	a
l00046	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses the number of instructions multiplied by the <\/span><\/div>$/;"	a
l00046	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">Descriptor::FAdd<\/a>);<\/div>$/;"	a
l00046	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">   46<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">LShr<\/a> = 18,<\/div>$/;"	a
l00046	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00046	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">DescriptorKind::FAdd<\/a>);<\/div>$/;"	a
l00046	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3a793efa6f06f718ba358cc9d87057e4">   46<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3a793efa6f06f718ba358cc9d87057e4">LShr<\/a> = 18,<\/div>$/;"	a
l00046	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00046	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">llvm::Instruction::FDiv<\/a>: <\/div>$/;"	a
l00046	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;  std::pair&lt;StringRef, StringRef&gt; LineAndTail =<\/div>$/;"	a
l00046	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00046	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>:<\/div>$/;"	a
l00046	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adcd48da897e32f57e2c9b1c82d69e956">   46<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adcd48da897e32f57e2c9b1c82d69e956">JumpThreading<\/a>,<\/div>$/;"	a
l00046	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;  PAPI_stop_counters(Values, 2);<\/div>$/;"	a
l00046	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00046	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div>$/;"	a
l00046	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00046	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#a7eb79acc3135c46195a18be4fa261b7c">gaAlias<\/a>(<span class="stringliteral">&quot;ga&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcda&quot;<\/span>), cl::aliasopt(<a class="code" href="RandomOnFunction_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>));<\/div>$/;"	a
l00046	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<a class="code" href="Random_8cpp.html#a7eb79acc3135c46195a18be4fa261b7c">gaAlias<\/a>(<span class="stringliteral">&quot;ga&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcda&quot;<\/span>), cl::aliasopt(<a class="code" href="Random_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>));<\/div>$/;"	a
l00046	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<a class="code" href="Test_8cpp.html#a7eb79acc3135c46195a18be4fa261b7c">gaAlias<\/a>(<span class="stringliteral">&quot;ga&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -gcda&quot;<\/span>), cl::aliasopt(<a class="code" href="Test_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>));<\/div>$/;"	a
l00046	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">   46<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">SDiv<\/a> = 14,<\/div>$/;"	a
l00046	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div>$/;"	a
l00046	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00046	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed by their number of instruction&quot;<\/span>),<\/div>$/;"	a
l00046	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;              cl::Required);<\/div>$/;"	a
l00046	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">   46<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">SDiv<\/a> = 14,<\/div>$/;"	a
l00046	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div>$/;"	a
l00046	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00047	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="comment">\/\/\/ execution frequency to evaluate the execution cost of the given function.<\/span><\/div>$/;"	a
l00047	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00047	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">   47<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">AShr<\/a> = 19,<\/div>$/;"	a
l00047	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00047	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00047	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a23b18dbda8a7bb16cc9ebbff8c6941a2">   47<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a23b18dbda8a7bb16cc9ebbff8c6941a2">AShr<\/a> = 19,<\/div>$/;"	a
l00047	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Medium;<\/div>$/;"	a
l00047	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    (*DatabaseFileBuffer)-&gt;getBuffer().split(<span class="charliteral">&#39;\\n&#39;<\/span>);<\/div>$/;"	a
l00047	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns the execution time found in the database for the given <\/span><\/div>$/;"	a
l00047	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;      Analyser = <span class="keyword">new<\/span> <a class="code" href="classFrequencyMethod.html">FrequencyMethod<\/a>();<\/div>$/;"	a
l00047	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2a876dee3e320a123dfd8fb1040bbcb3">   47<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2a876dee3e320a123dfd8fb1040bbcb3">CFGSimplification<\/a>,<\/div>$/;"	a
l00047	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    <span class="keyword">auto<\/span> BBCost = 0;<\/div>$/;"	a
l00047	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    GCOVBuffer GCNO_GB(*iGCNO);<\/div>$/;"	a
l00047	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="comment">    \/\/\/ \\brief This constructor is used in the instanciation of a copy of a <\/span><\/div>$/;"	a
l00047	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">   47<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">URem<\/a> = 15,<\/div>$/;"	a
l00047	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00047	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00047	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>, <\/div>$/;"	a
l00047	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;cl::alias <a class="code" href="mergeDatabase_8cpp.html#a1004dc53c71c8c8ef925f1c1c09fa45e">pAlias<\/a>(<span class="stringliteral">&quot;p&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -profile&quot;<\/span>), <\/div>$/;"	a
l00047	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">   47<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">URem<\/a> = 15,<\/div>$/;"	a
l00047	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00047	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div>$/;"	a
l00048	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="classInstructionMethod.html">   48<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classInstructionMethod.html">InstructionMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00048	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">Instruction::FSub<\/a>:<\/div>$/;"	a
l00048	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">   48<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">And<\/a>  = 20,<\/div>$/;"	a
l00048	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;      }<\/div>$/;"	a
l00048	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">Instruction::FSub<\/a>:<\/div>$/;"	a
l00048	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a60b042c2c7da21af2ed42f8cc27e7ff8">   48<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a60b042c2c7da21af2ed42f8cc27e7ff8">And<\/a>  = 20,<\/div>$/;"	a
l00048	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        <span class="keyword">auto<\/span> Size = ConstantInt::get(Builder.getInt32Ty(), NumberOfBasicBlocks);<\/div>$/;"	a
l00048	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0d592a4b562059bc283e00b3704865c9">llvm::Instruction::Add<\/a>:<\/div>$/;"	a
l00048	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div>$/;"	a
l00048	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<span class="comment">    \/\/\/ Hash (BBDescritor). <\/span><\/div>$/;"	a
l00048	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00048	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a30727fad5bc8a039bd952b3fe57cec2d">   48<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a30727fad5bc8a039bd952b3fe57cec2d">FlattenCFG<\/a>,<\/div>$/;"	a
l00048	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;  <span class="keywordflow">return<\/span> Values[1];<\/div>$/;"	a
l00048	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div>$/;"	a
l00048	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    GCOVBuffer GCDA_GB(*iGCDA);<\/div>$/;"	a
l00048	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<span class="comment">    \/\/\/ ProfileModule.<\/span><\/div>$/;"	a
l00048	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;AnalysisMethodKind&gt; <\/div>$/;"	a
l00048	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;AnalysisMethodKind&gt; <\/div>$/;"	a
l00048	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;AnalysisMethodKind&gt; <\/div>$/;"	a
l00048	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">   48<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">SRem<\/a> = 16,<\/div>$/;"	a
l00048	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00048	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        <span class="keyword">auto<\/span> size = ConstantInt::get(Builder.getInt32Ty(), NumberOfBasicBlocks);<\/div>$/;"	a
l00048	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by the sum up of all instruction cost&quot;<\/span>),<\/div>$/;"	a
l00048	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;              cl::aliasopt(<a class="code" href="mergeDatabase_8cpp.html#aadb1ba8554c12536ac3b2b590a7f711a">ProfFilename<\/a>));<\/div>$/;"	a
l00048	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">   48<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">SRem<\/a> = 16,<\/div>$/;"	a
l00048	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00048	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        <span class="keyword">auto<\/span> size = ConstantInt::get(Builder.getInt32Ty(), NumberOfBasicBlocks);<\/div>$/;"	a
l00049	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00049	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">Descriptor::FSub<\/a>);<\/div>$/;"	a
l00049	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">   49<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">Or<\/a>   = 21,<\/div>$/;"	a
l00049	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div>$/;"	a
l00049	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">DescriptorKind::FSub<\/a>);<\/div>$/;"	a
l00049	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a5d66935f41f1e80990e8bf3349074fe1">   49<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a5d66935f41f1e80990e8bf3349074fe1">Or<\/a>   = 21,<\/div>$/;"	a
l00049	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        CallInst *InitPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00049	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3e53f06234367d0e453fa5ea0ad2ab34">llvm::Instruction::Sub<\/a>:<\/div>$/;"	a
l00049	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;  <span class="keywordflow">while<\/span> (!LineAndTail.first.empty()) {<\/div>$/;"	a
l00049	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">double<\/span> <a class="code" href="classDatabaseManager.html#aa4d00f4e14b0618ec9aa6768669cbe27">getTime<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;) <span class="keyword">const<\/span>;<\/div>$/;"	a
l00049	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>:<\/div>$/;"	a
l00049	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a745c966e474400f419eb02b0f1594d29">   49<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a745c966e474400f419eb02b0f1594d29">CFGStructurization<\/a>,<\/div>$/;"	a
l00049	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;}<\/div>$/;"	a
l00049	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a> : BB) <\/div>$/;"	a
l00049	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div>$/;"	a
l00049	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfileModule.html">ProfileModule<\/a>(llvm::Module*, <\/div>$/;"	a
l00049	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>(cl::desc(<span class="stringliteral">&quot;Choose an analysis method:&quot;<\/span>),<\/div>$/;"	a
l00049	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<a class="code" href="Random_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>(cl::desc(<span class="stringliteral">&quot;Choose an analysis method:&quot;<\/span>),<\/div>$/;"	a
l00049	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<a class="code" href="Test_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>(cl::desc(<span class="stringliteral">&quot;Choose an analysis method:&quot;<\/span>),<\/div>$/;"	a
l00049	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">   49<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">Shl<\/a>  = 17, <\/div>$/;"	a
l00049	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;      }<\/div>$/;"	a
l00049	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        CallInst *InitPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00049	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a>, <\/div>$/;"	a
l00049	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div>$/;"	a
l00049	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">   49<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">Shl<\/a>  = 17, <\/div>$/;"	a
l00049	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;      }<\/div>$/;"	a
l00049	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        CallInst *InitPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00050	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classInstructionMethod.html#a65b25c5582210ff6f9a6ce5f1f6838bc">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00050	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00050	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">   50<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">Xor<\/a>  = 22,<\/div>$/;"	a
l00050	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00050	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00050	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ae45372bd1178d94321b72f6261a3020a">   50<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ae45372bd1178d94321b72f6261a3020a">Xor<\/a>  = 22,<\/div>$/;"	a
l00050	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;init_PAPI&quot;<\/span>), Size);<\/div>$/;"	a
l00050	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ad1a89d2811b2de2dd196b698721391d6">llvm::Instruction::Mul<\/a>:<\/div>$/;"	a
l00050	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    <span class="keywordtype">char<\/span>   HashString[1000];<\/div>$/;"	a
l00050	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00050	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;      <span class="keywordflow">if<\/span> (!<a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.empty())<\/div>$/;"	a
l00050	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a64b12abd4565bedcde9aadb5bd4805fe">   50<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a64b12abd4565bedcde9aadb5bd4805fe">BreakCriticalEdges<\/a>,<\/div>$/;"	a
l00050	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;      BBCost += CostEstimator::getInstructionCost(&amp;<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>);<\/div>$/;"	a
l00050	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    std::vector&lt;GCOVFunction*&gt; Profiles = readFunctions(GF, GCNO_GB, GCDA_GB);<\/div>$/;"	a
l00050	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        <span class="keyword">const<\/span> std::unordered_map&lt;std::string, uint64_t&gt;&amp;);<\/div>$/;"	a
l00050	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    cl::values(<\/div>$/;"	a
l00050	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    cl::values(<\/div>$/;"	a
l00050	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;    cl::values(<\/div>$/;"	a
l00050	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">   50<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">LShr<\/a> = 18,<\/div>$/;"	a
l00050	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;init_PAPI&quot;<\/span>), size);<\/div>$/;"	a
l00050	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by similar basic block where which dimension has also a weight in the DB&quot;<\/span>),<\/div>$/;"	a
l00050	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="mergeDatabase_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">   50<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="mergeDatabase_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span> **argv) {<\/div>$/;"	a
l00050	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">   50<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">LShr<\/a> = 18,<\/div>$/;"	a
l00050	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div>$/;"	a
l00050	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;init_PAPI&quot;<\/span>), size);<\/div>$/;"	a
l00051	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00051	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">Instruction::FMul<\/a>:<\/div>$/;"	a
l00051	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">   51<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">ICmp<\/a> = 23,<\/div>$/;"	a
l00051	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00051	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">Instruction::FMul<\/a>:<\/div>$/;"	a
l00051	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1fa31f7df0a5328abd3c103219b95884">   51<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1fa31f7df0a5328abd3c103219b95884">ICmp<\/a> = 23,<\/div>$/;"	a
l00051	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00051	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a450e6aabe3299214f6227faeee262109">llvm::Instruction::UDiv<\/a>:<\/div>$/;"	a
l00051	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keywordtype">double<\/span> Time;<\/div>$/;"	a
l00051	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns true if and only if there is an exactly equal hash on<\/span><\/div>$/;"	a
l00051	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;        Analyser = <span class="keyword">new<\/span> <a class="code" href="classInstructionPlusHashMethod.html">InstructionPlusHashMethod<\/a>(<a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>);<\/div>$/;"	a
l00051	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8f3cd14645c538e9217514dcc502a109">   51<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8f3cd14645c538e9217514dcc502a109">LoopSimplify<\/a>,<\/div>$/;"	a
l00051	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a1b644c5a45b31fdd325203a8e057294f">   51<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="PAPI_8cpp.html#a1b644c5a45b31fdd325203a8e057294f">init_PAPI<\/a>(<span class="keywordtype">int<\/span> Size) {<\/div>$/;"	a
l00051	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00051	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;FreqFunc : Profiles) {<\/div>$/;"	a
l00051	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00051	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed by their number of instruction&quot;<\/span>),<\/div>$/;"	a
l00051	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed by their number of instruction&quot;<\/span>),<\/div>$/;"	a
l00051	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a4d8b3be116dc4b19938940cfdc6fad20">instM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed by their number of instruction&quot;<\/span>),<\/div>$/;"	a
l00051	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">   51<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">AShr<\/a> = 19,<\/div>$/;"	a
l00051	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00051	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00051	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed randomicly&quot;<\/span>),<\/div>$/;"	a
l00051	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;  cl::ParseCommandLineOptions(argc, argv, <span class="stringliteral">&quot;Database merger&quot;<\/span>);<\/div>$/;"	a
l00051	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">   51<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">AShr<\/a> = 19,<\/div>$/;"	a
l00051	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00051	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div>$/;"	a
l00052	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="classInstructionMethod.html#ad5fc39f3bdca0d650ef0cb6d563cb6a0">   52<\/a><\/span>&#160;    <a class="code" href="classInstructionMethod.html#ad5fc39f3bdca0d650ef0cb6d563cb6a0">~InstructionMethod<\/a>() {};<\/div>$/;"	a
l00052	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">Descriptor::FMul<\/a>);<\/div>$/;"	a
l00052	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">   52<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">FCmp<\/a> = 24,<\/div>$/;"	a
l00052	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      BBHashExtractorFromIR() : ModulePass(<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {}<\/div>$/;"	a
l00052	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">DescriptorKind::FMul<\/a>);<\/div>$/;"	a
l00052	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525abd3dc39155f65dbcd61a8a02660b72aa">   52<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525abd3dc39155f65dbcd61a8a02660b72aa">FCmp<\/a> = 24,<\/div>$/;"	a
l00052	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        BasicBlock &amp;EntryBlock = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;getEntryBlock();<\/div>$/;"	a
l00052	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0a42815c96e082b2d600f6cd5f553e91">llvm::Instruction::SDiv<\/a>:<\/div>$/;"	a
l00052	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<span class="comment">    \/\/\/ the database.<\/span><\/div>$/;"	a
l00052	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      <span class="keywordflow">else<\/span><\/div>$/;"	a
l00052	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7035d403b2f7c353e8c5229cdc07cdc8">   52<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7035d403b2f7c353e8c5229cdc07cdc8">TailCallElimination<\/a>,<\/div>$/;"	a
l00052	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;  <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>  = (<span class="keywordtype">int<\/span>*)    malloc(<span class="keyword">sizeof<\/span>(<span class="keywordtype">int<\/span>)   *Size);<\/div>$/;"	a
l00052	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;    <span class="keywordflow">if<\/span> (BB.getInstList().size() &lt;= 3)  <\/div>$/;"	a
l00052	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      Function *LLVMFunc = LLVMModule-&gt;getFunction(FreqFunc-&gt;getName());<\/div>$/;"	a
l00052	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<span class="comment">    \/\/\/ \\brief The constructor needs a LLVM Module and two lists of buffers of<\/span><\/div>$/;"	a
l00052	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>, <\/div>$/;"	a
l00052	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>, <\/div>$/;"	a
l00052	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a1797b01df81cb4e30b8bbd34d5b337bb">instCostM<\/a>, <\/div>$/;"	a
l00052	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">   52<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">And<\/a>  = 20,<\/div>$/;"	a
l00052	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00052	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        BasicBlock &amp;EntryBlock = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;getEntryBlock();<\/div>$/;"	a
l00052	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>, <span class="stringliteral">&quot;No weight to basic blocks&quot;<\/span>),<\/div>$/;"	a
l00052	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div>$/;"	a
l00052	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">   52<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">And<\/a>  = 20,<\/div>$/;"	a
l00052	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00052	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        BasicBlock &amp;EntryBlock = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;getEntryBlock();<\/div>$/;"	a
l00053	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;};<\/div>$/;"	a
l00053	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00053	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">   53<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Store<\/a>= 25,<\/div>$/;"	a
l00053	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div>$/;"	a
l00053	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00053	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">   53<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">Store<\/a>= 25,<\/div>$/;"	a
l00053	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        EntryBlock.getInstList().push_front(InitPAPICall);<\/div>$/;"	a
l00053	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5ab66ee6d990657209434c5c244b015">llvm::Instruction::URem<\/a>:<\/div>$/;"	a
l00053	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;    sscanf(LineAndTail.first.str().c_str(), <span class="stringliteral">&quot;%s %lf&quot;<\/span>, HashString, &amp;Time); <\/div>$/;"	a
l00053	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">bool<\/span> <a class="code" href="classDatabaseManager.html#a2dcb3dcd91736442f20e71c73b82ef68">hasHash<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;) <span class="keyword">const<\/span>;<\/div>$/;"	a
l00053	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        errs() &lt;&lt; <span class="stringliteral">&quot;For hashPlusInstM you must pass a database filename with&quot;<\/span> &lt;&lt;<\/div>$/;"	a
l00053	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abad0ed8664bc8bc2f77877125160c7ad">   53<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abad0ed8664bc8bc2f77877125160c7ad">LowerSwitch<\/a>,<\/div>$/;"	a
l00053	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;  <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a> = (<span class="keywordtype">double<\/span>*) malloc(<span class="keyword">sizeof<\/span>(<span class="keywordtype">double<\/span>)*Size);<\/div>$/;"	a
l00053	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      PerformanceMensurment += <\/div>$/;"	a
l00053	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      assert(LLVMFunc != <span class="keyword">nullptr<\/span><\/div>$/;"	a
l00053	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="comment">    \/\/\/ GCOV files to create the profiling information. <\/span><\/div>$/;"	a
l00053	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by the sum up of all instruction cost&quot;<\/span>),<\/div>$/;"	a
l00053	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by the sum up of all instruction cost&quot;<\/span>),<\/div>$/;"	a
l00053	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by the sum up of all instruction cost&quot;<\/span>),<\/div>$/;"	a
l00053	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">   53<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">Or<\/a>   = 21,<\/div>$/;"	a
l00053	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      BBHash() : ModulePass(<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {}<\/div>$/;"	a
l00053	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        EntryBlock.getInstList().push_front(InitPAPICall);<\/div>$/;"	a
l00053	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>, <span class="stringliteral">&quot;Sum of the inst weight and hash weight&quot;<\/span>),<\/div>$/;"	a
l00053	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;  ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt;&gt; HashFileBuffer = <\/div>$/;"	a
l00053	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">   53<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">Or<\/a>   = 21,<\/div>$/;"	a
l00053	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;      BBHash() : ModulePass(<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {}<\/div>$/;"	a
l00053	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        EntryBlock.getInstList().push_front(InitPAPICall);<\/div>$/;"	a
l00054	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00054	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">Instruction::FDiv<\/a>: <\/div>$/;"	a
l00054	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">   54<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Load<\/a> = 26,<\/div>$/;"	a
l00054	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00054	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">Instruction::FDiv<\/a>: <\/div>$/;"	a
l00054	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">   54<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">Load<\/a> = 26,<\/div>$/;"	a
l00054	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5af2c83c184717144ccd1c4cfc1122a">llvm::Instruction::SRem<\/a>:<\/div>$/;"	a
l00054	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00054	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;          <span class="stringliteral">&quot; -database\\n&quot;<\/span>;<\/div>$/;"	a
l00054	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a025d613c10a52b67f0020e94624e7ea3">   54<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a025d613c10a52b67f0020e94624e7ea3">LowerInvoke<\/a>,<\/div>$/;"	a
l00054	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;  <a class="code" href="PAPI_8cpp.html#a121b8bab5c0ceda3e33140d406f4887e">SIZE<\/a>  = Size;<\/div>$/;"	a
l00054	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        (Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) + 1) * 100;<\/div>$/;"	a
l00054	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;          &amp;&amp; <span class="stringliteral">&quot;Trying to access a LLVM Function that don&#39;t exist!&quot;<\/span>);<\/div>$/;"	a
l00054	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfileModule.html">ProfileModule<\/a>(llvm::Module*, std::list&lt;llvm::MemoryBuffer*&gt;, <\/div>$/;"	a
l00054	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a>, <\/div>$/;"	a
l00054	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a>, <\/div>$/;"	a
l00054	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a3770f49b78f18f6ef54eb4ed2a5522be">hashWM<\/a>, <\/div>$/;"	a
l00054	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">   54<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">Xor<\/a>  = 22,<\/div>$/;"	a
l00054	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      clEnumValEnd));<\/div>$/;"	a
l00054	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;      MemoryBuffer::getFile(<a class="code" href="mergeDatabase_8cpp.html#abea0037e7534e741dea8f00a26aac0a9">HashFilename<\/a>);<\/div>$/;"	a
l00054	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">   54<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">Xor<\/a>  = 22,<\/div>$/;"	a
l00054	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00054	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div>$/;"	a
l00055	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses a weight given by the execution time of a similar <\/span><\/div>$/;"	a
l00055	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">Descriptor::FDiv<\/a>);<\/div>$/;"	a
l00055	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">   55<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">ExtractElement<\/a> = 27,<\/div>$/;"	a
l00055	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00055	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">DescriptorKind::FDiv<\/a>);<\/div>$/;"	a
l00055	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a534b45e4e8533fa4a26577c7f675eb93">   55<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a534b45e4e8533fa4a26577c7f675eb93">ExtractElement<\/a> = 27,<\/div>$/;"	a
l00055	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        CallInst *PrintPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00055	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ada89cb9eb438de663a3cc3083e0e8e4a">llvm::Instruction::Shl<\/a>:<\/div>$/;"	a
l00055	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;    insert(<a class="code" href="classBBHash.html">BBHash<\/a>(StringRef(HashString)), Time);<\/div>$/;"	a
l00055	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="comment">    \/\/\/ \\brief Insert a new value in the database. <\/span><\/div>$/;"	a
l00055	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00055	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7365676a83dff7e6184a13576e1c2e5b">   55<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7365676a83dff7e6184a13576e1c2e5b">LCSSA<\/a>,<\/div>$/;"	a
l00055	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00055	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;    <span class="keywordflow">else<\/span> <\/div>$/;"	a
l00055	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00055	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                  std::list&lt;llvm::MemoryBuffer*&gt;);<\/div>$/;"	a
l00055	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by similar basic block where which dimension has also a weight in the DB&quot;<\/span>),<\/div>$/;"	a
l00055	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by similar basic block where which dimension has also a weight in the DB&quot;<\/span>),<\/div>$/;"	a
l00055	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        <span class="stringliteral">&quot;Basic blocks are weighed by similar basic block where which dimension has also a weight in the DB&quot;<\/span>),<\/div>$/;"	a
l00055	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">   55<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">ICmp<\/a> = 23,<\/div>$/;"	a
l00055	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00055	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        CallInst *PrintPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00055	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00055	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div>$/;"	a
l00055	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">   55<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">ICmp<\/a> = 23,<\/div>$/;"	a
l00055	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00055	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        CallInst *PrintPAPICall = Builder.CreateCall(<\/div>$/;"	a
l00056	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="comment">\/\/\/ basic block. For that it uses a database of basic blocks and their execution<\/span><\/div>$/;"	a
l00056	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00056	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">   56<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">InsertElement<\/a>  = 28,<\/div>$/;"	a
l00056	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00056	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00056	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af2639ece9f498c75f97b782dfaa2070f">   56<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af2639ece9f498c75f97b782dfaa2070f">InsertElement<\/a>  = 28,<\/div>$/;"	a
l00056	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;print_results&quot;<\/span>));<\/div>$/;"	a
l00056	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3a793efa6f06f718ba358cc9d87057e4">llvm::Instruction::LShr<\/a>:<\/div>$/;"	a
l00056	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div>$/;"	a
l00056	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="comment"><\/span>    <span class="comment">\/\/ <\/span><span class="comment"><\/span><\/div>$/;"	a
l00056	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;    <span class="keywordflow">default<\/span>:<\/div>$/;"	a
l00056	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab2c9f9f5526207823da22e25f7665180">   56<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab2c9f9f5526207823da22e25f7665180">EarlyCSE<\/a>,<\/div>$/;"	a
l00056	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; Size; i++) {<\/div>$/;"	a
l00056	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      PerformanceMensurment += <\/div>$/;"	a
l00056	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      <span class="keyword">auto<\/span> MBB = FreqFunc-&gt;block_begin(); <\/div>$/;"	a
l00056	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div>$/;"	a
l00056	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed randomicly&quot;<\/span>),<\/div>$/;"	a
l00056	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed randomicly&quot;<\/span>),<\/div>$/;"	a
l00056	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a0778eb7d3fcfd6dc25c466524284acf0">randM<\/a>, <span class="stringliteral">&quot;Basic blocks are weighed randomicly&quot;<\/span>),<\/div>$/;"	a
l00056	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">   56<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">FCmp<\/a> = 24,<\/div>$/;"	a
l00056	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00056	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;print_results&quot;<\/span>));<\/div>$/;"	a
l00056	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>(<span class="stringliteral">&quot;database&quot;<\/span>, <\/div>$/;"	a
l00056	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;  ErrorOr&lt;std::unique_ptr&lt;MemoryBuffer&gt;&gt; ProfFileBuffer = <\/div>$/;"	a
l00056	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">   56<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">FCmp<\/a> = 24,<\/div>$/;"	a
l00056	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00056	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            M.getFunction(<span class="stringliteral">&quot;print_results&quot;<\/span>));<\/div>$/;"	a
l00057	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="comment">\/\/\/ time. The search on the database in made using weights for each part of the<\/span><\/div>$/;"	a
l00057	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">Instruction::Add<\/a>:<\/div>$/;"	a
l00057	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">   57<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">ShuffleVector<\/a>  = 29,<\/div>$/;"	a
l00057	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;          <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00057	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0d592a4b562059bc283e00b3704865c9">Instruction::Add<\/a>:<\/div>$/;"	a
l00057	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af15d4290da98fa835a47cecc79858b9e">   57<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af15d4290da98fa835a47cecc79858b9e">ShuffleVector<\/a>  = 29,<\/div>$/;"	a
l00057	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00057	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a23b18dbda8a7bb16cc9ebbff8c6941a2">llvm::Instruction::AShr<\/a>:<\/div>$/;"	a
l00057	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    LineAndTail = LineAndTail.second.split(<span class="charliteral">&#39;\\n&#39;<\/span>); <\/div>$/;"	a
l00057	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="comment">    \/\/\/ \\param The first parameter is the hash and the second is the execution<\/span><\/div>$/;"	a
l00057	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      Analyser = <span class="keyword">new<\/span> <a class="code" href="classInstructionMethod.html">InstructionMethod<\/a>();<\/div>$/;"	a
l00057	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a527ed22e9bd4554234f7f64e51f555c0">   57<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a527ed22e9bd4554234f7f64e51f555c0">MergedLoadStoreMotion<\/a>,<\/div>$/;"	a
l00057	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>[i]  = 0;<\/div>$/;"	a
l00057	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        (Freq.<a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(&amp;BB) + 1) * pow(Times[i], 2);<\/div>$/;"	a
l00057	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      ++MBB;<\/div>$/;"	a
l00057	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00057	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>, <span class="stringliteral">&quot;No weight to basic blocks&quot;<\/span>),<\/div>$/;"	a
l00057	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>, <span class="stringliteral">&quot;No weight to basic blocks&quot;<\/span>),<\/div>$/;"	a
l00057	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a80220be0d669ac4264f7e49fe8f96369">freqM<\/a>, <span class="stringliteral">&quot;No weight to basic blocks&quot;<\/span>),<\/div>$/;"	a
l00057	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">   57<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Store<\/a>= 25,<\/div>$/;"	a
l00057	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00057	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00057	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    cl::desc(<span class="stringliteral">&quot;Hashs database to hashM analysis&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>));<\/div>$/;"	a
l00057	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;      MemoryBuffer::getFile(<a class="code" href="mergeDatabase_8cpp.html#aadb1ba8554c12536ac3b2b590a7f711a">ProfFilename<\/a>);<\/div>$/;"	a
l00057	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">   57<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Store<\/a>= 25,<\/div>$/;"	a
l00057	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00057	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div>$/;"	a
l00058	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="comment">\/\/\/ hash. For instance, double multiplication has a higher weight when looking <\/span><\/div>$/;"	a
l00058	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0d592a4b562059bc283e00b3704865c9">Descriptor::Add<\/a>);<\/div>$/;"	a
l00058	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">   58<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">Calls<\/a>  = 30,<\/div>$/;"	a
l00058	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            runOnBasicBlock(BB, i++);<\/div>$/;"	a
l00058	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0d592a4b562059bc283e00b3704865c9">DescriptorKind::Add<\/a>);<\/div>$/;"	a
l00058	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a1c3802a27c2777c6611cb5c030b7d0">   58<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a1c3802a27c2777c6611cb5c030b7d0">Calls<\/a>  = 30,<\/div>$/;"	a
l00058	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        BasicBlock &amp;EndBlock   = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;back();<\/div>$/;"	a
l00058	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a60b042c2c7da21af2ed42f8cc27e7ff8">llvm::Instruction::And<\/a>:<\/div>$/;"	a
l00058	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;  }<\/div>$/;"	a
l00058	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="comment">    \/\/\/  time of this hash. <\/span><\/div>$/;"	a
l00058	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00058	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5afe0554beb62294243661aa546ca529ee">   58<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5afe0554beb62294243661aa546ca529ee">GVN<\/a>,<\/div>$/;"	a
l00058	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;    <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>[i] = 0;<\/div>$/;"	a
l00058	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div>$/;"	a
l00058	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : *LLVMFunc) {<\/div>$/;"	a
l00058	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns its LLVM Module.<\/span><\/div>$/;"	a
l00058	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>, <span class="stringliteral">&quot;Sum of the inst weight and hash weight&quot;<\/span>),<\/div>$/;"	a
l00058	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>, <span class="stringliteral">&quot;Sum of the inst weight and hash weight&quot;<\/span>),<\/div>$/;"	a
l00058	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;      clEnumVal(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2a09b606c549042b5f90315e677e9b1b64">hashPlusInstM<\/a>, <span class="stringliteral">&quot;Sum of the inst weight and hash weight&quot;<\/span>),<\/div>$/;"	a
l00058	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">   58<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Load<\/a> = 26,<\/div>$/;"	a
l00058	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;          <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00058	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        BasicBlock &amp;EndBlock   = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;back();<\/div>$/;"	a
l00058	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00058	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div>$/;"	a
l00058	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">   58<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Load<\/a> = 26,<\/div>$/;"	a
l00058	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;          <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00058	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        BasicBlock &amp;EndBlock   = M.getFunction(<span class="stringliteral">&quot;main&quot;<\/span>)-&gt;back();<\/div>$/;"	a
l00059	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="comment">\/\/\/ for similar basic blocks. Finally, this weight is multiplied by the <\/span><\/div>$/;"	a
l00059	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00059	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">   59<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">Printf<\/a> = 31,<\/div>$/;"	a
l00059	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00059	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00059	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9d1256d31c3c650658176f4203795bd8">   59<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9d1256d31c3c650658176f4203795bd8">Printf<\/a> = 31,<\/div>$/;"	a
l00059	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        EndBlock.getInstList().insert(<\/div>$/;"	a
l00059	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a5d66935f41f1e80990e8bf3349074fe1">llvm::Instruction::Or<\/a>:<\/div>$/;"	a
l00059	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;}<\/div>$/;"	a
l00059	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#a2a26f10fb144de273aa8e50a27896dbb">insert<\/a>(<a class="code" href="classBBHash.html">BBHash<\/a>, <span class="keywordtype">double<\/span>);<\/div>$/;"	a
l00059	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;  }<\/div>$/;"	a
l00059	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abe07fed8addc43a91ae8ba1018a4b3d3">   59<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abe07fed8addc43a91ae8ba1018a4b3d3">MemCpyOpt<\/a>,<\/div>$/;"	a
l00059	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;  }<\/div>$/;"	a
l00059	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    i++;<\/div>$/;"	a
l00059	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        BasicBlockFrequency[BB.getName()] = (*MBB).get()-&gt;getCount();<\/div>$/;"	a
l00059	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="comment"><\/span>    llvm::Module* <a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>() <span class="keyword">const<\/span>;<\/div>$/;"	a
l00059	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;      clEnumValEnd));<\/div>$/;"	a
l00059	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;      clEnumValEnd));<\/div>$/;"	a
l00059	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;      clEnumValEnd));<\/div>$/;"	a
l00059	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">   59<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">ExtractElement<\/a> = 27,<\/div>$/;"	a
l00059	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            runOnBasicBlock(BB, i++);<\/div>$/;"	a
l00059	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        EndBlock.getInstList().insert(<\/div>$/;"	a
l00059	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<a class="code" href="main_8cpp.html#acf94f51298fad86b4c6764bcbcca1326">dbAlias<\/a>(<span class="stringliteral">&quot;db&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -database&quot;<\/span>), cl::aliasopt(<a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>));<\/div>$/;"	a
l00059	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;  <a class="code" href="classDatabaseManager.html">DatabaseManager<\/a> DBManager(<a class="code" href="mergeDatabase_8cpp.html#a55b7f43cf34c884a1c549502b46685e2">DatabaseFilename<\/a>);<\/div>$/;"	a
l00059	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">   59<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">ExtractElement<\/a> = 27,<\/div>$/;"	a
l00059	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            runOnBasicBlock(BB, i++);<\/div>$/;"	a
l00059	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        EndBlock.getInstList().insert(<\/div>$/;"	a
l00060	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="comment">\/\/\/ execution frequency to evaluate the execution cost of the given function. <\/span><\/div>$/;"	a
l00060	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">Instruction::Sub<\/a>:<\/div>$/;"	a
l00060	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">   60<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">Malloc<\/a> = 32,<\/div>$/;"	a
l00060	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;      }<\/div>$/;"	a
l00060	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3e53f06234367d0e453fa5ea0ad2ab34">Instruction::Sub<\/a>:<\/div>$/;"	a
l00060	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a98c8ebeff4cef657037fc44f78f4e5">   60<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a98c8ebeff4cef657037fc44f78f4e5">Malloc<\/a> = 32,<\/div>$/;"	a
l00060	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            EndBlock.getInstList().back(), PrintPAPICall);<\/div>$/;"	a
l00060	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ae45372bd1178d94321b72f6261a3020a">llvm::Instruction::Xor<\/a>: <\/div>$/;"	a
l00060	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00060	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a03796968d0d7da4918261cb7387e13b9">   60<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a03796968d0d7da4918261cb7387e13b9">LoopDeletion<\/a>,<\/div>$/;"	a
l00060	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;  } <\/div>$/;"	a
l00060	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;        ++MBB;<\/div>$/;"	a
l00060	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00060	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">   60<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">InsertElement<\/a>  = 28,<\/div>$/;"	a
l00060	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            EndBlock.getInstList().back(), PrintPAPICall);<\/div>$/;"	a
l00060	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">   60<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">InsertElement<\/a>  = 28,<\/div>$/;"	a
l00060	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div>$/;"	a
l00060	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            EndBlock.getInstList().back(), PrintPAPICall);<\/div>$/;"	a
l00061	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="classHashWeightedMethod.html">   61<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classHashWeightedMethod.html">HashWeightedMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00061	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3e53f06234367d0e453fa5ea0ad2ab34">Descriptor::Sub<\/a>);<\/div>$/;"	a
l00061	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">   61<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">Pow<\/a>    = 33,<\/div>$/;"	a
l00061	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  };<\/div>$/;"	a
l00061	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3e53f06234367d0e453fa5ea0ad2ab34">DescriptorKind::Sub<\/a>);<\/div>$/;"	a
l00061	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a54cc8639b2ae32fad159203ab1b7aa4a">   61<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a54cc8639b2ae32fad159203ab1b7aa4a">Pow<\/a>    = 33,<\/div>$/;"	a
l00061	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;      }<\/div>$/;"	a
l00061	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00061	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#a88c96f35ec87bc4bd76bd81c70c4f37b">   61<\/a><\/span>&#160;<a class="code" href="classDatabaseManager.html#a88c96f35ec87bc4bd76bd81c70c4f37b">DatabaseManager::DatabaseManager<\/a>(StringRef Filename) {<\/div>$/;"	a
l00061	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="comment">    \/\/\/ \\brief This function merge the database with the one given as parameter.<\/span><\/div>$/;"	a
l00061	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  <span class="keywordflow">return<\/span> Analyser;<\/div>$/;"	a
l00061	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a12e0179653d92bc95fbce96b1e16eca5">   61<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a12e0179653d92bc95fbce96b1e16eca5">ConstantHoisting<\/a>,<\/div>$/;"	a
l00061	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  PAPI_library_init(PAPI_VER_CURRENT);<\/div>$/;"	a
l00061	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div>$/;"	a
l00061	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;      }<\/div>$/;"	a
l00061	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="comment">    \/\/\/ \\brief For each Basic Block in the CFG, the predecessors and successors <\/span><\/div>$/;"	a
l00061	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <a class="code" href="RandomOnFunction_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>(<span class="stringliteral">&quot;database&quot;<\/span>, <\/div>$/;"	a
l00061	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <a class="code" href="Random_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>(<span class="stringliteral">&quot;database&quot;<\/span>, <\/div>$/;"	a
l00061	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;std::string&gt; <a class="code" href="Test_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>(<span class="stringliteral">&quot;database&quot;<\/span>, <\/div>$/;"	a
l00061	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">   61<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">ShuffleVector<\/a>  = 29,<\/div>$/;"	a
l00061	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00061	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;      }<\/div>$/;"	a
l00061	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="main_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">   61<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="main_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span>** argv) {<\/div>$/;"	a
l00061	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;  std::unordered_map&lt;int, BBHash*&gt; Hashs;<\/div>$/;"	a
l00061	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">   61<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">ShuffleVector<\/a>  = 29,<\/div>$/;"	a
l00061	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00061	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;      }<\/div>$/;"	a
l00062	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00062	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00062	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">   62<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">Sqrt<\/a>   = 34,<\/div>$/;"	a
l00062	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;}<\/div>$/;"	a
l00062	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00062	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a98095238a325acc3b59341ba5367172d">   62<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a98095238a325acc3b59341ba5367172d">Sqrt<\/a>   = 34,<\/div>$/;"	a
l00062	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div>$/;"	a
l00062	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::Select: <\/div>$/;"	a
l00062	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  <a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a> = <a class="code" href="classBBHash.html#ad67c68af87d6ae7a41ff090a648628f9">BBHash::getRandomHash<\/a>();<\/div>$/;"	a
l00062	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#aafc4eab876b4ea38c1a7cbcd3a018ec3">unionWith<\/a>(<a class="code" href="classDatabaseManager.html">DatabaseManager<\/a>&amp;);<\/div>$/;"	a
l00062	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;}<\/div>$/;"	a
l00062	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a1ab79cf046523776775dde58f8e1f43c">   62<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a1ab79cf046523776775dde58f8e1f43c">InstructionNamer<\/a>,<\/div>$/;"	a
l00062	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  Events[0] = PAPI_TOT_CYC;<\/div>$/;"	a
l00062	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00062	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    }<\/div>$/;"	a
l00062	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="comment">    \/\/\/ are used to update or find its execution frequency.<\/span><\/div>$/;"	a
l00062	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    cl::desc(<span class="stringliteral">&quot;Hashs database to hashM analysis&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>));<\/div>$/;"	a
l00062	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    cl::desc(<span class="stringliteral">&quot;Hashs database to hashM analysis&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>));<\/div>$/;"	a
l00062	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    cl::desc(<span class="stringliteral">&quot;Hashs database to hashM analysis&quot;<\/span>), cl::value_desc(<span class="stringliteral">&quot;filename&quot;<\/span>));<\/div>$/;"	a
l00062	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">   62<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">Calls<\/a>  = 30,<\/div>$/;"	a
l00062	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;      }<\/div>$/;"	a
l00062	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div>$/;"	a
l00062	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  LLVMContext Context;<\/div>$/;"	a
l00062	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;  std::unordered_map&lt;int, double&gt; Times;<\/div>$/;"	a
l00062	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">   62<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">Calls<\/a>  = 30,<\/div>$/;"	a
l00062	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;      }<\/div>$/;"	a
l00062	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div>$/;"	a
l00063	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="comment">    \/\/\/ \\brief It needs a basic block database.<\/span><\/div>$/;"	a
l00063	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">Instruction::Mul<\/a>:<\/div>$/;"	a
l00063	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">   63<\/a><\/span>&#160;  <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">Others<\/a> = 35<\/div>$/;"	a
l00063	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBHashExtractorFromIR::ID<\/a> = 0;<\/div>$/;"	a
l00063	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ad1a89d2811b2de2dd196b698721391d6">Instruction::Mul<\/a>:<\/div>$/;"	a
l00063	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a7b3bd5673549b8be99b2a31a5a142227">   63<\/a><\/span>&#160;  <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a7b3bd5673549b8be99b2a31a5a142227">Others<\/a> = 35<\/div>$/;"	a
l00063	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;      <span class="keywordtype">void<\/span> declarePAPIFunctions(Module &amp;M) {<\/div>$/;"	a
l00063	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00063	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  loadDatabase(Filename); <\/div>$/;"	a
l00063	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00063	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div>$/;"	a
l00063	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0f509a1370158f1c4377f54c662f83ab">   63<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0f509a1370158f1c4377f54c662f83ab">Sink<\/a>,<\/div>$/;"	a
l00063	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  Events[1] = PAPI_TOT_INS;<\/div>$/;"	a
l00063	docs/html/ProfMethod_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;} <\/div>$/;"	a
l00063	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div>$/;"	a
l00063	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classProfileModule.html#a17cad3a7d951ee78efd7b30cc3a423ce">repairFunctionProfiling<\/a>(llvm::Function*);<\/div>$/;"	a
l00063	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00063	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00063	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00063	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">   63<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">Printf<\/a> = 31,<\/div>$/;"	a
l00063	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  };<\/div>$/;"	a
l00063	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;      <span class="keywordtype">void<\/span> declarePAPIFunctions(Module &amp;M) {<\/div>$/;"	a
l00063	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  SMDiagnostic Error;<\/div>$/;"	a
l00063	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div>$/;"	a
l00063	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">   63<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">Printf<\/a> = 31,<\/div>$/;"	a
l00063	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;  };<\/div>$/;"	a
l00063	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;      <span class="keywordtype">void<\/span> declarePAPIFunctions(Module &amp;M) {<\/div>$/;"	a
l00064	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classDatabaseManager.html">DatabaseManager<\/a> *DBManager;<\/div>$/;"	a
l00064	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ad1a89d2811b2de2dd196b698721391d6">Descriptor::Mul<\/a>);<\/div>$/;"	a
l00064	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;};<\/div>$/;"	a
l00064	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBHashExtractorFromIR&gt; <\/div>$/;"	a
l00064	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ad1a89d2811b2de2dd196b698721391d6">DescriptorKind::Mul<\/a>);<\/div>$/;"	a
l00064	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;};<\/div>$/;"	a
l00064	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00064	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1fa31f7df0a5328abd3c103219b95884">llvm::Instruction::ICmp<\/a>:<\/div>$/;"	a
l00064	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;}<\/div>$/;"	a
l00064	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="comment">    \/\/\/ \\brief Prints all the database. Each new line contains a hash and its <\/span><\/div>$/;"	a
l00064	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">   64<\/a><\/span>&#160;Pass* <a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a> OptChoosed) {<\/div>$/;"	a
l00064	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4b4c47fd0dafd1f98d0c4ca9f86c0fa9">   64<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4b4c47fd0dafd1f98d0c4ca9f86c0fa9">LowerAtomic<\/a>,<\/div>$/;"	a
l00064	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;  <a class="code" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">getEmpty<\/a>(Events, Values);<\/div>$/;"	a
l00064	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;    iGCDA++;<\/div>$/;"	a
l00064	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00064	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<a class="code" href="RandomOnFunction_8cpp.html#acf94f51298fad86b4c6764bcbcca1326">dbAlias<\/a>(<span class="stringliteral">&quot;db&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -database&quot;<\/span>), cl::aliasopt(<a class="code" href="RandomOnFunction_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>));<\/div>$/;"	a
l00064	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<a class="code" href="Random_8cpp.html#acf94f51298fad86b4c6764bcbcca1326">dbAlias<\/a>(<span class="stringliteral">&quot;db&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -database&quot;<\/span>), cl::aliasopt(<a class="code" href="Random_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>));<\/div>$/;"	a
l00064	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<a class="code" href="Test_8cpp.html#acf94f51298fad86b4c6764bcbcca1326">dbAlias<\/a>(<span class="stringliteral">&quot;db&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -database&quot;<\/span>), cl::aliasopt(<a class="code" href="Test_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>));<\/div>$/;"	a
l00064	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">   64<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">Malloc<\/a> = 32,<\/div>$/;"	a
l00064	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;}<\/div>$/;"	a
l00064	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00064	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div>$/;"	a
l00064	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;  std::pair&lt;StringRef, StringRef&gt; HashLineAndTail =<\/div>$/;"	a
l00064	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">   64<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">Malloc<\/a> = 32,<\/div>$/;"	a
l00064	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;}<\/div>$/;"	a
l00064	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        IRBuilder&lt;&gt; Builder(M.getContext());<\/div>$/;"	a
l00065	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00065	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00065	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00065	docs/html/BBHashExtractorFromIR_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;  <a class="code" href="BBHashExtractorFromIR_8cpp.html#a23a636a06d9b9290103d523e79f4b47b">Y<\/a>(<span class="stringliteral">&quot;extract-bb-hash&quot;<\/span>, <span class="stringliteral">&quot;BB-Hash for Basic Block database&quot;<\/span>);<\/div>$/;"	a
l00065	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00065	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525abd3dc39155f65dbcd61a8a02660b72aa">llvm::Instruction::FCmp<\/a>: <\/div>$/;"	a
l00065	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="comment">    \/\/\/ execution time separated by space. <\/span><\/div>$/;"	a
l00065	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;  <span class="keywordflow">switch<\/span>(OptChoosed) {<\/div>$/;"	a
l00065	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a34a5f96302b5b61d024d4d13e1e806ac">   65<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a34a5f96302b5b61d024d4d13e1e806ac">ValuePropagation<\/a>,<\/div>$/;"	a
l00065	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;}<\/div>$/;"	a
l00065	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;    iGCNO++;<\/div>$/;"	a
l00065	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="comment">    \/\/\/ \\brief For each function in the ProfileModule it calls<\/span><\/div>$/;"	a
l00065	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">   65<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">Pow<\/a>    = 33,<\/div>$/;"	a
l00065	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;  cl::ParseCommandLineOptions(argc, argv);<\/div>$/;"	a
l00065	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;      (*HashFileBuffer)-&gt;getBuffer().split(<span class="charliteral">&#39;\\n&#39;<\/span>);<\/div>$/;"	a
l00065	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">   65<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">Pow<\/a>    = 33,<\/div>$/;"	a
l00065	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00065	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div>$/;"	a
l00066	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="comment">    \/\/\/ \\brief The constructor needs a string with the path to the database <\/span><\/div>$/;"	a
l00066	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">Instruction::UDiv<\/a>:<\/div>$/;"	a
l00066	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsible for representing BB&#39;s hashes in memory. <\/span><\/div>$/;"	a
l00066	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a450e6aabe3299214f6227faeee262109">Instruction::UDiv<\/a>:<\/div>$/;"	a
l00066	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00066	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;        <span class="comment">\/\/ declare void @PAPI_shutdown()<\/span><\/div>$/;"	a
l00066	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00066	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#aa862ee94fbe4124adb856abcf0e4f159">   66<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="classDatabaseManager.html#aa862ee94fbe4124adb856abcf0e4f159">DatabaseManager::size<\/a>()<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00066	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#ad7bb44ea2911e16f090c176a84e92ed2">printDatabase<\/a>() <span class="keyword">const<\/span>;<\/div>$/;"	a
l00066	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adaca107cdd5179bc30b56f2f343b6ee1">ConstantPropagation<\/a>:<\/div>$/;"	a
l00066	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0ee6ba68a5f5541b3bd7363e17acb134">   66<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0ee6ba68a5f5541b3bd7363e17acb134">InstructionSimplifier<\/a>,<\/div>$/;"	a
l00066	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div>$/;"	a
l00066	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;  }<\/div>$/;"	a
l00066	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="comment">    \/\/\/ repairFunctionProfiling<\/span><\/div>$/;"	a
l00066	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="RandomOnFunction_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">   66<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="RandomOnFunction_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(<a class="code" href="classProfileModule.html">ProfileModule<\/a>* P, <span class="keywordtype">int<\/span> Id) {<\/div>$/;"	a
l00066	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="Random_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">   66<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="Random_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(<a class="code" href="classProfileModule.html">ProfileModule<\/a>* P, <span class="keywordtype">int<\/span> Id) {<\/div>$/;"	a
l00066	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="keyword">static<\/span> cl::opt&lt;double&gt; <\/div>$/;"	a
l00066	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">   66<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">Sqrt<\/a>   = 34,<\/div>$/;"	a
l00066	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBHash::ID<\/a> = 0;<\/div>$/;"	a
l00066	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;        <span class="comment">\/\/ declare void @PAPI_shutdown()<\/span><\/div>$/;"	a
l00066	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div>$/;"	a
l00066	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div>$/;"	a
l00066	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">   66<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">Sqrt<\/a>   = 34,<\/div>$/;"	a
l00066	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBHash::ID<\/a> = 0;<\/div>$/;"	a
l00066	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;        <span class="comment">\/\/ declare void @PAPI_shutdown()<\/span><\/div>$/;"	a
l00067	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="comment">    \/\/\/ file.<\/span><\/div>$/;"	a
l00067	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a450e6aabe3299214f6227faeee262109">Descriptor::UDiv<\/a>);<\/div>$/;"	a
l00067	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="comment">\/\/\/ It can be constructed by a string (hash representation in the file) or by <\/span><\/div>$/;"	a
l00067	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a450e6aabe3299214f6227faeee262109">DescriptorKind::UDiv<\/a>);<\/div>$/;"	a
l00067	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsible for representing BB&#39;s hashes in memory. <\/span><\/div>$/;"	a
l00067	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        FunctionType *FuncType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">false<\/span>);<\/div>$/;"	a
l00067	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">llvm::Instruction::Store<\/a>: <\/div>$/;"	a
l00067	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  <span class="keywordflow">return<\/span> DB.size();<\/div>$/;"	a
l00067	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00067	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;      <span class="keywordflow">return<\/span> createConstantPropagationPass();<\/div>$/;"	a
l00067	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a270e2819a101ba32f04da104c6c5beba">   67<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a270e2819a101ba32f04da104c6c5beba">LowerExpectInstrinsics<\/a>,<\/div>$/;"	a
l00067	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a55995c266cf6b88f45fed6f5c8c20ff6">   67<\/a><\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="PAPI_8cpp.html#a55995c266cf6b88f45fed6f5c8c20ff6">get_time_stamp<\/a>() {<\/div>$/;"	a
l00067	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;}<\/div>$/;"	a
l00067	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classProfileModule.html#acc69d694de56150b427b9a97218010f4">repairProfiling<\/a>();<\/div>$/;"	a
l00067	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  <span class="keywordtype">char<\/span> FileName[20];<\/div>$/;"	a
l00067	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  <span class="keywordtype">char<\/span> FileName[20];<\/div>$/;"	a
l00067	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<a class="code" href="Test_8cpp.html#a67e68f6e074606a4f8b3dca3bc12dd38">CPUFreq<\/a>(<span class="stringliteral">&quot;cpu-freq&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;defines CPU Clock rate.&quot;<\/span>), <\/div>$/;"	a
l00067	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">   67<\/a><\/span>&#160;  <a class="code" href="include_2llvm_2Analysis_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">Others<\/a> = 35<\/div>$/;"	a
l00067	docs/html/lib_2Transforms_2BBHash_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBHash&gt; <a class="code" href="lib_2Transforms_2BBHash_2BBHash_8cpp.html#afe4c4c12132ac00a60d7c2fe98670fe4">Y<\/a>(<span class="stringliteral">&quot;bb-hash&quot;<\/span>, <span class="stringliteral">&quot;BB-Hash for Basic Block database&quot;<\/span>);<\/div>$/;"	a
l00067	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        FunctionType *funcType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">false<\/span>);<\/div>$/;"	a
l00067	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  std::unique_ptr&lt;Module&gt; MyModule = parseIRFile(<a class="code" href="main_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>.c_str(),<\/div>$/;"	a
l00067	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;  <span class="keywordflow">while<\/span> (!HashLineAndTail.first.empty()) {<\/div>$/;"	a
l00067	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">   67<\/a><\/span>&#160;  <a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a7b3bd5673549b8be99b2a31a5a142227">Others<\/a> = 35<\/div>$/;"	a
l00067	docs/html/projects_2llvm-project_2src_2passes_2BBHash_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBHash&gt; <a class="code" href="projects_2llvm-project_2src_2passes_2BBHash_8cpp.html#afe4c4c12132ac00a60d7c2fe98670fe4">Y<\/a>(<span class="stringliteral">&quot;bb-hash&quot;<\/span>, <span class="stringliteral">&quot;BB-Hash for Basic Block database&quot;<\/span>);<\/div>$/;"	a
l00067	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        FunctionType *funcType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">false<\/span>);<\/div>$/;"	a
l00068	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classHashWeightedMethod.html#af93c7d3bc87656111b93bfa1a022755c">HashWeightedMethod<\/a>(llvm::StringRef);<\/div>$/;"	a
l00068	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00068	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="comment">\/\/\/ a basic block that will serve as a base to create a new hash.<\/span><\/div>$/;"	a
l00068	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00068	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="comment">\/\/\/ It can be constructed by a string (hash representation in the file) or by <\/span><\/div>$/;"	a
l00068	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        Function *F = Function::Create(FuncType, Function::ExternalLinkage, <\/div>$/;"	a
l00068	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00068	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;}<\/div>$/;"	a
l00068	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns the nearest BBHash from the given parameter in the <\/span><\/div>$/;"	a
l00068	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aa2596c509790d24bfc5127b1ee650824">AlignmentFromAssumptions<\/a>:<\/div>$/;"	a
l00068	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a05079b1e604d6658999fd3fd9d93ae01">   68<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a05079b1e604d6658999fd3fd9d93ae01">PartiallyInlineLibCalls<\/a>,<\/div>$/;"	a
l00068	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;  PAPI_stop_counters(Values, 2);<\/div>$/;"	a
l00068	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div>$/;"	a
l00068	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00068	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;  sprintf(FileName, <span class="stringliteral">&quot;%d.ll&quot;<\/span>, Id);<\/div>$/;"	a
l00068	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;  sprintf(FileName, <span class="stringliteral">&quot;%d.ll&quot;<\/span>, Id);<\/div>$/;"	a
l00068	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    cl::value_desc(<span class="stringliteral">&quot;CPU Clock&quot;<\/span>),<\/div>$/;"	a
l00068	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;};<\/div>$/;"	a
l00068	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        Function *F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00068	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;      Error, Context);<\/div>$/;"	a
l00068	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;    <span class="keywordtype">int<\/span> Id;<\/div>$/;"	a
l00068	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;};<\/div>$/;"	a
l00068	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        Function *F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00069	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div>$/;"	a
l00069	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">Instruction::SDiv<\/a>:<\/div>$/;"	a
l00069	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html">   69<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> {<\/div>$/;"	a
l00069	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0a42815c96e082b2d600f6cd5f553e91">Instruction::SDiv<\/a>:<\/div>$/;"	a
l00069	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="comment">\/\/\/ a basic block that will serve as a base to create a new hash.<\/span><\/div>$/;"	a
l00069	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="stringliteral">&quot;PAPI_shutdown&quot;<\/span>, &amp;M);<\/div>$/;"	a
l00069	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">llvm::Instruction::Load<\/a>: <\/div>$/;"	a
l00069	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div>$/;"	a
l00069	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="comment">    \/\/\/ database. <\/span><\/div>$/;"	a
l00069	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;      <span class="keywordflow">return<\/span> createAlignmentFromAssumptionsPass();<\/div>$/;"	a
l00069	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ad5bd29ef518c0bcfb699f217e7d9157d">   69<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ad5bd29ef518c0bcfb699f217e7d9157d">SampleProfilePass<\/a>,<\/div>$/;"	a
l00069	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;  <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">int<\/span> Values2[2];<\/div>$/;"	a
l00069	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;ProfileModule::ProfileModule(Module *M, <\/div>$/;"	a
l00069	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns true if the execution frequency of the given BasicBlock<\/span><\/div>$/;"	a
l00069	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;  std::error_code Err;<\/div>$/;"	a
l00069	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;  std::error_code Err;<\/div>$/;"	a
l00069	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;    cl::Required);<\/div>$/;"	a
l00069	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00069	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="stringliteral">&quot;PAPI_shutdown&quot;<\/span>, &amp;M);<\/div>$/;"	a
l00069	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div>$/;"	a
l00069	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;    <span class="keywordtype">char<\/span> HashString[1000];<\/div>$/;"	a
l00069	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00069	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="stringliteral">&quot;PAPI_shutdown&quot;<\/span>, &amp;M);<\/div>$/;"	a
l00070	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="classHashWeightedMethod.html#a33e1307a0b6f58ac0ecb0260765e18b7">   70<\/a><\/span>&#160;    <a class="code" href="classHashWeightedMethod.html#a33e1307a0b6f58ac0ecb0260765e18b7">~HashWeightedMethod<\/a>() { <span class="keyword">delete<\/span> DBManager; };<\/div>$/;"	a
l00070	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a0a42815c96e082b2d600f6cd5f553e91">Descriptor::SDiv<\/a>);<\/div>$/;"	a
l00070	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00070	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a0a42815c96e082b2d600f6cd5f553e91">DescriptorKind::SDiv<\/a>);<\/div>$/;"	a
l00070	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="classBBHash.html">   70<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classBBHash.html">BBHash<\/a> {<\/div>$/;"	a
l00070	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00070	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00070	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#aa4d00f4e14b0618ec9aa6768669cbe27">   70<\/a><\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classDatabaseManager.html#aa4d00f4e14b0618ec9aa6768669cbe27">DatabaseManager::getTime<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;Hash)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00070	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="classDatabaseManager.html#aca5446aa25db9caa7b218daab7933d58">getNearest<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;) <span class="keyword">const<\/span>;<\/div>$/;"	a
l00070	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="comment">\/\/case SCCP:<\/span><\/div>$/;"	a
l00070	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adeb3508f157a29e0161dcebc32466231">   70<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adeb3508f157a29e0161dcebc32466231">ScalarizerPass<\/a>,<\/div>$/;"	a
l00070	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  Empty = <a class="code" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">getEmpty<\/a>(Events, Values2);<\/div>$/;"	a
l00070	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;    <span class="keyword">const<\/span> std::unordered_map&lt;std::string, uint64_t&gt;&amp; BBFrequnecy) {<\/div>$/;"	a
l00070	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="comment">    \/\/\/ is known, otherwise returns false.<\/span><\/div>$/;"	a
l00070	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  raw_fd_ostream *Out = <\/div>$/;"	a
l00070	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  raw_fd_ostream *Out = <\/div>$/;"	a
l00070	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="keyword">static<\/span> cl::alias <\/div>$/;"	a
l00070	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsible for representing BB&#39;s hashes in memory. <\/span><\/div>$/;"	a
l00070	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00070	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCNOList;<\/div>$/;"	a
l00070	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div>$/;"	a
l00070	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="comment">\/\/\/ \\brief This class is responsible for representing BB&#39;s hashes in memory. <\/span><\/div>$/;"	a
l00070	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00071	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00071	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="comment">    \/\/\/ \\brief size of the hash. Need to be the same size of the enum <\/span><\/div>$/;"	a
l00071	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00071	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00071	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::ZExt:<\/div>$/;"	a
l00071	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  <span class="keywordflow">if<\/span>(hasHash(Hash))<\/div>$/;"	a
l00071	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <span class="comment">\/\/  return createSCCPPass();<\/span><\/div>$/;"	a
l00071	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6697a940304ba73825979a1f45258d14">   71<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6697a940304ba73825979a1f45258d14">AddDiscriminators<\/a>,<\/div>$/;"	a
l00071	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  <span class="keywordtype">double<\/span> Stamp = 1.0\/((Values[1] - Empty) \/ ((<span class="keywordtype">double<\/span>)Values[1]\/Values[0]));<\/div>$/;"	a
l00071	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  LLVMModule = M;<\/div>$/;"	a
l00071	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">bool<\/span> <a class="code" href="classProfileModule.html#a08667492bbf4986b6b7752ccf0a05610">hasBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> llvm::BasicBlock*) <span class="keyword">const<\/span>;<\/div>$/;"	a
l00071	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <span class="keyword">new<\/span> raw_fd_ostream(FileName, Err, llvm::sys::fs::OpenFlags::F_Excl);<\/div>$/;"	a
l00071	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    <span class="keyword">new<\/span> raw_fd_ostream(FileName, Err, llvm::sys::fs::OpenFlags::F_Excl);<\/div>$/;"	a
l00071	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<a class="code" href="Test_8cpp.html#acfbbfe6abc822375d9585039a554e338">CPUAlias<\/a>(<span class="stringliteral">&quot;f&quot;<\/span>, cl::desc(<span class="stringliteral">&quot;Alias for -cpu-freq&quot;<\/span>), cl::aliasopt(<a class="code" href="Test_8cpp.html#a67e68f6e074606a4f8b3dca3bc12dd38">CPUFreq<\/a>));<\/div>$/;"	a
l00071	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="comment">\/\/\/ It can be constructed by a string (hash representation in the file) or by <\/span><\/div>$/;"	a
l00071	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00071	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCDAList;<\/div>$/;"	a
l00071	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    sscanf(HashLineAndTail.first.str().c_str(), <span class="stringliteral">&quot;%d: %s&quot;<\/span>, &amp;Id, HashString); <\/div>$/;"	a
l00071	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="comment">\/\/\/ It can be constructed by a string (hash representation in the file) or by <\/span><\/div>$/;"	a
l00071	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div>$/;"	a
l00072	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classHashWeightedMethod.html#a8001089ccb3cb34ec6a07825f1727102">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00072	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">Instruction::URem<\/a>:<\/div>$/;"	a
l00072	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment">    \/\/\/ Descriptor.<\/span><\/div>$/;"	a
l00072	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5ab66ee6d990657209434c5c244b015">Instruction::URem<\/a>:<\/div>$/;"	a
l00072	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment">    \/\/\/ \\brief size of the hash. Need to be the same size of the enum <\/span><\/div>$/;"	a
l00072	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;        <span class="comment">\/\/ declare void @start_measures(i32) #1<\/span><\/div>$/;"	a
l00072	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::SExt:<\/div>$/;"	a
l00072	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <span class="keywordflow">return<\/span> DB.at(Hash);<\/div>$/;"	a
l00072	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#a919739e08f1249f1ec242a55e13fa7b6">   72<\/a><\/span>&#160;    <span class="keyword">typedef<\/span> std::unordered_map&lt;BBHash, double&gt;::iterator <a class="code" href="classDatabaseManager.html#a919739e08f1249f1ec242a55e13fa7b6">iterator<\/a>;<\/div>$/;"	a
l00072	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7f60f19030c179eaebed8b802771ca3e">DeadInstElimination<\/a>:<\/div>$/;"	a
l00072	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4dd0d56fe7c64ca8a5d3c925659f8635">   72<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4dd0d56fe7c64ca8a5d3c925659f8635">SeparateConstOffsetFromGEP<\/a>,<\/div>$/;"	a
l00072	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;  <span class="keywordflow">if<\/span> (Stamp &gt; 0) {<\/div>$/;"	a
l00072	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00072	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;  WriteBitcodeToFile(P-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>(), *Out);<\/div>$/;"	a
l00072	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;  WriteBitcodeToFile(P-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>(), *Out);<\/div>$/;"	a
l00072	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment">\/\/\/ a basic block that will serve as a base to create a new hash.<\/span><\/div>$/;"	a
l00072	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;        <span class="comment">\/\/ declare void @start_measures(i32) #1<\/span><\/div>$/;"	a
l00072	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div>$/;"	a
l00072	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="comment">\/\/\/ a basic block that will serve as a base to create a new hash.<\/span><\/div>$/;"	a
l00072	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;        <span class="comment">\/\/ declare void @start_measures(i32) #1<\/span><\/div>$/;"	a
l00073	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;};<\/div>$/;"	a
l00073	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5ab66ee6d990657209434c5c244b015">Descriptor::URem<\/a>);<\/div>$/;"	a
l00073	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">const<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> Size = 35;<span class="comment"><\/span><\/div>$/;"	a
l00073	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5ab66ee6d990657209434c5c244b015">DescriptorKind::URem<\/a>);<\/div>$/;"	a
l00073	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="comment">    \/\/\/ Descriptor.<\/span><\/div>$/;"	a
l00073	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        std::vector&lt;Type*&gt; Start_arg_types;                                                                               <\/div>$/;"	a
l00073	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::FPToUI:<\/div>$/;"	a
l00073	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;  <span class="keywordflow">else<\/span> <\/div>$/;"	a
l00073	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <span class="keyword">typedef<\/span> std::unordered_map&lt;BBHash, double&gt;<a class="code" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">::<\/a><\/div>$/;"	a
l00073	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;      <span class="keywordflow">return<\/span> createDeadInstEliminationPass();<\/div>$/;"	a
l00073	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a819caa42fe325b171ee71a2cb749f9cd">   73<\/a><\/span>&#160;  <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a819caa42fe325b171ee71a2cb749f9cd">LoadCombine<\/a><\/div>$/;"	a
l00073	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    <span class="keywordflow">return<\/span> Stamp;<\/div>$/;"	a
l00073	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> <a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a> : BBFrequnecy) <\/div>$/;"	a
l00073	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns the execution frequency of the given BasicBlock, if it<\/span><\/div>$/;"	a
l00073	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;  Out-&gt;flush();<\/div>$/;"	a
l00073	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;  Out-&gt;flush();<\/div>$/;"	a
l00073	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div>$/;"	a
l00073	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> {<\/div>$/;"	a
l00073	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        std::vector&lt;Type*&gt; start_arg_types;                                                                               <\/div>$/;"	a
l00073	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCDA = <a class="code" href="main_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>.begin();<\/div>$/;"	a
l00073	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    Hashs[Id] = <span class="keyword">new<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>(std::string(HashString));<\/div>$/;"	a
l00073	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html">   73<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> {<\/div>$/;"	a
l00073	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        std::vector&lt;Type*&gt; start_arg_types;                                                                               <\/div>$/;"	a
l00074	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00074	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00074	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="comment">    \/\/\/ \\brief representation of the hash itself. The hash is a vector of int <\/span><\/div>$/;"	a
l00074	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00074	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">const<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> Size = 35;<\/div>$/;"	a
l00074	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        Start_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00074	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::FPToSI:<\/div>$/;"	a
l00074	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <span class="keywordflow">return<\/span> 0.0;<\/div>$/;"	a
l00074	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">   74<\/a><\/span>&#160;<a class="code" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">      const_iterator<\/a> <a class="code" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">const_iterator<\/a>;<\/div>$/;"	a
l00074	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a24a8c391ec8500eb9a170798c21f2c2e">DeadCodeElimination<\/a>:<\/div>$/;"	a
l00074	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;};<\/div>$/;"	a
l00074	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00074	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    BasicBlockFrequency[<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>.first] = <a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>.second;<\/div>$/;"	a
l00074	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="comment">    \/\/\/ doesn&#39;t have the frequency it will return 0.<\/span><\/div>$/;"	a
l00074	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  <span class="keyword">delete<\/span> Out;<\/div>$/;"	a
l00074	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  <span class="keyword">delete<\/span> Out;<\/div>$/;"	a
l00074	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno"><a class="line" href="Test_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">   74<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="Test_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(<a class="code" href="classProfileModule.html">ProfileModule<\/a>* P, <span class="keywordtype">int<\/span> Id) {<\/div>$/;"	a
l00074	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00074	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        start_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00074	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCNO = <a class="code" href="main_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>.begin();<\/div>$/;"	a
l00074	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;    <\/div>$/;"	a
l00074	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00074	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        start_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00075	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses a random number multiplied by the execution <\/span><\/div>$/;"	a
l00075	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">Instruction::SRem<\/a>:<\/div>$/;"	a
l00075	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment">    \/\/\/ separated by &#39;-&#39;. <\/span><\/div>$/;"	a
l00075	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5af2c83c184717144ccd1c4cfc1122a">Instruction::SRem<\/a>:<\/div>$/;"	a
l00075	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00075	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div>$/;"	a
l00075	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::FPExt:<\/div>$/;"	a
l00075	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;}<\/div>$/;"	a
l00075	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div>$/;"	a
l00075	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;      <span class="keywordflow">return<\/span> createDeadCodeEliminationPass();<\/div>$/;"	a
l00075	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00075	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    <span class="keywordflow">return<\/span> 1.0\/20.0;<\/div>$/;"	a
l00075	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;}<\/div>$/;"	a
l00075	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment"><\/span>    uint64_t <a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">getBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> llvm::BasicBlock*) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00075	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;}<\/div>$/;"	a
l00075	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;}<\/div>$/;"	a
l00075	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;  <span class="keywordtype">char<\/span> FileName[20];<\/div>$/;"	a
l00075	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment">    \/\/\/ \\brief size of the hash. Need to be the same size of the enum <\/span><\/div>$/;"	a
l00075	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div>$/;"	a
l00075	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;  <span class="comment">\/\/ FIXME!<\/span><\/div>$/;"	a
l00075	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    HashLineAndTail = HashLineAndTail.second.split(<span class="charliteral">&#39;\\n&#39;<\/span>); <\/div>$/;"	a
l00075	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment">    \/\/\/ \\brief size of the hash. Need to be the same size of the enum <\/span><\/div>$/;"	a
l00075	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div>$/;"	a
l00076	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">\/\/\/ frequency to evaluate the execution cost of the given function.<\/span><\/div>$/;"	a
l00076	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aa5af2c83c184717144ccd1c4cfc1122a">Descriptor::SRem<\/a>);<\/div>$/;"	a
l00076	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment"><\/span>    std::vector&lt;int&gt; Descriptions;<\/div>$/;"	a
l00076	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aa5af2c83c184717144ccd1c4cfc1122a">DescriptorKind::SRem<\/a>);<\/div>$/;"	a
l00076	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">    \/\/\/ \\brief representation of the hash itself. The hash is a vector of int <\/span><\/div>$/;"	a
l00076	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;        FuncType = FunctionType::get(Builder.getVoidTy(), Start_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00076	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::PtrToInt:<\/div>$/;"	a
l00076	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div>$/;"	a
l00076	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#abd49cc8529cdb5c2de4e1801e3c64da8">   76<\/a><\/span>&#160;    <a class="code" href="classDatabaseManager.html#a919739e08f1249f1ec242a55e13fa7b6">iterator<\/a> <a class="code" href="classDatabaseManager.html#abd49cc8529cdb5c2de4e1801e3c64da8">begin<\/a>() { <span class="keywordflow">return<\/span> DB.begin(); };<\/div>$/;"	a
l00076	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a28a8ba97dd8730b3b3243562d2173819">AggressiveDCE<\/a>:<\/div>$/;"	a
l00076	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">\/\/\/ \\brief This namespace is responsable for applying passes into a <\/span><\/div>$/;"	a
l00076	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;  }<\/div>$/;"	a
l00076	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div>$/;"	a
l00076	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00076	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div>$/;"	a
l00076	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div>$/;"	a
l00076	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;  sprintf(FileName, <span class="stringliteral">&quot;%d.ll&quot;<\/span>, Id);<\/div>$/;"	a
l00076	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">    \/\/\/ Descriptor.<\/span><\/div>$/;"	a
l00076	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;        funcType = FunctionType::get(Builder.getVoidTy(), start_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00076	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">\/\/  while (iGCDA != GCDAFilename.end() &amp;&amp; iGCNO != GCNOFilename.end()) {<\/span><\/div>$/;"	a
l00076	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;  }<\/div>$/;"	a
l00076	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="comment">    \/\/\/ Descriptor.<\/span><\/div>$/;"	a
l00076	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;        funcType = FunctionType::get(Builder.getVoidTy(), start_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00077	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="classRandomMethod.html">   77<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classRandomMethod.html">RandomMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00077	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00077	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00077	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00077	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment">    \/\/\/ separated by &#39;-&#39;. Each int is called a descriptor. <\/span><\/div>$/;"	a
l00077	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        F = Function::Create(FuncType, Function::ExternalLinkage, <\/div>$/;"	a
l00077	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::IntToPtr:<\/div>$/;"	a
l00077	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#a2dcb3dcd91736442f20e71c73b82ef68">   77<\/a><\/span>&#160;<span class="keywordtype">bool<\/span> <a class="code" href="classDatabaseManager.html#a2dcb3dcd91736442f20e71c73b82ef68">DatabaseManager::hasHash<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;Hash)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00077	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div>$/;"	a
l00077	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;      <span class="keywordflow">return<\/span> createAggressiveDCEPass();<\/div>$/;"	a
l00077	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment">\/\/\/ ProfileModule, which contains the LLVM code and the profiling information, <\/span><\/div>$/;"	a
l00077	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;}<\/div>$/;"	a
l00077	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">   77<\/a><\/span>&#160;Module* <a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">ProfileModule::getLLVMModule<\/a>()<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00077	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment">    \/\/\/ \\brief Sets the execution frequency of an given basic block.<\/span><\/div>$/;"	a
l00077	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="RandomOnFunction_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">   77<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="RandomOnFunction_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span>** argv) {<\/div>$/;"	a
l00077	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno"><a class="line" href="Random_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">   77<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="Random_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span>** argv) {<\/div>$/;"	a
l00077	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;  std::error_code Err;<\/div>$/;"	a
l00077	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">const<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> size = 35;<span class="comment"><\/span><\/div>$/;"	a
l00077	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00077	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;    <span class="keyword">auto<\/span> GCNO = MemoryBuffer::getFileOrSTDIN(*iGCNO);<\/div>$/;"	a
l00077	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div>$/;"	a
l00077	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">const<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> size = 35;<span class="comment"><\/span><\/div>$/;"	a
l00077	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00078	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00078	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">Instruction::Shl<\/a>:<\/div>$/;"	a
l00078	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment">    \/\/\/ \\brief Fill the descriptios if informations about the basic block pass <\/span><\/div>$/;"	a
l00078	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ada89cb9eb438de663a3cc3083e0e8e4a">Instruction::Shl<\/a>:<\/div>$/;"	a
l00078	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment"><\/span>    std::vector&lt;int&gt; Hash;<\/div>$/;"	a
l00078	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="stringliteral">&quot;start_measures&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00078	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::SIToFP:<\/div>$/;"	a
l00078	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  <span class="keywordflow">return<\/span> DB.count(Hash) == 1;<\/div>$/;"	a
l00078	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#aedcb40a7a47600b1c1deb63f47f3f77e">   78<\/a><\/span>&#160;    <a class="code" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">const_iterator<\/a> <a class="code" href="classDatabaseManager.html#aedcb40a7a47600b1c1deb63f47f3f77e">cbegin<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> DB.cbegin(); };<\/div>$/;"	a
l00078	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7ac50c7e2967e030c454d08d95e890d8">SROA<\/a>:<\/div>$/;"	a
l00078	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment">\/\/\/ and also analyse its execution time. <\/span><\/div>$/;"	a
l00078	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div>$/;"	a
l00078	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  <span class="keywordflow">return<\/span> LLVMModule;<\/div>$/;"	a
l00078	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span>     <a class="code" href="classProfileModule.html#a30391a175d04cc70c60e1cf6f688f2da">setBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> llvm::BasicBlock*, uint64_t); <\/div>$/;"	a
l00078	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  std::random_device rd;<\/div>$/;"	a
l00078	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  std::random_device rd;<\/div>$/;"	a
l00078	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  raw_fd_ostream *Out = <\/div>$/;"	a
l00078	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment">    \/\/\/ \\brief representation of the hash itself. The hash is a vector of int <\/span><\/div>$/;"	a
l00078	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="stringliteral">&quot;start_measures&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00078	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    <span class="keyword">auto<\/span> GCDA = MemoryBuffer::getFileOrSTDIN(*iGCDA);<\/div>$/;"	a
l00078	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;  std::pair&lt;StringRef, StringRef&gt; ProfLineAndTail =<\/div>$/;"	a
l00078	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="comment">    \/\/\/ \\brief representation of the hash itself. The hash is a vector of int <\/span><\/div>$/;"	a
l00078	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="stringliteral">&quot;start_measures&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00079	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classRandomMethod.html#ac1c0379dcdd48bbeaf287e38838ad03d">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00079	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ada89cb9eb438de663a3cc3083e0e8e4a">Descriptor::Shl<\/a>);<\/div>$/;"	a
l00079	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="comment">    \/\/\/ as a parameter.<\/span><\/div>$/;"	a
l00079	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ada89cb9eb438de663a3cc3083e0e8e4a">DescriptorKind::Shl<\/a>);<\/div>$/;"	a
l00079	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00079	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00079	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::UIToFP:<\/div>$/;"	a
l00079	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;}<\/div>$/;"	a
l00079	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div>$/;"	a
l00079	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;      <span class="keywordflow">return<\/span> createSROAPass();<\/div>$/;"	a
l00079	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno"><a class="line" href="namespaceGEOS.html">   79<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">namespace <\/span>GEOS {<span class="comment"><\/span><\/div>$/;"	a
l00079	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#a44ecf5a0e2ef488d96bf3144e3b30417">   79<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="PAPI_8cpp.html#a44ecf5a0e2ef488d96bf3144e3b30417">start_measures<\/a>(<span class="keywordtype">int<\/span> Id) {<\/div>$/;"	a
l00079	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;}<\/div>$/;"	a
l00079	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <span class="comment"><\/span><\/div>$/;"	a
l00079	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  std::mt19937 gen(rd());<\/div>$/;"	a
l00079	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;  std::mt19937 gen(rd());<\/div>$/;"	a
l00079	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    <span class="keyword">new<\/span> raw_fd_ostream(FileName, Err, llvm::sys::fs::OpenFlags::F_Excl);<\/div>$/;"	a
l00079	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="comment">    \/\/\/ separated by &#39;-&#39;. <\/span><\/div>$/;"	a
l00079	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00079	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;    GCNOList.push_back(GCNO.get().get());<\/div>$/;"	a
l00079	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;      (*ProfFileBuffer)-&gt;getBuffer().split(<span class="charliteral">&#39;\\n&#39;<\/span>);<\/div>$/;"	a
l00079	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="comment">    \/\/\/ separated by &#39;-&#39;. <\/span><\/div>$/;"	a
l00079	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00080	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00080	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> loadBB(llvm::BasicBlock&amp;);<\/div>$/;"	a
l00080	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00080	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment">    \/\/\/ \\brief Fill the descriptios if informations about the basic block pass <\/span><\/div>$/;"	a
l00080	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::Trunc:<\/div>$/;"	a
l00080	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#ac6471007268f46e16e531730ece1cbe9">   80<\/a><\/span>&#160;    <a class="code" href="classDatabaseManager.html#a919739e08f1249f1ec242a55e13fa7b6">iterator<\/a> <a class="code" href="classDatabaseManager.html#ac6471007268f46e16e531730ece1cbe9">end<\/a>() { <span class="keywordflow">return<\/span> DB.end(); };<\/div>$/;"	a
l00080	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ac3fa3b53483ad9f43e4bc351293faf4f">ScalarReplAggregates<\/a>: <\/div>$/;"	a
l00080	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment">    \/\/\/ \\brief Instantiates the specificated AnlysisMethod.<\/span><\/div>$/;"	a
l00080	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="preprocessor">#if STACK<\/span><\/div>$/;"	a
l00080	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns a copy of the Profiling Module.<\/span><\/div>$/;"	a
l00080	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;  std::uniform_int_distribution&lt;&gt; <\/div>$/;"	a
l00080	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;  std::uniform_int_distribution&lt;&gt; <\/div>$/;"	a
l00080	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;  WriteBitcodeToFile(P-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>(), *Out);<\/div>$/;"	a
l00080	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment"><\/span>    vector&lt;int&gt; descriptions;<\/div>$/;"	a
l00080	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;    GCDAList.push_back(GCDA.get().get());<\/div>$/;"	a
l00080	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00080	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="comment"><\/span>    vector&lt;int&gt; descriptions;<\/div>$/;"	a
l00080	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div>$/;"	a
l00081	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno"><a class="line" href="classRandomMethod.html#affd04d5e62bae2ea488da99ef446249d">   81<\/a><\/span>&#160;    <a class="code" href="classRandomMethod.html#affd04d5e62bae2ea488da99ef446249d">~RandomMethod<\/a>() {};<\/div>$/;"	a
l00081	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">Instruction::LShr<\/a>:<\/div>$/;"	a
l00081	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00081	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3a793efa6f06f718ba358cc9d87057e4">Instruction::LShr<\/a>:<\/div>$/;"	a
l00081	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment">    \/\/\/ as a parameter.<\/span><\/div>$/;"	a
l00081	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;        <span class="comment">\/\/ declare void @get_results(...) #1<\/span><\/div>$/;"	a
l00081	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::FPTrunc:<\/div>$/;"	a
l00081	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno"><a class="line" href="DatabaseManager_8cpp.html#aca6f2d85806b1fc1f834c30cea7a834c">   81<\/a><\/span>&#160;std::unordered_map&lt;BBHash, BBHash*&gt; <a class="code" href="DatabaseManager_8cpp.html#aca6f2d85806b1fc1f834c30cea7a834c">Nearest<\/a>;<\/div>$/;"	a
l00081	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div>$/;"	a
l00081	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;      <span class="keywordflow">return<\/span> createScalarReplAggregatesPass(); <span class="comment">\/\/PreservesCFG<\/span><\/div>$/;"	a
l00081	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00081	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor"><\/span>  <span class="keywordflow">if<\/span> (!IDsStack.empty()) {<\/div>$/;"	a
l00081	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#a08667492bbf4986b6b7752ccf0a05610">   81<\/a><\/span>&#160;<span class="keywordtype">bool<\/span> <a class="code" href="classProfileModule.html#a08667492bbf4986b6b7752ccf0a05610">ProfileModule::hasBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> BasicBlock *BB)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00081	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfileModule.html">ProfileModule<\/a>* <a class="code" href="classProfileModule.html#afed1fbe5ead415d6687dec691376b509">getCopy<\/a>() <span class="keyword">const<\/span>;<\/div>$/;"	a
l00081	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    getRandomPass(1, <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a819caa42fe325b171ee71a2cb749f9cd">OptimizationKind::LoadCombine<\/a>);<\/div>$/;"	a
l00081	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;    getRandomPass(1, <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a819caa42fe325b171ee71a2cb749f9cd">OptimizationKind::LoadCombine<\/a>);<\/div>$/;"	a
l00081	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;  Out-&gt;flush();<\/div>$/;"	a
l00081	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00081	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;        <span class="comment">\/\/ declare void @get_results(...) #1<\/span><\/div>$/;"	a
l00081	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment">\/\/  }<\/span><\/div>$/;"	a
l00081	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;  <span class="keywordflow">while<\/span> (!ProfLineAndTail.first.empty()) {<\/div>$/;"	a
l00081	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00081	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;        <span class="comment">\/\/ declare void @get_results(...) #1<\/span><\/div>$/;"	a
l00082	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;};<\/div>$/;"	a
l00082	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a3a793efa6f06f718ba358cc9d87057e4">Descriptor::LShr<\/a>);<\/div>$/;"	a
l00082	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns a weight for each information in the hash.<\/span><\/div>$/;"	a
l00082	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a3a793efa6f06f718ba358cc9d87057e4">DescriptorKind::LShr<\/a>);<\/div>$/;"	a
l00082	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> loadBB(llvm::BasicBlock&amp;);<\/div>$/;"	a
l00082	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        FuncType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">true<\/span>);<\/div>$/;"	a
l00082	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::BitCast:<\/div>$/;"	a
l00082	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div>$/;"	a
l00082	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#a2e63a17205dd1f37ab4268fe84018f6f">   82<\/a><\/span>&#160;    <a class="code" href="classDatabaseManager.html#afaeaf7bb6a3607445fb70a0b1652127d">const_iterator<\/a> <a class="code" href="classDatabaseManager.html#a2e63a17205dd1f37ab4268fe84018f6f">cend<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> DB.cend(); };<\/div>$/;"	a
l00082	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ae3715eed67639f26db9b5d70a126cc47">InductionVariableSimplify<\/a>:<\/div>$/;"	a
l00082	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<span class="comment">    \/\/\/ \\param First is the AnalysisMethod kind and the second is the database <\/span><\/div>$/;"	a
l00082	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;    <span class="keywordflow">if<\/span> (NotFinished) {<\/div>$/;"	a
l00082	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;  assert(BB-&gt;hasName() &amp;&amp; <span class="stringliteral">&quot;Trying to use a BasicBlock without a name.&quot;<\/span>);<\/div>$/;"	a
l00082	docs/html/ProfileModule_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;};<\/div>$/;"	a
l00082	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div>$/;"	a
l00082	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div>$/;"	a
l00082	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;  <span class="keyword">delete<\/span> Out;<\/div>$/;"	a
l00082	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<span class="comment">    \/\/\/ \\brief Fill the descriptios if informations about the basic block pass <\/span><\/div>$/;"	a
l00082	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        funcType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">true<\/span>);<\/div>$/;"	a
l00082	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;  <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser = <\/div>$/;"	a
l00082	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;    <span class="keywordtype">int<\/span> Id;<\/div>$/;"	a
l00082	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<span class="comment">    \/\/\/ \\brief Fill the descriptios if informations about the basic block pass <\/span><\/div>$/;"	a
l00082	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        funcType = FunctionType::get(Builder.getVoidTy(), <span class="keyword">true<\/span>);<\/div>$/;"	a
l00083	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00083	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00083	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> descriptorWeight(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> d);<\/div>$/;"	a
l00083	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00083	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00083	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        F = Function::Create(FuncType, Function::ExternalLinkage, <\/div>$/;"	a
l00083	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::AddrSpaceCast: <\/div>$/;"	a
l00083	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="classDatabaseManager.html#aca5446aa25db9caa7b218daab7933d58">DatabaseManager::<\/a><\/div>$/;"	a
l00083	docs/html/DatabaseManager_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;};<\/div>$/;"	a
l00083	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;      <span class="keywordflow">return<\/span> createIndVarSimplifyPass();<\/div>$/;"	a
l00083	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment">    \/\/\/ file path.<\/span><\/div>$/;"	a
l00083	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;      <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>[<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>] += <a class="code" href="PAPI_8cpp.html#a55995c266cf6b88f45fed6f5c8c20ff6">get_time_stamp<\/a>();<\/div>$/;"	a
l00083	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;  <span class="keywordflow">return<\/span> BasicBlockFrequency.count(BB-&gt;getName().str()) &gt; 0;<\/div>$/;"	a
l00083	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;  LLVMContext &amp;Context = getGlobalContext();<\/div>$/;"	a
l00083	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;  LLVMContext &amp;Context = getGlobalContext();<\/div>$/;"	a
l00083	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;}<\/div>$/;"	a
l00083	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment">    \/\/\/ as a parameter.<\/span><\/div>$/;"	a
l00083	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00083	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    <a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">GEOS::getAnalyser<\/a>((<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a>) <a class="code" href="main_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>, <\/div>$/;"	a
l00083	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    <span class="keywordtype">double<\/span> Time; <\/div>$/;"	a
l00083	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="comment">    \/\/\/ as a parameter.<\/span><\/div>$/;"	a
l00083	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00084	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses just the frequency to evaluate the execution cost <\/span><\/div>$/;"	a
l00084	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">Instruction::AShr<\/a>:<\/div>$/;"	a
l00084	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div>$/;"	a
l00084	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a23b18dbda8a7bb16cc9ebbff8c6941a2">Instruction::AShr<\/a>:<\/div>$/;"	a
l00084	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns a weight for each information in the hash.<\/span><\/div>$/;"	a
l00084	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="stringliteral">&quot;get_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00084	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::None;<\/div>$/;"	a
l00084	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#aca5446aa25db9caa7b218daab7933d58">   84<\/a><\/span>&#160;<a class="code" href="classDatabaseManager.html#aca5446aa25db9caa7b218daab7933d58">getNearest<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;Hash)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00084	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0dc4d369f85330b42f676548c28b3040">InstructionCombining<\/a>:<\/div>$/;"	a
l00084	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a>* <a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">getAnalyser<\/a>(<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a>, llvm::StringRef);<\/div>$/;"	a
l00084	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    }<\/div>$/;"	a
l00084	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;}<\/div>$/;"	a
l00084	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;  SMDiagnostic Error;<\/div>$/;"	a
l00084	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;  SMDiagnostic Error;<\/div>$/;"	a
l00084	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div>$/;"	a
l00084	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> loadBB(BasicBlock&amp;);<\/div>$/;"	a
l00084	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="stringliteral">&quot;get_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00084	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;      <a class="code" href="main_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.c_str());<\/div>$/;"	a
l00084	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div>$/;"	a
l00084	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> loadBB(BasicBlock&amp;);<\/div>$/;"	a
l00084	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="stringliteral">&quot;get_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00085	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment">\/\/\/ of the given function.<\/span><\/div>$/;"	a
l00085	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a23b18dbda8a7bb16cc9ebbff8c6941a2">Descriptor::AShr<\/a>);<\/div>$/;"	a
l00085	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00085	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a23b18dbda8a7bb16cc9ebbff8c6941a2">DescriptorKind::AShr<\/a>);<\/div>$/;"	a
l00085	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> descriptorWeight(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> d);<\/div>$/;"	a
l00085	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00085	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a534b45e4e8533fa4a26577c7f675eb93">llvm::Instruction::ExtractElement<\/a>: <\/div>$/;"	a
l00085	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;  <span class="keywordflow">if<\/span> (<a class="code" href="DatabaseManager_8cpp.html#aca6f2d85806b1fc1f834c30cea7a834c">Nearest<\/a>.count(Hash) == 0) {<\/div>$/;"	a
l00085	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;      <span class="keywordflow">return<\/span> createInstructionCombiningPass();<\/div>$/;"	a
l00085	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00085	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;  }<\/div>$/;"	a
l00085	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00085	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00085	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00085	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno"><a class="line" href="Test_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">   85<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="Test_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main<\/a>(<span class="keywordtype">int<\/span> argc, <span class="keywordtype">char<\/span>** argv) {<\/div>$/;"	a
l00085	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00085	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00085	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div>$/;"	a
l00085	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;    sscanf(HashLineAndTail.first.str().c_str(), <span class="stringliteral">&quot;%d: %lf&quot;<\/span>, &amp;Id, &amp;Time); <\/div>$/;"	a
l00085	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00085	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00086	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno"><a class="line" href="classFrequencyMethod.html">   86<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classFrequencyMethod.html">FrequencyMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00086	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00086	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create an empty hash.<\/span><\/div>$/;"	a
l00086	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00086	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00086	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00086	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00086	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;    <span class="keywordtype">double<\/span> SmallestDistance = std::numeric_limits&lt;double&gt;::max();<\/div>$/;"	a
l00086	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5af6bdb8ebac29c448de121bac9261261d">LICM<\/a>:<\/div>$/;"	a
l00086	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns the instanciation of the optimization choosed.<\/span><\/div>$/;"	a
l00086	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00086	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">   86<\/a><\/span>&#160;uint64_t <a class="code" href="classProfileModule.html#aec52f07d61cdacf8d7dfa4a52efbe819">ProfileModule::getBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> BasicBlock *BB)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00086	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  cl::ParseCommandLineOptions(argc, argv);<\/div>$/;"	a
l00086	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  cl::ParseCommandLineOptions(argc, argv);<\/div>$/;"	a
l00086	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  std::random_device rd;<\/div>$/;"	a
l00086	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns a weight for each information in the hash.<\/span><\/div>$/;"	a
l00086	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00086	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a> PModule(&amp;(*MyModule), GCDAList, GCNOList);<\/div>$/;"	a
l00086	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00086	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<span class="comment">    \/\/\/ \\brief Returns a weight for each information in the hash.<\/span><\/div>$/;"	a
l00086	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div>$/;"	a
l00087	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00087	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">Instruction::And<\/a>:<\/div>$/;"	a
l00087	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor<\/a>();<\/div>$/;"	a
l00087	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a60b042c2c7da21af2ed42f8cc27e7ff8">Instruction::And<\/a>:<\/div>$/;"	a
l00087	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create an empty hash.<\/span><\/div>$/;"	a
l00087	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;        <span class="comment">\/\/ declare void @init_PAPI(i32) #1  <\/span><\/div>$/;"	a
l00087	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af2639ece9f498c75f97b782dfaa2070f">llvm::Instruction::InsertElement<\/a>: <\/div>$/;"	a
l00087	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;    llvm::StringRef Smallest =<span class="stringliteral">&quot;&quot;<\/span>;<\/div>$/;"	a
l00087	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;      <span class="keywordflow">return<\/span> createLICMPass();<\/div>$/;"	a
l00087	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="comment"><\/span>    llvm::Pass* <a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a>);<\/div>$/;"	a
l00087	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;  NotFinished = <span class="keyword">true<\/span>;<\/div>$/;"	a
l00087	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;  assert(BB-&gt;hasName() &amp;&amp; <span class="stringliteral">&quot;Trying to use a BasicBlock without a name.&quot;<\/span>);<\/div>$/;"	a
l00087	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div>$/;"	a
l00087	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div>$/;"	a
l00087	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;  std::mt19937 gen(rd());<\/div>$/;"	a
l00087	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> DescriptorWeight(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> d);<\/div>$/;"	a
l00087	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;        <span class="comment">\/\/ declare void @init_PAPI(i32) #1  <\/span><\/div>$/;"	a
l00087	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div>$/;"	a
l00087	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;    Times[Id] = Time;<\/div>$/;"	a
l00087	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> DescriptorWeight(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> d);<\/div>$/;"	a
l00087	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;        <span class="comment">\/\/ declare void @init_PAPI(i32) #1  <\/span><\/div>$/;"	a
l00088	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classFrequencyMethod.html#a3596e36d5837f5d20671089dfab07c73">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00088	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a60b042c2c7da21af2ed42f8cc27e7ff8">Descriptor::And<\/a>);<\/div>$/;"	a
l00088	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00088	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a60b042c2c7da21af2ed42f8cc27e7ff8">DescriptorKind::And<\/a>);<\/div>$/;"	a
l00088	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash<\/a>();<\/div>$/;"	a
l00088	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        std::vector&lt;Type*&gt; Init_arg_types; <\/div>$/;"	a
l00088	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00088	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00088	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab1dad8e03577ba10d9f2982766209f2f">LoopStrengthReduce<\/a>:<\/div>$/;"	a
l00088	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00088	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00088	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  <span class="keywordflow">if<\/span> (hasBasicBlockFrequency(BB))<\/div>$/;"	a
l00088	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  Module *MyModule = <\/div>$/;"	a
l00088	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  Module *MyModule = <\/div>$/;"	a
l00088	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  std::uniform_int_distribution&lt;&gt; <\/div>$/;"	a
l00088	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00088	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        std::vector&lt;Type*&gt; init_arg_types; <\/div>$/;"	a
l00088	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  outs() &lt;&lt; <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(PModule, Analyser) &lt;&lt; <span class="stringliteral">&quot;\\n&quot;<\/span>;<\/div>$/;"	a
l00088	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;    <\/div>$/;"	a
l00088	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div>$/;"	a
l00088	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        std::vector&lt;Type*&gt; init_arg_types; <\/div>$/;"	a
l00089	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div>$/;"	a
l00089	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00089	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a hash for the Basic Block given as parameter.<\/span><\/div>$/;"	a
l00089	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00089	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00089	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        Init_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00089	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af15d4290da98fa835a47cecc79858b9e">llvm::Instruction::ShuffleVector<\/a>: <\/div>$/;"	a
l00089	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    <span class="keywordtype">int<\/span> dotProduct = <a class="code" href="classBBHash.html#a2b1373409004a02fba3d02c741670b8b">BBHash::dotProduct<\/a>(Hash, *<a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a>);<\/div>$/;"	a
l00089	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopStrengthReducePass();<\/div>$/;"	a
l00089	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="comment">    \/\/\/ \\brief Like applyPasses this function apply a set of passes to the <\/span><\/div>$/;"	a
l00089	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="preprocessor"><\/span><\/div>$/;"	a
l00089	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    <span class="keywordflow">return<\/span> BasicBlockFrequency.at(BB-&gt;getName().str());<\/div>$/;"	a
l00089	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    parseIRFile(<a class="code" href="RandomOnFunction_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>.c_str(), Error, Context).release();<\/div>$/;"	a
l00089	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    parseIRFile(<a class="code" href="Random_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>.c_str(), Error, Context).release();<\/div>$/;"	a
l00089	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    getRandomPass(1, <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a819caa42fe325b171ee71a2cb749f9cd">OptimizationKind::LoadCombine<\/a>);<\/div>$/;"	a
l00089	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00089	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        init_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00089	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div>$/;"	a
l00089	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;    ProfLineAndTail = ProfLineAndTail.second.split(<span class="charliteral">&#39;\\n&#39;<\/span>); <\/div>$/;"	a
l00089	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00089	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        init_arg_types.push_back(Builder.getInt32Ty());<\/div>$/;"	a
l00090	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno"><a class="line" href="classFrequencyMethod.html#a62f79f77a4f4612d7a1c8152f2a09a34">   90<\/a><\/span>&#160;    <a class="code" href="classFrequencyMethod.html#a62f79f77a4f4612d7a1c8152f2a09a34">~FrequencyMethod<\/a>() {};<\/div>$/;"	a
l00090	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">Instruction::Or<\/a>:<\/div>$/;"	a
l00090	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor<\/a>(llvm::BasicBlock&amp;);<\/div>$/;"	a
l00090	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a5d66935f41f1e80990e8bf3349074fe1">Instruction::Or<\/a>:<\/div>$/;"	a
l00090	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a hash for the Basic Block given as parameter.<\/span><\/div>$/;"	a
l00090	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00090	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    <span class="keyword">auto<\/span> Hashes    = CDB.at((dotProduct\/<a class="code" href="DatabaseManager_8cpp.html#ae2d717de66eb9765dbeb4f152f4812ca">w<\/a>) % <a class="code" href="DatabaseManager_8cpp.html#a8fe95d68ae73e02aa604a3430b1cecc1">PrimeNumber<\/a>);<\/div>$/;"	a
l00090	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a69083450061722c9045597433f460fc7">LoopUnswitch<\/a>:<\/div>$/;"	a
l00090	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="comment">    \/\/\/ llvm module. However, it just apply those to an specific function. <\/span><\/div>$/;"	a
l00090	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;  <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a> = Id;<\/div>$/;"	a
l00090	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;  <span class="keywordflow">else<\/span> <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00090	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create an empty hash.<\/span><\/div>$/;"	a
l00090	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00090	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;  <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00090	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;  }<\/div>$/;"	a
l00090	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create an empty hash.<\/span><\/div>$/;"	a
l00090	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div>$/;"	a
l00091	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;};<\/div>$/;"	a
l00091	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a5d66935f41f1e80990e8bf3349074fe1">Descriptor::Or<\/a>);<\/div>$/;"	a
l00091	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00091	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a5d66935f41f1e80990e8bf3349074fe1">DescriptorKind::Or<\/a>);<\/div>$/;"	a
l00091	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash<\/a>(llvm::BasicBlock&amp;);<\/div>$/;"	a
l00091	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        FuncType = FunctionType::get(Builder.getInt32Ty(), Init_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00091	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;      <span class="keywordflow">case<\/span> llvm::Instruction::Call:  <\/div>$/;"	a
l00091	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div>$/;"	a
l00091	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopUnswitchPass();<\/div>$/;"	a
l00091	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00091	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  <span class="keywordflow">if<\/span> (<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>[Id] &lt; <a class="code" href="PAPI_8cpp.html#a078b6c12f1ac6819cecef90ab5870276">TIME<\/a>) {<\/div>$/;"	a
l00091	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div>$/;"	a
l00091	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  Module *MyModule2 = <\/div>$/;"	a
l00091	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCNOList;<\/div>$/;"	a
l00091	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  LLVMContext &amp;Context = getGlobalContext();<\/div>$/;"	a
l00091	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>();<\/div>$/;"	a
l00091	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        funcType = FunctionType::get(Builder.getInt32Ty(), init_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00091	docs/html/main_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div>$/;"	a
l00091	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div>$/;"	a
l00091	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>();<\/div>$/;"	a
l00091	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        funcType = FunctionType::get(Builder.getInt32Ty(), init_arg_types, <span class="keyword">true<\/span>); <\/div>$/;"	a
l00092	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00092	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00092	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment">    \/\/\/ \\brief Creates a memory representation of the hash from a string <\/span><\/div>$/;"	a
l00092	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00092	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00092	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        F = Function::Create(FuncType, Function::ExternalLinkage, <\/div>$/;"	a
l00092	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00092	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;Elem : Hashes) {<\/div>$/;"	a
l00092	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    <span class="comment">\/\/case LoopInstSimplify:<\/span><\/div>$/;"	a
l00092	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment">    \/\/\/ \\param the first param is the function name that the passes should be <\/span><\/div>$/;"	a
l00092	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    IDsStack.push(<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>);<\/div>$/;"	a
l00092	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div>$/;"	a
l00092	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;    parseIRFile(<a class="code" href="RandomOnFunction_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>.c_str(), Error, Context).release();<\/div>$/;"	a
l00092	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCDAList;<\/div>$/;"	a
l00092	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;  SMDiagnostic Error;<\/div>$/;"	a
l00092	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00092	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00092	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> i : Times) { <\/div>$/;"	a
l00092	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00092	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00093	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses the sum of an estimate cost of each instruction in <\/span><\/div>$/;"	a
l00093	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">Instruction::Xor<\/a>: <\/div>$/;"	a
l00093	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">    \/\/\/ representation of the hash. Useful when loading the hash from a file. <\/span><\/div>$/;"	a
l00093	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ae45372bd1178d94321b72f6261a3020a">Instruction::Xor<\/a>: <\/div>$/;"	a
l00093	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">    \/\/\/ \\brief Creates a memory representation of the hash from a string <\/span><\/div>$/;"	a
l00093	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="stringliteral">&quot;init_PAPI&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00093	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;      <span class="keywordflow">default<\/span>:<\/div>$/;"	a
l00093	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;      <span class="keywordtype">double<\/span> Distance = 0;<\/div>$/;"	a
l00093	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <span class="comment">\/\/  return createLoopInstSimplifyPass();<\/span><\/div>$/;"	a
l00093	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">    \/\/\/ applied. <\/span><\/div>$/;"	a
l00093	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>[Id]++;<\/div>$/;"	a
l00093	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="keywordtype">void<\/span> <\/div>$/;"	a
l00093	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div>$/;"	a
l00093	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div>$/;"	a
l00093	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div>$/;"	a
l00093	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a hash for the Basic Block given as parameter.<\/span><\/div>$/;"	a
l00093	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="stringliteral">&quot;init_PAPI&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00093	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;    <span class="keywordflow">if<\/span> (Hashs.count(i.first) != 0) <\/div>$/;"	a
l00093	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a hash for the Basic Block given as parameter.<\/span><\/div>$/;"	a
l00093	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="stringliteral">&quot;init_PAPI&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00094	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment">\/\/\/ the function multiplied by the frequency of execution to evaluate its <\/span><\/div>$/;"	a
l00094	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ae45372bd1178d94321b72f6261a3020a">Descriptor::Xor<\/a>);<\/div>$/;"	a
l00094	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor<\/a>(<span class="keyword">const<\/span> llvm::StringRef&amp;); <\/div>$/;"	a
l00094	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ae45372bd1178d94321b72f6261a3020a">DescriptorKind::Xor<\/a>);<\/div>$/;"	a
l00094	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment">    \/\/\/ representation of the hash. Useful when loading the hash from a file. <\/span><\/div>$/;"	a
l00094	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00094	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        <span class="keywordflow">return<\/span> Cost::Low;<\/div>$/;"	a
l00094	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;      Distance = <a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">BBHash::distance<\/a>(Elem, Hash);<\/div>$/;"	a
l00094	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5add49f6d5c9a7264335d8fc11078b90fd">LoopUnroll<\/a>:<\/div>$/;"	a
l00094	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfileModule.html">ProfileModule<\/a>* <a class="code" href="namespaceGEOS.html#ab70447a5825083c7e87304cff472e13c">applyPassesOnFunction<\/a>(llvm::StringRef,<\/div>$/;"	a
l00094	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    Empty = <a class="code" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">getEmpty<\/a>(Events, Values);<\/div>$/;"	a
l00094	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#a30391a175d04cc70c60e1cf6f688f2da">   94<\/a><\/span>&#160;<a class="code" href="classProfileModule.html#a30391a175d04cc70c60e1cf6f688f2da">ProfileModule::setBasicBlockFrequency<\/a>(<span class="keyword">const<\/span> BasicBlock *BB, uint64_t <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>) {<\/div>$/;"	a
l00094	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCNOList;<\/div>$/;"	a
l00094	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCDA = <a class="code" href="Random_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>.begin();<\/div>$/;"	a
l00094	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  cl::ParseCommandLineOptions(argc, argv);<\/div>$/;"	a
l00094	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>(BasicBlock&amp;);<\/div>$/;"	a
l00094	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00094	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;      DBManager.<a class="code" href="classDatabaseManager.html#a2a26f10fb144de273aa8e50a27896dbb">insert<\/a>(*Hashs[i.first], i.second);<\/div>$/;"	a
l00094	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>(BasicBlock&amp;);<\/div>$/;"	a
l00094	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00095	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="comment">\/\/\/ execution cost.<\/span><\/div>$/;"	a
l00095	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00095	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00095	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00095	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash<\/a>(<span class="keyword">const<\/span> llvm::StringRef&amp;); <\/div>$/;"	a
l00095	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00095	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    }<\/div>$/;"	a
l00095	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00095	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopUnrollPass();<\/div>$/;"	a
l00095	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;        <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;, llvm::FunctionPassManager&amp;);<\/div>$/;"	a
l00095	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    PAPI_start_counters(Events, 2);<\/div>$/;"	a
l00095	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  assert(BB-&gt;hasName() &amp;&amp; <span class="stringliteral">&quot;Trying to use a BasicBlock without a name.&quot;<\/span>);<\/div>$/;"	a
l00095	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCDAList;<\/div>$/;"	a
l00095	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCNO = <a class="code" href="Random_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>.begin();<\/div>$/;"	a
l00095	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00095	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00095	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00095	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  }<\/div>$/;"	a
l00095	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00095	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div>$/;"	a
l00096	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno"><a class="line" href="classInstructionCostMethod.html">   96<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classInstructionCostMethod.html">InstructionCostMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00096	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">Instruction::ICmp<\/a>:<\/div>$/;"	a
l00096	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment">    \/\/\/ \\brief set an information in the hash with a new value given as <\/span><\/div>$/;"	a
l00096	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1fa31f7df0a5328abd3c103219b95884">Instruction::ICmp<\/a>:<\/div>$/;"	a
l00096	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00096	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        <span class="comment">\/\/ declare void @print_results(...) #1  <\/span><\/div>$/;"	a
l00096	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  }<\/div>$/;"	a
l00096	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;      <span class="keywordflow">if<\/span> (Distance == 0) { <\/div>$/;"	a
l00096	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a267899c27f98246e22e234ba11c8df99">LoopReroll<\/a>:<\/div>$/;"	a
l00096	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00096	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  }<\/div>$/;"	a
l00096	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  BasicBlockFrequency[BB-&gt;getName().str()] = <a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>;<\/div>$/;"	a
l00096	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div>$/;"	a
l00096	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  <span class="comment">\/\/ FIXME!<\/span><\/div>$/;"	a
l00096	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  Module *MyModule = <\/div>$/;"	a
l00096	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a memory representation of the hash from a string <\/span><\/div>$/;"	a
l00096	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        <span class="comment">\/\/ declare void @print_results(...) #1  <\/span><\/div>$/;"	a
l00096	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div>$/;"	a
l00096	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="comment">    \/\/\/ \\brief Create a memory representation of the hash from a string <\/span><\/div>$/;"	a
l00096	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        <span class="comment">\/\/ declare void @print_results(...) #1  <\/span><\/div>$/;"	a
l00097	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  <span class="keyword">public<\/span>:<\/div>$/;"	a
l00097	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1fa31f7df0a5328abd3c103219b95884">Descriptor::ICmp<\/a>);<\/div>$/;"	a
l00097	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="comment">    \/\/\/ parameter.<\/span><\/div>$/;"	a
l00097	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1fa31f7df0a5328abd3c103219b95884">DescriptorKind::ICmp<\/a>);<\/div>$/;"	a
l00097	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="comment">    \/\/\/ \\brief set an information in the hash with a new value given as <\/span><\/div>$/;"	a
l00097	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        FuncType = FunctionType::get(Builder.getInt32Ty(), <span class="keyword">true<\/span>); <\/div>$/;"	a
l00097	docs/html/CostEstimator_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;}<\/div>$/;"	a
l00097	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        Smallest = Elem.getString(); <\/div>$/;"	a
l00097	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopRerollPass();<\/div>$/;"	a
l00097	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="comment">    \/\/\/ \\brief Apply Passes (Transformations) into a ProfileModule. Also ensures<\/span><\/div>$/;"	a
l00097	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div>$/;"	a
l00097	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;}<\/div>$/;"	a
l00097	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCDA = <a class="code" href="RandomOnFunction_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>.begin();<\/div>$/;"	a
l00097	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  <span class="comment">\/\/while (iGCDA != GCDAFilename.end() &amp;&amp; iGCNO != GCNOFilename.end()) {<\/span><\/div>$/;"	a
l00097	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;    parseIRFile(<a class="code" href="Test_8cpp.html#a0f07d0807dfe80397edbe03d9748479c">LLVMFilename<\/a>.c_str(), Error, Context).release();<\/div>$/;"	a
l00097	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="comment">    \/\/\/ representation of the hash. Usefull when loading the hash from a file.<\/span><\/div>$/;"	a
l00097	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        funcType = FunctionType::get(Builder.getInt32Ty(), <span class="keyword">true<\/span>); <\/div>$/;"	a
l00097	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  DBManager.<a class="code" href="classDatabaseManager.html#ad7bb44ea2911e16f090c176a84e92ed2">printDatabase<\/a>();<\/div>$/;"	a
l00097	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="comment">    \/\/\/ representation of the hash. Usefull when loading the hash from a file.<\/span><\/div>$/;"	a
l00097	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;        funcType = FunctionType::get(Builder.getInt32Ty(), <span class="keyword">true<\/span>); <\/div>$/;"	a
l00098	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classInstructionCostMethod.html#a1f2097ab2874ee073714ceeb50045a30">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00098	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00098	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classBBDescriptor.html#a0f1629d26b54d997594e86d3170d3a18">set<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span>);<\/div>$/;"	a
l00098	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00098	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="comment">    \/\/\/ parameter.<\/span><\/div>$/;"	a
l00098	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        F = Function::Create(FuncType, Function::ExternalLinkage, <\/div>$/;"	a
l00098	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        <span class="keywordflow">break<\/span>; <\/div>$/;"	a
l00098	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab65fd21f87df39a549b72d3c452857c8">LoopRotate<\/a>:<\/div>$/;"	a
l00098	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="comment">    \/\/\/ that its profiling information ramains consistent. The ProfileModule <\/span><\/div>$/;"	a
l00098	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;}<\/div>$/;"	a
l00098	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div>$/;"	a
l00098	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCNO = <a class="code" href="RandomOnFunction_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>.begin();<\/div>$/;"	a
l00098	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;  <span class="keyword">auto<\/span> GCNO = MemoryBuffer::getFileOrSTDIN(*iGCNO);<\/div>$/;"	a
l00098	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div>$/;"	a
l00098	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span>&amp;); <\/div>$/;"	a
l00098	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00098	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div>$/;"	a
l00098	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span>&amp;); <\/div>$/;"	a
l00098	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        F = Function::Create(funcType, Function::ExternalLinkage, <\/div>$/;"	a
l00099	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div>$/;"	a
l00099	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">Instruction::FCmp<\/a>: <\/div>$/;"	a
l00099	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00099	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525abd3dc39155f65dbcd61a8a02660b72aa">Instruction::FCmp<\/a>: <\/div>$/;"	a
l00099	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classBBHash.html#ae48c266828a73edb1341e2d4c7b2fe8e">setDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>, <span class="keywordtype">int<\/span>);<\/div>$/;"	a
l00099	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="stringliteral">&quot;print_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00099	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;      } <span class="keywordflow">if<\/span> (Distance &lt; SmallestDistance) {<\/div>$/;"	a
l00099	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopRotatePass();<\/div>$/;"	a
l00099	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="comment">    \/\/\/ given as parameter isn&#39;t modified, actualy all the modifications are<\/span><\/div>$/;"	a
l00099	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div>$/;"	a
l00099	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;uint64_t <\/div>$/;"	a
l00099	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;  <span class="comment">\/\/ FIXME!<\/span><\/div>$/;"	a
l00099	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;  <span class="keyword">auto<\/span> GCDA = MemoryBuffer::getFileOrSTDIN(*iGCDA);<\/div>$/;"	a
l00099	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCNOList;<\/div>$/;"	a
l00099	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00099	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="stringliteral">&quot;print_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00099	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;  <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00099	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00099	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="stringliteral">&quot;print_results&quot;<\/span>, &amp;M);   <\/div>$/;"	a
l00100	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno"><a class="line" href="classInstructionCostMethod.html#a7cba00104200a3bce6bcc1022ba066f1">  100<\/a><\/span>&#160;    <a class="code" href="classInstructionCostMethod.html#a7cba00104200a3bce6bcc1022ba066f1">~InstructionCostMethod<\/a>() {};<\/div>$/;"	a
l00100	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45abd3dc39155f65dbcd61a8a02660b72aa">Descriptor::FCmp<\/a>);<\/div>$/;"	a
l00100	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="comment">    \/\/\/ \\brief Sum 1 or n to the value of an information in the hash.<\/span><\/div>$/;"	a
l00100	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525abd3dc39155f65dbcd61a8a02660b72aa">DescriptorKind::FCmp<\/a>);<\/div>$/;"	a
l00100	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00100	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00100	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        SmallestDistance = Distance;<\/div>$/;"	a
l00100	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5acdc805b7881bdeebbf058395419c5c6e">LoopIdiom<\/a>:<\/div>$/;"	a
l00100	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="comment">    \/\/\/ made in a copy. This copy is returned as parameter.<\/span><\/div>$/;"	a
l00100	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#aec09c0e7c6c53b5bd00197e7fdf94126">  100<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="PAPI_8cpp.html#aec09c0e7c6c53b5bd00197e7fdf94126">get_results<\/a>() {<\/div>$/;"	a
l00100	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;ProfileModule::getExecutionFreqUsingPredecessors(BasicBlock* BB) {<\/div>$/;"	a
l00100	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  <span class="comment">\/\/while (iGCDA != GCDAFilename.end() &amp;&amp; iGCNO != GCNOFilename.end()) {<\/span><\/div>$/;"	a
l00100	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  GCNOList.push_back(GCNO.get().get());<\/div>$/;"	a
l00100	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  std::list&lt;MemoryBuffer*&gt; GCDAList;<\/div>$/;"	a
l00100	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="comment">    \/\/\/ \\brief set an information in the hash with a new value given as <\/span><\/div>$/;"	a
l00100	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00100	docs/html/mergeDatabase_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;}<\/div>$/;"	a
l00100	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="comment">    \/\/\/ \\brief set an information in the hash with a new value given as <\/span><\/div>$/;"	a
l00100	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;        addAttributes(F);<\/div>$/;"	a
l00101	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;};<\/div>$/;"	a
l00101	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00101	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classBBDescriptor.html#a99be9986d3511b50f5ddb989b2ffb5a4">addUp<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span> n = 1); <\/div>$/;"	a
l00101	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00101	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<span class="comment">    \/\/\/ \\brief Sum 1 or n to the value of an information in the hash.<\/span><\/div>$/;"	a
l00101	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;      }<\/div>$/;"	a
l00101	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        Smallest         = Elem.getString();<\/div>$/;"	a
l00101	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopIdiomPass();<\/div>$/;"	a
l00101	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfileModule.html">ProfileModule<\/a>* <a class="code" href="namespaceGEOS.html#a64d258559ffb715536bead46681ed475">applyPasses<\/a>(<span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;, <\/div>$/;"	a
l00101	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  <span class="keywordflow">if<\/span> (!IDsStack.empty()) {<\/div>$/;"	a
l00101	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  uint64_t PredecessorsWeight = 0;<\/div>$/;"	a
l00101	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  <span class="keyword">auto<\/span> GCNO = MemoryBuffer::getFileOrSTDIN(*iGCNO);<\/div>$/;"	a
l00101	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  GCDAList.push_back(GCDA.get().get());<\/div>$/;"	a
l00101	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div>$/;"	a
l00101	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<span class="comment">    \/\/\/ parameter.<\/span><\/div>$/;"	a
l00101	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;      }<\/div>$/;"	a
l00101	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<span class="comment">    \/\/\/ parameter.<\/span><\/div>$/;"	a
l00101	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;      }<\/div>$/;"	a
l00102	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00102	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Instruction::Store<\/a>: <\/div>$/;"	a
l00102	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00102	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">Instruction::Store<\/a>: <\/div>$/;"	a
l00102	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classBBHash.html#afaa66a25917d41266a53673f4b330900">addUpDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>, <span class="keywordtype">int<\/span> n = 1); <\/div>$/;"	a
l00102	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div>$/;"	a
l00102	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;      }<\/div>$/;"	a
l00102	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5aea6c57bb843155160c2e78843349ba1c">PromoteMemoryToRegister<\/a>:<\/div>$/;"	a
l00102	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;        llvm::FunctionPassManager&amp;);<\/div>$/;"	a
l00102	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;    <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>[<a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>] += <a class="code" href="PAPI_8cpp.html#a55995c266cf6b88f45fed6f5c8c20ff6">get_time_stamp<\/a>();<\/div>$/;"	a
l00102	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> IT = pred_begin(BB), ET = pred_end(BB); IT != ET; ++IT) {<\/div>$/;"	a
l00102	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  <span class="keyword">auto<\/span> GCDA = MemoryBuffer::getFileOrSTDIN(*iGCDA);<\/div>$/;"	a
l00102	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  <span class="comment">\/\/}<\/span><\/div>$/;"	a
l00102	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCDA = <a class="code" href="Test_8cpp.html#abcc5b62c9e3c67074392d5b80b93aa2a">GCDAFilename<\/a>.begin();<\/div>$/;"	a
l00102	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span>   set(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span>);<\/div>$/;"	a
l00102	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div>$/;"	a
l00102	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span>   set(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span>);<\/div>$/;"	a
l00102	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div>$/;"	a
l00103	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses the sum of both estimations from HashMethod and <\/span><\/div>$/;"	a
l00103	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Descriptor::Store<\/a>);<\/div>$/;"	a
l00103	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment">    \/\/\/ \\brief get the value from an information in the hash.<\/span><\/div>$/;"	a
l00103	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">DescriptorKind::Store<\/a>);<\/div>$/;"	a
l00103	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00103	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, Module &amp;M, <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {<\/div>$/;"	a
l00103	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;    }<\/div>$/;"	a
l00103	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;      <span class="keywordflow">return<\/span> createPromoteMemoryToRegisterPass();<\/div>$/;"	a
l00103	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00103	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<\/div>$/;"	a
l00103	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;    BasicBlock* Predecessor = *IT;<\/div>$/;"	a
l00103	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  GCNOList.push_back(GCNO.get().get());<\/div>$/;"	a
l00103	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<\/div>$/;"	a
l00103	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  cl::list&lt;std::string&gt;::iterator iGCNO = <a class="code" href="Test_8cpp.html#afde90c2f2f6772fe5d8bb5ea1a3a382e">GCNOFilename<\/a>.begin();<\/div>$/;"	a
l00103	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00103	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, Module &amp;M, <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {<\/div>$/;"	a
l00103	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00103	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnBasicBlock(BasicBlock &amp;BB, Module &amp;M, <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>) {<\/div>$/;"	a
l00104	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment">\/\/\/ InstructionMethod.<\/span><\/div>$/;"	a
l00104	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00104	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">int<\/span> <a class="code" href="classBBDescriptor.html#ae79c1229865a2f1485f11000f4f27283">getDescription<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>);<\/div>$/;"	a
l00104	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00104	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment">    \/\/\/ \\brief get the value from an information in the hash.<\/span><\/div>$/;"	a
l00104	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        <span class="keywordflow">if<\/span> (BB.getInstList().size() &gt; 3) {<\/div>$/;"	a
l00104	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div>$/;"	a
l00104	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a88e9e6c952a4661885988a186c6ed298">DemoteRegisterToMemory<\/a>:<\/div>$/;"	a
l00104	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment">    \/\/\/ \\brief Estimate the execution time of a function from the ProfileModule<\/span><\/div>$/;"	a
l00104	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="preprocessor">#if STACK<\/span><\/div>$/;"	a
l00104	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;    <span class="keyword">auto<\/span> Terminator = Predecessor-&gt;getTerminator();<\/div>$/;"	a
l00104	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  GCDAList.push_back(GCDA.get().get());<\/div>$/;"	a
l00104	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a>  *PModule   = <span class="keyword">new<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>(MyModule, GCDAList, GCNOList);<\/div>$/;"	a
l00104	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  <span class="comment">\/\/ FIXME!<\/span><\/div>$/;"	a
l00104	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment">    \/\/\/ \\brief sum 1 or n to the value of an information in the hash.<\/span><\/div>$/;"	a
l00104	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        <span class="keywordflow">if<\/span>(BB.getInstList().size() &gt; 3) {<\/div>$/;"	a
l00104	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="comment">    \/\/\/ \\brief sum 1 or n to the value of an information in the hash.<\/span><\/div>$/;"	a
l00104	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        <span class="keywordflow">if<\/span>(BB.getInstList().size() &gt; 3) {<\/div>$/;"	a
l00105	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno"><a class="line" href="classInstructionPlusHashMethod.html">  105<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classInstructionPlusHashMethod.html">InstructionPlusHashMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00105	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Instruction::Load<\/a>: <\/div>$/;"	a
l00105	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00105	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">Instruction::Load<\/a>: <\/div>$/;"	a
l00105	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">int<\/span> <a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) <span class="keyword">const<\/span>;<\/div>$/;"	a
l00105	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;          IRBuilder&lt;&gt; Builder(BB.getContext());<\/div>$/;"	a
l00105	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;    <a class="code" href="DatabaseManager_8cpp.html#aca6f2d85806b1fc1f834c30cea7a834c">Nearest<\/a>[Hash] = <span class="keyword">new<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>(Smallest);<\/div>$/;"	a
l00105	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;      <span class="keywordflow">return<\/span> createDemoteRegisterToMemoryPass();<\/div>$/;"	a
l00105	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="comment">    \/\/\/ with the given AnalysisMethod and returns it.<\/span><\/div>$/;"	a
l00105	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="preprocessor"><\/span>    <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a> = IDsStack.top();<\/div>$/;"	a
l00105	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div>$/;"	a
l00105	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;  <span class="comment">\/\/}<\/span><\/div>$/;"	a
l00105	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a>  *Optimized = PModule;<\/div>$/;"	a
l00105	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;  <span class="comment">\/\/while (iGCDA != GCDAFilename.end() &amp;&amp; iGCNO != GCNOFilename.end()) {<\/span><\/div>$/;"	a
l00105	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span>   addUp(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span> n = 1); <\/div>$/;"	a
l00105	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;          IRBuilder&lt;&gt; Builder(BB.getContext());<\/div>$/;"	a
l00105	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">void<\/span>   addUp(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>, <span class="keywordtype">int<\/span> n = 1); <\/div>$/;"	a
l00105	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;          IRBuilder&lt;&gt; Builder(BB.getContext());<\/div>$/;"	a
l00106	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  <span class="keyword">private<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00106	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Descriptor::Load<\/a>);<\/div>$/;"	a
l00106	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="comment">    \/\/\/ \\brief returns a string that represents this hash. For instance:<\/span><\/div>$/;"	a
l00106	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">DescriptorKind::Load<\/a>);<\/div>$/;"	a
l00106	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00106	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;          <\/div>$/;"	a
l00106	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  }<\/div>$/;"	a
l00106	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6f69c0907f02545fafb02f83689814e4">Reassociate<\/a>: <\/div>$/;"	a
l00106	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00106	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;    IDsStack.pop();<\/div>$/;"	a
l00106	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;    <span class="keywordflow">if<\/span> (BB != Predecessor) { <\/div>$/;"	a
l00106	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div>$/;"	a
l00106	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser = <\/div>$/;"	a
l00106	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  <span class="keyword">auto<\/span> GCNO = MemoryBuffer::getFileOrSTDIN(*iGCNO);<\/div>$/;"	a
l00106	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00106	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;          <\/div>$/;"	a
l00106	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00106	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;          <\/div>$/;"	a
l00107	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ \\brief Uses both InstructionMethod and HashMethod<\/span><\/div>$/;"	a
l00107	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00107	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ &quot;25-0-1-0-0-1-7-4-2-0-1-0-0-0-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1&quot;<\/span><\/div>$/;"	a
l00107	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00107	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ \\brief returns a string that represents this hash. For instance:<\/span><\/div>$/;"	a
l00107	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;          <span class="comment">\/\/ Call starT_measures<\/span><\/div>$/;"	a
l00107	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div>$/;"	a
l00107	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;      <span class="keywordflow">return<\/span> createReassociatePass(); <span class="comment">\/\/ PreservesCFG<\/span><\/div>$/;"	a
l00107	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ \\param The first param is the name of the function that the analysis <\/span><\/div>$/;"	a
l00107	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div>$/;"	a
l00107	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;      <span class="keywordflow">if<\/span> (isa&lt;BranchInst&gt;(Terminator)) {<\/div>$/;"	a
l00107	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a> *PModule   = <span class="keyword">new<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>(MyModule, GCDAList, GCNOList);<\/div>$/;"	a
l00107	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    <a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">GEOS::getAnalyser<\/a>((<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a>) <a class="code" href="Random_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>, <\/div>$/;"	a
l00107	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;  <span class="keyword">auto<\/span> GCDA = MemoryBuffer::getFileOrSTDIN(*iGCDA);<\/div>$/;"	a
l00107	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ \\brief get the value from an information in the hash.<\/span><\/div>$/;"	a
l00107	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;          <span class="comment">\/\/ Call starT_measures<\/span><\/div>$/;"	a
l00107	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="comment">    \/\/\/ \\brief get the value from an information in the hash.<\/span><\/div>$/;"	a
l00107	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;          <span class="comment">\/\/ Call starT_measures<\/span><\/div>$/;"	a
l00108	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classInstructionCostMethod.html">InstructionCostMethod<\/a> *IM;<\/div>$/;"	a
l00108	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">Instruction::ExtractElement<\/a>: <\/div>$/;"	a
l00108	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment">    \/\/\/ Where each position represents the amount of something in the basic<\/span><\/div>$/;"	a
l00108	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a534b45e4e8533fa4a26577c7f675eb93">Instruction::ExtractElement<\/a>: <\/div>$/;"	a
l00108	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment">    \/\/\/ &quot;25-0-1-0-0-1-7-4-2-0-1-0-0-0-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1&quot;<\/span><\/div>$/;"	a
l00108	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;          <span class="keyword">auto<\/span> ConstantId   = ConstantInt::get(Builder.getInt32Ty(), <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>);<\/div>$/;"	a
l00108	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  <span class="keywordflow">return<\/span> <a class="code" href="DatabaseManager_8cpp.html#aca6f2d85806b1fc1f834c30cea7a834c">Nearest<\/a>[Hash];<\/div>$/;"	a
l00108	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adcd48da897e32f57e2c9b1c82d69e956">JumpThreading<\/a>:<\/div>$/;"	a
l00108	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment">    \/\/\/ should be done. <\/span><\/div>$/;"	a
l00108	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;    <span class="keywordflow">if<\/span> (!IDsStack.empty()) {<\/div>$/;"	a
l00108	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;        <span class="keywordflow">if<\/span> (cast&lt;BranchInst&gt;(Terminator)-&gt;isUnconditional()) {<\/div>$/;"	a
l00108	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a> *Optimized = PModule;<\/div>$/;"	a
l00108	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;        <a class="code" href="Random_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.c_str());<\/div>$/;"	a
l00108	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  GCNOList.push_back(GCNO.get().get());<\/div>$/;"	a
l00108	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">int<\/span>    getDescription(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>);<\/div>$/;"	a
l00108	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;          <span class="keyword">auto<\/span> ConstantId   = ConstantInt::get(Builder.getInt32Ty(), <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>);<\/div>$/;"	a
l00108	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">int<\/span>    getDescription(<a class="code" href="projects_2llvm-project_2include_2BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>);<\/div>$/;"	a
l00108	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;          <span class="keyword">auto<\/span> ConstantId   = ConstantInt::get(Builder.getInt32Ty(), <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>);<\/div>$/;"	a
l00109	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;    <a class="code" href="classHashWeightedMethod.html">HashWeightedMethod<\/a> *HM;<\/div>$/;"	a
l00109	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a534b45e4e8533fa4a26577c7f675eb93">Descriptor::ExtractElement<\/a>);<\/div>$/;"	a
l00109	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="comment">    \/\/\/ block. For example, in this case the first number is the number of <\/span><\/div>$/;"	a
l00109	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a534b45e4e8533fa4a26577c7f675eb93">DescriptorKind::ExtractElement<\/a>);<\/div>$/;"	a
l00109	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="comment">    \/\/\/ Where each position represents the amount of something in the basic<\/span><\/div>$/;"	a
l00109	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;          CallInst *StartMeasuresCall = Builder.CreateCall(<\/div>$/;"	a
l00109	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;}<\/div>$/;"	a
l00109	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;      <span class="keywordflow">return<\/span> createJumpThreadingPass();<\/div>$/;"	a
l00109	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">double<\/span> <a class="code" href="namespaceGEOS.html#ab4313200e30faecd7c72466d282ffdd7">analyseFunctionExecutionTime<\/a>(llvm::StringRef, <\/div>$/;"	a
l00109	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;      <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a> = IDsStack.top();<\/div>$/;"	a
l00109	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div>$/;"	a
l00109	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;  <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser = <\/div>$/;"	a
l00109	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div>$/;"	a
l00109	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;  GCDAList.push_back(GCDA.get().get());<\/div>$/;"	a
l00109	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00109	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;          CallInst *StartMeasuresCall = Builder.CreateCall(<\/div>$/;"	a
l00109	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00109	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;          CallInst *StartMeasuresCall = Builder.CreateCall(<\/div>$/;"	a
l00110	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00110	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00110	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="comment">    \/\/\/ instruction in the basic block. So this basic block had 25 instructions.<\/span><\/div>$/;"	a
l00110	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00110	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="comment">    \/\/\/ block. For example, in this case the first number is the number of <\/span><\/div>$/;"	a
l00110	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;start_measures&quot;<\/span>), ConstantId);<\/div>$/;"	a
l00110	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div>$/;"	a
l00110	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2a876dee3e320a123dfd8fb1040bbcb3">CFGSimplification<\/a>:<\/div>$/;"	a
l00110	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;        <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;, <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a>*);<\/div>$/;"	a
l00110	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;      IDsStack.pop();<\/div>$/;"	a
l00110	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;          PredecessorsWeight += getBasicBlockFrequency(Predecessor);<\/div>$/;"	a
l00110	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;    <a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">GEOS::getAnalyser<\/a>((<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a>) <a class="code" href="RandomOnFunction_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>, <\/div>$/;"	a
l00110	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  <span class="keywordtype">double<\/span> StartTime = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, <\/div>$/;"	a
l00110	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  <span class="comment">\/\/}<\/span><\/div>$/;"	a
l00110	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="comment">    \/\/\/ \\brief returns a string that represents this hash. For instance:<\/span><\/div>$/;"	a
l00110	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;start_measures&quot;<\/span>), ConstantId);<\/div>$/;"	a
l00110	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="comment">    \/\/\/ \\brief returns a string that represents this hash. For instance:<\/span><\/div>$/;"	a
l00110	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;start_measures&quot;<\/span>), ConstantId);<\/div>$/;"	a
l00111	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment">    \/\/\/ \\brief Needs the database path as parameter for the HashMethod <\/span><\/div>$/;"	a
l00111	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">Instruction::InsertElement<\/a>: <\/div>$/;"	a
l00111	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment"><\/span>    llvm::StringRef <a class="code" href="classBBDescriptor.html#a03cc15accb4615553c4753b711d6ed71">getString<\/a>();<\/div>$/;"	a
l00111	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af2639ece9f498c75f97b782dfaa2070f">Instruction::InsertElement<\/a>: <\/div>$/;"	a
l00111	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment">    \/\/\/ instruction in the basic block. So this basic block had 25 instructions.<\/span><\/div>$/;"	a
l00111	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;         <\/div>$/;"	a
l00111	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#a2a26f10fb144de273aa8e50a27896dbb">  111<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#a2a26f10fb144de273aa8e50a27896dbb">DatabaseManager::insert<\/a>(<a class="code" href="classBBHash.html">BBHash<\/a> Hash, <span class="keywordtype">double<\/span> <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>) {<\/div>$/;"	a
l00111	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;      <span class="keywordflow">return<\/span> createCFGSimplificationPass();<\/div>$/;"	a
l00111	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00111	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div>$/;"	a
l00111	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div>$/;"	a
l00111	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;      <a class="code" href="RandomOnFunction_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.c_str());<\/div>$/;"	a
l00111	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;      Analyser) \/ 100000000.0;<\/div>$/;"	a
l00111	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div>$/;"	a
l00111	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment">    \/\/\/ &quot;25-0-1-0-0-1-7-4-2-0-1-0-0-0-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1&quot;<\/span><\/div>$/;"	a
l00111	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;         <\/div>$/;"	a
l00111	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="comment">    \/\/\/ &quot;25-0-1-0-0-1-7-4-2-0-1-0-0-0-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1&quot;<\/span><\/div>$/;"	a
l00111	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;         <\/div>$/;"	a
l00112	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment">    \/\/\/ constructor.<\/span><\/div>$/;"	a
l00112	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af2639ece9f498c75f97b782dfaa2070f">Descriptor::InsertElement<\/a>);<\/div>$/;"	a
l00112	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00112	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af2639ece9f498c75f97b782dfaa2070f">DescriptorKind::InsertElement<\/a>);<\/div>$/;"	a
l00112	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment"><\/span>    llvm::StringRef <a class="code" href="classBBHash.html#ad6b7566aa610f818d6dd2a9caf62ff17">getString<\/a>() <span class="keyword">const<\/span>;<\/div>$/;"	a
l00112	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;          <span class="comment">\/\/ Just add the instruction after all PHINodes <\/span><\/div>$/;"	a
l00112	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;  assert(Value &gt; 0 &amp;&amp; <span class="stringliteral">&quot;Cannot insert in the database a negative value.&quot;<\/span>);<\/div>$/;"	a
l00112	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a30727fad5bc8a039bd952b3fe57cec2d">FlattenCFG<\/a>:<\/div>$/;"	a
l00112	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment">    \/\/\/ \\brief Estimate the execution time of a ProfileModule with the given <\/span><\/div>$/;"	a
l00112	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;      Empty = <a class="code" href="PAPI_8cpp.html#aff2f32626188d3420bf5ad53258190e8">getEmpty<\/a>(Events, Values);<\/div>$/;"	a
l00112	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;        } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00112	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div>$/;"	a
l00112	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div>$/;"	a
l00112	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a>  *PModule   = <span class="keyword">new<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>(MyModule, GCDAList, GCNOList);<\/div>$/;"	a
l00112	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment">    \/\/\/ Where each position represents the amount of something in the basic<\/span><\/div>$/;"	a
l00112	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;          <span class="comment">\/\/ Just add the instruction after all PHINodes <\/span><\/div>$/;"	a
l00112	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="comment">    \/\/\/ Where each position represents the amount of something in the basic<\/span><\/div>$/;"	a
l00112	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;          <span class="comment">\/\/ Just add the instruction after all PHINodes <\/span><\/div>$/;"	a
l00113	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classInstructionPlusHashMethod.html#a09f57efa6a544d49e0ec90ae686a8ef8">InstructionPlusHashMethod<\/a>(llvm::StringRef);<\/div>$/;"	a
l00113	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00113	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment">    \/\/\/ \\brief Calculates an Euclidian distance between two hashes.<\/span><\/div>$/;"	a
l00113	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00113	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00113	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;          BB.getInstList().insert(BB.getFirstNonPHI(), StartMeasuresCall);<\/div>$/;"	a
l00113	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<\/div>$/;"	a
l00113	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;      <span class="keywordflow">return<\/span> createFlattenCFGPass();<\/div>$/;"	a
l00113	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment">    \/\/\/ AnalysisMethod and returns it. <\/span><\/div>$/;"	a
l00113	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;      PAPI_start_counters(Events, 2);<\/div>$/;"	a
l00113	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<\/div>$/;"	a
l00113	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;  <span class="keywordtype">double<\/span> StartTime = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, <\/div>$/;"	a
l00113	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;  <span class="keywordtype">double<\/span> BestValue = std::numeric_limits&lt;double&gt;::max();<\/div>$/;"	a
l00113	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a>  *Optimized = PModule;<\/div>$/;"	a
l00113	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment">    \/\/\/ block. For example, in this case the first number is the number of <\/span><\/div>$/;"	a
l00113	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;          BB.getInstList().insert(BB.getFirstNonPHI(), StartMeasuresCall);<\/div>$/;"	a
l00113	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="comment">    \/\/\/ block. For example, in this case the first number is the number of <\/span><\/div>$/;"	a
l00113	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;          BB.getInstList().insert(BB.getFirstNonPHI(), StartMeasuresCall);<\/div>$/;"	a
l00114	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div>$/;"	a
l00114	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">Instruction::ShuffleVector<\/a>: <\/div>$/;"	a
l00114	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment"><\/span>    <span class="comment">\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00114	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;      <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af15d4290da98fa835a47cecc79858b9e">Instruction::ShuffleVector<\/a>: <\/div>$/;"	a
l00114	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment">    \/\/\/ \\brief Calculates an Euclidian distance between two hashes.<\/span><\/div>$/;"	a
l00114	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;          <\/div>$/;"	a
l00114	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;  CDB[(<a class="code" href="classBBHash.html#a2b1373409004a02fba3d02c741670b8b">BBHash::dotProduct<\/a>(Hash, *<a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a>)\/<a class="code" href="DatabaseManager_8cpp.html#ae2d717de66eb9765dbeb4f152f4812ca">w<\/a>) % <a class="code" href="DatabaseManager_8cpp.html#a8fe95d68ae73e02aa604a3430b1cecc1">PrimeNumber<\/a>]<\/div>$/;"	a
l00114	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a745c966e474400f419eb02b0f1594d29">CFGStructurization<\/a>:<\/div>$/;"	a
l00114	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">double<\/span> <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">analyseExecutionTime<\/a>(<span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;, <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a>*);<\/div>$/;"	a
l00114	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;    }<\/div>$/;"	a
l00114	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;          uint64_t EdgeWeight = getBasicBlockFrequency(Predecessor);<\/div>$/;"	a
l00114	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;      Analyser) \/ 100000000.0;<\/div>$/;"	a
l00114	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;  std::vector&lt;OptimizationKind&gt; Optimizations;<\/div>$/;"	a
l00114	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;  <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser = <\/div>$/;"	a
l00114	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment">    \/\/\/ instruction at the basic block. So this basic block had 25 instructions.<\/span><\/div>$/;"	a
l00114	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;          <\/div>$/;"	a
l00114	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment">    \/\/\/ instruction at the basic block. So this basic block had 25 instructions.<\/span><\/div>$/;"	a
l00114	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;          <\/div>$/;"	a
l00115	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno"><a class="line" href="classInstructionPlusHashMethod.html#a38fcc3ff18ceb092940a2ef82a99ce2d">  115<\/a><\/span>&#160;    <a class="code" href="classInstructionPlusHashMethod.html#a38fcc3ff18ceb092940a2ef82a99ce2d">~InstructionPlusHashMethod<\/a>() {<\/div>$/;"	a
l00115	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af15d4290da98fa835a47cecc79858b9e">Descriptor::ShuffleVector<\/a>);<\/div>$/;"	a
l00115	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="comment">    \/\/\/ \\param weight when true it activates the use of weights for different <\/span><\/div>$/;"	a
l00115	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af15d4290da98fa835a47cecc79858b9e">DescriptorKind::ShuffleVector<\/a>);<\/div>$/;"	a
l00115	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00115	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;          <span class="comment">\/\/ Call get_results<\/span><\/div>$/;"	a
l00115	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;    .push_back(Hash);<\/div>$/;"	a
l00115	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;      <span class="keywordflow">return<\/span> createStructurizeCFGPass();<\/div>$/;"	a
l00115	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;}<\/div>$/;"	a
l00115	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div>$/;"	a
l00115	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;          <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> J = 0; J &lt; Terminator-&gt;getNumSuccessors(); ++J) {<\/div>$/;"	a
l00115	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div>$/;"	a
l00115	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;  <span class="keywordtype">int<\/span> Try = 30;<\/div>$/;"	a
l00115	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;    <a class="code" href="namespaceGEOS.html#a43f40b362cd1c6ad3ec96a4b4d1eb182">GEOS::getAnalyser<\/a>((<a class="code" href="AnalysisMethod_8h.html#a65b6de1fe68e7de9c7ec0bb36c7c71e2">AnalysisMethodKind<\/a>) <a class="code" href="Test_8cpp.html#a96ab926f273e28a0ef8f12bee34bf174">OptAnalysisMethod<\/a>, <\/div>$/;"	a
l00115	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">string<\/span> getString();<\/div>$/;"	a
l00115	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;          <span class="comment">\/\/ Call get_results<\/span><\/div>$/;"	a
l00115	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="comment"><\/span>    <span class="keywordtype">string<\/span> getString();<\/div>$/;"	a
l00115	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;          <span class="comment">\/\/ Call get_results<\/span><\/div>$/;"	a
l00116	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;      <span class="keyword">delete<\/span> IM;<\/div>$/;"	a
l00116	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00116	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<span class="comment">    \/\/\/ information in the hash. The weight comes from the DescriptorWeight <\/span><\/div>$/;"	a
l00116	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00116	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<span class="comment">    \/\/\/ \\returns it returns a double that represents how equally two basic <\/span><\/div>$/;"	a
l00116	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;          CallInst *GetResultsCall = Builder.CreateCall(<\/div>$/;"	a
l00116	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<\/div>$/;"	a
l00116	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a64b12abd4565bedcde9aadb5bd4805fe">BreakCriticalEdges<\/a>:<\/div>$/;"	a
l00116	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<\/div>$/;"	a
l00116	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;    NotFinished = <span class="keyword">false<\/span>;<\/div>$/;"	a
l00116	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            <span class="keyword">auto<\/span> SuccPred = Terminator-&gt;getSuccessor(J);<\/div>$/;"	a
l00116	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;Func : *MyModule2) {<\/div>$/;"	a
l00116	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;  <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00116	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <a class="code" href="Test_8cpp.html#a6d2acf75e673f8cce2423576cce2e49d">DatabaseFilename<\/a>.c_str());<\/div>$/;"	a
l00116	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00116	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;          CallInst *GetResultsCall = Builder.CreateCall(<\/div>$/;"	a
l00116	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00116	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;          CallInst *GetResultsCall = Builder.CreateCall(<\/div>$/;"	a
l00117	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;      <span class="keyword">delete<\/span> HM;<\/div>$/;"	a
l00117	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;      <span class="keywordflow">case<\/span> Instruction::Call:  <\/div>$/;"	a
l00117	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="comment">    \/\/\/ function.<\/span><\/div>$/;"	a
l00117	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;      <span class="keywordflow">case<\/span> Instruction::Call:  <\/div>$/;"	a
l00117	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="comment">    \/\/\/ blocks are. <\/span><\/div>$/;"	a
l00117	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;get_results&quot;<\/span>));<\/div>$/;"	a
l00117	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;  <span class="keywordflow">if<\/span> (hasHash(Hash)) <\/div>$/;"	a
l00117	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;      <span class="keywordflow">return<\/span> createBreakCriticalEdgesPass();<\/div>$/;"	a
l00117	docs/html/GEOS_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00117	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00117	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            <span class="keywordflow">if<\/span> (SuccPred != BB) {<\/div>$/;"	a
l00117	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;    <span class="keywordtype">double<\/span> BestValue = std::numeric_limits&lt;double&gt;::max();<\/div>$/;"	a
l00117	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;  <span class="keywordflow">while<\/span> (i &lt; 30) {<\/div>$/;"	a
l00117	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div>$/;"	a
l00117	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="comment">    \/\/\/ \\brief Calculates an euclidian distance between two hashs.<\/span><\/div>$/;"	a
l00117	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;get_results&quot;<\/span>));<\/div>$/;"	a
l00117	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<span class="comment">    \/\/\/ \\brief Calculates an euclidian distance between two hashs.<\/span><\/div>$/;"	a
l00117	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;              M.getFunction(<span class="stringliteral">&quot;get_results&quot;<\/span>));<\/div>$/;"	a
l00118	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;    };<\/div>$/;"	a
l00118	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;        addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">Descriptor::Calls<\/a>);<\/div>$/;"	a
l00118	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<span class="comment"><\/span>    <span class="comment">\/\/<\/span><span class="comment"><\/span><\/div>$/;"	a
l00118	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;        addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a1c3802a27c2777c6611cb5c030b7d0">DescriptorKind::Calls<\/a>);<\/div>$/;"	a
l00118	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">double<\/span> <\/div>$/;"	a
l00118	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div>$/;"	a
l00118	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;    DB[Hash] = (Value + DB[Hash])\/2;<\/div>$/;"	a
l00118	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8f3cd14645c538e9217514dcc502a109">LoopSimplify<\/a>:<\/div>$/;"	a
l00118	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<span class="preprocessor"><\/span>  }<\/div>$/;"	a
l00118	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;              <span class="keywordflow">if<\/span> (!hasBasicBlockFrequency(SuccPred) || <\/div>$/;"	a
l00118	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;    std::vector&lt;OptimizationKind&gt; Optimizations;<\/div>$/;"	a
l00118	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;    <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a> OptChoosed = (<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a>) getRandomPass(gen);<\/div>$/;"	a
l00118	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;  <span class="keywordtype">double<\/span> ExecutionTime1 = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser);<\/div>$/;"	a
l00118	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<span class="comment">    \/\/\/ \\param weight when true activate the use of weights for diferents <\/span><\/div>$/;"	a
l00118	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div>$/;"	a
l00118	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<span class="comment">    \/\/\/ \\param weight when true activate the use of weights for diferents <\/span><\/div>$/;"	a
l00118	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div>$/;"	a
l00119	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div>$/;"	a
l00119	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;        <span class="keyword">auto<\/span> Func = cast&lt;CallInst&gt;(i).getCalledFunction();<\/div>$/;"	a
l00119	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<span class="comment">    \/\/\/ \\returns it returns a double that represents how equally two basic <\/span><\/div>$/;"	a
l00119	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;        <span class="keyword">auto<\/span> Func = cast&lt;CallInst&gt;(i).getCalledFunction();<\/div>$/;"	a
l00119	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;      <a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">distance<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;, <span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;);<\/div>$/;"	a
l00119	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;          BB.getInstList().insert(BB.getInstList().back(), GetResultsCall);<\/div>$/;"	a
l00119	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;  <span class="keywordflow">else<\/span> <\/div>$/;"	a
l00119	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopSimplifyPass();<\/div>$/;"	a
l00119	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;}<\/div>$/;"	a
l00119	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;                  SuccPred-&gt;getUniquePredecessor() == <span class="keyword">nullptr<\/span> ||<\/div>$/;"	a
l00119	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;    <span class="keywordtype">int<\/span> Try = 30;<\/div>$/;"	a
l00119	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;    <span class="keywordflow">if<\/span> (<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(OptChoosed) == <span class="keyword">nullptr<\/span>) <span class="keywordflow">continue<\/span>;<\/div>$/;"	a
l00119	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;  <a class="code" href="Test_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(Optimized, 1);<\/div>$/;"	a
l00119	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<span class="comment">    \/\/\/ informations in the hash. The weight came from the DescriptorWeight <\/span><\/div>$/;"	a
l00119	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;          BB.getInstList().insert(BB.getInstList().back(), GetResultsCall);<\/div>$/;"	a
l00119	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<span class="comment">    \/\/\/ informations in the hash. The weight came from the DescriptorWeight <\/span><\/div>$/;"	a
l00119	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;          BB.getInstList().insert(BB.getInstList().back(), GetResultsCall);<\/div>$/;"	a
l00120	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classInstructionPlusHashMethod.html#abbac8b450ee415c8f03cfb99575b8c82">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00120	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;        <span class="keywordflow">if<\/span> (Func != <span class="keyword">nullptr<\/span>) {<\/div>$/;"	a
l00120	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="comment">    \/\/\/ blocks are. <\/span><\/div>$/;"	a
l00120	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;        <span class="keywordflow">if<\/span> (Func != <span class="keyword">nullptr<\/span>) {<\/div>$/;"	a
l00120	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00120	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;        } <\/div>$/;"	a
l00120	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;    DB[Hash] = <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>;<\/div>$/;"	a
l00120	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7035d403b2f7c353e8c5229cdc07cdc8">TailCallElimination<\/a>: <span class="comment">\/\/ Maybe can change CFG<\/span><\/div>$/;"	a
l00120	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<\/div>$/;"	a
l00120	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;                  EdgeWeight &lt; getBasicBlockFrequency(SuccPred)) {<\/div>$/;"	a
l00120	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;    <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00120	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<\/div>$/;"	a
l00120	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<\/div>$/;"	a
l00120	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="comment">    \/\/\/ function.<\/span><\/div>$/;"	a
l00120	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;        } <\/div>$/;"	a
l00120	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="comment">    \/\/\/ function.<\/span><\/div>$/;"	a
l00120	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;        } <\/div>$/;"	a
l00121	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;};<\/div>$/;"	a
l00121	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;          <span class="keyword">auto<\/span> FuncName = Func-&gt;getName(); <\/div>$/;"	a
l00121	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">double<\/span> <a class="code" href="classBBDescriptor.html#aa887fd0ffe551034fb15342d57b51068">distance<\/a>(<a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <span class="keywordtype">bool<\/span> Weight = <span class="keyword">false<\/span>);<\/div>$/;"	a
l00121	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;          <span class="keyword">auto<\/span> FuncName = Func-&gt;getName(); <\/div>$/;"	a
l00121	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<span class="comment">    \/\/\/ \\brief Calculates the dot product between two hashes.<\/span><\/div>$/;"	a
l00121	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00121	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;}<\/div>$/;"	a
l00121	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;      <span class="keywordflow">return<\/span> createTailCallEliminationPass();<\/div>$/;"	a
l00121	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno"><a class="line" href="PAPI_8cpp.html#ad058227fc490e93e440cb97b1c2051f5">  121<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="PAPI_8cpp.html#ad058227fc490e93e440cb97b1c2051f5">print_results<\/a>() {<\/div>$/;"	a
l00121	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;                EdgeWeight = 0;<\/div>$/;"	a
l00121	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;    <span class="keywordflow">while<\/span> (i &lt; 30) {<\/div>$/;"	a
l00121	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;    FunctionPassManager FPM(Optimized-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>());<\/div>$/;"	a
l00121	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;  printf(<span class="stringliteral">&quot;-------------------------------------------------\\n&quot;<\/span>);<\/div>$/;"	a
l00121	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<span class="comment">    \/\/\/ \\returns it returns an double that represents how equaly two basic <\/span><\/div>$/;"	a
l00121	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00121	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<span class="comment">    \/\/\/ \\returns it returns an double that represents how equaly two basic <\/span><\/div>$/;"	a
l00121	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00122	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00122	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;          <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;printf&quot;<\/span>) {<\/div>$/;"	a
l00122	docs/html/BBDescriptor_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;};<\/div>$/;"	a
l00122	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;          <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;printf&quot;<\/span>) {<\/div>$/;"	a
l00122	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="comment">    \/\/\/<\/span><\/div>$/;"	a
l00122	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;      }<\/div>$/;"	a
l00122	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div>$/;"	a
l00122	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abad0ed8664bc8bc2f77877125160c7ad">LowerSwitch<\/a>: <span class="comment">\/\/ Maybe can change CFG<\/span><\/div>$/;"	a
l00122	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; <a class="code" href="PAPI_8cpp.html#a121b8bab5c0ceda3e33140d406f4887e">SIZE<\/a>; i++) <\/div>$/;"	a
l00122	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;                <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00122	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;      <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a> OptChoosed = (<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5">OptimizationKind<\/a>) getRandomPass(gen);<\/div>$/;"	a
l00122	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div>$/;"	a
l00122	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;  FunctionPassManager FPM(Optimized-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>());<\/div>$/;"	a
l00122	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="comment">    \/\/\/ blocks are.<\/span><\/div>$/;"	a
l00122	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;      }<\/div>$/;"	a
l00122	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="comment">    \/\/\/ blocks are.<\/span><\/div>$/;"	a
l00122	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;      }<\/div>$/;"	a
l00123	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<span class="comment">\/\/\/ \\brief This method uses a similar approach as HashMethod. But instead <\/span><\/div>$/;"	a
l00123	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">Descriptor::Printf<\/a>);  <\/div>$/;"	a
l00123	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9d1256d31c3c650658176f4203795bd8">DescriptorKind::Printf<\/a>);  <\/div>$/;"	a
l00123	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<span class="comment">    \/\/\/ \\returns it returns a double from the result of the dot product. <\/span><\/div>$/;"	a
l00123	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div>$/;"	a
l00123	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#aafc4eab876b4ea38c1a7cbcd3a018ec3">  123<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#aafc4eab876b4ea38c1a7cbcd3a018ec3">DatabaseManager::unionWith<\/a>(<a class="code" href="classDatabaseManager.html">DatabaseManager<\/a> &amp;DB2) {<\/div>$/;"	a
l00123	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;      <span class="keywordflow">return<\/span> createLowerSwitchPass();<\/div>$/;"	a
l00123	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;    <span class="keywordflow">if<\/span> (<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>[i] &gt; 0 &amp;&amp; <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>[i] &gt; 0) <\/div>$/;"	a
l00123	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;              } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00123	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;      <span class="keywordflow">if<\/span> (<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(OptChoosed) == <span class="keyword">nullptr<\/span>) <span class="keywordflow">continue<\/span>;<\/div>$/;"	a
l00123	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> OptKind : Optimizations) { <\/div>$/;"	a
l00123	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div>$/;"	a
l00123	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">double<\/span> Distance(<a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <span class="keywordtype">bool<\/span> weight = <span class="keyword">false<\/span>);<\/div>$/;"	a
l00123	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div>$/;"	a
l00123	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">double<\/span> Distance(<a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a>&amp;, <span class="keywordtype">bool<\/span> weight = <span class="keyword">false<\/span>);<\/div>$/;"	a
l00123	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div>$/;"	a
l00124	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<span class="comment">\/\/\/ searching in a database the cost of each basic block is directly given. <\/span><\/div>$/;"	a
l00124	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;malloc&quot;<\/span>) {<\/div>$/;"	a
l00124	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;malloc&quot;<\/span>) {<\/div>$/;"	a
l00124	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classBBHash.html#a2b1373409004a02fba3d02c741670b8b">dotProduct<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;, <span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp;);<\/div>$/;"	a
l00124	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00124	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> Elem : DB2)  <\/div>$/;"	a
l00124	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a7365676a83dff7e6184a13576e1c2e5b">LCSSA<\/a>:<\/div>$/;"	a
l00124	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;      fprintf(stderr, <span class="stringliteral">&quot;%d: %d\\n&quot;<\/span>, i, (<span class="keywordtype">int<\/span>) ceil(1.0\/(<a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>[i]\/<a class="code" href="PAPI_8cpp.html#af9d22b8c6cb19e5b0e44b8a78d1cd3d9">Freq<\/a>[i])));<\/div>$/;"	a
l00124	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;                EdgeWeight -= getBasicBlockFrequency(SuccPred);<\/div>$/;"	a
l00124	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div>$/;"	a
l00124	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;      Pass *Aux = <a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(OptKind);<\/div>$/;"	a
l00124	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a745c966e474400f419eb02b0f1594d29">OptimizationKind::CFGStructurization<\/a>));<\/div>$/;"	a
l00124	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;};<\/div>$/;"	a
l00124	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00124	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;};<\/div>$/;"	a
l00124	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;      <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> getAnalysisUsage(AnalysisUsage &amp;AU)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00125	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno"><a class="line" href="classProfMethod.html">  125<\/a><\/span>&#160;<span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classProfMethod.html">ProfMethod<\/a> : <span class="keyword">public<\/span> <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> {<\/div>$/;"	a
l00125	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">Descriptor::Malloc<\/a>);<\/div>$/;"	a
l00125	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a98c8ebeff4cef657037fc44f78f4e5">DescriptorKind::Malloc<\/a>);<\/div>$/;"	a
l00125	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<span class="comment"><\/span><\/div>$/;"	a
l00125	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00125	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;    insert(Elem.first, Elem.second);<\/div>$/;"	a
l00125	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;      <span class="keywordflow">return<\/span> createLCSSAPass(); <span class="comment">\/\/ PreservesCFG<\/span><\/div>$/;"	a
l00125	docs/html/PAPI_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;}<\/div>$/;"	a
l00125	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;              }<\/div>$/;"	a
l00125	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;      Optimizations.push_back(OptChoosed);<\/div>$/;"	a
l00125	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;      FPM.add(Aux);<\/div>$/;"	a
l00125	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a30727fad5bc8a039bd952b3fe57cec2d">OptimizationKind::FlattenCFG<\/a>));<\/div>$/;"	a
l00125	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00125	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        AU.setPreservesCFG();<\/div>$/;"	a
l00126	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;  <span class="keyword">private<\/span>:<\/div>$/;"	a
l00126	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;pow&quot;<\/span>) {<\/div>$/;"	a
l00126	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;pow&quot;<\/span>) {<\/div>$/;"	a
l00126	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<span class="comment">    \/\/\/ \\brief Generates a randomic Hash.<\/span><\/div>$/;"	a
l00126	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;      }<\/div>$/;"	a
l00126	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;}<\/div>$/;"	a
l00126	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab2c9f9f5526207823da22e25f7665180">EarlyCSE<\/a>:<\/div>$/;"	a
l00126	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;            }<\/div>$/;"	a
l00126	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div>$/;"	a
l00126	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;    }<\/div>$/;"	a
l00126	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a2a876dee3e320a123dfd8fb1040bbcb3">OptimizationKind::CFGSimplification<\/a>));<\/div>$/;"	a
l00126	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;      }<\/div>$/;"	a
l00126	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;      }<\/div>$/;"	a
l00127	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    std::vector&lt;double&gt; Times;<\/div>$/;"	a
l00127	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">Descriptor::Pow<\/a>);<\/div>$/;"	a
l00127	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a54cc8639b2ae32fad159203ab1b7aa4a">DescriptorKind::Pow<\/a>);<\/div>$/;"	a
l00127	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<span class="comment"><\/span>    <span class="keyword">static<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="classBBHash.html#ad67c68af87d6ae7a41ff090a648628f9">getRandomHash<\/a>();<\/div>$/;"	a
l00127	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00127	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div>$/;"	a
l00127	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;      <span class="keywordflow">return<\/span> createEarlyCSEPass();<\/div>$/;"	a
l00127	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;          }<\/div>$/;"	a
l00127	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;      FunctionPassManager FPM(Optimized-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>());<\/div>$/;"	a
l00127	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div>$/;"	a
l00127	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5ab1dad8e03577ba10d9f2982766209f2f">OptimizationKind::LoopStrengthReduce<\/a>));<\/div>$/;"	a
l00127	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00127	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    <span class="keyword">public<\/span>:<\/div>$/;"	a
l00128	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;  <span class="keyword">public<\/span>:<span class="comment"><\/span><\/div>$/;"	a
l00128	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;sqrt&quot;<\/span>) {<\/div>$/;"	a
l00128	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;          } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (FuncName == <span class="stringliteral">&quot;sqrt&quot;<\/span>) {<\/div>$/;"	a
l00128	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div>$/;"	a
l00128	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00128	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno"><a class="line" href="classDatabaseManager.html#ad7bb44ea2911e16f090c176a84e92ed2">  128<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classDatabaseManager.html#ad7bb44ea2911e16f090c176a84e92ed2">DatabaseManager::printDatabase<\/a>()<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00128	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a527ed22e9bd4554234f7f64e51f555c0">MergedLoadStoreMotion<\/a>:<\/div>$/;"	a
l00128	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div>$/;"	a
l00128	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div>$/;"	a
l00128	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;    FPM.doInitialization();<\/div>$/;"	a
l00128	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5add49f6d5c9a7264335d8fc11078b90fd">OptimizationKind::LoopUnroll<\/a>));<\/div>$/;"	a
l00128	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00128	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;      <span class="keyword">static<\/span> <span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">ID<\/a>; <\/div>$/;"	a
l00129	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<span class="comment">    \/\/\/ \\brief Needs the database path as parameter for the HashMethod <\/span><\/div>$/;"	a
l00129	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            addUp(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">Descriptor::Sqrt<\/a>);<\/div>$/;"	a
l00129	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            addUpDescriptor(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a98095238a325acc3b59341ba5367172d">DescriptorKind::Sqrt<\/a>);<\/div>$/;"	a
l00129	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno"><a class="line" href="classBBHash.html#af82156050bca52876a66fce841e8be87">  129<\/a><\/span>&#160;    <span class="keywordtype">bool<\/span> <a class="code" href="classBBHash.html#af82156050bca52876a66fce841e8be87">operator==<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;Other)<span class="keyword"> const <\/span>{ <\/div>$/;"	a
l00129	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      BBProf() : ModulePass(ID) {}<\/div>$/;"	a
l00129	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> i : DB)<\/div>$/;"	a
l00129	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      <span class="keywordflow">return<\/span> createMergedLoadStoreMotionPass();<\/div>$/;"	a
l00129	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;          PredecessorsWeight += EdgeWeight;<\/div>$/;"	a
l00129	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> OptKind : Optimizations) { <\/div>$/;"	a
l00129	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;    <a class="code" href="classProfileModule.html">ProfileModule<\/a>* Candidate = <\/div>$/;"	a
l00129	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a64b12abd4565bedcde9aadb5bd4805fe">OptimizationKind::BreakCriticalEdges<\/a>));<\/div>$/;"	a
l00129	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      BBProf() : ModulePass(ID) {}<\/div>$/;"	a
l00129	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;      BBProf() : ModulePass(ID) {}<\/div>$/;"	a
l00130	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<span class="comment">    \/\/\/ constructor.<\/span><\/div>$/;"	a
l00130	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;          }<\/div>$/;"	a
l00130	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;          }<\/div>$/;"	a
l00130	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;      <span class="keywordflow">return<\/span> <a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">distance<\/a>(Other, *<span class="keyword">this<\/span>) == 0;<\/div>$/;"	a
l00130	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div>$/;"	a
l00130	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;    outs() &lt;&lt; i.first.getString() &lt;&lt; <span class="stringliteral">&quot; &quot;<\/span> &lt;&lt; i.second &lt;&lt; <span class="stringliteral">&quot;\\n&quot;<\/span>;<\/div>$/;"	a
l00130	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5afe0554beb62294243661aa546ca529ee">GVN<\/a>:<\/div>$/;"	a
l00130	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        }<\/div>$/;"	a
l00130	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        Pass *Aux = <a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(OptKind);<\/div>$/;"	a
l00130	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;      <a class="code" href="namespaceGEOS.html#a64d258559ffb715536bead46681ed475">GEOS::applyPasses<\/a>(*Optimized, FPM);<\/div>$/;"	a
l00130	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a8f3cd14645c538e9217514dcc502a109">OptimizationKind::LoopSimplify<\/a>));<\/div>$/;"	a
l00130	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div>$/;"	a
l00130	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div>$/;"	a
l00131	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;<span class="comment"><\/span>    <a class="code" href="classProfMethod.html#a1ae622ee97d00f7cfc729157e19effbd">ProfMethod<\/a>(llvm::StringRef);<\/div>$/;"	a
l00131	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;        }<\/div>$/;"	a
l00131	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;        }<\/div>$/;"	a
l00131	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;    }<\/div>$/;"	a
l00131	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00131	docs/html/DatabaseManager_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;}<\/div>$/;"	a
l00131	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;      <span class="keywordflow">return<\/span> createGVNPass();<\/div>$/;"	a
l00131	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;      }<\/div>$/;"	a
l00131	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;        FPM.add(Aux);<\/div>$/;"	a
l00131	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;    FPM.doFinalization();<\/div>$/;"	a
l00131	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;  FPM.add(<a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(<a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a03796968d0d7da4918261cb7387e13b9">OptimizationKind::LoopDeletion<\/a>));<\/div>$/;"	a
l00131	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00131	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;      <span class="keywordtype">bool<\/span> runOnModule(Module &amp;M)<span class="keyword"> override <\/span>{<\/div>$/;"	a
l00132	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div>$/;"	a
l00132	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00132	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;        <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00132	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;};<\/div>$/;"	a
l00132	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;        declarePAPIFunctions(M);<\/div>$/;"	a
l00132	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5abe07fed8addc43a91ae8ba1018a4b3d3">MemCpyOpt<\/a>:<\/div>$/;"	a
l00132	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;    }<\/div>$/;"	a
l00132	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;      }<\/div>$/;"	a
l00132	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div>$/;"	a
l00132	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div>$/;"	a
l00132	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;        declarePAPIFunctions(M);<\/div>$/;"	a
l00132	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;        declarePAPIFunctions(M);<\/div>$/;"	a
l00133	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    <span class="keywordtype">double<\/span> <a class="code" href="classProfMethod.html#ab0505bfd5a287c0fe042dd0efac159b7">estimateExecutionTime<\/a>(llvm::Function*, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp;) <span class="keyword">const<\/span>; <\/div>$/;"	a
l00133	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    }<\/div>$/;"	a
l00133	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    }<\/div>$/;"	a
l00133	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00133	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00133	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;      <span class="keywordflow">return<\/span> createMemCpyOptPass();<\/div>$/;"	a
l00133	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00133	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00133	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;    <span class="keywordtype">double<\/span> ExecutionTime = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser);<\/div>$/;"	a
l00133	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;  FPM.doInitialization();<\/div>$/;"	a
l00133	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00133	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div>$/;"	a
l00134	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;};<\/div>$/;"	a
l00134	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;  }<\/div>$/;"	a
l00134	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;  }<\/div>$/;"	a
l00134	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno"><a class="line" href="namespacestd.html">  134<\/a><\/span>&#160;<span class="keyword">namespace <\/span>std {<span class="comment"><\/span><\/div>$/;"	a
l00134	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00134	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a03796968d0d7da4918261cb7387e13b9">LoopDeletion<\/a>: <span class="comment">\/\/ Maybe can change CFG<\/span><\/div>$/;"	a
l00134	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;  }<\/div>$/;"	a
l00134	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;      FPM.doInitialization();<\/div>$/;"	a
l00134	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<\/div>$/;"	a
l00134	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a>* Candidate = <\/div>$/;"	a
l00134	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00134	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;        <span class="keywordtype">int<\/span> i = 0;<\/div>$/;"	a
l00135	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<\/div>$/;"	a
l00135	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;}<\/div>$/;"	a
l00135	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;}<\/div>$/;"	a
l00135	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<span class="comment">  \/\/\/ \\brief Define the hash function for the type BBHash. It uses the <\/span><\/div>$/;"	a
l00135	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;        <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00135	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;      <span class="keywordflow">return<\/span> createLoopDeletionPass();<\/div>$/;"	a
l00135	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<\/div>$/;"	a
l00135	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;      <a class="code" href="classProfileModule.html">ProfileModule<\/a>* Candidate = <\/div>$/;"	a
l00135	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;    <span class="keywordflow">if<\/span> (ExecutionTime &lt;= BestValue) {<\/div>$/;"	a
l00135	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;    <a class="code" href="namespaceGEOS.html#a64d258559ffb715536bead46681ed475">GEOS::applyPasses<\/a>(*Optimized, FPM);<\/div>$/;"	a
l00135	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;        <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00135	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;        <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;F : M) <\/div>$/;"	a
l00136	docs/html/AnalysisMethod_8h_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div>$/;"	a
l00136	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div>$/;"	a
l00136	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div>$/;"	a
l00136	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<span class="comment">  \/\/\/ result of hash&lt;string&gt; applied in the getString from the BBHash.<\/span><\/div>$/;"	a
l00136	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;          <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00136	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a12e0179653d92bc95fbce96b1e16eca5">ConstantHoisting<\/a>:<\/div>$/;"	a
l00136	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;  <span class="keywordflow">return<\/span> PredecessorsWeight;<\/div>$/;"	a
l00136	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;        <a class="code" href="namespaceGEOS.html#ab70447a5825083c7e87304cff472e13c">GEOS::applyPassesOnFunction<\/a>(Func.getName(), *Optimized, FPM);<\/div>$/;"	a
l00136	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;      i++;<\/div>$/;"	a
l00136	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;  FPM.doFinalization();<\/div>$/;"	a
l00136	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;          <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00136	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;          <span class="keywordflow">for<\/span>(<span class="keyword">auto<\/span> &amp;BB : F)<\/div>$/;"	a
l00137	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">  137<\/a><\/span>&#160;<a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor::BBDescriptor<\/a>() {<\/div>$/;"	a
l00137	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno"><a class="line" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">  137<\/a><\/span>&#160;<a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash::BBHash<\/a>() {<\/div>$/;"	a
l00137	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<span class="comment"><\/span>  <span class="keyword">template<\/span> &lt;&gt; <\/div>$/;"	a
l00137	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            runOnBasicBlock(BB, M, i++);<\/div>$/;"	a
l00137	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;      <span class="keywordflow">return<\/span> createConstantHoistingPass();<\/div>$/;"	a
l00137	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;}<\/div>$/;"	a
l00137	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;      FPM.doFinalization();<\/div>$/;"	a
l00137	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;      <span class="keyword">delete<\/span> Optimized;<\/div>$/;"	a
l00137	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<\/div>$/;"	a
l00137	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            runOnBasicBlock(BB, M, i++);<\/div>$/;"	a
l00137	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            runOnBasicBlock(BB, M, i++);<\/div>$/;"	a
l00138	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;  Descriptions.resize(Size);<\/div>$/;"	a
l00138	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;  Hash.resize(Size);<\/div>$/;"	a
l00138	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno"><a class="line" href="structstd_1_1hash_3_01BBHash_01_4.html">  138<\/a><\/span>&#160;    <span class="keyword">struct <\/span>hash&lt;<a class="code" href="classBBHash.html">BBHash<\/a>&gt; {<\/div>$/;"	a
l00138	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00138	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a1ab79cf046523776775dde58f8e1f43c">InstructionNamer<\/a>:<\/div>$/;"	a
l00138	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00138	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00138	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;      printf(<span class="stringliteral">&quot;%d : %s : &quot;<\/span>, i, <a class="code" href="namespaceGEOS.html#a2da23a2e03153cc8110acc3564843f81">GEOS::getPass<\/a>(OptChoosed)-&gt;getPassName());<\/div>$/;"	a
l00138	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;  <span class="keywordtype">double<\/span> ExecutionTime2 = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Candidate, Analyser);<\/div>$/;"	a
l00138	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00138	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div>$/;"	a
l00139	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size; i++) <\/div>$/;"	a
l00139	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size; i++) <\/div>$/;"	a
l00139	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno"><a class="line" href="structstd_1_1hash_3_01BBHash_01_4.html#abe83b403ab2bbba4116a32c63c250372">  139<\/a><\/span>&#160;      <span class="keywordtype">size_t<\/span> <a class="code" href="structstd_1_1hash_3_01BBHash_01_4.html#abe83b403ab2bbba4116a32c63c250372">operator()<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>&amp; K)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00139	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;        initPapi(M, i);<\/div>$/;"	a
l00139	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;      <span class="keywordflow">return<\/span> createInstructionNamerPass();<\/div>$/;"	a
l00139	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;uint64_t <\/div>$/;"	a
l00139	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;      <span class="keywordtype">double<\/span> ExecutionTime = <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser);<\/div>$/;"	a
l00139	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;      BestValue = ExecutionTime;<\/div>$/;"	a
l00139	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;  <a class="code" href="Test_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(Candidate, 2);<\/div>$/;"	a
l00139	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;        InitPapi(M, i);<\/div>$/;"	a
l00139	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;        InitPapi(M, i);<\/div>$/;"	a
l00140	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;    Descriptions[i] = 0;<\/div>$/;"	a
l00140	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;    Hash[i] = 0;<\/div>$/;"	a
l00140	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;        <span class="keywordflow">return<\/span> <a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">BBHash::distance<\/a>(K, <a class="code" href="classBBHash.html">BBHash<\/a>()) *<\/div>$/;"	a
l00140	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div>$/;"	a
l00140	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0f509a1370158f1c4377f54c662f83ab">Sink<\/a>: <\/div>$/;"	a
l00140	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;ProfileModule::getExecutionFreqUsingSuccessors(BasicBlock* BB) {<\/div>$/;"	a
l00140	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div>$/;"	a
l00140	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;      Optimized = Candidate;<\/div>$/;"	a
l00140	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div>$/;"	a
l00140	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div>$/;"	a
l00140	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div>$/;"	a
l00141	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;}<\/div>$/;"	a
l00141	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;}<\/div>$/;"	a
l00141	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;          K.<a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a50d8f4339c9e643bb1dc8f040f32dd27">DescriptorKind::NumberOfInstructions<\/a>);<\/div>$/;"	a
l00141	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00141	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;      <span class="keywordflow">return<\/span> createSinkingPass();  <span class="comment">\/\/ PreservesCFG<\/span><\/div>$/;"	a
l00141	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;  uint64_t SuccessorsWeight = 0;<\/div>$/;"	a
l00141	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;      <span class="keywordflow">if<\/span> (ExecutionTime &lt;= BestValue) {<\/div>$/;"	a
l00141	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;      <a class="code" href="Random_8cpp.html#ab540649599425ffbdb7cc09d089ed18e">printModule<\/a>(Optimized, i);<\/div>$/;"	a
l00141	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;  printf(<span class="stringliteral">&quot;%lf %lf\\n&quot;<\/span>, ExecutionTime1 \/ (<a class="code" href="Test_8cpp.html#a67e68f6e074606a4f8b3dca3bc12dd38">CPUFreq<\/a> * std::pow(10, 9)), <\/div>$/;"	a
l00141	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00141	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;        <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div>$/;"	a
l00142	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<\/div>$/;"	a
l00142	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<\/div>$/;"	a
l00142	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;      }<\/div>$/;"	a
l00142	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;      }<\/div>$/;"	a
l00142	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4b4c47fd0dafd1f98d0c4ca9f86c0fa9">LowerAtomic<\/a>:<\/div>$/;"	a
l00142	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;  <span class="keyword">auto<\/span> Terminator = BB-&gt;getTerminator();<\/div>$/;"	a
l00142	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;        i++;<\/div>$/;"	a
l00142	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;<\/div>$/;"	a
l00142	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;                      ExecutionTime2 \/ (<a class="code" href="Test_8cpp.html#a67e68f6e074606a4f8b3dca3bc12dd38">CPUFreq<\/a> * std::pow(10, 9)));<\/div>$/;"	a
l00142	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;      }<\/div>$/;"	a
l00142	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;      }<\/div>$/;"	a
l00143	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor::BBDescriptor<\/a>(BasicBlock &amp;BB) {<\/div>$/;"	a
l00143	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash::BBHash<\/a>(BasicBlock &amp;BB) {<\/div>$/;"	a
l00143	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;    };<\/div>$/;"	a
l00143	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;  };<\/div>$/;"	a
l00143	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;      <span class="keywordflow">return<\/span> createLowerAtomicPass(); <span class="comment">\/\/ PreservesCFG<\/span><\/div>$/;"	a
l00143	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">unsigned<\/span> E = 0; E &lt; Terminator-&gt;getNumSuccessors(); ++E) {<\/div>$/;"	a
l00143	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;        <span class="keyword">delete<\/span> Optimized;<\/div>$/;"	a
l00143	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;      printf(<span class="stringliteral">&quot;%lf\\n&quot;<\/span>, <\/div>$/;"	a
l00143	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div>$/;"	a
l00143	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;  };<\/div>$/;"	a
l00143	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;  };<\/div>$/;"	a
l00144	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;  Descriptions.resize(Size);<\/div>$/;"	a
l00144	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;  Hash.resize(Size);<\/div>$/;"	a
l00144	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;} <span class="comment">\/\/ namespace<\/span><\/div>$/;"	a
l00144	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;}<\/div>$/;"	a
l00144	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a34a5f96302b5b61d024d4d13e1e806ac">ValuePropagation<\/a>:<\/div>$/;"	a
l00144	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;    BasicBlock* Successor = Terminator-&gt;getSuccessor(E);<\/div>$/;"	a
l00144	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;        BestValue = ExecutionTime;<\/div>$/;"	a
l00144	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;          <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser) \/ 100000000.0);<\/div>$/;"	a
l00144	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;  <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00144	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;}<\/div>$/;"	a
l00144	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;}<\/div>$/;"	a
l00145	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;  loadBB(BB);<\/div>$/;"	a
l00145	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;  loadBB(BB);<\/div>$/;"	a
l00145	docs/html/BBHash_8h_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00145	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00145	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;      <span class="keywordflow">return<\/span> createCorrelatedValuePropagationPass();<\/div>$/;"	a
l00145	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00145	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;        Optimized = Candidate;<\/div>$/;"	a
l00145	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;    } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00145	docs/html/Test_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;}<\/div>$/;"	a
l00145	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00145	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div>$/;"	a
l00146	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;}<\/div>$/;"	a
l00146	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;}<\/div>$/;"	a
l00146	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBProf::ID<\/a> = 0;<\/div>$/;"	a
l00146	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a0ee6ba68a5f5541b3bd7363e17acb134">InstructionSimplifier<\/a>:<\/div>$/;"	a
l00146	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;    <span class="keywordflow">if<\/span> (BB != Successor) { <\/div>$/;"	a
l00146	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;      } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00146	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;      <span class="keyword">delete<\/span> Candidate;<\/div>$/;"	a
l00146	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBProf::ID<\/a> = 0;<\/div>$/;"	a
l00146	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<span class="keywordtype">char<\/span> <a class="code" href="PAPI_8cpp.html#af180e926633cde08a05ccbc3af397ee4">BBProf::ID<\/a> = 0;<\/div>$/;"	a
l00147	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div>$/;"	a
l00147	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div>$/;"	a
l00147	docs/html/BBProf_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBProf&gt; <a class="code" href="BBProf_8cpp.html#af7d346b5f0ce11daa8c898b569eb8b2e">Y<\/a>(<span class="stringliteral">&quot;bb-prof&quot;<\/span>, <span class="stringliteral">&quot;BB-Prof Basic Block Profiling&quot;<\/span>);<\/div>$/;"	a
l00147	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;      <span class="keywordflow">return<\/span> createInstructionSimplifierPass();<\/div>$/;"	a
l00147	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;      <span class="keywordflow">if<\/span> (Successor-&gt;getSinglePredecessor() == BB) {<\/div>$/;"	a
l00147	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;        <span class="keyword">delete<\/span> Candidate;<\/div>$/;"	a
l00147	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;      Optimizations.pop_back(); <\/div>$/;"	a
l00147	docs/html/lib_2Transforms_2BBProf_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBProf&gt; <a class="code" href="lib_2Transforms_2BBProf_2BBProf_8cpp.html#af7d346b5f0ce11daa8c898b569eb8b2e">Y<\/a>(<span class="stringliteral">&quot;bb-prof&quot;<\/span>, <span class="stringliteral">&quot;BB-Prof Basic Block Profiling&quot;<\/span>);<\/div>$/;"	a
l00147	docs/html/projects_2llvm-project_2src_2passes_2BBProf_8cpp_source.html	/^<div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<span class="keyword">static<\/span> RegisterPass&lt;BBProf&gt; <a class="code" href="projects_2llvm-project_2src_2passes_2BBProf_8cpp.html#af7d346b5f0ce11daa8c898b569eb8b2e">Y<\/a>(<span class="stringliteral">&quot;bb-prof&quot;<\/span>, <span class="stringliteral">&quot;BB-Prof Basic Block Profiling&quot;<\/span>);<\/div>$/;"	a
l00148	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<a class="code" href="classBBDescriptor.html#ade557677fab86e16f7b07e9a6c11d9a3">BBDescriptor::BBDescriptor<\/a>(<span class="keyword">const<\/span> StringRef &amp;S) {<\/div>$/;"	a
l00148	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<a class="code" href="classBBHash.html#ae886a0a439b589c916718b929d16951e">BBHash::BBHash<\/a>(<span class="keyword">const<\/span> StringRef &amp;S) {<\/div>$/;"	a
l00148	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;    <span class="comment">\/\/case PartiallyInlineLibCalls:<\/span><\/div>$/;"	a
l00148	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<\/div>$/;"	a
l00148	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;        Optimizations.pop_back(); <\/div>$/;"	a
l00148	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;      Try--;<\/div>$/;"	a
l00149	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;  Descriptions.resize(Size);<\/div>$/;"	a
l00149	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;  assert(!S.empty() <\/div>$/;"	a
l00149	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;    <span class="comment">\/\/  return createPartiallyInlineLibCallsPass();<\/span><\/div>$/;"	a
l00149	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;        SuccessorsWeight += getBasicBlockFrequency(Successor);<\/div>$/;"	a
l00149	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;        Try--;<\/div>$/;"	a
l00149	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;      <span class="keywordflow">if<\/span> (Try == 0) { <\/div>$/;"	a
l00150	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;<\/div>$/;"	a
l00150	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;      &amp;&amp; <span class="stringliteral">&quot;The string representation of a BBHash cannot be empty.&quot;<\/span>);<\/div>$/;"	a
l00150	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5adeb3508f157a29e0161dcebc32466231">ScalarizerPass<\/a>: <span class="comment">\/\/ Maybe can change CFG<\/span><\/div>$/;"	a
l00150	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;<\/div>$/;"	a
l00150	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;        <span class="keywordflow">if<\/span> (Try == 0) <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00150	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;        printf(<span class="stringliteral">&quot;SpeedUp : %lf\\n&quot;<\/span>, <\/div>$/;"	a
l00151	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;  std::stringstream ss(S.str());<\/div>$/;"	a
l00151	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;<\/div>$/;"	a
l00151	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;      <span class="keywordflow">return<\/span> createScalarizerPass();<\/div>$/;"	a
l00151	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;      } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00151	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;      }<\/div>$/;"	a
l00151	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;          StartTime \/ (<a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser) <\/div>$/;"	a
l00152	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;  <span class="keywordtype">int<\/span> d;<\/div>$/;"	a
l00152	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;  Hash.resize(Size);<\/div>$/;"	a
l00152	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a6697a940304ba73825979a1f45258d14">AddDiscriminators<\/a>:<\/div>$/;"	a
l00152	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div>$/;"	a
l00152	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;    }<\/div>$/;"	a
l00152	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;          \/ 100000000.0));<\/div>$/;"	a
l00153	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;  <span class="keywordtype">char<\/span> p;<\/div>$/;"	a
l00153	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div>$/;"	a
l00153	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;      <span class="keywordflow">return<\/span> createAddDiscriminatorsPass();<\/div>$/;"	a
l00153	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;        uint64_t EdgeWeight = getBasicBlockFrequency(Successor);<\/div>$/;"	a
l00153	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;    <span class="comment">\/\/printModule(Optimized, i);<\/span><\/div>$/;"	a
l00153	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div>$/;"	a
l00154	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; Size; i++) {<\/div>$/;"	a
l00154	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;  std::stringstream ss(S);<\/div>$/;"	a
l00154	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="GEOS_8h.html#a0133cfbd4caf7074a0e24c6958e40cf5a4dd0d56fe7c64ca8a5d3c925659f8635">SeparateConstOffsetFromGEP<\/a>:  <span class="comment">\/\/ Maybe can change CFG<\/span><\/div>$/;"	a
l00154	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;        <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> IT = pred_begin(Successor); IT != pred_end(Successor); ++IT) {<\/div>$/;"	a
l00154	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<\/div>$/;"	a
l00154	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;        <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00155	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;    ss &gt;&gt; d;<\/div>$/;"	a
l00155	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;  <span class="keywordtype">int<\/span>  d;<\/div>$/;"	a
l00155	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;      <span class="keywordflow">return<\/span> createSeparateConstOffsetFromGEPPass();<\/div>$/;"	a
l00155	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;          BasicBlock* PredSucc = *IT;<\/div>$/;"	a
l00155	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;    printf(<span class="stringliteral">&quot;%s %lf\\n&quot;<\/span>, Func.getName().str().c_str(), <\/div>$/;"	a
l00155	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;      }<\/div>$/;"	a
l00156	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;    Descriptions[i] = d;<\/div>$/;"	a
l00156	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;  <span class="keywordtype">char<\/span> p;<\/div>$/;"	a
l00156	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;    <span class="comment">\/\/case LoadCombine:<\/span><\/div>$/;"	a
l00156	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;<\/div>$/;"	a
l00156	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;        <a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser) \/ 100000000.0);<\/div>$/;"	a
l00156	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;    }<\/div>$/;"	a
l00157	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;    ss &gt;&gt; p;<\/div>$/;"	a
l00157	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; Size; i++) {<\/div>$/;"	a
l00157	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;    <span class="comment">\/\/  return createLoadCombinePass(); \/\/ PreserveCFG<\/span><\/div>$/;"	a
l00157	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;          <span class="keywordflow">if<\/span> (PredSucc != BB) {<\/div>$/;"	a
l00157	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;<\/div>$/;"	a
l00157	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;  }<\/div>$/;"	a
l00158	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;  }<\/div>$/;"	a
l00158	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;    ss &gt;&gt; d;<\/div>$/;"	a
l00158	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;    <span class="keywordflow">default<\/span>:<\/div>$/;"	a
l00158	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            <span class="keyword">auto<\/span> PredSuccTerminator = PredSucc-&gt;getTerminator();<\/div>$/;"	a
l00158	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;  }<\/div>$/;"	a
l00158	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;<\/div>$/;"	a
l00159	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;}<\/div>$/;"	a
l00159	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;    Hash[i] = d;<\/div>$/;"	a
l00159	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;      <span class="keywordflow">return<\/span> <span class="keyword">nullptr<\/span>;<\/div>$/;"	a
l00159	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div>$/;"	a
l00159	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div>$/;"	a
l00159	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;  printf(<span class="stringliteral">&quot;SpeedUp : %lf\\n&quot;<\/span>, <\/div>$/;"	a
l00160	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<\/div>$/;"	a
l00160	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;    ss &gt;&gt; p;<\/div>$/;"	a
l00160	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;  }<\/div>$/;"	a
l00160	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;            <span class="keywordflow">if<\/span> (isa&lt;BranchInst&gt;(PredSuccTerminator) &amp;&amp;<\/div>$/;"	a
l00160	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;  printf(<span class="stringliteral">&quot;SpeedUp : %lf\\n&quot;<\/span>, StartTime \/ <\/div>$/;"	a
l00160	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;          StartTime \/ (<a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser) <\/div>$/;"	a
l00161	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#a0f1629d26b54d997594e86d3170d3a18">  161<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classBBDescriptor.html#a0f1629d26b54d997594e86d3170d3a18">BBDescriptor::set<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> DescriptionId, <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>) {<\/div>$/;"	a
l00161	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;<\/div>$/;"	a
l00161	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;}<\/div>$/;"	a
l00161	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;                cast&lt;BranchInst&gt;(PredSuccTerminator)-&gt;isUnconditional() &amp;&amp;<\/div>$/;"	a
l00161	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;      (<a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(*Optimized, Analyser) \/ 100000000.0));<\/div>$/;"	a
l00161	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;          \/ 100000000.0));<\/div>$/;"	a
l00162	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;  Descriptions[DescriptionId] = <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>;<\/div>$/;"	a
l00162	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;    <span class="keywordflow">if<\/span> (!(d &gt;= 0 &amp;&amp; p == <span class="charliteral">&#39;-&#39;<\/span>)) {<\/div>$/;"	a
l00162	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div>$/;"	a
l00162	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;                hasBasicBlockFrequency(PredSucc) &amp;&amp; <\/div>$/;"	a
l00162	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div>$/;"	a
l00162	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div>$/;"	a
l00163	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;}<\/div>$/;"	a
l00163	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;      printf(<span class="stringliteral">&quot;%s\\n&quot;<\/span>, S.str().c_str());<\/div>$/;"	a
l00163	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;<a class="code" href="classProfileModule.html">ProfileModule<\/a>* <\/div>$/;"	a
l00163	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;                EdgeWeight &gt;= getBasicBlockFrequency(PredSucc)) {<\/div>$/;"	a
l00163	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;  <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00163	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;  <span class="keywordflow">return<\/span> 0;<\/div>$/;"	a
l00164	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div>$/;"	a
l00164	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;    }<\/div>$/;"	a
l00164	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<a class="code" href="namespaceGEOS.html#ab70447a5825083c7e87304cff472e13c">GEOS::applyPassesOnFunction<\/a>(StringRef FuncName, <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp; PModule, <\/div>$/;"	a
l00164	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div>$/;"	a
l00164	docs/html/RandomOnFunction_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;}<\/div>$/;"	a
l00164	docs/html/Random_8cpp_source.html	/^<div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;}<\/div>$/;"	a
l00165	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00165"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#a99be9986d3511b50f5ddb989b2ffb5a4">  165<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classBBDescriptor.html#a99be9986d3511b50f5ddb989b2ffb5a4">BBDescriptor::addUp<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> DescriptionId, <span class="keywordtype">int<\/span> N) { <\/div>$/;"	a
l00165	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div>$/;"	a
l00165	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;    FunctionPassManager&amp; PM) {<\/div>$/;"	a
l00165	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;              EdgeWeight -= getBasicBlockFrequency(PredSucc);<\/div>$/;"	a
l00166	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;  Descriptions[DescriptionId] += N;  <\/div>$/;"	a
l00166	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;    assert(d &gt;= 0 &amp;&amp; p == <span class="charliteral">&#39;-&#39;<\/span> <\/div>$/;"	a
l00166	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;<\/div>$/;"	a
l00166	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            } <span class="keywordflow">else<\/span> {<\/div>$/;"	a
l00167	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;}<\/div>$/;"	a
l00167	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;        &amp;&amp; <span class="stringliteral">&quot;The string representation of a BBHash is in a bad format.&quot;<\/span>);<\/div>$/;"	a
l00167	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;  assert(PModule.<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>()-&gt;getFunction(FuncName) != <span class="keyword">nullptr<\/span> &amp;&amp; <\/div>$/;"	a
l00167	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;              EdgeWeight = 0;<\/div>$/;"	a
l00168	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;<\/div>$/;"	a
l00168	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;  }<\/div>$/;"	a
l00168	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;      <span class="stringliteral">&quot;There is no function with this name in the Module.&quot;<\/span>);<\/div>$/;"	a
l00168	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;              <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00169	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00169"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#ae79c1229865a2f1485f11000f4f27283">  169<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="classBBDescriptor.html#ae79c1229865a2f1485f11000f4f27283">BBDescriptor::getDescription<\/a>(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> DescriptionId) {<\/div>$/;"	a
l00169	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;}<\/div>$/;"	a
l00169	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div>$/;"	a
l00169	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;            }<\/div>$/;"	a
l00170	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;  <span class="keywordflow">return<\/span> Descriptions[DescriptionId];<\/div>$/;"	a
l00170	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;<\/div>$/;"	a
l00170	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a> *ModuleCopy = PModule.<a class="code" href="classProfileModule.html#afed1fbe5ead415d6687dec691376b509">getCopy<\/a>();<\/div>$/;"	a
l00170	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;          }<\/div>$/;"	a
l00171	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;}<\/div>$/;"	a
l00171	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00171"><\/a><span class="lineno"><a class="line" href="classBBHash.html#ae48c266828a73edb1341e2d4c7b2fe8e">  171<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classBBHash.html#ae48c266828a73edb1341e2d4c7b2fe8e">BBHash::setDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> DescriptionId, <span class="keywordtype">int<\/span> <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>) {<\/div>$/;"	a
l00171	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;  Module        *MyModule   = ModuleCopy-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>();<\/div>$/;"	a
l00171	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;        }<\/div>$/;"	a
l00172	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div>$/;"	a
l00172	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;  assert((<span class="keywordtype">int<\/span>) DescriptionId &gt;= 0 &amp;&amp; (<span class="keywordtype">int<\/span>) DescriptionId &lt; Size &amp;&amp;<\/div>$/;"	a
l00172	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div>$/;"	a
l00172	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;        SuccessorsWeight += EdgeWeight; <\/div>$/;"	a
l00173	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00173"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#a03cc15accb4615553c4753b711d6ed71">  173<\/a><\/span>&#160;StringRef <a class="code" href="classBBDescriptor.html#a03cc15accb4615553c4753b711d6ed71">BBDescriptor::getString<\/a>() {<\/div>$/;"	a
l00173	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;      <span class="stringliteral">&quot;Trying to set an invalid descriptor.&quot;<\/span>);<\/div>$/;"	a
l00173	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;  Function *Func = MyModule-&gt;getFunction(FuncName);<\/div>$/;"	a
l00173	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;      }<\/div>$/;"	a
l00174	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;  std::stringstream SSTM;<\/div>$/;"	a
l00174	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div>$/;"	a
l00174	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div>$/;"	a
l00174	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div>$/;"	a
l00175	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size-1; i++) <\/div>$/;"	a
l00175	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;  assert(Value &gt;= 0 &amp;&amp; <span class="stringliteral">&quot;The value of an descriptor must be greater than 0.&quot;<\/span>);<\/div>$/;"	a
l00175	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;  PM.run(*Func);<\/div>$/;"	a
l00175	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;    }<\/div>$/;"	a
l00176	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;    SSTM &lt;&lt; Descriptions[i] &lt;&lt; <span class="stringliteral">&quot;-&quot;<\/span>;<\/div>$/;"	a
l00176	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<\/div>$/;"	a
l00176	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<\/div>$/;"	a
l00176	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;  }<\/div>$/;"	a
l00177	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;  SSTM &lt;&lt; Descriptions[Size-1];<\/div>$/;"	a
l00177	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;  Hash[DescriptionId] = <a class="code" href="PAPI_8cpp.html#a42cb93d8be68257caf6880d0661c1541">Value<\/a>;<\/div>$/;"	a
l00177	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;  ModuleCopy-&gt;repairFunctionProfiling(Func);<\/div>$/;"	a
l00177	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div>$/;"	a
l00178	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;  <span class="keywordflow">return<\/span> SSTM.str();<\/div>$/;"	a
l00178	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;}<\/div>$/;"	a
l00178	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div>$/;"	a
l00178	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div>$/;"	a
l00179	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;}<\/div>$/;"	a
l00179	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;<\/div>$/;"	a
l00179	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;  <span class="keywordflow">return<\/span> ModuleCopy; <\/div>$/;"	a
l00179	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;  <span class="keywordflow">return<\/span> SuccessorsWeight;<\/div>$/;"	a
l00180	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;<\/div>$/;"	a
l00180	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00180"><\/a><span class="lineno"><a class="line" href="classBBHash.html#afaa66a25917d41266a53673f4b330900">  180<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classBBHash.html#afaa66a25917d41266a53673f4b330900">BBHash::addUpDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> DescriptionId, <span class="keywordtype">int<\/span> N) { <\/div>$/;"	a
l00180	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;}<\/div>$/;"	a
l00180	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;}<\/div>$/;"	a
l00181	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classBBDescriptor.html#aa887fd0ffe551034fb15342d57b51068">BBDescriptor::<\/a><\/div>$/;"	a
l00181	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;  <span class="keywordtype">int<\/span> NewValue = getDescriptor(DescriptionId) + N;<\/div>$/;"	a
l00181	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div>$/;"	a
l00181	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div>$/;"	a
l00182	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00182"><\/a><span class="lineno"><a class="line" href="classBBDescriptor.html#aa887fd0ffe551034fb15342d57b51068">  182<\/a><\/span>&#160;<a class="code" href="classBBDescriptor.html#aa887fd0ffe551034fb15342d57b51068">distance<\/a>(<a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> &amp;a, <a class="code" href="classBBDescriptor.html">BBDescriptor<\/a> &amp;b, <span class="keywordtype">bool<\/span> Weight) {<\/div>$/;"	a
l00182	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;  setDescriptor(DescriptionId, NewValue);<\/div>$/;"	a
l00182	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<a class="code" href="classProfileModule.html">ProfileModule<\/a>* <\/div>$/;"	a
l00182	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<\/div>$/;"	a
l00183	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;  <span class="keywordtype">double<\/span> Distance = 0;<\/div>$/;"	a
l00183	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;}<\/div>$/;"	a
l00183	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;<a class="code" href="namespaceGEOS.html#a64d258559ffb715536bead46681ed475">GEOS::applyPasses<\/a>(<span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp; PModule, FunctionPassManager&amp; PM) {<\/div>$/;"	a
l00183	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00183"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#a17cad3a7d951ee78efd7b30cc3a423ce">  183<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classProfileModule.html#a17cad3a7d951ee78efd7b30cc3a423ce">ProfileModule::repairFunctionProfiling<\/a>(Function *Func) {<\/div>$/;"	a
l00184	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size; i++) <\/div>$/;"	a
l00184	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div>$/;"	a
l00184	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;  <a class="code" href="classProfileModule.html">ProfileModule<\/a> *ModuleCopy = PModule.<a class="code" href="classProfileModule.html#afed1fbe5ead415d6687dec691376b509">getCopy<\/a>();<\/div>$/;"	a
l00184	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;  <span class="keywordtype">bool<\/span> changed = <span class="keyword">true<\/span>;<\/div>$/;"	a
l00185	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;    Distance += pow(a.<a class="code" href="classBBDescriptor.html#ae79c1229865a2f1485f11000f4f27283">getDescription<\/a>((<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>) i) - <\/div>$/;"	a
l00185	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00185"><\/a><span class="lineno"><a class="line" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">  185<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">BBHash::getDescriptor<\/a>(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> DescriptionId)<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00185	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;  Module        *MyModule   = ModuleCopy-&gt;<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>();<\/div>$/;"	a
l00185	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;  <span class="keywordflow">while<\/span>(changed) {<\/div>$/;"	a
l00186	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;        b.<a class="code" href="classBBDescriptor.html#ae79c1229865a2f1485f11000f4f27283">getDescription<\/a>((<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>) i), 2) <\/div>$/;"	a
l00186	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;  assert((<span class="keywordtype">int<\/span>) DescriptionId &gt;= 0 &amp;&amp; (<span class="keywordtype">int<\/span>) DescriptionId &lt; Size &amp;&amp;<\/div>$/;"	a
l00186	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<\/div>$/;"	a
l00186	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;    changed = <span class="keyword">false<\/span>;<\/div>$/;"	a
l00187	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;      * (Weight ? descriptorWeight((<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a>) i) : 1);<\/div>$/;"	a
l00187	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;      <span class="stringliteral">&quot;Trying to get the value of an invalid descriptor.&quot;<\/span>);<\/div>$/;"	a
l00187	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span>&amp; Func : *MyModule)<\/div>$/;"	a
l00187	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;BB : *Func) {<\/div>$/;"	a
l00188	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<\/div>$/;"	a
l00188	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<\/div>$/;"	a
l00188	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;    PM.run(Func);<\/div>$/;"	a
l00188	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;      <span class="keywordflow">if<\/span> (!BB.hasName()) <\/div>$/;"	a
l00189	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;  <span class="keywordflow">return<\/span> sqrt(Distance);<\/div>$/;"	a
l00189	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;  <span class="keywordflow">return<\/span> Hash[DescriptionId];<\/div>$/;"	a
l00189	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;<\/div>$/;"	a
l00189	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;        BB.setName(std::to_string(++<a class="code" href="ProfileModule_8cpp.html#a352bbbeb589f233b0c128127bae07005">I<\/a>));<\/div>$/;"	a
l00190	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;}<\/div>$/;"	a
l00190	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;}<\/div>$/;"	a
l00190	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;  ModuleCopy-&gt;<a class="code" href="classProfileModule.html#acc69d694de56150b427b9a97218010f4">repairProfiling<\/a>();<\/div>$/;"	a
l00190	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;<\/div>$/;"	a
l00191	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<\/div>$/;"	a
l00191	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<\/div>$/;"	a
l00191	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<\/div>$/;"	a
l00191	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;      uint64_t PredecessorsWeight = getExecutionFreqUsingPredecessors(&amp;BB);<\/div>$/;"	a
l00192	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;<span class="keywordtype">unsigned<\/span> BBDescriptor::descriptorWeight(<a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45">Descriptor<\/a> d) {<\/div>$/;"	a
l00192	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;<\/div>$/;"	a
l00192	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;  <span class="keywordflow">return<\/span> ModuleCopy; <\/div>$/;"	a
l00192	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;      uint64_t SuccessorsWeight   = getExecutionFreqUsingSuccessors(&amp;BB);<\/div>$/;"	a
l00193	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;  <span class="keywordflow">switch<\/span> (d) {<\/div>$/;"	a
l00193	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00193"><\/a><span class="lineno"><a class="line" href="classBBHash.html#ad6b7566aa610f818d6dd2a9caf62ff17">  193<\/a><\/span>&#160;StringRef <a class="code" href="classBBHash.html#ad6b7566aa610f818d6dd2a9caf62ff17">BBHash::getString<\/a>()<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00193	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;}<\/div>$/;"	a
l00193	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div>$/;"	a
l00194	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45ac40ec5db2990469fc236f4c5dea23edb">Descriptor::Load<\/a>:<\/div>$/;"	a
l00194	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;  std::stringstream *SSTM = <span class="keyword">new<\/span> std::stringstream;<\/div>$/;"	a
l00194	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<\/div>$/;"	a
l00194	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;      uint64_t ExecutionFreq = std::max(PredecessorsWeight, SuccessorsWeight);<\/div>$/;"	a
l00195	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9e1df3f1049c7d326da72b0f9145c005">Descriptor::Store<\/a>:<\/div>$/;"	a
l00195	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;    <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size-1; i++) <\/div>$/;"	a
l00195	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<span class="keywordtype">double<\/span> <\/div>$/;"	a
l00195	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div>$/;"	a
l00196	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aff10615cbb3dacdba4413f113c303344">Descriptor::FRem<\/a>:<\/div>$/;"	a
l00196	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;      (*SSTM) &lt;&lt; Hash[i] &lt;&lt; <span class="stringliteral">&quot;-&quot;<\/span>;<\/div>$/;"	a
l00196	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<a class="code" href="namespaceGEOS.html#ab4313200e30faecd7c72466d282ffdd7">GEOS::analyseFunctionExecutionTime<\/a>(StringRef FuncName, <\/div>$/;"	a
l00196	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;      <span class="keywordflow">if<\/span> (ExecutionFreq &gt; getBasicBlockFrequency(&amp;BB) &amp;&amp;<\/div>$/;"	a
l00197	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45aec555ef8d2a2967b9c13e79e0166b649">Descriptor::FAdd<\/a>:<\/div>$/;"	a
l00197	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;    (*SSTM) &lt;&lt; Hash[Size-1];<\/div>$/;"	a
l00197	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;    <span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp; PModule, <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser) {<\/div>$/;"	a
l00197	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;          ExecutionFreq != 0) { <\/div>$/;"	a
l00198	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45af65bd293528ad1647e356e1522057351">Descriptor::FSub<\/a>:<\/div>$/;"	a
l00198	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;  <span class="keywordflow">return<\/span> SSTM-&gt;str();<\/div>$/;"	a
l00198	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;<\/div>$/;"	a
l00198	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;        setBasicBlockFrequency(&amp;BB, ExecutionFreq);<\/div>$/;"	a
l00199	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a00eafd0987bcd3fed40573f6a95ba54f">Descriptor::FMul<\/a>:<\/div>$/;"	a
l00199	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;}<\/div>$/;"	a
l00199	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;  assert(PModule.<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>()-&gt;getFunction(FuncName) != <span class="keyword">nullptr<\/span> &amp;&amp; <\/div>$/;"	a
l00199	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;        changed = <span class="keyword">true<\/span>;<\/div>$/;"	a
l00200	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a6cb30f8d119305d208d43e42f818e040">Descriptor::FDiv<\/a>:<\/div>$/;"	a
l00200	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<\/div>$/;"	a
l00200	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;      <span class="stringliteral">&quot;There is no function with this name in the Module.&quot;<\/span>);<\/div>$/;"	a
l00200	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;      }<\/div>$/;"	a
l00201	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;      <span class="keywordflow">return<\/span> 2;<\/div>$/;"	a
l00201	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;<span class="keywordtype">double<\/span> <a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">BBHash::<\/a><\/div>$/;"	a
l00201	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;<\/div>$/;"	a
l00201	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;    }<\/div>$/;"	a
l00202	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a1c3802a27c2777c6611cb5c030b7d0">Descriptor::Calls<\/a>: <\/div>$/;"	a
l00202	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00202"><\/a><span class="lineno"><a class="line" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">  202<\/a><\/span>&#160;<a class="code" href="classBBHash.html#a4c953c634eaa39013f40d290e306ba4e">distance<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;a, <span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;b) {<\/div>$/;"	a
l00202	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;  Module *MyModule = PModule.<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>();<\/div>$/;"	a
l00202	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;  }<\/div>$/;"	a
l00203	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;      <span class="keywordflow">return<\/span> 3;<\/div>$/;"	a
l00203	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;  <span class="keywordtype">double<\/span> Distance = 0;<\/div>$/;"	a
l00203	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div>$/;"	a
l00203	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;}<\/div>$/;"	a
l00204	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a9d1256d31c3c650658176f4203795bd8">Descriptor::Printf<\/a>:<\/div>$/;"	a
l00204	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size; i++) <\/div>$/;"	a
l00204	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;  Function     *LLVMFunc = MyModule-&gt;getFunction(FuncName);<\/div>$/;"	a
l00204	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;<\/div>$/;"	a
l00205	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a1a98c8ebeff4cef657037fc44f78f4e5">Descriptor::Malloc<\/a>: <\/div>$/;"	a
l00205	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;    Distance += pow(a.<a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i) - <\/div>$/;"	a
l00205	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;  assert(LLVMFunc != <span class="keyword">nullptr<\/span> <\/div>$/;"	a
l00205	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00205"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#acc69d694de56150b427b9a97218010f4">  205<\/a><\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="classProfileModule.html#acc69d694de56150b427b9a97218010f4">ProfileModule::repairProfiling<\/a>() {<\/div>$/;"	a
l00206	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a54cc8639b2ae32fad159203ab1b7aa4a">Descriptor::Pow<\/a>: <\/div>$/;"	a
l00206	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;        b.<a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i), 2) *<\/div>$/;"	a
l00206	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;      &amp;&amp; <span class="stringliteral">&quot;Trying to access a LLVM Function that don&#39;t exist!&quot;<\/span>);<\/div>$/;"	a
l00206	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;Func : *LLVMModule) {<\/div>$/;"	a
l00207	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBDescriptor_8h.html#ae18c0fc5ff8f471116a0d6bd00447a45a98095238a325acc3b59341ba5367172d">Descriptor::Sqrt<\/a>: <\/div>$/;"	a
l00207	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;        descriptorWeight((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i);<\/div>$/;"	a
l00207	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;<\/div>$/;"	a
l00207	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;    repairFunctionProfiling(&amp;Func);<\/div>$/;"	a
l00208	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;      <span class="keywordflow">return<\/span> 4;<\/div>$/;"	a
l00208	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;<\/div>$/;"	a
l00208	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;  <span class="keywordtype">double<\/span> Estimation = Analyser-&gt;<a class="code" href="classAnalysisMethod.html#afd5a51fbd8aec6dd39f51155805e9b38">estimateExecutionTime<\/a>(LLVMFunc, PModule);<\/div>$/;"	a
l00208	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;  }<\/div>$/;"	a
l00209	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;    <span class="keywordflow">default<\/span>:<\/div>$/;"	a
l00209	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;  <span class="keywordflow">return<\/span> sqrt(Distance);<\/div>$/;"	a
l00209	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;<\/div>$/;"	a
l00209	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;}<\/div>$/;"	a
l00210	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;      <span class="keywordflow">return<\/span> 1;<\/div>$/;"	a
l00210	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;}<\/div>$/;"	a
l00210	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;  <span class="keywordflow">return<\/span> Estimation;<\/div>$/;"	a
l00210	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;<\/div>$/;"	a
l00211	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;  }<\/div>$/;"	a
l00211	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;<\/div>$/;"	a
l00211	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;}<\/div>$/;"	a
l00211	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00211"><\/a><span class="lineno"><a class="line" href="classProfileModule.html#afed1fbe5ead415d6687dec691376b509">  211<\/a><\/span>&#160;<a class="code" href="classProfileModule.html">ProfileModule<\/a>* <a class="code" href="classProfileModule.html#afed1fbe5ead415d6687dec691376b509">ProfileModule::getCopy<\/a>()<span class="keyword"> const <\/span>{<\/div>$/;"	a
l00212	docs/html/BBDescriptor_8cpp_source.html	/^<div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;}<\/div>$/;"	a
l00212	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00212"><\/a><span class="lineno"><a class="line" href="classBBHash.html#a2b1373409004a02fba3d02c741670b8b">  212<\/a><\/span>&#160;<span class="keywordtype">int<\/span> <a class="code" href="classBBHash.html#a2b1373409004a02fba3d02c741670b8b">BBHash::dotProduct<\/a>(<span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;a, <span class="keyword">const<\/span> <a class="code" href="classBBHash.html">BBHash<\/a> &amp;b) {<\/div>$/;"	a
l00212	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;<\/div>$/;"	a
l00212	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;  Module *NewModule = CloneModule(getLLVMModule());<\/div>$/;"	a
l00213	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;  <span class="keywordtype">int<\/span> DotProduct = 0;<\/div>$/;"	a
l00213	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;<span class="keywordtype">double<\/span> <\/div>$/;"	a
l00213	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;  <span class="keywordflow">return<\/span> <span class="keyword">new<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>(NewModule, BasicBlockFrequency); <\/div>$/;"	a
l00214	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i=0; i &lt; Size; i++) <\/div>$/;"	a
l00214	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00214"><\/a><span class="lineno"><a class="line" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">  214<\/a><\/span>&#160;<a class="code" href="namespaceGEOS.html#ac003dcf72dde5d7033bf499c31284cd2">GEOS::analyseExecutionTime<\/a>(<span class="keyword">const<\/span> <a class="code" href="classProfileModule.html">ProfileModule<\/a>&amp; PModule, <\/div>$/;"	a
l00214	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;}<\/div>$/;"	a
l00215	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;    DotProduct += a.<a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i) *<\/div>$/;"	a
l00215	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;    <a class="code" href="classAnalysisMethod.html">AnalysisMethod<\/a> *Analyser) {<\/div>$/;"	a
l00215	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div>$/;"	a
l00216	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;        b.<a class="code" href="classBBHash.html#a6d402f6f448f3e887bd79df84fd1340b">getDescriptor<\/a>((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i) *<\/div>$/;"	a
l00216	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;<\/div>$/;"	a
l00216	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;std::vector&lt;GCOVFunction*&gt;<\/div>$/;"	a
l00217	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;        descriptorWeight((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i);<\/div>$/;"	a
l00217	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;  <span class="keywordtype">double<\/span> PerformanceMensurment = 0;<\/div>$/;"	a
l00217	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;ProfileModule::readFunctions(GCOVFile&amp; GF, GCOVBuffer &amp;GCNOBuffer, <\/div>$/;"	a
l00218	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;<\/div>$/;"	a
l00218	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;  <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;LLVMFunc : *PModule.<a class="code" href="classProfileModule.html#a2ca657beae7881e8364e57abffc2ce4f">getLLVMModule<\/a>()) <\/div>$/;"	a
l00218	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;    GCOVBuffer &amp;GCDABuffer) {<\/div>$/;"	a
l00219	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;  <span class="keywordflow">return<\/span> DotProduct;<\/div>$/;"	a
l00219	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;    PerformanceMensurment +=<\/div>$/;"	a
l00219	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;<\/div>$/;"	a
l00220	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;}<\/div>$/;"	a
l00220	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;      Analyser-&gt;<a class="code" href="classAnalysisMethod.html#afd5a51fbd8aec6dd39f51155805e9b38">estimateExecutionTime<\/a>(&amp;LLVMFunc, PModule);<\/div>$/;"	a
l00220	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;  GCOV::GCOVVersion Version;<\/div>$/;"	a
l00221	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;<\/div>$/;"	a
l00221	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;<\/div>$/;"	a
l00221	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;  std::vector&lt;GCOVFunction*&gt; *Functions = <\/div>$/;"	a
l00222	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00222"><\/a><span class="lineno"><a class="line" href="classBBHash.html#ad67c68af87d6ae7a41ff090a648628f9">  222<\/a><\/span>&#160;<a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="classBBHash.html#ad67c68af87d6ae7a41ff090a648628f9">BBHash::getRandomHash<\/a>() {<\/div>$/;"	a
l00222	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;  <span class="keywordflow">return<\/span> PerformanceMensurment;<\/div>$/;"	a
l00222	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;    <span class="keyword">new<\/span> std::vector&lt;GCOVFunction*&gt;; <\/div>$/;"	a
l00223	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;  std::random_device Rd;<\/div>$/;"	a
l00223	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;}<\/div>$/;"	a
l00223	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;<\/div>$/;"	a
l00224	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;  std::mt19937 Gen(Rd());<\/div>$/;"	a
l00224	docs/html/GEOS_8cpp_source.html	/^<div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;<\/div>$/;"	a
l00224	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;  uint32_t Checksum;<\/div>$/;"	a
l00225	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;  std::uniform_real_distribution&lt;&gt; Dis(1, 2);<\/div>$/;"	a
l00225	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div>$/;"	a
l00226	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;<\/div>$/;"	a
l00226	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;  GCOVOptions Options(<span class="keyword">true<\/span>, <span class="keyword">true<\/span>, <span class="keyword">true<\/span>, <span class="keyword">true<\/span>, <span class="keyword">true<\/span>, <span class="keyword">true<\/span>, <span class="keyword">false<\/span>, <span class="keyword">false<\/span>);<\/div>$/;"	a
l00227	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;  <a class="code" href="classBBHash.html">BBHash<\/a>* <a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a> = <span class="keyword">new<\/span> <a class="code" href="classBBHash.html">BBHash<\/a>;<\/div>$/;"	a
l00227	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;  FileInfo FI(Options);<\/div>$/;"	a
l00228	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;  <\/div>$/;"	a
l00228	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;<\/div>$/;"	a
l00229	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;  <span class="keywordflow">for<\/span>(<span class="keywordtype">int<\/span> i = 0; i &lt; Size; i++) <\/div>$/;"	a
l00229	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;  <span class="keywordflow">if<\/span> (!GCNOBuffer.readGCNOFormat() || !GCDABuffer.readGCDAFormat()) <\/div>$/;"	a
l00230	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;    RandomHash-&gt;<a class="code" href="classBBHash.html#ae48c266828a73edb1341e2d4c7b2fe8e">setDescriptor<\/a>((<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a>) i, Dis(Gen));<\/div>$/;"	a
l00230	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;    <span class="keywordflow">return<\/span> *Functions;<\/div>$/;"	a
l00231	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;<\/div>$/;"	a
l00231	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;  <span class="keywordflow">if<\/span> (!GCNOBuffer.readGCOVVersion(Version) || <\/div>$/;"	a
l00232	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;  <span class="keywordflow">return<\/span> <a class="code" href="DatabaseManager_8cpp.html#a696b18841830e71dfa7fb6c9a0cef7a4">RandomHash<\/a>;<\/div>$/;"	a
l00232	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;      !GCDABuffer.readGCOVVersion(Version)) <\/div>$/;"	a
l00233	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;}<\/div>$/;"	a
l00233	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;    <span class="keywordflow">return<\/span> *Functions;<\/div>$/;"	a
l00234	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;<\/div>$/;"	a
l00234	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;<\/div>$/;"	a
l00235	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;<\/div>$/;"	a
l00235	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;  <span class="keywordflow">if<\/span> (!GCNOBuffer.readInt(Checksum) || !GCDABuffer.readInt(Checksum)) <\/div>$/;"	a
l00236	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;<span class="keywordtype">unsigned<\/span> BBHash::descriptorWeight(<a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525">DescriptorKind<\/a> d) {<\/div>$/;"	a
l00236	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;    <span class="keywordflow">return<\/span> *Functions;<\/div>$/;"	a
l00237	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;  <span class="keywordflow">switch<\/span> (d) {<\/div>$/;"	a
l00237	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div>$/;"	a
l00238	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525ac40ec5db2990469fc236f4c5dea23edb">DescriptorKind::Load<\/a>:<\/div>$/;"	a
l00238	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;  <span class="keywordflow">while<\/span> (<span class="keyword">true<\/span>) {<\/div>$/;"	a
l00239	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9e1df3f1049c7d326da72b0f9145c005">DescriptorKind::Store<\/a>:<\/div>$/;"	a
l00239	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;    <span class="keywordflow">if<\/span> (!GCNOBuffer.readFunctionTag()) <span class="keywordflow">break<\/span>;<\/div>$/;"	a
l00240	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aff10615cbb3dacdba4413f113c303344">DescriptorKind::FRem<\/a>:<\/div>$/;"	a
l00240	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;    <span class="keywordflow">if<\/span> (!GCDABuffer.readFunctionTag()) <span class="keywordflow">break<\/span>; <\/div>$/;"	a
l00241	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525aec555ef8d2a2967b9c13e79e0166b649">DescriptorKind::FAdd<\/a>:<\/div>$/;"	a
l00241	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;    <span class="keyword">auto<\/span> GFun = <span class="keyword">new<\/span> GCOVFunction(GF);<\/div>$/;"	a
l00242	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525af65bd293528ad1647e356e1522057351">DescriptorKind::FSub<\/a>:<\/div>$/;"	a
l00242	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;    <span class="keywordflow">if<\/span> (!GFun-&gt;readGCNO(GCNOBuffer, Version) ||<\/div>$/;"	a
l00243	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a00eafd0987bcd3fed40573f6a95ba54f">DescriptorKind::FMul<\/a>:<\/div>$/;"	a
l00243	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;        !GFun-&gt;readGCDA(GCDABuffer, Version))<\/div>$/;"	a
l00244	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a6cb30f8d119305d208d43e42f818e040">DescriptorKind::FDiv<\/a>:<\/div>$/;"	a
l00244	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;      <span class="keywordflow">return<\/span> *Functions;<\/div>$/;"	a
l00245	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;      <span class="keywordflow">return<\/span> 2;<\/div>$/;"	a
l00245	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;<\/div>$/;"	a
l00246	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a1c3802a27c2777c6611cb5c030b7d0">DescriptorKind::Calls<\/a>: <\/div>$/;"	a
l00246	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;    GFun-&gt;collectLineCounts(FI);<\/div>$/;"	a
l00247	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;      <span class="keywordflow">return<\/span> 3;<\/div>$/;"	a
l00247	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;<\/div>$/;"	a
l00248	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a9d1256d31c3c650658176f4203795bd8">DescriptorKind::Printf<\/a>:<\/div>$/;"	a
l00248	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;    Functions-&gt;push_back(GFun);<\/div>$/;"	a
l00249	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a1a98c8ebeff4cef657037fc44f78f4e5">DescriptorKind::Malloc<\/a>: <\/div>$/;"	a
l00249	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;  }<\/div>$/;"	a
l00250	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a54cc8639b2ae32fad159203ab1b7aa4a">DescriptorKind::Pow<\/a>: <\/div>$/;"	a
l00250	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;<\/div>$/;"	a
l00251	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;    <span class="keywordflow">case<\/span> <a class="code" href="BBHash_8h.html#a1cac54f1961199852455d1cdf18e8525a98095238a325acc3b59341ba5367172d">DescriptorKind::Sqrt<\/a>: <\/div>$/;"	a
l00251	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;  FI.setRunCount(1);<\/div>$/;"	a
l00252	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;      <span class="keywordflow">return<\/span> 4;<\/div>$/;"	a
l00252	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;  FI.setProgramCount(1);<\/div>$/;"	a
l00253	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;    <span class="keywordflow">default<\/span>:<\/div>$/;"	a
l00253	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;<\/div>$/;"	a
l00254	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;      <span class="keywordflow">return<\/span> 1;<\/div>$/;"	a
l00254	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;  <span class="keywordflow">return<\/span> *Functions;<\/div>$/;"	a
l00255	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;  }<\/div>$/;"	a
l00255	docs/html/ProfileModule_8cpp_source.html	/^<div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;}<\/div>$/;"	a
l00256	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;}<\/div>$/;"	a
l00257	docs/html/BBHash_8cpp_source.html	/^<div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<\/div>$/;"	a
last_	test/gtest/samples/sample3-inl.h	/^  QueueNode<E>* last_;  \/\/ The last node of the queue.$/;"	m	class:Queue
last_death_test_case_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int last_death_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
last_death_test_case_	test/gtest/src/gtest-internal-inl.h	/^  int last_death_test_case_;$/;"	m	class:testing::internal::UnitTestImpl
last_death_test_message_	test/gtest/fused-src/gtest/gtest-all.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	file:
last_death_test_message_	test/gtest/fused-src/gtest/gtest.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest
last_death_test_message_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest
last_death_test_message_	test/gtest/src/gtest-death-test.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	file:
last_time	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.h	/^    double last_time;$/;"	m	struct:__anon57
last_time	experiments/benchmarks/src/SciMark2-C/Stopwatch.h	/^    double last_time;$/;"	m	struct:__anon44
layout	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^int     layout       =  0;$/;"	v
layout	experiments/benchmarks/src/base/richards_benchmark.c	/^int     layout       =  0;$/;"	v
left	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:p
left	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  double left;                          \/*= 0.0; *\/$/;"	m	struct:__anon58
left	experiments/backup/benchmarks/src/base/bubblesort.c	/^  struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/intmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/oscar.c	/^  struct node *left, *right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/perm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/queens.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/quicksort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/realmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/towers.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/backup/benchmarks/src/base/treesort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/SciMark2-C/Random.h	/^  double left;                          \/*= 0.0; *\/$/;"	m	struct:__anon45
left	experiments/benchmarks/src/base/bubblesort.c	/^  struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/intmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/oscar.c	/^  struct node *left, *right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/perm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/puzzle-stanford.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/queens.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/quicksort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/realmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/towers.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
left	experiments/benchmarks/src/base/treesort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::node	file:
lerp	experiments/backup/benchmarks/src/base/perlin.c	/^static double lerp(double t, double a, double b) { return a + t * (b - a); }$/;"	f	file:
lerp	experiments/benchmarks/src/base/perlin.c	/^static double lerp(double t, double a, double b) { return a + t * (b - a); }$/;"	f	file:
letter_A	docs/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_A"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;A&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_B	docs/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_B"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;B&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_D	docs/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_D"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;D&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_F	docs/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_F"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;F&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_H	docs/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_H"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;H&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_I	docs/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_I"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;I&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_P	docs/html/classes.html	/^<tr><td valign="top"><a class="el" href="classAnalysisMethod.html">AnalysisMethod<\/a>&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classFrequencyMethod.html">FrequencyMethod<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_P"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;P&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_R	docs/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_R"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;R&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_h	docs/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classInstructionMethod.html">InstructionMethod<\/a>&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_h"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;h&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
level	include/Profiling/papi.h	/^      PAPI_mh_level_t level[PAPI_MAX_MEM_HIERARCHY_LEVELS];$/;"	m	struct:_papi_mh_info
level	include/Profiling/papi.h	/^      int level;$/;"	m	struct:_papi_debug_option
levels	include/Profiling/papi.h	/^      int levels;$/;"	m	struct:_papi_mh_info
lib_dir_env	include/Profiling/papi.h	/^      char lib_dir_env[PAPI_MAX_STR_LEN];$/;"	m	struct:_papi_preload_option
lib_dir_sep	include/Profiling/papi.h	/^      char lib_dir_sep;$/;"	m	struct:_papi_preload_option
lib_preload_env	include/Profiling/papi.h	/^      char lib_preload_env[PAPI_MAX_STR_LEN];   $/;"	m	struct:_papi_preload_option
lib_preload_sep	include/Profiling/papi.h	/^      char lib_preload_sep;$/;"	m	struct:_papi_preload_option
library1	test/gtest/test/gtest-typed-test_test.cc	/^namespace library1 {$/;"	n	file:
library2	test/gtest/test/gtest-typed-test_test.cc	/^namespace library2 {$/;"	n	file:
limit	include/CostEstimator/LRUCache.h	/^      size_t limit;$/;"	m	class:lru::cache
line	test/gtest/fused-src/gtest/gtest-all.cc	/^  int line;$/;"	m	struct:testing::internal::TraceInfo	file:
line	test/gtest/fused-src/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
line	test/gtest/fused-src/gtest/gtest.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
line	test/gtest/include/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
line	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
line	test/gtest/src/gtest-internal-inl.h	/^  int line;$/;"	m	struct:testing::internal::TraceInfo
line_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	file:
line_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
line_	test/gtest/fused-src/gtest/gtest.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
line_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
line_	test/gtest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	file:
line_	test/gtest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
line_number	test/gtest/fused-src/gtest/gtest.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult
line_number	test/gtest/include/gtest/gtest-test-part.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult
line_number_	test/gtest/fused-src/gtest/gtest.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult
line_number_	test/gtest/include/gtest/gtest-test-part.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult
line_size	include/Profiling/papi.h	/^      int line_size;$/;"	m	struct:_papi_mh_cache_info
link_	test/gtest/fused-src/gtest/gtest.h	/^  linked_ptr_internal link_;$/;"	m	class:testing::internal::linked_ptr
link_	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr_internal link_;$/;"	m	class:testing::internal::linked_ptr
linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^  linked_ptr(linked_ptr const& ptr) {  \/\/ NOLINT$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^class linked_ptr {$/;"	c	namespace:testing::internal
linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr(linked_ptr const& ptr) {  \/\/ NOLINT$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^class linked_ptr {$/;"	c	namespace:testing::internal
linked_ptr_internal	test/gtest/fused-src/gtest/gtest.h	/^class linked_ptr_internal {$/;"	c	namespace:testing::internal
linked_ptr_internal	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^class linked_ptr_internal {$/;"	c	namespace:testing::internal
list_copy	experiments/backup/benchmarks/src/base/lists.c	/^DLL *list_copy(DLL *x) {$/;"	f
list_copy	experiments/benchmarks/src/base/lists.c	/^DLL *list_copy(DLL *x) {$/;"	f
list_empty	experiments/backup/benchmarks/src/base/lists.c	/^inline int list_empty(DLL *head) { return(list_length(head) == 0); }$/;"	f
list_empty	experiments/benchmarks/src/base/lists.c	/^inline int list_empty(DLL *head) { return(list_length(head) == 0); }$/;"	f
list_equal	experiments/backup/benchmarks/src/base/lists.c	/^int list_equal(DLL *x, DLL *y) {$/;"	f
list_equal	experiments/benchmarks/src/base/lists.c	/^int list_equal(DLL *x, DLL *y) {$/;"	f
list_first	experiments/backup/benchmarks/src/base/lists.c	/^inline DLL *list_first(DLL *head) { return(head->next); }$/;"	f
list_first	experiments/benchmarks/src/base/lists.c	/^inline DLL *list_first(DLL *head) { return(head->next); }$/;"	f
list_last	experiments/backup/benchmarks/src/base/lists.c	/^inline DLL *list_last(DLL *head) { return(head->prev); }$/;"	f
list_last	experiments/benchmarks/src/base/lists.c	/^inline DLL *list_last(DLL *head) { return(head->prev); }$/;"	f
list_length	experiments/backup/benchmarks/src/base/lists.c	/^inline int list_length(DLL *head) { return(head->val); }$/;"	f
list_length	experiments/benchmarks/src/base/lists.c	/^inline int list_length(DLL *head) { return(head->val); }$/;"	f
list_new	experiments/backup/benchmarks/src/base/lists.c	/^DLL *list_new() {$/;"	f
list_new	experiments/benchmarks/src/base/lists.c	/^DLL *list_new() {$/;"	f
list_pop_head	experiments/backup/benchmarks/src/base/lists.c	/^DLL *list_pop_head(DLL *head) {$/;"	f
list_pop_head	experiments/benchmarks/src/base/lists.c	/^DLL *list_pop_head(DLL *head) {$/;"	f
list_pop_tail	experiments/backup/benchmarks/src/base/lists.c	/^DLL *list_pop_tail(DLL *head) {$/;"	f
list_pop_tail	experiments/benchmarks/src/base/lists.c	/^DLL *list_pop_tail(DLL *head) {$/;"	f
list_print	experiments/backup/benchmarks/src/base/lists.c	/^void list_print(char *msg, DLL *x) {$/;"	f
list_print	experiments/benchmarks/src/base/lists.c	/^void list_print(char *msg, DLL *x) {$/;"	f
list_push_head	experiments/backup/benchmarks/src/base/lists.c	/^void list_push_head(DLL *head, DLL *item) {$/;"	f
list_push_head	experiments/benchmarks/src/base/lists.c	/^void list_push_head(DLL *head, DLL *item) {$/;"	f
list_push_tail	experiments/backup/benchmarks/src/base/lists.c	/^void list_push_tail(DLL *head, DLL *item) {$/;"	f
list_push_tail	experiments/benchmarks/src/base/lists.c	/^void list_push_tail(DLL *head, DLL *item) {$/;"	f
list_reverse	experiments/backup/benchmarks/src/base/lists.c	/^void list_reverse (DLL *head) {$/;"	f
list_reverse	experiments/benchmarks/src/base/lists.c	/^void list_reverse (DLL *head) {$/;"	f
list_sequence	experiments/backup/benchmarks/src/base/lists.c	/^DLL *list_sequence(int from, int to) {$/;"	f
list_sequence	experiments/benchmarks/src/base/lists.c	/^DLL *list_sequence(int from, int to) {$/;"	f
list_tests	test/gtest/test/gtest_unittest.cc	/^  bool list_tests;$/;"	m	struct:testing::Flags	file:
list_tests_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
list_tests_	test/gtest/src/gtest-internal-inl.h	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver
listeners	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl
listeners	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListeners& UnitTest::listeners() {$/;"	f	class:testing::UnitTest
listeners	test/gtest/src/gtest-internal-inl.h	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl
listeners	test/gtest/src/gtest.cc	/^TestEventListeners& UnitTest::listeners() {$/;"	f	class:testing::UnitTest
listeners_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl	file:
listeners_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	file:
listeners_	test/gtest/src/gtest-internal-inl.h	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl
listeners_	test/gtest/src/gtest.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	file:
littlest	experiments/backup/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/backup/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
littlest	experiments/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
llvm	include/Profiling/GCOV.h	/^namespace llvm {$/;"	n
loadCallCost	src/Profiling/CallCostAnalyzer/CallCostReader.cpp	/^void loadCallCost(StringRef Filename, ProfileModule *Profile) {$/;"	f
loadGCOV	src/Profiling/ExecutionFrequency/GCOV/GCOVReader.cpp	/^void loadGCOV(std::vector<MemoryBuffer*> GCDAs, $/;"	f
loadGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::loadGame(char *filename)$/;"	f	class:HexxagonGame
loadGame	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::loadGame(char *filename)$/;"	f	class:HexxagonGame
loadStaticProfiling	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^void loadStaticProfiling(ProfileModule *Profile) {$/;"	f
long_descr	include/Profiling/papi.h	/^      char long_descr[PAPI_HUGE_STR_LEN];    \/* a longer description of the event$/;"	m	struct:event_info
long_long	include/Profiling/papi.h	294;"	d
loop	experiments/backup/benchmarks/src/base/fp-convert.c	/^double loop(float *x, float *y, long length) {$/;"	f
loop	experiments/backup/benchmarks/src/base/mandel-2.c	/^int loop(complex c) {$/;"	f
loop	experiments/benchmarks/src/base/fp-convert.c	/^double loop(float *x, float *y, long length) {$/;"	f
loop	experiments/benchmarks/src/base/mandel-2.c	/^int loop(complex c) {$/;"	f
lowbits	experiments/backup/benchmarks/src/.hexxagon/bitboard64.h	/^	uint32_t lowbits, highbits;$/;"	m	class:BitBoard64
lowbits	experiments/benchmarks/src/.hexxagon/bitboard64.h	/^	uint32_t lowbits, highbits;$/;"	m	class:BitBoard64
lower_StringImpl	experiments/backup/benchmarks/src/base/lowercase.c	/^static size_t lower_StringImpl(const UChar* __restrict data, size_t length, UChar* __restrict output)$/;"	f	file:
lower_StringImpl	experiments/benchmarks/src/base/lowercase.c	/^static size_t lower_StringImpl(const UChar* __restrict data, size_t length, UChar* __restrict output)$/;"	f	file:
lrand48	experiments/backup/benchmarks/src/base/misr.c	45;"	d	file:
lrand48	experiments/benchmarks/src/base/misr.c	45;"	d	file:
lru	include/CostEstimator/LRUCache.h	/^namespace lru {$/;"	n
m	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  int m[17];                        $/;"	m	struct:__anon58
m	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^  float* m;$/;"	m	struct:Mat	file:
m	experiments/benchmarks/src/SciMark2-C/Random.h	/^  int m[17];                        $/;"	m	struct:__anon45
m	experiments/benchmarks/src/base/himenobmtxpa.c	/^  float* m;$/;"	m	struct:Mat	file:
m1	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^  static const int m1 = (ONE << (MDIG-2)) + ((ONE << (MDIG-2) )-ONE);$/;"	v	file:
m1	experiments/benchmarks/src/SciMark2-C/Random.c	/^  static const int m1 = (ONE << (MDIG-2)) + ((ONE << (MDIG-2) )-ONE);$/;"	v	file:
m2	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^  static const int m2 = ONE << MDIG\/2;$/;"	v	file:
m2	experiments/benchmarks/src/SciMark2-C/Random.c	/^  static const int m2 = ONE << MDIG\/2;$/;"	v	file:
main	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^int main(int argc, char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/SciMark2-C/scimark2.c	/^int main(int argc, char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/aha/aha.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/ackermann.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/ary3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/bubblesort.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/chomp.c	/^int main(void)$/;"	f
main	experiments/backup/benchmarks/src/base/dry.c	/^main()$/;"	f
main	experiments/backup/benchmarks/src/base/dt.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/fannkuch.c	/^main( int argc, char* argv[] )$/;"	f
main	experiments/backup/benchmarks/src/base/fbench.c	/^main(argc, argv)$/;"	f
main	experiments/backup/benchmarks/src/base/ffbench.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/fib2.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/fldry.c	/^int main( argc, argv)$/;"	f
main	experiments/backup/benchmarks/src/base/flops-1.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-2.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-3.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-4.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-5.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-6.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-7.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops-8.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/flops.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/fp-convert.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/hash.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/heapsort.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^main(int argc, char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/base/huffbench.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/backup/benchmarks/src/base/intmm.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/lists.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/lowercase.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/backup/benchmarks/src/base/lpbench.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/backup/benchmarks/src/base/mandel-2.c	/^int main() {$/;"	f
main	experiments/backup/benchmarks/src/base/mandel.c	/^int main() {$/;"	f
main	experiments/backup/benchmarks/src/base/matrix.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/methcall.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/misr.c	/^int main(int argc,char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/base/n-body.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/backup/benchmarks/src/base/nestedloop.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/nsieve-bits.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/backup/benchmarks/src/base/objinst.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/oourafft.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/oscar.c	/^main ()$/;"	f
main	experiments/backup/benchmarks/src/base/partialsums.c	/^int main(int argc, char* argv[])$/;"	f
main	experiments/backup/benchmarks/src/base/perlin.c	/^int main() {$/;"	f
main	experiments/backup/benchmarks/src/base/perm.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/pi.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/puzzle.c	/^int main() {$/;"	f
main	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/backup/benchmarks/src/base/queens.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/quicksort.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/random.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/realmm.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/recursive.c	/^int main(int argc, char ** argv) {$/;"	f
main	experiments/backup/benchmarks/src/base/reedsolomon.c	/^int main(void) {$/;"	f
main	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/salsa20.c	/^int main(void) {$/;"	f
main	experiments/backup/benchmarks/src/base/sieve.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/spectral-norm.c	/^int main(int argc, char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/base/strcat.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/backup/benchmarks/src/base/towers.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/treesort.c	/^int main()$/;"	f
main	experiments/backup/benchmarks/src/base/whetstone.c	/^main(int argc, char *argv[])$/;"	f
main	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/backup/benchmarks/src/sgefa/driver.c	/^main()$/;"	f
main	experiments/benchmarks/llvm/bubblesort.o0/test.c	/^int main() {$/;"	f
main	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^int main(int argc, char *argv[])$/;"	f
main	experiments/benchmarks/src/SciMark2-C/scimark2.c	/^int main(int argc, char *argv[])$/;"	f
main	experiments/benchmarks/src/aha/aha.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/ackermann.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/ary3.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/bubblesort.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/chomp.c	/^int main(void)$/;"	f
main	experiments/benchmarks/src/base/dry.c	/^main()$/;"	f
main	experiments/benchmarks/src/base/dt.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/fannkuch.c	/^main( int argc, char* argv[] )$/;"	f
main	experiments/benchmarks/src/base/fbench.c	/^main(argc, argv)$/;"	f
main	experiments/benchmarks/src/base/ffbench.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/fib2.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/fldry.c	/^int main( argc, argv)$/;"	f
main	experiments/benchmarks/src/base/flops-1.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-2.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-3.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-4.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-5.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-6.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-7.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops-8.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/flops.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/fp-convert.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/hash.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/heapsort.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/himenobmtxpa.c	/^main(int argc, char *argv[])$/;"	f
main	experiments/benchmarks/src/base/huffbench.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/benchmarks/src/base/intmm.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/lists.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/lowercase.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/benchmarks/src/base/lpbench.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/benchmarks/src/base/mandel-2.c	/^int main() {$/;"	f
main	experiments/benchmarks/src/base/mandel.c	/^int main() {$/;"	f
main	experiments/benchmarks/src/base/matrix.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/methcall.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/misr.c	/^int main(int argc,char *argv[])$/;"	f
main	experiments/benchmarks/src/base/n-body.c	/^int main(int argc, char ** argv)$/;"	f
main	experiments/benchmarks/src/base/nestedloop.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/nsieve-bits.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/benchmarks/src/base/objinst.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/oourafft.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/oscar.c	/^main ()$/;"	f
main	experiments/benchmarks/src/base/partialsums.c	/^int main(int argc, char* argv[])$/;"	f
main	experiments/benchmarks/src/base/perlin.c	/^int main() {$/;"	f
main	experiments/benchmarks/src/base/perm.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/pi.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/puzzle-stanford.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/puzzle.c	/^int main() {$/;"	f
main	experiments/benchmarks/src/base/queens-mcgill.c	/^int main(int argc, char **argv)$/;"	f
main	experiments/benchmarks/src/base/queens.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/quicksort.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/random.c	/^int main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/realmm.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/recursive.c	/^int main(int argc, char ** argv) {$/;"	f
main	experiments/benchmarks/src/base/reedsolomon.c	/^int main(void) {$/;"	f
main	experiments/benchmarks/src/base/richards_benchmark.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/salsa20.c	/^int main(void) {$/;"	f
main	experiments/benchmarks/src/base/sieve.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/spectral-norm.c	/^int main(int argc, char *argv[])$/;"	f
main	experiments/benchmarks/src/base/strcat.c	/^main(int argc, char *argv[]) {$/;"	f
main	experiments/benchmarks/src/base/towers.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/treesort.c	/^int main()$/;"	f
main	experiments/benchmarks/src/base/whetstone.c	/^main(int argc, char *argv[])$/;"	f
main	experiments/benchmarks/src/polybench/datamining/correlation/correlation.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/datamining/covariance/covariance.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/adi/adi.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^int main(int argc, char** argv)$/;"	f
main	experiments/benchmarks/src/sgefa/driver.c	/^main()$/;"	f
main	test/AllTests.cpp	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/build-aux/config.guess	/^		main()$/;"	f
main	test/gtest/build-aux/config.guess	/^	main ()$/;"	f
main	test/gtest/build-aux/config.guess	/^main ()$/;"	f
main	test/gtest/fused-src/gtest/gtest_main.cc	/^GTEST_API_ int main(int argc, char **argv) {$/;"	f
main	test/gtest/samples/sample10_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/samples/sample9_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/scripts/fuse_gtest_files.py	/^def main():$/;"	f
main	test/gtest/scripts/pump.py	/^def main(argv):$/;"	f
main	test/gtest/src/gtest_main.cc	/^GTEST_API_ int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest-death-test_ex_test.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest-listener_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest-param-test_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest-unittest-api_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_break_on_failure_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_catch_exceptions_test_.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest_color_test_.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest_env_var_test_.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest_environment_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_filter_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_list_tests_unittest_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_no_test_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_output_test_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_premature_exit_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_repeat_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_shuffle_test_.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_stress_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	test/gtest/test/gtest_throw_on_failure_ex_test.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest_throw_on_failure_test_.cc	/^int main(int argc, char** argv) {$/;"	f
main	test/gtest/test/gtest_uninitialized_test_.cc	/^int main() {$/;"	f
main	test/gtest/test/gtest_xml_output_unittest_.cc	/^int main(int argc, char** argv) {$/;"	f
main	tools/Analyser.cpp	/^int main(int argc, char** argv) {$/;"	f
main	tools/BestO.cpp	/^int main(int argc, char** argv) {$/;"	f
major_version	test/gtest/xcode/Scripts/versiongenerate.py	/^major_version = version_values.group(1)$/;"	v
make_data	experiments/backup/benchmarks/src/base/chomp.c	/^int *make_data(int row,int col) \/* creates a new _data with the correct *\/$/;"	f
make_data	experiments/benchmarks/src/base/chomp.c	/^int *make_data(int row,int col) \/* creates a new _data with the correct *\/$/;"	f
make_linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:testing::internal
make_linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:testing::internal
make_list	experiments/backup/benchmarks/src/base/chomp.c	/^struct _list *make_list(int *data,int *value,int *all) \/* create the whole _list of moves *\/$/;"	f
make_list	experiments/benchmarks/src/base/chomp.c	/^struct _list *make_list(int *data,int *value,int *all) \/* create the whole _list of moves *\/$/;"	f
make_play	experiments/backup/benchmarks/src/base/chomp.c	/^struct _play *make_play(int all) \/* make up the entire tree-like stuff *\/$/;"	f
make_play	experiments/benchmarks/src/base/chomp.c	/^struct _play *make_play(int all) \/* make up the entire tree-like stuff *\/$/;"	f
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_10_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_1_TUPLE_(T) make_tuple(const T0& f0) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_2_TUPLE_(T) make_tuple(const T0& f0, const T1& f1) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_3_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_4_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_5_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_6_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_7_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_8_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline GTEST_9_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/fused-src/gtest/gtest.h	/^inline tuple<> make_tuple() { return tuple<>(); }$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_10_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_1_TUPLE_(T) make_tuple(const T0& f0) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_2_TUPLE_(T) make_tuple(const T0& f0, const T1& f1) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_3_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2) {$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_4_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_5_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_6_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_7_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_8_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline GTEST_9_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^inline tuple<> make_tuple() { return tuple<>(); }$/;"	f	namespace:std::tr1
make_vec	experiments/backup/benchmarks/src/base/partialsums.c	/^v2df make_vec(double a, double b)$/;"	f
make_vec	experiments/benchmarks/src/base/partialsums.c	/^v2df make_vec(double a, double b)$/;"	f
make_wanted	experiments/backup/benchmarks/src/base/chomp.c	/^void make_wanted(int *data) \/* makes up the list of positions from the full board *\/$/;"	f
make_wanted	experiments/benchmarks/src/base/chomp.c	/^void make_wanted(int *data) \/* makes up the list of positions from the full board *\/$/;"	f
makewt	experiments/backup/benchmarks/src/base/oourafft.c	/^void makewt(int nw, int *ip, double *w)$/;"	f
makewt	experiments/benchmarks/src/base/oourafft.c	/^void makewt(int nw, int *ip, double *w)$/;"	f
mandel	experiments/backup/benchmarks/src/base/mandel.c	/^void mandel() {$/;"	f
mandel	experiments/benchmarks/src/base/mandel.c	/^void mandel() {$/;"	f
mangleCoveragePath	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^static std::string mangleCoveragePath(StringRef Filename, bool PreservePaths) {$/;"	f	file:
manual	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
map	include/Profiling/papi.h	/^      PAPI_address_map_t *map;$/;"	m	struct:_papi_shared_lib_info
mass	experiments/backup/benchmarks/src/base/n-body.c	/^  double mass;$/;"	m	struct:planet	file:
mass	experiments/benchmarks/src/base/n-body.c	/^  double mass;$/;"	m	struct:planet	file:
mat_set	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^mat_set(Matrix* Mat, int l, float val)$/;"	f
mat_set	experiments/benchmarks/src/base/himenobmtxpa.c	/^mat_set(Matrix* Mat, int l, float val)$/;"	f
mat_set_init	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^mat_set_init(Matrix* Mat)$/;"	f
mat_set_init	experiments/benchmarks/src/base/himenobmtxpa.c	/^mat_set_init(Matrix* Mat)$/;"	f
matchPairwiseReduction	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool matchPairwiseReduction(const ExtractElementInst *ReduxRoot,$/;"	f	file:
matchPairwiseReductionAtLevel	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool matchPairwiseReductionAtLevel(const BinaryOperator *BinOp,$/;"	f	file:
matchPairwiseShuffleMask	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool matchPairwiseShuffleMask(ShuffleVectorInst *SI, bool IsLeft,$/;"	f	file:
matchVectorSplittingReduction	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^static bool matchVectorSplittingReduction(const ExtractElementInst *ReduxRoot,$/;"	f	file:
matches_filter_	test/gtest/fused-src/gtest/gtest.h	/^  bool matches_filter_;             \/\/ True if this test matches the$/;"	m	class:testing::TestInfo
matches_filter_	test/gtest/include/gtest/gtest.h	/^  bool matches_filter_;             \/\/ True if this test matches the$/;"	m	class:testing::TestInfo
matdump	experiments/backup/benchmarks/src/sgefa/driver.c	/^void matdump( a, head )$/;"	f
matdump	experiments/benchmarks/src/sgefa/driver.c	/^void matdump( a, head )$/;"	f
matgen	experiments/backup/benchmarks/src/base/lpbench.c	/^void matgen (double ** a, double * b)$/;"	f
matgen	experiments/backup/benchmarks/src/sgefa/driver.c	/^int matgen( a, x, b, bt, ipvt, test_case, scale )$/;"	f
matgen	experiments/benchmarks/src/base/lpbench.c	/^void matgen (double ** a, double * b)$/;"	f
matgen	experiments/benchmarks/src/sgefa/driver.c	/^int matgen( a, x, b, bt, ipvt, test_case, scale )$/;"	f
matvec	experiments/backup/benchmarks/src/sgefa/driver.c	/^int matvec( a, x, b, job)$/;"	f
matvec	experiments/benchmarks/src/sgefa/driver.c	/^int matvec( a, x, b, job)$/;"	f
max	experiments/backup/benchmarks/src/base/ffbench.c	144;"	d	file:
max	experiments/benchmarks/src/base/ffbench.c	144;"	d	file:
max_degree	include/Profiling/papi.h	/^      int max_degree;$/;"	m	struct:_papi_multiplex_option
max_i	experiments/backup/benchmarks/src/base/mandel-2.c	/^int max_i = 65536;$/;"	v
max_i	experiments/benchmarks/src/base/mandel-2.c	/^int max_i = 65536;$/;"	v
max_lchrom	experiments/backup/benchmarks/src/base/fbench.c	/^static double max_lchrom;$/;"	v	file:
max_lchrom	experiments/benchmarks/src/base/fbench.c	/^static double max_lchrom;$/;"	v	file:
max_lspher	experiments/backup/benchmarks/src/base/fbench.c	/^static double max_lspher;$/;"	v	file:
max_lspher	experiments/benchmarks/src/base/fbench.c	/^static double max_lspher;$/;"	v	file:
max_memory	include/Profiling/papi.h	/^      long_long max_memory;$/;"	m	struct:_dmem_t
max_osc	experiments/backup/benchmarks/src/base/fbench.c	/^static double max_osc;$/;"	v	file:
max_osc	experiments/benchmarks/src/base/fbench.c	/^static double max_osc;$/;"	v	file:
max_precalculated_	test/gtest/samples/sample8_unittest.cc	/^  int max_precalculated_;$/;"	m	class:HybridPrimeTable	file:
max_surfaces	experiments/backup/benchmarks/src/base/fbench.c	242;"	d	file:
max_surfaces	experiments/benchmarks/src/base/fbench.c	242;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/bubblesort.c	20;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/intmm.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/oscar.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/perm.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/puzzle-stanford.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/queens.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/quicksort.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/realmm.c	23;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/towers.c	21;"	d	file:
maxcells	experiments/backup/benchmarks/src/base/treesort.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/bubblesort.c	20;"	d	file:
maxcells	experiments/benchmarks/src/base/intmm.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/oscar.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/perm.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/puzzle-stanford.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/queens.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/quicksort.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/realmm.c	23;"	d	file:
maxcells	experiments/benchmarks/src/base/towers.c	21;"	d	file:
maxcells	experiments/benchmarks/src/base/treesort.c	21;"	d	file:
mcols	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^  int mcols;$/;"	m	struct:Mat	file:
mcols	experiments/benchmarks/src/base/himenobmtxpa.c	/^  int mcols;$/;"	m	struct:Mat	file:
mdeps	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^  int mdeps;$/;"	m	struct:Mat	file:
mdeps	experiments/benchmarks/src/base/himenobmtxpa.c	/^  int mdeps;$/;"	m	struct:Mat	file:
melt_data	experiments/backup/benchmarks/src/base/chomp.c	/^void melt_data(int *data1,int *data2) \/* melts 2 _data's into the first one. *\/$/;"	f
melt_data	experiments/benchmarks/src/base/chomp.c	/^void melt_data(int *data1,int *data2) \/* melts 2 _data's into the first one. *\/$/;"	f
mem_hierarchy	include/Profiling/papi.h	/^     PAPI_mh_info_t mem_hierarchy;  \/* PAPI memory heirarchy description *\/$/;"	m	struct:_papi_hw_info
member	test/gtest/test/gtest-port_test.cc	/^  int member() { return member_; }$/;"	f	class:testing::internal::Base
member_	test/gtest/test/gtest-port_test.cc	/^  int member_;$/;"	m	class:testing::internal::Base	file:
memcpy	experiments/backup/benchmarks/src/base/dry.c	/^memcpy(d, s, l)$/;"	f
memcpy	experiments/backup/benchmarks/src/base/fldry.c	/^memcpy(d, s, l)$/;"	f
memcpy	experiments/benchmarks/src/base/dry.c	/^memcpy(d, s, l)$/;"	f
memcpy	experiments/benchmarks/src/base/fldry.c	/^memcpy(d, s, l)$/;"	f
message	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo	file:
message	test/gtest/fused-src/gtest/gtest.h	/^    std::string const message;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::std
message	test/gtest/fused-src/gtest/gtest.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult
message	test/gtest/fused-src/gtest/gtest.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult
message	test/gtest/include/gtest/gtest-test-part.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult
message	test/gtest/include/gtest/gtest.h	/^    std::string const message;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::std
message	test/gtest/include/gtest/gtest.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult
message	test/gtest/src/gtest-internal-inl.h	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo
message_	test/gtest/fused-src/gtest/gtest.h	/^  internal::scoped_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult
message_	test/gtest/fused-src/gtest/gtest.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult
message_	test/gtest/include/gtest/gtest-test-part.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult
message_	test/gtest/include/gtest/gtest.h	/^  internal::scoped_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult
mflops	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^mflops(int nn,double cpu,double flop)$/;"	f
mflops	experiments/benchmarks/src/base/himenobmtxpa.c	/^mflops(int nn,double cpu,double flop)$/;"	f
mgrClock	experiments/backup/benchmarks/src/base/flops.c	/^static double   mgrClock;$/;"	v	file:
mgrClock	experiments/benchmarks/src/base/flops.c	/^static double   mgrClock;$/;"	v	file:
mgrInited	experiments/backup/benchmarks/src/base/flops.c	/^static Boolean  mgrInited = FALSE;$/;"	v	file:
mgrInited	experiments/benchmarks/src/base/flops.c	/^static Boolean  mgrInited = FALSE;$/;"	v	file:
mgrTimer	experiments/backup/benchmarks/src/base/flops.c	/^static TMTask   mgrTimer;$/;"	v	file:
mgrTimer	experiments/benchmarks/src/base/flops.c	/^static TMTask   mgrTimer;$/;"	v	file:
mhz	include/Profiling/papi.h	/^      float mhz;                    \/* Cycle time of this CPU, *may* be estimated at $/;"	m	struct:_papi_hw_info
min	experiments/backup/benchmarks/src/base/ffbench.c	145;"	d	file:
min	experiments/benchmarks/src/base/ffbench.c	145;"	d	file:
min0	experiments/backup/benchmarks/src/sgefa/blas.c	/^int min0( n, a, b, c, d, e, f, g, h, i, j, k, l, m, o, p )$/;"	f
min0	experiments/benchmarks/src/sgefa/blas.c	/^int min0( n, a, b, c, d, e, f, g, h, i, j, k, l, m, o, p )$/;"	f
minor_version	test/gtest/xcode/Scripts/versiongenerate.py	/^minor_version = version_values.group(2)$/;"	v
misr_type	experiments/backup/benchmarks/src/base/misr.c	/^        }misr_type;$/;"	t	typeref:struct:cells	file:
misr_type	experiments/benchmarks/src/base/misr.c	/^        }misr_type;$/;"	t	typeref:struct:cells	file:
mkmatrix	experiments/backup/benchmarks/src/base/matrix.c	/^int **mkmatrix(int rows, int cols) {$/;"	f
mkmatrix	experiments/benchmarks/src/base/matrix.c	/^int **mkmatrix(int rows, int cols) {$/;"	f
mm	experiments/backup/benchmarks/src/base/reedsolomon.c	51;"	d	file:
mm	experiments/benchmarks/src/base/reedsolomon.c	51;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/bubblesort.c	14;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/intmm.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/oscar.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/perm.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/queens.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/quicksort.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/realmm.c	17;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/towers.c	15;"	d	file:
mmbase	experiments/backup/benchmarks/src/base/treesort.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/bubblesort.c	14;"	d	file:
mmbase	experiments/benchmarks/src/base/intmm.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/oscar.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/perm.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/puzzle-stanford.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/queens.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/quicksort.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/realmm.c	17;"	d	file:
mmbase	experiments/benchmarks/src/base/towers.c	15;"	d	file:
mmbase	experiments/benchmarks/src/base/treesort.c	15;"	d	file:
mmult	experiments/backup/benchmarks/src/base/matrix.c	/^int **mmult(int rows, int cols, int **m1, int **m2, int **m3) {$/;"	f
mmult	experiments/benchmarks/src/base/matrix.c	/^int **mmult(int rows, int cols, int **m1, int **m2, int **m3) {$/;"	f
mnemonic	experiments/backup/benchmarks/src/aha/aha.h	/^   char *mnemonic;              \/\/ Name of op, for printing.$/;"	m	struct:__anon59
mnemonic	experiments/benchmarks/src/aha/aha.h	/^   char *mnemonic;              \/\/ Name of op, for printing.$/;"	m	struct:__anon46
mnums	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^  int mnums;$/;"	m	struct:Mat	file:
mnums	experiments/benchmarks/src/base/himenobmtxpa.c	/^  int mnums;$/;"	m	struct:Mat	file:
model	include/Profiling/papi.h	/^      int model;                    \/* Model number of CPU *\/$/;"	m	struct:_papi_hw_info
model_string	include/Profiling/papi.h	/^      char model_string[PAPI_MAX_STR_LEN];      \/* Model string of CPU *\/$/;"	m	struct:_papi_hw_info
mouseOnToPopup	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
mouseTrackingActive	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
moves	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove *moves;$/;"	m	class:HexxagonMoveList
moves	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	HexxagonMove *moves;$/;"	m	class:HexxagonMoveList
movesdone	experiments/backup/benchmarks/src/base/bubblesort.c	/^int freelist, movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/intmm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/oscar.c	/^int freelist, movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/perm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/queens.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/quicksort.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/realmm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/towers.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/backup/benchmarks/src/base/treesort.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/bubblesort.c	/^int freelist, movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/intmm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/oscar.c	/^int freelist, movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/perm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/puzzle-stanford.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/queens.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/quicksort.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/realmm.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/towers.c	/^int    freelist,  movesdone;$/;"	v
movesdone	experiments/benchmarks/src/base/treesort.c	/^int    freelist,  movesdone;$/;"	v
mrows	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^  int mrows;$/;"	m	struct:Mat	file:
mrows	experiments/benchmarks/src/base/himenobmtxpa.c	/^  int mrows;$/;"	m	struct:Mat	file:
mul	experiments/backup/benchmarks/src/aha/aha.h	/^int mul (int x, int y, int z) {return x * y;}$/;"	f
mul	experiments/benchmarks/src/aha/aha.h	/^int mul (int x, int y, int z) {return x * y;}$/;"	f
multiplex	include/Profiling/papi.h	/^      PAPI_multiplex_option_t multiplex;$/;"	m	union:__anon7
mutex_	test/gtest/fused-src/gtest/gtest-all.cc	/^  Mutex mutex_;  \/\/ protects all internal state$/;"	m	class:testing::internal::OsStackTraceGetter	file:
mutex_	test/gtest/fused-src/gtest/gtest.h	/^  MutexBase* const mutex_;$/;"	m	class:std::tr1::GTestMutexLock
mutex_	test/gtest/fused-src/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest
mutex_	test/gtest/fused-src/gtest/gtest.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:std::tr1::MutexBase
mutex_	test/gtest/fused-src/gtest/gtest.h	/^  pthread_mutex_t mutex_;$/;"	m	class:std::tr1::Notification
mutex_	test/gtest/include/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest
mutex_	test/gtest/include/gtest/internal/gtest-port.h	/^  MutexBase* const mutex_;$/;"	m	class:testing::internal::GTestMutexLock
mutex_	test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:testing::internal::MutexBase
mutex_	test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_mutex_t mutex_;$/;"	m	class:testing::internal::Notification
mutex_	test/gtest/src/gtest-internal-inl.h	/^  Mutex mutex_;  \/\/ protects all internal state$/;"	m	class:testing::internal::OsStackTraceGetter
mutex_	test/gtest/test/gtest-port_test.cc	/^  Mutex* const mutex_;  \/\/ Protects value_.$/;"	m	class:testing::internal::AtomicCounterWithMutex	file:
my_namespace	test/gtest/test/gtest_unittest.cc	/^namespace my_namespace {$/;"	n	file:
myadd	experiments/backup/benchmarks/src/base/pi.c	/^void myadd(float *sum,float *addend) {$/;"	f
myadd	experiments/benchmarks/src/base/pi.c	/^void myadd(float *sum,float *addend) {$/;"	f
mynum	test/gtest/test/gtest-linked_ptr_test.cc	/^  int mynum;$/;"	m	class:__anon25::A	file:
n	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
n	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	v
n	experiments/backup/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/backup/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n	experiments/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
n1	test/gtest/test/gtest_output_test_.cc	/^  Notification n1;$/;"	m	struct:CheckPoints	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate1Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate2Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate3Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate4Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n1_;$/;"	m	class:Predicate5Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate1Test::n1_;$/;"	m	class:Predicate1Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate2Test::n1_;$/;"	m	class:Predicate2Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n1_;$/;"	m	class:Predicate3Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n1_;$/;"	m	class:Predicate4Test	file:
n1_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n1_;$/;"	m	class:Predicate5Test	file:
n2	test/gtest/test/gtest_output_test_.cc	/^  Notification n2;$/;"	m	struct:CheckPoints	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate2Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate3Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate4Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n2_;$/;"	m	class:Predicate5Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate2Test::n2_;$/;"	m	class:Predicate2Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n2_;$/;"	m	class:Predicate3Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n2_;$/;"	m	class:Predicate4Test	file:
n2_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n2_;$/;"	m	class:Predicate5Test	file:
n3	test/gtest/test/gtest_output_test_.cc	/^  Notification n3;$/;"	m	struct:CheckPoints	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate3Test	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate4Test	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n3_;$/;"	m	class:Predicate5Test	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate3Test::n3_;$/;"	m	class:Predicate3Test	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n3_;$/;"	m	class:Predicate4Test	file:
n3_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n3_;$/;"	m	class:Predicate5Test	file:
n4_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n4_;$/;"	m	class:Predicate4Test	file:
n4_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n4_;$/;"	m	class:Predicate5Test	file:
n4_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate4Test::n4_;$/;"	m	class:Predicate4Test	file:
n4_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n4_;$/;"	m	class:Predicate5Test	file:
n5_	test/gtest/test/gtest_pred_impl_unittest.cc	/^  static int n5_;$/;"	m	class:Predicate5Test	file:
n5_	test/gtest/test/gtest_pred_impl_unittest.cc	/^int Predicate5Test::n5_;$/;"	m	class:Predicate5Test	file:
nC	src/ProfileModule/ProfileModule.cpp	/^int nC  = 0; \/\/ Counter to generate CallInst's names $/;"	v
n_	test/gtest/test/gtest-param-test_test.cc	/^  int n_;$/;"	m	class:NonParameterizedBaseTest	file:
name	include/Profiling/papi.h	/^      char name[PAPI_HUGE_STR_LEN];$/;"	m	struct:_papi_address_map
name	include/Profiling/papi.h	/^      char name[PAPI_MAX_INFO_TERMS]         \/* names of code terms: *\/$/;"	m	struct:event_info
name	test/gtest/fused-src/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestCase
name	test/gtest/fused-src/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo
name	test/gtest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestCase
name	test/gtest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo
name_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string name_;$/;"	m	class:testing::__anon38::TestNameIs	file:
name_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestCaseNameIs	file:
name_	test/gtest/fused-src/gtest/gtest.h	/^  const std::string name_;               \/\/ Test name$/;"	m	class:testing::TestInfo
name_	test/gtest/fused-src/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestCase
name_	test/gtest/include/gtest/gtest.h	/^  const std::string name_;               \/\/ Test name$/;"	m	class:testing::TestInfo
name_	test/gtest/include/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestCase
name_	test/gtest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::__anon11::TestNameIs	file:
name_	test/gtest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestCaseNameIs	file:
name_	test/gtest/test/gtest-listener_test.cc	/^  std::string name_;$/;"	m	class:testing::internal::EventRecordingListener	file:
name_	test/gtest/xcode/Samples/FrameworkSample/widget.h	/^  std::string name_;$/;"	m	class:Widget
namespace1	test/gtest/test/gtest_unittest.cc	/^namespace namespace1 {$/;"	n	file:
namespace2	test/gtest/test/gtest_unittest.cc	/^namespace namespace2 {$/;"	n	file:
namespaces	docs/html/BBHash_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
namespaces	docs/html/GEOS_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"><\/a>$/;"	a
nan1	test/gtest/test/gtest_unittest.cc	/^    RawType nan1;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
nan2	test/gtest/test/gtest_unittest.cc	/^    RawType nan2;$/;"	m	struct:__anon14::FloatingPointTest::TestValues	file:
ncol	experiments/backup/benchmarks/src/base/chomp.c	/^int nrow,ncol;      \/* global so as to avoid passing them all over the place *\/$/;"	v
ncol	experiments/benchmarks/src/base/chomp.c	/^int nrow,ncol;      \/* global so as to avoid passing them all over the place *\/$/;"	v
ncpu	include/Profiling/papi.h	/^      int ncpu;                     \/* Number of CPU's in an SMP Node *\/$/;"	m	struct:_papi_hw_info
neg	experiments/backup/benchmarks/src/aha/aha.h	/^int neg(int x, int y, int z) {return -x;}$/;"	f
neg	experiments/benchmarks/src/aha/aha.h	/^int neg(int x, int y, int z) {return -x;}$/;"	f
nested-classes	docs/html/AnalysisMethod_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/BBHash_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/DatabaseManager_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/ProfileModule_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/include_2llvm_2Analysis_2BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/namespacestd.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	docs/html/projects_2llvm-project_2include_2BBDescriptor_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
newMat	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^newMat(Matrix* Mat, int mnums,int mrows, int mcols, int mdeps)$/;"	f
newMat	experiments/benchmarks/src/base/himenobmtxpa.c	/^newMat(Matrix* Mat, int mnums,int mrows, int mcols, int mdeps)$/;"	f
new_Array2D_double	experiments/backup/benchmarks/src/SciMark2-C/array.c	/^double** new_Array2D_double(int M, int N)$/;"	f
new_Array2D_double	experiments/benchmarks/src/SciMark2-C/array.c	/^double** new_Array2D_double(int M, int N)$/;"	f
new_NthToggle	experiments/backup/benchmarks/src/base/methcall.c	/^NthToggle *new_NthToggle(char start_state, int max_count) {$/;"	f
new_NthToggle	experiments/backup/benchmarks/src/base/objinst.c	/^NthToggle *new_NthToggle(char start_state, int max_count) {$/;"	f
new_NthToggle	experiments/benchmarks/src/base/methcall.c	/^NthToggle *new_NthToggle(char start_state, int max_count) {$/;"	f
new_NthToggle	experiments/benchmarks/src/base/objinst.c	/^NthToggle *new_NthToggle(char start_state, int max_count) {$/;"	f
new_Random	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^Random new_Random(int seed, double left, double right) $/;"	f
new_Random	experiments/benchmarks/src/SciMark2-C/Random.c	/^Random new_Random(int seed, double left, double right) $/;"	f
new_Random_seed	experiments/backup/benchmarks/src/SciMark2-C/Random.c	/^Random new_Random_seed(int seed)$/;"	f
new_Random_seed	experiments/benchmarks/src/SciMark2-C/Random.c	/^Random new_Random_seed(int seed)$/;"	f
new_Stopwatch	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^Stopwatch new_Stopwatch(void)$/;"	f
new_Stopwatch	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^Stopwatch new_Stopwatch(void)$/;"	f
new_Toggle	experiments/backup/benchmarks/src/base/methcall.c	/^Toggle *new_Toggle(char start_state) {$/;"	f
new_Toggle	experiments/backup/benchmarks/src/base/objinst.c	/^Toggle *new_Toggle(char start_state) {$/;"	f
new_Toggle	experiments/benchmarks/src/base/methcall.c	/^Toggle *new_Toggle(char start_state) {$/;"	f
new_Toggle	experiments/benchmarks/src/base/objinst.c	/^Toggle *new_Toggle(char start_state) {$/;"	f
next	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::next()$/;"	f	class:HexxagonGame
next	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *next;$/;"	m	class:GameList
next	experiments/backup/benchmarks/src/base/bubblesort.c	/^  int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/chomp.c	/^  struct _list *next;$/;"	m	struct:_list	typeref:struct:_list::_list	file:
next	experiments/backup/benchmarks/src/base/chomp.c	/^  struct _play *next;$/;"	m	struct:_play	typeref:struct:_play::_play	file:
next	experiments/backup/benchmarks/src/base/intmm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/lists.c	/^  struct DLL *next;   \/* points to next or head (if at tail) *\/$/;"	m	struct:DLL	typeref:struct:DLL::DLL	file:
next	experiments/backup/benchmarks/src/base/misr.c	/^        struct cells *next;$/;"	m	struct:cells	typeref:struct:cells::cells	file:
next	experiments/backup/benchmarks/src/base/oscar.c	/^  int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/perm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/puzzle.c	/^static unsigned long long int next = 1;$/;"	v	file:
next	experiments/backup/benchmarks/src/base/queens.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/quicksort.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/realmm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/simple_hash.h	/^    struct ht_node *next;$/;"	m	struct:ht_node	typeref:struct:ht_node::ht_node
next	experiments/backup/benchmarks/src/base/towers.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/backup/benchmarks/src/base/treesort.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::next()$/;"	f	class:HexxagonGame
next	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	GameList *next;$/;"	m	class:GameList
next	experiments/benchmarks/src/base/bubblesort.c	/^  int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/chomp.c	/^  struct _list *next;$/;"	m	struct:_list	typeref:struct:_list::_list	file:
next	experiments/benchmarks/src/base/chomp.c	/^  struct _play *next;$/;"	m	struct:_play	typeref:struct:_play::_play	file:
next	experiments/benchmarks/src/base/intmm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/lists.c	/^  struct DLL *next;   \/* points to next or head (if at tail) *\/$/;"	m	struct:DLL	typeref:struct:DLL::DLL	file:
next	experiments/benchmarks/src/base/misr.c	/^        struct cells *next;$/;"	m	struct:cells	typeref:struct:cells::cells	file:
next	experiments/benchmarks/src/base/oscar.c	/^  int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/perm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/puzzle-stanford.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/puzzle.c	/^static unsigned long long int next = 1;$/;"	v	file:
next	experiments/benchmarks/src/base/queens.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/quicksort.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/realmm.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/simple_hash.h	/^    struct ht_node *next;$/;"	m	struct:ht_node	typeref:struct:ht_node::ht_node
next	experiments/benchmarks/src/base/towers.c	/^	int next;$/;"	m	struct:element	file:
next	experiments/benchmarks/src/base/treesort.c	/^	int next;$/;"	m	struct:element	file:
next	test/gtest/samples/sample3-inl.h	/^  QueueNode* next() { return next_; }$/;"	f	class:QueueNode
next	test/gtest/samples/sample3-inl.h	/^  const QueueNode* next() const { return next_; }$/;"	f	class:QueueNode
next_	test/gtest/fused-src/gtest/gtest.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:testing::internal::linked_ptr_internal
next_	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:testing::internal::linked_ptr_internal
next_	test/gtest/samples/sample3-inl.h	/^  QueueNode* next_;$/;"	m	class:QueueNode
next_data	experiments/backup/benchmarks/src/base/chomp.c	/^int next_data(int *data)  \/* gives the next logical setup to the one passed *\/$/;"	f
next_data	experiments/benchmarks/src/base/chomp.c	/^int next_data(int *data)  \/* gives the next logical setup to the one passed *\/$/;"	f
nil	experiments/backup/benchmarks/src/base/bubblesort.c	3;"	d	file:
nil	experiments/backup/benchmarks/src/base/intmm.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/oscar.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/perm.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/puzzle-stanford.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/queens.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/quicksort.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/realmm.c	6;"	d	file:
nil	experiments/backup/benchmarks/src/base/towers.c	4;"	d	file:
nil	experiments/backup/benchmarks/src/base/treesort.c	4;"	d	file:
nil	experiments/benchmarks/src/base/bubblesort.c	3;"	d	file:
nil	experiments/benchmarks/src/base/intmm.c	4;"	d	file:
nil	experiments/benchmarks/src/base/oscar.c	4;"	d	file:
nil	experiments/benchmarks/src/base/perm.c	4;"	d	file:
nil	experiments/benchmarks/src/base/puzzle-stanford.c	4;"	d	file:
nil	experiments/benchmarks/src/base/queens.c	4;"	d	file:
nil	experiments/benchmarks/src/base/quicksort.c	4;"	d	file:
nil	experiments/benchmarks/src/base/realmm.c	6;"	d	file:
nil	experiments/benchmarks/src/base/towers.c	4;"	d	file:
nil	experiments/benchmarks/src/base/treesort.c	4;"	d	file:
niter	experiments/backup/benchmarks/src/base/fbench.c	/^int niter = ITERATIONS; 	   \/* Iteration counter *\/$/;"	v
niter	experiments/benchmarks/src/base/fbench.c	/^int niter = ITERATIONS; 	   \/* Iteration counter *\/$/;"	v
nlz	experiments/backup/benchmarks/src/aha/aha.h	/^int nlz(int xx, int y, int z) {$/;"	f
nlz	experiments/benchmarks/src/aha/aha.h	/^int nlz(int xx, int y, int z) {$/;"	f
nn	experiments/backup/benchmarks/src/base/reedsolomon.c	52;"	d	file:
nn	experiments/benchmarks/src/base/reedsolomon.c	52;"	d	file:
nnodes	include/Profiling/papi.h	/^      int nnodes;                   \/* Number of Nodes in the entire system *\/$/;"	m	struct:_papi_hw_info
noBoards	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::noBoards()$/;"	f	class:HexxagonGame
noBoards	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::noBoards()$/;"	f	class:HexxagonGame
node	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/intmm.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/oscar.c	/^struct node$/;"	s	file:
node	experiments/backup/benchmarks/src/base/perm.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/queens.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/quicksort.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/realmm.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/towers.c	/^struct node {$/;"	s	file:
node	experiments/backup/benchmarks/src/base/treesort.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/bubblesort.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/intmm.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/oscar.c	/^struct node$/;"	s	file:
node	experiments/benchmarks/src/base/perm.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/queens.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/quicksort.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/realmm.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/towers.c	/^struct node {$/;"	s	file:
node	experiments/benchmarks/src/base/treesort.c	/^struct node {$/;"	s	file:
noise	experiments/backup/benchmarks/src/base/perlin.c	/^static double noise(double x, double y, double z) {$/;"	f	file:
noise	experiments/benchmarks/src/base/perlin.c	/^static double noise(double x, double y, double z) {$/;"	f	file:
none	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:p
nonfatally_failed	test/gtest/fused-src/gtest/gtest.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult
nonfatally_failed	test/gtest/include/gtest/gtest-test-part.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult
note	include/Profiling/papi.h	/^      char note[PAPI_HUGE_STR_LEN];          \/* an optional developer note supplied with a preset event$/;"	m	struct:event_info
notifications_	test/gtest/test/gtest_output_test_.cc	/^  SpawnThreadNotifications notifications_;$/;"	m	class:DeathTestAndMultiThreadsTest	file:
notified_	test/gtest/fused-src/gtest/gtest.h	/^  bool notified_;$/;"	m	class:std::tr1::Notification
notified_	test/gtest/include/gtest/internal/gtest-port.h	/^  bool notified_;$/;"	m	class:testing::internal::Notification
nr_moves	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	int nr_moves;$/;"	m	class:HexxagonMoveList
nr_moves	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	int nr_moves;$/;"	m	class:HexxagonMoveList
nrow	experiments/backup/benchmarks/src/base/chomp.c	/^int nrow,ncol;      \/* global so as to avoid passing them all over the place *\/$/;"	v
nrow	experiments/benchmarks/src/base/chomp.c	/^int nrow,ncol;      \/* global so as to avoid passing them all over the place *\/$/;"	v
nth_toggle_activate	experiments/backup/benchmarks/src/base/methcall.c	/^NthToggle *nth_toggle_activate(NthToggle *this) {$/;"	f
nth_toggle_activate	experiments/backup/benchmarks/src/base/objinst.c	/^NthToggle *nth_toggle_activate(NthToggle *this) {$/;"	f
nth_toggle_activate	experiments/benchmarks/src/base/methcall.c	/^NthToggle *nth_toggle_activate(NthToggle *this) {$/;"	f
nth_toggle_activate	experiments/benchmarks/src/base/objinst.c	/^NthToggle *nth_toggle_activate(NthToggle *this) {$/;"	f
nulltime	experiments/backup/benchmarks/src/base/flops-1.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-2.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-3.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-4.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-5.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-6.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-7.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops-8.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/backup/benchmarks/src/base/flops.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-1.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-2.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-3.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-4.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-5.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-6.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-7.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops-8.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
nulltime	experiments/benchmarks/src/base/flops.c	/^double nulltime, TimeArray[3];   \/* Variables needed for 'dtime()'.     *\/$/;"	v
num	test/gtest/test/gtest-linked_ptr_test.cc	/^int num;$/;"	m	namespace:__anon25	file:
num_entries	include/Profiling/papi.h	/^      int num_entries;$/;"	m	struct:_papi_mh_tlb_info
num_lines	include/Profiling/papi.h	/^      int num_lines;$/;"	m	struct:_papi_mh_cache_info
number_	test/gtest/xcode/Samples/FrameworkSample/widget.h	/^  float number_;$/;"	m	class:Widget
numi	experiments/backup/benchmarks/src/aha/aha.h	/^int numi;                       \/\/ Current size of the trial programs,$/;"	v
numi	experiments/benchmarks/src/aha/aha.h	/^int numi;                       \/\/ Current size of the trial programs,$/;"	v
numopnds	experiments/backup/benchmarks/src/aha/aha.h	/^   int  numopnds;               \/\/ Number of operands, 1 to 3.$/;"	m	struct:__anon59
numopnds	experiments/benchmarks/src/aha/aha.h	/^   int  numopnds;               \/\/ Number of operands, 1 to 3.$/;"	m	struct:__anon46
object_distance	experiments/backup/benchmarks/src/base/fbench.c	/^static double object_distance;$/;"	v	file:
object_distance	experiments/benchmarks/src/base/fbench.c	/^static double object_distance;$/;"	v	file:
od_sa	experiments/backup/benchmarks/src/base/fbench.c	/^static double od_sa[2][2];$/;"	v	file:
od_sa	experiments/benchmarks/src/base/fbench.c	/^static double od_sa[2][2];$/;"	v	file:
offset	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
offset_momentum	experiments/backup/benchmarks/src/base/n-body.c	/^void offset_momentum(int nbodies, struct planet * bodies)$/;"	f
offset_momentum	experiments/benchmarks/src/base/n-body.c	/^void offset_momentum(int nbodies, struct planet * bodies)$/;"	f
old_factory_	test/gtest/test/gtest-death-test_test.cc	/^  DeathTestFactory* old_factory_;$/;"	m	class:testing::internal::ReplaceDeathTestFactory	file:
old_reporter_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
old_reporter_	test/gtest/include/gtest/gtest-spi.h	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter
omega	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^float   omega=0.8;$/;"	v
omega	experiments/benchmarks/src/base/himenobmtxpa.c	/^float   omega=0.8;$/;"	v
on_start_counter_	test/gtest/test/gtest_unittest.cc	/^  int* on_start_counter_;$/;"	m	class:TestListener	file:
on_the_fly_impl_	test/gtest/samples/sample8_unittest.cc	/^  OnTheFlyPrimeTable* on_the_fly_impl_;$/;"	m	class:HybridPrimeTable	file:
one	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
one	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
op	experiments/backup/benchmarks/src/aha/aha.h	/^   int op;                      \/\/ Index into isa.$/;"	m	struct:__anon60
op	experiments/benchmarks/src/aha/aha.h	/^   int op;                      \/\/ Index into isa.$/;"	m	struct:__anon47
op_name	experiments/backup/benchmarks/src/aha/aha.h	/^   char *op_name;               \/\/ Operator name, for printing.$/;"	m	struct:__anon59
op_name	experiments/benchmarks/src/aha/aha.h	/^   char *op_name;               \/\/ Operator name, for printing.$/;"	m	struct:__anon46
openCoveragePath	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^FileInfo::openCoveragePath(StringRef CoveragePath) {$/;"	f	class:FileInfo
opening_string	test/gtest/xcode/Scripts/versiongenerate.py	/^opening_string = config_file.read(buffer_size)$/;"	v
operator !	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult
operator !	test/gtest/src/gtest.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult
operator !=	test/gtest/fused-src/gtest/gtest.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:testing::internal::linked_ptr
operator !=	test/gtest/fused-src/gtest/gtest.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator !=	test/gtest/fused-src/gtest/gtest.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator !=	test/gtest/fused-src/gtest/gtest.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator !=	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:testing::internal::linked_ptr
operator !=	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator !=	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator !=	test/gtest/include/gtest/internal/gtest-param-util.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator !=	test/gtest/test/gtest_unittest.cc	/^  bool operator!=(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator &	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator&(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator &	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator&(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator ()	include/Profiling/GCOV.h	/^    bool operator()(const GCOVEdge *E1, const GCOVEdge *E2) {$/;"	f	struct:llvm::GCOVBlock::SortDstEdgesFunctor
operator ()	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool operator()(const TestCase* test_case) const {$/;"	f	class:testing::internal::TestCaseNameIs
operator ()	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool operator()(const TestInfo * test_info) const {$/;"	f	class:testing::__anon38::TestNameIs
operator ()	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs
operator ()	test/gtest/fused-src/gtest/gtest-all.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode
operator ()	test/gtest/fused-src/gtest/gtest-all.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal
operator ()	test/gtest/src/gtest-death-test.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode
operator ()	test/gtest/src/gtest-death-test.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal
operator ()	test/gtest/src/gtest-internal-inl.h	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs
operator ()	test/gtest/src/gtest.cc	/^  bool operator()(const TestCase* test_case) const {$/;"	f	class:testing::internal::TestCaseNameIs
operator ()	test/gtest/src/gtest.cc	/^  bool operator()(const TestInfo * test_info) const {$/;"	f	class:testing::__anon11::TestNameIs
operator ()	test/gtest/test/gtest-unittest-api_test.cc	/^  bool operator()(const T* a, const T* b) {$/;"	f	struct:testing::internal::LessByName
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1) {$/;"	f	struct:PredFunctor1
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor2
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor3
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor4
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator()(const T1& v1,$/;"	f	struct:PredFunctor5
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor1
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor2
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor3
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor4
operator ()	test/gtest/test/gtest_pred_impl_unittest.cc	/^  testing::AssertionResult operator()(const char* e1,$/;"	f	struct:PredFormatFunctor5
operator ()	test/gtest/test/gtest_unittest.cc	/^  AssertionResult operator()($/;"	f	struct:__anon14::AssertSumIsEven5Functor
operator ()	test/gtest/test/gtest_unittest.cc	/^  AssertionResult operator()(const char* expr, int n) {$/;"	f	struct:__anon14::AssertIsEvenFunctor
operator ()	test/gtest/test/gtest_unittest.cc	/^  bool operator()(int n) { return IsEven(n); }$/;"	f	struct:__anon14::IsEvenFunctor
operator ()	test/gtest/test/gtest_unittest.cc	/^  bool operator()(int n1, int n2, int n3) {$/;"	f	struct:__anon14::SumIsEven3Functor
operator *	test/gtest/fused-src/gtest/gtest.h	/^  T& operator*() const { return *value_; }$/;"	f	class:testing::internal::linked_ptr
operator *	test/gtest/fused-src/gtest/gtest.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator *	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  T& operator*() const { return *value_; }$/;"	f	class:testing::internal::linked_ptr
operator *	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator *	test/gtest/include/gtest/internal/gtest-port.h	/^  T& operator*() const { return *ptr_; }$/;"	f	class:testing::internal::scoped_ptr
operator +	test/gtest/test/gtest-param-test_test.cc	/^  DogAdder operator+(const DogAdder& other) const {$/;"	f	class:DogAdder
operator +	test/gtest/test/gtest-param-test_test.cc	/^  IntWrapper operator+(int other) const { return IntWrapper(value_ + other); }$/;"	f	class:IntWrapper
operator +	test/gtest/test/gtest_pred_impl_unittest.cc	/^  Bool operator+(const Bool& rhs) const { return Bool(value + rhs.value); }$/;"	f	struct:Bool
operator ++	test/gtest/fused-src/gtest/gtest.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator
operator ++	test/gtest/fused-src/gtest/gtest.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator
operator ++	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator
operator ++	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator
operator ->	test/gtest/fused-src/gtest/gtest.h	/^  T* operator->() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
operator ->	test/gtest/fused-src/gtest/gtest.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator ->	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  T* operator->() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
operator ->	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator ->	test/gtest/include/gtest/internal/gtest-port.h	/^  T* operator->() const { return ptr_; }$/;"	f	class:testing::internal::scoped_ptr
operator <	test/gtest/test/gtest-param-test_test.cc	/^  bool operator<(const DogAdder& other) const {$/;"	f	class:DogAdder
operator <	test/gtest/test/gtest-param-test_test.cc	/^  bool operator<(const IntWrapper& other) const {$/;"	f	class:IntWrapper
operator <	test/gtest/test/gtest_unittest.cc	/^  bool operator<(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator <<	include/CostEstimator/LRUCache.h	/^        friend inline ostream &operator <<( ostream &os, const cache &self ) {$/;"	f	class:lru::cache
operator <<	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^static raw_ostream &operator<<(raw_ostream &OS, const formatBranchInfo &FBI) {$/;"	f	file:
operator <<	test/gtest/fused-src/gtest/gtest-all.cc	/^Message& Message::operator <<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest-all.cc	/^Message& Message::operator <<(const ::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest-all.cc	/^Message& Message::operator <<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest-all.cc	/^Message& Message::operator <<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest-all.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  Message& operator <<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  Message& operator <<(bool b) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  inline Message& operator <<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  inline Message& operator <<(const T& val) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  inline Message& operator <<(const T& value) {$/;"	f	class:testing::Message
operator <<	test/gtest/fused-src/gtest/gtest.h	/^  template <typename T> AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult
operator <<	test/gtest/fused-src/gtest/gtest.h	/^::std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::internal2
operator <<	test/gtest/fused-src/gtest/gtest.h	/^inline std::ostream& operator <<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing
operator <<	test/gtest/include/gtest/gtest-message.h	/^  Message& operator <<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message
operator <<	test/gtest/include/gtest/gtest-message.h	/^  Message& operator <<(bool b) {$/;"	f	class:testing::Message
operator <<	test/gtest/include/gtest/gtest-message.h	/^  inline Message& operator <<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message
operator <<	test/gtest/include/gtest/gtest-message.h	/^  inline Message& operator <<(const T& val) {$/;"	f	class:testing::Message
operator <<	test/gtest/include/gtest/gtest-message.h	/^  inline Message& operator <<(const T& value) {$/;"	f	class:testing::Message
operator <<	test/gtest/include/gtest/gtest-message.h	/^inline std::ostream& operator <<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing
operator <<	test/gtest/include/gtest/gtest-printers.h	/^::std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::internal2
operator <<	test/gtest/include/gtest/gtest.h	/^  template <typename T> AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult
operator <<	test/gtest/src/gtest-test-part.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing
operator <<	test/gtest/src/gtest.cc	/^Message& Message::operator <<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	test/gtest/src/gtest.cc	/^Message& Message::operator <<(const ::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	test/gtest/src/gtest.cc	/^Message& Message::operator <<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	test/gtest/src/gtest.cc	/^Message& Message::operator <<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	test/gtest/test/gtest-printers_test.cc	/^::std::ostream& operator<<(::std::ostream& os,$/;"	f	namespace:foo
operator <<	test/gtest/test/gtest-printers_test.cc	/^inline ::std::ostream& operator<<(::std::ostream& os,$/;"	f	namespace:foo
operator <<	test/gtest/test/gtest-printers_test.cc	/^inline void operator<<(::std::ostream& os, const StreamableInGlobal& \/* x *\/) {$/;"	f
operator <<	test/gtest/test/gtest-printers_test.cc	/^std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::gtest_printers_test
operator <<	test/gtest/test/gtest-printers_test.cc	/^std::ostream& operator<<(std::ostream& os, EnumWithStreaming e) {$/;"	f
operator <<	test/gtest/test/gtest-printers_test.cc	/^void operator<<(::std::ostream& os, const StreamableInGlobal* \/* x *\/) {$/;"	f
operator <<	test/gtest/test/gtest_pred_impl_unittest.cc	/^std::ostream& operator<<(std::ostream& os, const Bool& x) {$/;"	f
operator <<	test/gtest/test/gtest_unittest.cc	/^::std::ostream& operator<<(::std::ostream& os, const Uncopyable& value) {$/;"	f	namespace:__anon14
operator <<	test/gtest/test/gtest_unittest.cc	/^::std::ostream& operator<<(::std::ostream& os,$/;"	f
operator <<	test/gtest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f
operator <<	test/gtest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:__anon17
operator <<	test/gtest/test/gtest_unittest.cc	/^std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:namespace1
operator <=	test/gtest/test/gtest_unittest.cc	/^  bool operator<=(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator =	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator=(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator =	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonBoard HexxagonBoard::operator=(const HexxagonBoard &right)$/;"	f	class:HexxagonBoard
operator =	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator=(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator =	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^HexxagonBoard HexxagonBoard::operator=(const HexxagonBoard &right)$/;"	f	class:HexxagonBoard
operator =	test/gtest/fused-src/gtest/gtest-all.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper
operator =	test/gtest/fused-src/gtest/gtest.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
operator =	test/gtest/fused-src/gtest/gtest.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator
operator =	test/gtest/fused-src/gtest/gtest.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator
operator =	test/gtest/fused-src/gtest/gtest.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	test/gtest/fused-src/gtest/gtest.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	test/gtest/fused-src/gtest/gtest.h	/^  tuple& operator=(const tuple& \/* t *\/) { return *this; }$/;"	f	class:std::tr1::tuple
operator =	test/gtest/fused-src/gtest/gtest.h	/^  tuple& operator=(const tuple& t) { return CopyFrom(t); }$/;"	f	class:std::tr1::tuple
operator =	test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
operator =	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator
operator =	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator
operator =	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple& operator=(const tuple& \/* t *\/) { return *this; }$/;"	f	class:std::tr1::tuple
operator =	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple& operator=(const tuple& t) { return CopyFrom(t); }$/;"	f	class:std::tr1::tuple
operator =	test/gtest/src/gtest.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper
operator =	test/gtest/test/gtest-param-test_test.cc	/^  DogAdder operator=(const DogAdder& other) {$/;"	f	class:DogAdder
operator =	test/gtest/test/gtest-param-test_test.cc	/^  IntWrapper operator=(const IntWrapper& other) {$/;"	f	class:IntWrapper
operator ==	test/gtest/fused-src/gtest/gtest.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:testing::internal::linked_ptr
operator ==	test/gtest/fused-src/gtest/gtest.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray
operator ==	test/gtest/fused-src/gtest/gtest.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator ==	test/gtest/fused-src/gtest/gtest.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator ==	test/gtest/fused-src/gtest/gtest.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator ==	test/gtest/include/gtest/internal/gtest-internal.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray
operator ==	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:testing::internal::linked_ptr
operator ==	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator ==	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator ==	test/gtest/include/gtest/internal/gtest-param-util.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator ==	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator==(const Bool& rhs) const { return value == rhs.value; }$/;"	f	struct:Bool
operator ==	test/gtest/test/gtest_unittest.cc	/^  bool operator==(const Uncopyable& rhs) const {$/;"	f	class:__anon14::Uncopyable
operator ==	test/gtest/test/gtest_unittest.cc	/^  bool operator==(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator >	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool operator>(int n) const { return value > Bool(n).value; }$/;"	f	struct:Bool
operator >	test/gtest/test/gtest_unittest.cc	/^  bool operator>(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator >=	test/gtest/test/gtest_unittest.cc	/^  bool operator>=(const UnprintableChar& rhs) const {$/;"	f	class:__anon16::UnprintableChar
operator Base	test/gtest/test/gtest-port_test.cc	/^  operator Base() const {$/;"	f	class:testing::internal::ConstAndNonConstCastable
operator Base	test/gtest/test/gtest-port_test.cc	/^  operator Base() const {$/;"	f	class:testing::internal::ConstCastable
operator Base	test/gtest/test/gtest-port_test.cc	/^  operator Base() {$/;"	f	class:testing::internal::Castable
operator Base	test/gtest/test/gtest-port_test.cc	/^  operator Base() {$/;"	f	class:testing::internal::ConstAndNonConstCastable
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder10
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder10
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder9
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder9
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7,$/;"	f	class:testing::internal::CartesianProductHolder8
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7,$/;"	f	class:testing::internal::CartesianProductHolder8
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6,$/;"	f	class:testing::internal::CartesianProductHolder7
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6,$/;"	f	class:testing::internal::CartesianProductHolder7
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >() const {$/;"	f	class:testing::internal::CartesianProductHolder6
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5, T6> >() const {$/;"	f	class:testing::internal::CartesianProductHolder6
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >() const {$/;"	f	class:testing::internal::CartesianProductHolder5
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4, T5> >() const {$/;"	f	class:testing::internal::CartesianProductHolder5
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >() const {$/;"	f	class:testing::internal::CartesianProductHolder4
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3, T4> >() const {$/;"	f	class:testing::internal::CartesianProductHolder4
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >() const {$/;"	f	class:testing::internal::CartesianProductHolder3
operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2, T3> >() const {$/;"	f	class:testing::internal::CartesianProductHolder3
operator ParamGenerator< ::std::tr1::tuple<T1, T2> >	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::CartesianProductHolder2
operator ParamGenerator< ::std::tr1::tuple<T1, T2> >	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator< ::std::tr1::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::CartesianProductHolder2
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const { return ValuesIn(&v1_, &v1_ + 1); }$/;"	f	class:testing::internal::ValueArray1
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray10
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray11
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray12
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray13
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray14
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray15
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray16
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray17
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray18
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray19
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray2
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray20
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray21
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray22
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray23
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray24
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray25
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray26
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray27
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray28
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray29
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray3
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray30
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray31
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray32
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray33
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray34
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray35
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray36
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray37
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray38
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray39
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray4
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray40
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray41
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray42
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray43
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray44
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray45
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray46
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray47
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray48
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray49
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray5
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray50
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray6
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray7
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray8
operator ParamGenerator<T>	test/gtest/fused-src/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray9
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const { return ValuesIn(&v1_, &v1_ + 1); }$/;"	f	class:testing::internal::ValueArray1
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray10
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray11
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray12
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray13
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray14
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray15
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray16
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray17
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray18
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray19
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray2
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray20
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray21
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray22
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray23
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray24
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray25
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray26
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray27
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray28
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray29
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray3
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray30
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray31
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray32
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray33
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray34
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray35
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray36
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray37
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray38
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray39
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray4
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray40
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray41
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray42
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray43
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray44
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray45
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray46
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray47
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray48
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray49
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray5
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray50
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray6
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray7
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray8
operator ParamGenerator<T>	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray9
operator []	include/CostEstimator/LRUCache.h	/^      V &operator[]( const K &k ) {$/;"	f	class:lru::cache
operator []	include/CostEstimator/LRUCache.h	/^      const V &operator[]( const K &k ) const {$/;"	f	class:lru::cache
operator ^	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator^(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator ^	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator^(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator bool	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64::operator bool()$/;"	f	class:BitBoard64
operator bool	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64::operator bool()$/;"	f	class:BitBoard64
operator bool	test/gtest/fused-src/gtest/gtest.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	test/gtest/fused-src/gtest/gtest.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
operator bool	test/gtest/include/gtest/gtest.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	test/gtest/include/gtest/internal/gtest-internal.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
operator bool	test/gtest/test/gtest-printers_test.cc	/^  operator bool() const { return false; }$/;"	f	class:testing::gtest_printers_test::AllowsGenericStreamingAndImplicitConversionTemplate
operator delete	test/gtest/samples/sample10_unittest.cc	/^  void operator delete(void* block, size_t \/* allocation_size *\/) {$/;"	f	class:__anon35::Water
operator new	test/gtest/samples/sample10_unittest.cc	/^  void* operator new(size_t allocation_size) {$/;"	f	class:__anon35::Water
operator |	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator|(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator |	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator|(const BitBoard64 &right)$/;"	f	class:BitBoard64
operator ~	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator~(void)$/;"	f	class:BitBoard64
operator ~	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^BitBoard64 BitBoard64::operator~(void)$/;"	f	class:BitBoard64
opnd	experiments/backup/benchmarks/src/aha/aha.h	/^   int opnd[3];                 \/\/ Operands of op.  Register numbers$/;"	m	struct:__anon60
opnd	experiments/benchmarks/src/aha/aha.h	/^   int opnd[3];                 \/\/ Operands of op.  Register numbers$/;"	m	struct:__anon47
opndstart	experiments/backup/benchmarks/src/aha/aha.h	/^   int  opndstart[3];           \/\/ Starting reg no. for each operand.$/;"	m	struct:__anon59
opndstart	experiments/benchmarks/src/aha/aha.h	/^   int  opndstart[3];           \/\/ Starting reg no. for each operand.$/;"	m	struct:__anon46
original_dir_	test/gtest/test/gtest-death-test_test.cc	/^  const FilePath original_dir_;$/;"	m	class:TestForDeathTest	file:
original_reporter_	test/gtest/fused-src/gtest/gtest.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
original_reporter_	test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
original_working_dir	test/gtest/fused-src/gtest/gtest-all.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest
original_working_dir	test/gtest/src/gtest.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest
original_working_dir_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl	file:
original_working_dir_	test/gtest/src/gtest-internal-inl.h	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl
original_working_dir_	test/gtest/test/gtest-options_test.cc	/^  FilePath original_working_dir_;$/;"	m	class:testing::internal::__anon18::XmlOutputChangeDirTest	file:
os_stack_trace_getter	test/gtest/fused-src/gtest/gtest-all.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl
os_stack_trace_getter	test/gtest/src/gtest.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl
os_stack_trace_getter_	test/gtest/fused-src/gtest/gtest-all.cc	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
os_stack_trace_getter_	test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl
outarr	experiments/backup/benchmarks/src/base/fbench.c	/^static char outarr[8][80];	   \/* Computed output of program goes here *\/$/;"	v	file:
outarr	experiments/benchmarks/src/base/fbench.c	/^static char outarr[8][80];	   \/* Computed output of program goes here *\/$/;"	v	file:
outbuf	experiments/backup/benchmarks/src/base/salsa20.c	/^uint32_t outbuf[16];  $/;"	v
outbuf	experiments/benchmarks/src/base/salsa20.c	/^uint32_t outbuf[16];  $/;"	v
outcome	test/gtest/fused-src/gtest/gtest-all.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl
outcome	test/gtest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl
outcome_	test/gtest/fused-src/gtest/gtest-all.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	file:
outcome_	test/gtest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	file:
output	test/gtest/test/gtest_unittest.cc	/^  const char* output;$/;"	m	struct:testing::Flags	file:
output	test/gtest/test/gtest_unittest.cc	/^  string* output() { return &(fake_sock_writer_->output_); }$/;"	f	class:testing::internal::StreamingListenerTest
output_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
output_	test/gtest/src/gtest-internal-inl.h	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver
output_	test/gtest/test/gtest_unittest.cc	/^    string output_;$/;"	m	class:testing::internal::StreamingListenerTest::FakeSocketWriter	file:
output_dir	test/gtest/xcode/Scripts/versiongenerate.py	/^  output_dir = sys.argv[2]$/;"	v
output_file_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	file:
output_file_	test/gtest/src/gtest.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	file:
override	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    bool runOnFunction(Function &F) override;$/;"	m	class:__anon1::CostModelAnalysis	file:
override	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    void getAnalysisUsage(AnalysisUsage &AU) const override;$/;"	m	class:__anon1::CostModelAnalysis	file:
override	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^    void print(raw_ostream &OS, const Module*) const override;$/;"	m	class:__anon1::CostModelAnalysis	file:
ovf_info	include/Profiling/papi.h	/^      PAPI_overflow_option_t ovf_info;$/;"	m	union:__anon7
owner_	test/gtest/fused-src/gtest/gtest.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:std::tr1::MutexBase
owner_	test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:testing::internal::MutexBase
p	experiments/backup/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
p	experiments/backup/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/perlin.c	/^static int p[512];$/;"	v	file:
p	experiments/backup/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/backup/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
p	experiments/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/perlin.c	/^static int p[512];$/;"	v	file:
p	experiments/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p	experiments/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
p1_	test/gtest/test/gtest_unittest.cc	/^  static const char* p1_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
p1_	test/gtest/test/gtest_unittest.cc	/^const char* SingleEvaluationTest::p1_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
p2_	test/gtest/test/gtest_unittest.cc	/^  static const char* p2_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
p2_	test/gtest/test/gtest_unittest.cc	/^const char* SingleEvaluationTest::p2_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
p_a1	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             p_a1;$/;"	m	struct:packet	file:
p_a1	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             p_a1;$/;"	m	struct:packet	file:
p_a2	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    char            p_a2[4];$/;"	m	struct:packet	file:
p_a2	experiments/benchmarks/src/base/richards_benchmark.c	/^    char            p_a2[4];$/;"	m	struct:packet	file:
p_id	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             p_id;$/;"	m	struct:packet	file:
p_id	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             p_id;$/;"	m	struct:packet	file:
p_kind	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             p_kind;$/;"	m	struct:packet	file:
p_kind	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             p_kind;$/;"	m	struct:packet	file:
p_link	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    struct packet  *p_link;$/;"	m	struct:packet	typeref:struct:packet::packet	file:
p_link	experiments/benchmarks/src/base/richards_benchmark.c	/^    struct packet  *p_link;$/;"	m	struct:packet	typeref:struct:packet::packet	file:
packet	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct packet$/;"	s	file:
packet	experiments/benchmarks/src/base/richards_benchmark.c	/^struct packet$/;"	s	file:
papi_i16	include/Profiling/papi.h	307;"	d
papi_i32	include/Profiling/papi.h	306;"	d
papi_i64	include/Profiling/papi.h	305;"	d
papi_ui16	include/Profiling/papi.h	310;"	d
papi_ui32	include/Profiling/papi.h	309;"	d
papi_ui64	include/Profiling/papi.h	308;"	d
param_	test/gtest/fused-src/gtest/gtest.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:std::tr1::ThreadWithParam
param_	test/gtest/include/gtest/internal/gtest-port.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:testing::internal::ThreadWithParam
param_tests_present	test/gtest/test/gtest_filter_unittest.py	/^param_tests_present = None$/;"	v
param_value	test/gtest/test/gtest-param-test_test.cc	/^  static int param_value() { return param_value_; }$/;"	f	class:GeneratorEvaluationTest
param_value_	test/gtest/test/gtest-param-test_test.cc	/^  static int param_value_;$/;"	m	class:GeneratorEvaluationTest	file:
param_value_	test/gtest/test/gtest-param-test_test.cc	/^int GeneratorEvaluationTest::param_value_ = 0;$/;"	m	class:GeneratorEvaluationTest	file:
parameter_	test/gtest/fused-src/gtest/gtest.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory
parameter_	test/gtest/fused-src/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface
parameter_	test/gtest/fused-src/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = NULL;$/;"	m	class:testing::WithParamInterface
parameter_	test/gtest/include/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface
parameter_	test/gtest/include/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = NULL;$/;"	m	class:testing::WithParamInterface
parameter_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory
parameterized_test_registry	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl
parameterized_test_registry	test/gtest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl
parameterized_test_registry_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parameterized_test_registry_	test/gtest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl
parameterized_tests_registered_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parameterized_tests_registered_	test/gtest/src/gtest-internal-inl.h	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl
paraxial	experiments/backup/benchmarks/src/base/fbench.c	/^static short paraxial;$/;"	v	file:
paraxial	experiments/benchmarks/src/base/fbench.c	/^static short paraxial;$/;"	v	file:
parent_	test/gtest/fused-src/gtest/gtest-all.cc	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parent_	test/gtest/src/gtest-internal-inl.h	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl
parent_	test/gtest/test/gtest-death-test_test.cc	/^  MockDeathTestFactory* const parent_;$/;"	m	class:MockDeathTest	file:
parseCords	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^int parseCords(char *str)$/;"	f
parseCords	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^int parseCords(char *str)$/;"	f
partial_regex_	test/gtest/fused-src/gtest/gtest.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:std::tr1::RE
partial_regex_	test/gtest/include/gtest/internal/gtest-port.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:testing::internal::RE
passed	test/gtest/fused-src/gtest/gtest.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult
passed	test/gtest/include/gtest/gtest-test-part.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult
passed_	test/gtest/test/gtest-death-test_test.cc	/^  bool passed_;$/;"	m	class:MockDeathTestFactory	file:
passed_	test/gtest/test/gtest-death-test_test.cc	/^  const bool passed_;$/;"	m	class:MockDeathTest	file:
passed_args_	test/gtest/test/gtest-death-test_test.cc	/^  std::vector<bool> passed_args_;$/;"	m	class:MockDeathTestFactory	file:
pathname_	test/gtest/fused-src/gtest/gtest.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath
pathname_	test/gtest/include/gtest/internal/gtest-filepath.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath
pattern	test/gtest/fused-src/gtest/gtest.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:std::tr1::RE
pattern	test/gtest/include/gtest/internal/gtest-port.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:testing::internal::RE
pattern_	test/gtest/fused-src/gtest/gtest.h	/^  const char* pattern_;$/;"	m	class:std::tr1::RE
pattern_	test/gtest/include/gtest/internal/gtest-port.h	/^  const char* pattern_;$/;"	m	class:testing::internal::RE
pboard	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^void pboard(void)$/;"	f
pboard	experiments/benchmarks/src/base/queens-mcgill.c	/^void pboard(void)$/;"	f
pctr	experiments/backup/benchmarks/src/base/bubblesort.c	/^unsigned int pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/intmm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/oscar.c	/^unsigned int pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/perm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/queens.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/quicksort.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/realmm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/towers.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/backup/benchmarks/src/base/treesort.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/bubblesort.c	/^unsigned int pctr;$/;"	v
pctr	experiments/benchmarks/src/base/intmm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/oscar.c	/^unsigned int pctr;$/;"	v
pctr	experiments/benchmarks/src/base/perm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/puzzle-stanford.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/queens.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/quicksort.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/realmm.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/towers.c	/^unsigned int    pctr;$/;"	v
pctr	experiments/benchmarks/src/base/treesort.c	/^unsigned int    pctr;$/;"	v
pd	experiments/backup/benchmarks/src/sgefa/ge.h	/^  float	*pd[MAXCOL]; 	\/* Array of pointers to the columns of a matrix. *\/$/;"	m	struct:FULL
pd	experiments/benchmarks/src/sgefa/ge.h	/^  float	*pd[MAXCOL]; 	\/* Array of pointers to the columns of a matrix. *\/$/;"	m	struct:FULL
pelem	experiments/backup/benchmarks/src/sgefa/ge.h	42;"	d
pelem	experiments/benchmarks/src/sgefa/ge.h	42;"	d
per_thread_test_part_result_reporter_	test/gtest/fused-src/gtest/gtest-all.cc	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
per_thread_test_part_result_reporter_	test/gtest/src/gtest-internal-inl.h	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl
permarray	experiments/backup/benchmarks/src/base/bubblesort.c	/^int permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/intmm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/oscar.c	/^int permarray[permrange + 1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/perm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/queens.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/quicksort.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/realmm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/towers.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/backup/benchmarks/src/base/treesort.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/bubblesort.c	/^int permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/intmm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/oscar.c	/^int permarray[permrange + 1];$/;"	v
permarray	experiments/benchmarks/src/base/perm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/puzzle-stanford.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/queens.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/quicksort.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/realmm.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/towers.c	/^int    permarray[permrange+1];$/;"	v
permarray	experiments/benchmarks/src/base/treesort.c	/^int    permarray[permrange+1];$/;"	v
permbase	experiments/backup/benchmarks/src/base/bubblesort.c	8;"	d	file:
permbase	experiments/backup/benchmarks/src/base/intmm.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/oscar.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/perm.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/queens.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/quicksort.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/realmm.c	11;"	d	file:
permbase	experiments/backup/benchmarks/src/base/towers.c	9;"	d	file:
permbase	experiments/backup/benchmarks/src/base/treesort.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/bubblesort.c	8;"	d	file:
permbase	experiments/benchmarks/src/base/intmm.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/oscar.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/perm.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/puzzle-stanford.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/queens.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/quicksort.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/realmm.c	11;"	d	file:
permbase	experiments/benchmarks/src/base/towers.c	9;"	d	file:
permbase	experiments/benchmarks/src/base/treesort.c	9;"	d	file:
permrange	experiments/backup/benchmarks/src/base/bubblesort.c	37;"	d	file:
permrange	experiments/backup/benchmarks/src/base/intmm.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/oscar.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/perm.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/puzzle-stanford.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/queens.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/quicksort.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/realmm.c	44;"	d	file:
permrange	experiments/backup/benchmarks/src/base/towers.c	42;"	d	file:
permrange	experiments/backup/benchmarks/src/base/treesort.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/bubblesort.c	37;"	d	file:
permrange	experiments/benchmarks/src/base/intmm.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/oscar.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/perm.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/puzzle-stanford.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/queens.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/quicksort.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/realmm.c	44;"	d	file:
permrange	experiments/benchmarks/src/base/towers.c	42;"	d	file:
permrange	experiments/benchmarks/src/base/treesort.c	42;"	d	file:
permutation	experiments/backup/benchmarks/src/base/perlin.c	/^static int permutation[256] = { 151,160,137,91,90,15,$/;"	v	file:
permutation	experiments/benchmarks/src/base/perlin.c	/^static int permutation[256] = { 151,160,137,91,90,15,$/;"	v	file:
pgm	experiments/backup/benchmarks/src/aha/aha.h	/^} pgm[MAXNUMI];$/;"	v	typeref:struct:__anon60
pgm	experiments/benchmarks/src/aha/aha.h	/^} pgm[MAXNUMI];$/;"	v	typeref:struct:__anon47
pi	experiments/backup/benchmarks/src/base/fbench.c	/^static double pi = pic,$/;"	v	file:
pi	experiments/backup/benchmarks/src/base/n-body.c	13;"	d	file:
pi	experiments/benchmarks/src/base/fbench.c	/^static double pi = pic,$/;"	v	file:
pi	experiments/benchmarks/src/base/n-body.c	13;"	d	file:
pic	experiments/backup/benchmarks/src/base/fbench.c	331;"	d	file:
pic	experiments/benchmarks/src/base/fbench.c	331;"	d	file:
piececount	experiments/backup/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/backup/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
piececount	experiments/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piececount	experiments/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/backup/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/bubblesort.c	/^int piececount[classmax+1], class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/intmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/oscar.c	/^int piececount[classmax + 1], class[typemax + 1], piecemax[typemax + 1];$/;"	v
piecemax	experiments/benchmarks/src/base/perm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/queens.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/quicksort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/realmm.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/towers.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
piecemax	experiments/benchmarks/src/base/treesort.c	/^int	piececount[classmax+1],	class[typemax+1], piecemax[typemax+1];$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-1.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-2.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-3.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-4.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-5.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-6.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-7.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops-8.c	/^double scale,pierr;$/;"	v
pierr	experiments/backup/benchmarks/src/base/flops.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-1.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-2.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-3.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-4.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-5.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-6.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-7.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops-8.c	/^double scale,pierr;$/;"	v
pierr	experiments/benchmarks/src/base/flops.c	/^double scale,pierr;$/;"	v
piover2	experiments/backup/benchmarks/src/base/fbench.c	/^	piover2 = pic \/ 2.0;$/;"	v	file:
piover2	experiments/benchmarks/src/base/fbench.c	/^	piover2 = pic \/ 2.0;$/;"	v	file:
piover4	experiments/backup/benchmarks/src/base/fbench.c	/^	piover4 = pic \/ 4.0,$/;"	v	file:
piover4	experiments/benchmarks/src/base/fbench.c	/^	piover4 = pic \/ 4.0,$/;"	v	file:
piprg	experiments/backup/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/backup/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
piprg	experiments/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/backup/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-1.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-2.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-3.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-4.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-5.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-6.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-7.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops-8.c	/^double four,five,piref,piprg;$/;"	v
piref	experiments/benchmarks/src/base/flops.c	/^double four,five,piref,piprg;$/;"	v
pkt	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct packet *pkt(struct packet *link, int id, int kind)$/;"	f
pkt	experiments/benchmarks/src/base/richards_benchmark.c	/^struct packet *pkt(struct packet *link, int id, int kind)$/;"	f
pl1	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	pl1 = 1,$/;"	e	enum:__anon56
pl1	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	pl1 = 1,$/;"	e	enum:__anon43
pl2	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	pl2,$/;"	e	enum:__anon56
pl2	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	pl2,$/;"	e	enum:__anon43
placement	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
planet	experiments/backup/benchmarks/src/base/n-body.c	/^struct planet {$/;"	s	file:
planet	experiments/benchmarks/src/base/n-body.c	/^struct planet {$/;"	s	file:
pointer	test/gtest/fused-src/gtest/gtest.h	/^    T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
pointer	test/gtest/fused-src/gtest/gtest.h	/^  T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	test/gtest/fused-src/gtest/gtest.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer	test/gtest/fused-src/gtest/gtest.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	test/gtest/fused-src/gtest/gtest.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer	test/gtest/include/gtest/internal/gtest-port.h	/^    T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
pointer	test/gtest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal
pointer	test/gtest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal
pointer	test/gtest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:testing::internal::ThreadLocal
pointer	test/gtest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal
polybench_alloc_data	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void* polybench_alloc_data(int n, int elt_size)$/;"	f
polybench_alloc_data	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void* polybench_alloc_data(int n, int elt_size)$/;"	f
polybench_c_end	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int polybench_c_start, polybench_c_end;$/;"	v
polybench_c_end	experiments/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int polybench_c_start, polybench_c_end;$/;"	v
polybench_c_start	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int polybench_c_start, polybench_c_end;$/;"	v
polybench_c_start	experiments/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int polybench_c_start, polybench_c_end;$/;"	v
polybench_flush_cache	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_flush_cache()$/;"	f
polybench_flush_cache	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_flush_cache()$/;"	f
polybench_flush_cache	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_flush_cache()$/;"	f
polybench_flush_cache	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_flush_cache()$/;"	f
polybench_linux_fifo_scheduler	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_linux_fifo_scheduler()$/;"	f
polybench_linux_fifo_scheduler	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_linux_fifo_scheduler()$/;"	f
polybench_linux_fifo_scheduler	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_linux_fifo_scheduler()$/;"	f
polybench_linux_fifo_scheduler	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_linux_fifo_scheduler()$/;"	f
polybench_linux_standard_scheduler	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_linux_standard_scheduler()$/;"	f
polybench_linux_standard_scheduler	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_linux_standard_scheduler()$/;"	f
polybench_linux_standard_scheduler	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_linux_standard_scheduler()$/;"	f
polybench_linux_standard_scheduler	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_linux_standard_scheduler()$/;"	f
polybench_papi_close	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_close()$/;"	f
polybench_papi_close	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_close()$/;"	f
polybench_papi_counters_threadid	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^int polybench_papi_counters_threadid = POLYBENCH_THREAD_MONITOR;$/;"	v
polybench_papi_counters_threadid	experiments/benchmarks/src/polybench/utilities/polybench.c	/^int polybench_papi_counters_threadid = POLYBENCH_THREAD_MONITOR;$/;"	v
polybench_papi_eventlist	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^  int polybench_papi_eventlist[POLYBENCH_MAX_NB_PAPI_COUNTERS];$/;"	v
polybench_papi_eventlist	experiments/benchmarks/src/polybench/utilities/polybench.c	/^  int polybench_papi_eventlist[POLYBENCH_MAX_NB_PAPI_COUNTERS];$/;"	v
polybench_papi_eventset	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^  int polybench_papi_eventset;$/;"	v
polybench_papi_eventset	experiments/benchmarks/src/polybench/utilities/polybench.c	/^  int polybench_papi_eventset;$/;"	v
polybench_papi_init	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_init()$/;"	f
polybench_papi_init	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_init()$/;"	f
polybench_papi_print	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_print()$/;"	f
polybench_papi_print	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_print()$/;"	f
polybench_papi_start_counter	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^int polybench_papi_start_counter(int evid)$/;"	f
polybench_papi_start_counter	experiments/benchmarks/src/polybench/utilities/polybench.c	/^int polybench_papi_start_counter(int evid)$/;"	f
polybench_papi_stop_counter	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_stop_counter(int evid)$/;"	f
polybench_papi_stop_counter	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_papi_stop_counter(int evid)$/;"	f
polybench_papi_values	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^  long_long polybench_papi_values[POLYBENCH_MAX_NB_PAPI_COUNTERS];$/;"	v
polybench_papi_values	experiments/benchmarks/src/polybench/utilities/polybench.c	/^  long_long polybench_papi_values[POLYBENCH_MAX_NB_PAPI_COUNTERS];$/;"	v
polybench_prepare_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_prepare_instruments()$/;"	f
polybench_prepare_instruments	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_prepare_instruments()$/;"	f
polybench_prevent_dce	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	122;"	d
polybench_prevent_dce	experiments/benchmarks/src/polybench/utilities/polybench.h	122;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	11;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	16;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	19;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	130;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	138;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	155;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	163;"	d
polybench_print_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	166;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	11;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	16;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	19;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	130;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	138;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	155;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	163;"	d
polybench_print_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	166;"	d
polybench_program_total_flops	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_program_total_flops = 0;$/;"	v
polybench_program_total_flops	experiments/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_program_total_flops = 0;$/;"	v
polybench_set_papi_thread_report	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	139;"	d
polybench_set_papi_thread_report	experiments/benchmarks/src/polybench/utilities/polybench.h	139;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	14;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	17;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	9;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	128;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	136;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	141;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	161;"	d
polybench_start_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	164;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	14;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	17;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	9;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	128;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	136;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	141;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	161;"	d
polybench_start_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	164;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	10;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	15;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/instrument.h	18;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	129;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	137;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	150;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	162;"	d
polybench_stop_instruments	experiments/backup/benchmarks/src/polybench/utilities/polybench.h	165;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	10;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	15;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/instrument.h	18;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	129;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	137;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	150;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	162;"	d
polybench_stop_instruments	experiments/benchmarks/src/polybench/utilities/polybench.h	165;"	d
polybench_t_end	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_end	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_end	experiments/benchmarks/src/polybench/utilities/instrument.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_end	experiments/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_start	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_start	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_start	experiments/benchmarks/src/polybench/utilities/instrument.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_t_start	experiments/benchmarks/src/polybench/utilities/polybench.c	/^double polybench_t_start, polybench_t_end;$/;"	v
polybench_timer_print	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_print()$/;"	f
polybench_timer_print	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_print()$/;"	f
polybench_timer_print	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_print()$/;"	f
polybench_timer_print	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_print()$/;"	f
polybench_timer_start	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_start()$/;"	f
polybench_timer_start	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_start()$/;"	f
polybench_timer_start	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_start()$/;"	f
polybench_timer_start	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_start()$/;"	f
polybench_timer_stop	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_stop()$/;"	f
polybench_timer_stop	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_stop()$/;"	f
polybench_timer_stop	experiments/benchmarks/src/polybench/utilities/instrument.c	/^void polybench_timer_stop()$/;"	f
polybench_timer_stop	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void polybench_timer_stop()$/;"	f
pop	experiments/backup/benchmarks/src/aha/aha.h	/^int pop(int xx, int y, int z) {$/;"	f
pop	experiments/benchmarks/src/aha/aha.h	/^int pop(int xx, int y, int z) {$/;"	f
populatePModule	tools/BestO.cpp	/^CostEstimatorOptions& populatePModule(ProfileModule *PModule) {$/;"	f
popupId	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
port_num_	test/gtest/fused-src/gtest/gtest-all.cc	/^    const string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
port_num_	test/gtest/src/gtest-internal-inl.h	/^    const string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter
posix	test/gtest/fused-src/gtest/gtest-all.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
posix	test/gtest/fused-src/gtest/gtest.h	/^namespace posix {$/;"	n	namespace:std::tr1
posix	test/gtest/include/gtest/internal/gtest-port.h	/^namespace posix {$/;"	n	namespace:testing::internal
posix	test/gtest/src/gtest-port.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
post_flag_parse_init_performed_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
post_flag_parse_init_performed_	test/gtest/src/gtest-internal-inl.h	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl
postfix	include/Profiling/papi.h	/^      char postfix[PAPI_MIN_STR_LEN];        \/* string containing postfix operations; only defined for $/;"	m	struct:event_info
pp	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int pp [mm+1] = { 1, 0, 1, 1, 1, 0, 0, 0, 1} ; \/* specify irreducible polynomial coeffts *\/$/;"	v	file:
pp	experiments/benchmarks/src/base/reedsolomon.c	/^static int pp [mm+1] = { 1, 0, 1, 1, 1, 0, 0, 0, 1} ; \/* specify irreducible polynomial coeffts *\/$/;"	v	file:
pr1	test/gtest/test/gtest_unittest.cc	/^  TestPartResult * pr1, * pr2;$/;"	m	class:__anon14::TestResultTest	file:
pr2	test/gtest/test/gtest_unittest.cc	/^  TestPartResult * pr1, * pr2;$/;"	m	class:__anon14::TestResultTest	file:
pr_base	include/Profiling/papi.h	/^      void *pr_base;          \/* buffer base *\/$/;"	m	struct:_papi_sprofil
pr_off	include/Profiling/papi.h	/^      caddr_t pr_off;         \/* pc start address (offset) *\/$/;"	m	struct:_papi_sprofil
pr_scale	include/Profiling/papi.h	/^      unsigned pr_scale;      \/* pc scaling factor: $/;"	m	struct:_papi_sprofil
pr_size	include/Profiling/papi.h	/^      unsigned pr_size;       \/* buffer size *\/$/;"	m	struct:_papi_sprofil
precalc_impl_	test/gtest/samples/sample8_unittest.cc	/^  PreCalculatedPrimeTable* precalc_impl_;$/;"	m	class:HybridPrimeTable	file:
preload	include/Profiling/papi.h	/^      PAPI_preload_info_t preload;$/;"	m	union:__anon7
premature_exit_file_path_	test/gtest/test/gtest_premature_exit_test.cc	/^  const char* premature_exit_file_path_;$/;"	m	class:__anon29::PrematureExitTest	file:
premature_exit_filepath_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* const premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	file:
premature_exit_filepath_	test/gtest/src/gtest.cc	/^  const char* const premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	file:
prev	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::prev()$/;"	f	class:HexxagonGame
prev	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^    GameList *prev;$/;"	m	class:GameList
prev	experiments/backup/benchmarks/src/base/lists.c	/^  struct DLL *prev;   \/* points to prev or tail (if at head) *\/$/;"	m	struct:DLL	typeref:struct:DLL::DLL	file:
prev	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::prev()$/;"	f	class:HexxagonGame
prev	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^    GameList *prev;$/;"	m	class:GameList
prev	experiments/benchmarks/src/base/lists.c	/^  struct DLL *prev;   \/* points to prev or tail (if at head) *\/$/;"	m	struct:DLL	typeref:struct:DLL::DLL	file:
previousX	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
previousY	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
print	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::print()$/;"	f	class:BitBoard64
print	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::print()$/;"	f	class:BitBoard64
print	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^void CostModelAnalysis::print(raw_ostream &OS, const Module*) const {$/;"	f	class:CostModelAnalysis
print	src/ProfileModule/ProfileModule.cpp	/^void ProfileModule::print(const std::string Path) const {$/;"	f	class:ProfileModule
print	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  void print(raw_ostream &OS) const {$/;"	f	struct:formatBranchInfo
print	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::print(StringRef MainFilename, StringRef GCNOFile,$/;"	f	class:FileInfo
printBlockInfo	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printBlockInfo(raw_ostream &OS, const GCOVBlock &Block,$/;"	f	class:FileInfo
printBranchInfo	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printBranchInfo(raw_ostream &OS, const GCOVBlock &Block,$/;"	f	class:FileInfo
printCopy	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^void printCopy()$/;"	f
printCopy	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^void printCopy()$/;"	f
printCoverage	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printCoverage(const GCOVCoverage &Coverage) const {$/;"	f	class:FileInfo
printFileCoverage	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printFileCoverage() const {$/;"	f	class:FileInfo
printFuncCoverage	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printFuncCoverage() const {$/;"	f	class:FileInfo
printFunctionSummary	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printFunctionSummary(raw_ostream &OS,$/;"	f	class:FileInfo
printHelp	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^void printHelp()$/;"	f
printHelp	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^void printHelp()$/;"	f
printNext	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^  void printNext(raw_ostream &OS, uint32_t LineNum) {$/;"	f	class:__anon2::LineConsumer
printUncondBranchInfo	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void FileInfo::printUncondBranchInfo(raw_ostream &OS, uint32_t &EdgeNo,$/;"	f	class:FileInfo
print_array	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void print_array(int m,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void print_array(int m,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void print_array(int ni, int nl,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void print_array(int ni, int nl,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void print_array(int nx,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void print_array(int nx, int ny,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void print_array(int nr, int nq, int np,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void print_array(DATA_TYPE out)$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void print_array(int maxgrid,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/adi/adi.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void print_array(int nx,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void print_array(int cz,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/backup/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void print_array(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/datamining/correlation/correlation.c	/^void print_array(int m,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/datamining/covariance/covariance.c	/^void print_array(int m,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/2mm/2mm.c	/^void print_array(int ni, int nl,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/3mm/3mm.c	/^void print_array(int ni, int nl,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/atax/atax.c	/^void print_array(int nx,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/bicg/bicg.c	/^void print_array(int nx, int ny,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/cholesky/cholesky.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/doitgen/doitgen.c	/^void print_array(int nr, int nq, int np,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemm/gemm.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gemver/gemver.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/gesummv/gesummv.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/mvt/mvt.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/symm/symm.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/syr2k/syr2k.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/syrk/syrk.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/trisolv/trisolv.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/kernels/trmm/trmm.c	/^void print_array(int ni,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/durbin/durbin.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/dynprog/dynprog.c	/^void print_array(DATA_TYPE out)$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/gramschmidt/gramschmidt.c	/^void print_array(int ni, int nj,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/lu/lu.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/linear-algebra/solvers/ludcmp/ludcmp.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/medley/floyd-warshall/floyd-warshall.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/medley/reg_detect/reg_detect.c	/^void print_array(int maxgrid,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/adi/adi.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/fdtd-2d/fdtd-2d.c	/^void print_array(int nx,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/fdtd-apml/fdtd-apml.c	/^void print_array(int cz,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/jacobi-1d-imper/jacobi-1d-imper.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/jacobi-2d-imper/jacobi-2d-imper.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/stencils/seidel-2d/seidel-2d.c	/^void print_array(int n,$/;"	f	file:
print_array	experiments/benchmarks/src/polybench/utilities/template-for-new-benchmark.c	/^void print_array(int n, DATA_TYPE POLYBENCH_2D(C,N,N))$/;"	f	file:
print_banner	experiments/backup/benchmarks/src/SciMark2-C/scimark2.c	/^void print_banner()$/;"	f
print_banner	experiments/benchmarks/src/SciMark2-C/scimark2.c	/^void print_banner()$/;"	f
print_expr	experiments/backup/benchmarks/src/aha/aha.c	/^print_expr(int opn)$/;"	f
print_expr	experiments/benchmarks/src/aha/aha.c	/^print_expr(int opn)$/;"	f
print_pgm	experiments/backup/benchmarks/src/aha/aha.c	/^print_pgm()$/;"	f
print_pgm	experiments/benchmarks/src/aha/aha.c	/^print_pgm()$/;"	f
print_results	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^void print_results() {$/;"	f
print_time	test/gtest/test/gtest_unittest.cc	/^  bool print_time;$/;"	m	struct:testing::Flags	file:
print_time_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
print_time_	test/gtest/src/gtest-internal-inl.h	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver
printing	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int printing = 1;		\/* TRUE if printing positions *\/$/;"	v
printing	experiments/benchmarks/src/base/queens-mcgill.c	/^int printing = 1;		\/* TRUE if printing positions *\/$/;"	v
proc	experiments/backup/benchmarks/src/aha/aha.h	/^   int  (*proc)(int, int, int); \/\/ Procedure for simulating the op.$/;"	m	struct:__anon59
proc	experiments/benchmarks/src/aha/aha.h	/^   int  (*proc)(int, int, int); \/\/ Procedure for simulating the op.$/;"	m	struct:__anon46
proc_system_time	experiments/backup/benchmarks/src/base/flops.c	/^       int proc_system_time;$/;"	m	struct:tbuffer_t	file:
proc_system_time	experiments/benchmarks/src/base/flops.c	/^       int proc_system_time;$/;"	m	struct:tbuffer_t	file:
proc_user_time	experiments/backup/benchmarks/src/base/flops.c	/^       int proc_user_time;$/;"	m	struct:tbuffer_t	file:
proc_user_time	experiments/benchmarks/src/base/flops.c	/^       int proc_user_time;$/;"	m	struct:tbuffer_t	file:
progname	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^char *progname = NULL;		\/* The name of this program *\/$/;"	v
progname	experiments/benchmarks/src/base/queens-mcgill.c	/^char *progname = NULL;		\/* The name of this program *\/$/;"	v
proto2	test/gtest/fused-src/gtest/gtest.h	/^namespace proto2 { class Message; }$/;"	n
proto2	test/gtest/include/gtest/internal/gtest-internal.h	/^namespace proto2 { class Message; }$/;"	n
prototypes	test/gtest/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psum	experiments/backup/benchmarks/src/base/partialsums.c	60;"	d	file:
psum	experiments/benchmarks/src/base/partialsums.c	60;"	d	file:
pthread_flag	test/gtest/test/gtest-death-test_test.cc	/^bool pthread_flag;$/;"	m	namespace:__anon32	file:
ptr	experiments/backup/benchmarks/src/base/salsa20.c	/^uint32_t ptr=0;$/;"	v
ptr	experiments/benchmarks/src/base/salsa20.c	/^uint32_t ptr=0;$/;"	v
ptr_	test/gtest/fused-src/gtest/gtest.h	/^  T* ptr_;$/;"	m	struct:std::tr1::tuple_element
ptr_	test/gtest/include/gtest/internal/gtest-port.h	/^  T* ptr_;$/;"	m	class:testing::internal::scoped_ptr
pub-methods	docs/html/classAnalysisMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classBBDescriptor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classBBHash.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classDatabaseManager.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classFrequencyMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classHashMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classHashWeightedMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classInstructionCostMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classInstructionMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classInstructionPlusHashMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classProfMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classProfileModule.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/classRandomMethod.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	docs/html/structstd_1_1hash_3_01BBHash_01_4.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-methods	docs/html/classBBDescriptor.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/html/classBBHash.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	docs/html/classGEOS.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-types	docs/html/classDatabaseManager.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
putdata	experiments/backup/benchmarks/src/base/oourafft.c	/^void putdata(int nini, int nend, double *a)$/;"	f
putdata	experiments/benchmarks/src/base/oourafft.c	/^void putdata(int nini, int nend, double *a)$/;"	f
puzzl	experiments/backup/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/backup/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/bubblesort.c	/^int puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/intmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/oscar.c	/^int puzzl[size + 1], p[typemax + 1][size + 1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/perm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/queens.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/quicksort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/realmm.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/towers.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzl	experiments/benchmarks/src/base/treesort.c	/^int	puzzl[size+1], p[typemax+1][size+1], n, kount;$/;"	v
puzzlebase	experiments/backup/benchmarks/src/base/bubblesort.c	16;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/intmm.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/oscar.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/perm.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/queens.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/quicksort.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/realmm.c	19;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/towers.c	17;"	d	file:
puzzlebase	experiments/backup/benchmarks/src/base/treesort.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/bubblesort.c	16;"	d	file:
puzzlebase	experiments/benchmarks/src/base/intmm.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/oscar.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/perm.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/puzzle-stanford.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/queens.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/quicksort.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/realmm.c	19;"	d	file:
puzzlebase	experiments/benchmarks/src/base/towers.c	17;"	d	file:
puzzlebase	experiments/benchmarks/src/base/treesort.c	17;"	d	file:
q	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	f	function:function
q0_	test/gtest/samples/sample3_unittest.cc	/^  Queue<int> q0_;$/;"	m	class:QueueTest	file:
q0_	test/gtest/samples/sample5_unittest.cc	/^  Queue<int> q0_;$/;"	m	class:QueueTest	file:
q1_	test/gtest/samples/sample3_unittest.cc	/^  Queue<int> q1_;$/;"	m	class:QueueTest	file:
q1_	test/gtest/samples/sample5_unittest.cc	/^  Queue<int> q1_;$/;"	m	class:QueueTest	file:
q2_	test/gtest/samples/sample3_unittest.cc	/^  Queue<int> q2_;$/;"	m	class:QueueTest	file:
q2_	test/gtest/samples/sample5_unittest.cc	/^  Queue<int> q2_;$/;"	m	class:QueueTest	file:
qpkt	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *qpkt(struct packet *pkt)$/;"	f
qpkt	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *qpkt(struct packet *pkt)$/;"	f
qpktcount	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^int     qpktcount    =  0;$/;"	v
qpktcount	experiments/benchmarks/src/base/richards_benchmark.c	/^int     qpktcount    =  0;$/;"	v
queen	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int queen[MAXRANKS];		\/* File on which each queen is located *\/$/;"	v
queen	experiments/benchmarks/src/base/queens-mcgill.c	/^int queen[MAXRANKS];		\/* File on which each queen is located *\/$/;"	v
queens	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int queens;			\/* Number of queens to place *\/$/;"	v
queens	experiments/benchmarks/src/base/queens-mcgill.c	/^int queens;			\/* Number of queens to place *\/$/;"	v
queensbase	experiments/backup/benchmarks/src/base/bubblesort.c	9;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/intmm.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/oscar.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/perm.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/queens.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/quicksort.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/realmm.c	12;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/towers.c	10;"	d	file:
queensbase	experiments/backup/benchmarks/src/base/treesort.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/bubblesort.c	9;"	d	file:
queensbase	experiments/benchmarks/src/base/intmm.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/oscar.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/perm.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/puzzle-stanford.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/queens.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/quicksort.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/realmm.c	12;"	d	file:
queensbase	experiments/benchmarks/src/base/towers.c	10;"	d	file:
queensbase	experiments/benchmarks/src/base/treesort.c	10;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/bubblesort.c	11;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/intmm.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/oscar.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/perm.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/queens.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/quicksort.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/realmm.c	14;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/towers.c	12;"	d	file:
quickbase	experiments/backup/benchmarks/src/base/treesort.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/bubblesort.c	11;"	d	file:
quickbase	experiments/benchmarks/src/base/intmm.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/oscar.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/perm.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/puzzle-stanford.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/queens.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/quicksort.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/realmm.c	14;"	d	file:
quickbase	experiments/benchmarks/src/base/towers.c	12;"	d	file:
quickbase	experiments/benchmarks/src/base/treesort.c	12;"	d	file:
r	experiments/backup/benchmarks/src/aha/aha.h	/^int r[NIM + NSHIM + NARGS + MAXNUMI] = {IMMEDS, SHIMMEDS};$/;"	v
r	experiments/benchmarks/src/aha/aha.h	/^int r[NIM + NSHIM + NARGS + MAXNUMI] = {IMMEDS, SHIMMEDS};$/;"	v
r0	test/gtest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anon14::TestResultTest	file:
r1	test/gtest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anon14::TestResultTest	file:
r1_	test/gtest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anon13::TestPartResultTest	file:
r1_	test/gtest/test/gtest-test-part_test.cc	/^  const TestPartResult r1_, r2_;$/;"	m	class:__anon13::TestPartResultArrayTest	file:
r1mach	experiments/backup/benchmarks/src/sgefa/blas.c	/^double r1mach()$/;"	f
r1mach	experiments/benchmarks/src/sgefa/blas.c	/^double r1mach()$/;"	f
r2	test/gtest/test/gtest_unittest.cc	/^  TestResult * r0, * r1, * r2;$/;"	m	class:__anon14::TestResultTest	file:
r2_	test/gtest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anon13::TestPartResultTest	file:
r2_	test/gtest/test/gtest-test-part_test.cc	/^  const TestPartResult r1_, r2_;$/;"	m	class:__anon13::TestPartResultArrayTest	file:
r3_	test/gtest/test/gtest-test-part_test.cc	/^  TestPartResult r1_, r2_, r3_;$/;"	m	class:__anon13::TestPartResultTest	file:
rInitmatrix	experiments/backup/benchmarks/src/base/realmm.c	/^void rInitmatrix ( float m[rowsize+1][rowsize+1] ) {$/;"	f
rInitmatrix	experiments/benchmarks/src/base/realmm.c	/^void rInitmatrix ( float m[rowsize+1][rowsize+1] ) {$/;"	f
rInnerproduct	experiments/backup/benchmarks/src/base/realmm.c	/^void rInnerproduct(float *result, float a[rowsize+1][rowsize+1], float b[rowsize+1][rowsize+1], int row, int column) {$/;"	f
rInnerproduct	experiments/benchmarks/src/base/realmm.c	/^void rInnerproduct(float *result, float a[rowsize+1][rowsize+1], float b[rowsize+1][rowsize+1], int row, int column) {$/;"	f
radius_of_curvature	experiments/backup/benchmarks/src/base/fbench.c	/^static double radius_of_curvature;$/;"	v	file:
radius_of_curvature	experiments/benchmarks/src/base/fbench.c	/^static double radius_of_curvature;$/;"	v	file:
rand	experiments/backup/benchmarks/src/base/puzzle.c	/^int rand( void ) {$/;"	f
rand	experiments/benchmarks/src/base/puzzle.c	/^int rand( void ) {$/;"	f
randInt	experiments/backup/benchmarks/src/base/puzzle.c	/^int randInt(int min, int max) {$/;"	f
randInt	experiments/benchmarks/src/base/puzzle.c	/^int randInt(int min, int max) {$/;"	f
random	experiments/backup/benchmarks/src/base/reedsolomon.c	427;"	d	file:
random	experiments/benchmarks/src/base/reedsolomon.c	427;"	d	file:
random	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl
random	test/gtest/src/gtest-internal-inl.h	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl
random4	experiments/backup/benchmarks/src/base/huffbench.c	/^static size_t random4()$/;"	f	file:
random4	experiments/benchmarks/src/base/huffbench.c	/^static size_t random4()$/;"	f	file:
random_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_	test/gtest/src/gtest-internal-inl.h	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl
random_	test/gtest/test/gtest-port_test.cc	/^  Random       random_;$/;"	m	class:testing::internal::AtomicCounterWithMutex	file:
random_	test/gtest/test/gtest_unittest.cc	/^  testing::internal::Random random_;$/;"	m	class:__anon14::VectorShuffleTest	file:
random_double	experiments/backup/benchmarks/src/base/lpbench.c	/^static double random_double()$/;"	f	file:
random_double	experiments/benchmarks/src/base/lpbench.c	/^static double random_double()$/;"	f	file:
random_seed	test/gtest/fused-src/gtest/gtest-all.cc	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl
random_seed	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest
random_seed	test/gtest/src/gtest-internal-inl.h	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl
random_seed	test/gtest/src/gtest.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest
random_seed	test/gtest/test/gtest_unittest.cc	/^  Int32 random_seed;$/;"	m	struct:testing::Flags	file:
random_seed_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_seed_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Int32 random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
random_seed_	test/gtest/src/gtest-internal-inl.h	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl
random_seed_	test/gtest/src/gtest-internal-inl.h	/^  internal::Int32 random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver
ranks	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^int ranks;			\/* Number of ranks (rows) *\/$/;"	v
ranks	experiments/benchmarks/src/base/queens-mcgill.c	/^int ranks;			\/* Number of ranks (rows) *\/$/;"	v
ray_height	experiments/backup/benchmarks/src/base/fbench.c	/^static double ray_height;$/;"	v	file:
ray_height	experiments/benchmarks/src/base/fbench.c	/^static double ray_height;$/;"	v	file:
rd	experiments/backup/benchmarks/src/sgefa/ge.h	/^  int	rd;		\/* Row Dimension of the matrix. *\/$/;"	m	struct:FULL
rd	experiments/benchmarks/src/sgefa/ge.h	/^  int	rd;		\/* Row Dimension of the matrix. *\/$/;"	m	struct:FULL
rdtsc	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int rdtsc()$/;"	f	file:
rdtsc	experiments/benchmarks/src/polybench/utilities/polybench.c	/^unsigned long long int rdtsc()$/;"	f	file:
readArcTag	include/Profiling/GCOV.h	/^  bool readArcTag() {$/;"	f	class:llvm::GCOVBuffer
readBlockTag	include/Profiling/GCOV.h	/^  bool readBlockTag() {$/;"	f	class:llvm::GCOVBuffer
readEdgeTag	include/Profiling/GCOV.h	/^  bool readEdgeTag() {$/;"	f	class:llvm::GCOVBuffer
readFromFile	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::readFromFile(FILE *file)$/;"	f	class:BitBoard64
readFromFile	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::readFromFile(FILE *file)$/;"	f	class:HexxagonBoard
readFromFile	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::readFromFile(FILE *file)$/;"	f	class:BitBoard64
readFromFile	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::readFromFile(FILE *file)$/;"	f	class:HexxagonBoard
readFunctionTag	include/Profiling/GCOV.h	/^  bool readFunctionTag() {$/;"	f	class:llvm::GCOVBuffer
readFunctions	src/Profiling/ExecutionFrequency/GCOV/GCOVReader.cpp	/^std::vector<GCOVFunction*> readFunctions(GCOVFile& GF, GCOVBuffer &GCNOBuffer, $/;"	f
readGCDA	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^bool GCOVFile::readGCDA(GCOVBuffer &Buffer) {$/;"	f	class:GCOVFile
readGCDA	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^bool GCOVFunction::readGCDA(GCOVBuffer &Buff, GCOV::GCOVVersion Version) {$/;"	f	class:GCOVFunction
readGCDAFormat	include/Profiling/GCOV.h	/^  bool readGCDAFormat() {$/;"	f	class:llvm::GCOVBuffer
readGCNO	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^bool GCOVFile::readGCNO(GCOVBuffer &Buffer) {$/;"	f	class:GCOVFile
readGCNO	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^bool GCOVFunction::readGCNO(GCOVBuffer &Buff, GCOV::GCOVVersion Version) {$/;"	f	class:GCOVFunction
readGCNOFormat	include/Profiling/GCOV.h	/^  bool readGCNOFormat() {$/;"	f	class:llvm::GCOVBuffer
readGCOVVersion	include/Profiling/GCOV.h	/^  bool readGCOVVersion(GCOV::GCOVVersion &Version) {$/;"	f	class:llvm::GCOVBuffer
readInt	include/Profiling/GCOV.h	/^  bool readInt(uint32_t &Val) {$/;"	f	class:llvm::GCOVBuffer
readInt64	include/Profiling/GCOV.h	/^  bool readInt64(uint64_t &Val) {$/;"	f	class:llvm::GCOVBuffer
readLineTag	include/Profiling/GCOV.h	/^  bool readLineTag() {$/;"	f	class:llvm::GCOVBuffer
readObjectTag	include/Profiling/GCOV.h	/^  bool readObjectTag() {$/;"	f	class:llvm::GCOVBuffer
readProgramTag	include/Profiling/GCOV.h	/^  bool readProgramTag() {$/;"	f	class:llvm::GCOVBuffer
readString	include/Profiling/GCOV.h	/^  bool readString(StringRef &Str) {$/;"	f	class:llvm::GCOVBuffer
read_fd	test/gtest/fused-src/gtest/gtest-all.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
read_fd	test/gtest/src/gtest-death-test.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
read_fd_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
read_fd_	test/gtest/src/gtest-death-test.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
recd	experiments/backup/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
recd	experiments/benchmarks/src/base/reedsolomon.c	/^static int recd [nn], data [kk], bb [nn-kk] ;$/;"	v	file:
record_property_env	test/gtest/test/gtest_unittest.cc	/^static Environment* record_property_env =$/;"	m	namespace:__anon14	file:
refarr	experiments/backup/benchmarks/src/base/fbench.c	/^static char *refarr[] = {	   \/* Reference results.  These happen to$/;"	v	file:
refarr	experiments/benchmarks/src/base/fbench.c	/^static char *refarr[] = {	   \/* Reference results.  These happen to$/;"	v	file:
reference	test/gtest/fused-src/gtest/gtest.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator
reference	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator
reg_len	experiments/backup/benchmarks/src/base/misr.c	/^int reg_len;$/;"	v
reg_len	experiments/benchmarks/src/base/misr.c	/^int reg_len;$/;"	v
regex	test/gtest/fused-src/gtest/gtest-all.cc	/^  const RE* regex() const { return regex_; }$/;"	f	class:testing::internal::DeathTestImpl
regex	test/gtest/src/gtest-death-test.cc	/^  const RE* regex() const { return regex_; }$/;"	f	class:testing::internal::DeathTestImpl
regex_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const RE* const regex_;$/;"	m	class:testing::internal::DeathTestImpl	file:
regex_	test/gtest/src/gtest-death-test.cc	/^  const RE* const regex_;$/;"	m	class:testing::internal::DeathTestImpl	file:
registered_	test/gtest/fused-src/gtest/gtest.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestCasePState
registered_	test/gtest/include/gtest/internal/gtest-internal.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestCasePState
relation_to_source_	test/gtest/fused-src/gtest/gtest.h	/^  RelationToSource relation_to_source_;$/;"	m	class:testing::internal::NativeArray
relation_to_source_	test/gtest/include/gtest/internal/gtest-internal.h	/^  RelationToSource relation_to_source_;$/;"	m	class:testing::internal::NativeArray
release	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *release(int id)$/;"	f
release	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *release(int id)$/;"	f
release	test/gtest/fused-src/gtest/gtest.h	/^  T* release() {$/;"	f	struct:std::tr1::tuple_element
release	test/gtest/include/gtest/internal/gtest-port.h	/^  T* release() {$/;"	f	class:testing::internal::scoped_ptr
releaseMemory	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^void MachineFunctionAnalysis::releaseMemory() {$/;"	f	class:MachineFunctionAnalysis
remove	test/gtest/test/gtest-filepath_test.cc	/^int remove(const char* path) {$/;"	f	namespace:testing::internal::__anon22
removed	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.h	/^	removed$/;"	e	enum:__anon56
removed	experiments/benchmarks/src/.hexxagon/hexxagonboard.h	/^	removed$/;"	e	enum:__anon43
repairFunctionProfiling	src/ProfileModule/ProfileModule.cpp	/^void ProfileModule::repairFunctionProfiling(Function *Func) {$/;"	f	class:ProfileModule
repairProfiling	src/ProfileModule/ProfileModule.cpp	/^void ProfileModule::repairProfiling() {$/;"	f	class:ProfileModule
repeat	test/gtest/test/gtest_unittest.cc	/^  Int32 repeat;$/;"	m	struct:testing::Flags	file:
repeat_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Int32 repeat_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
repeat_	test/gtest/src/gtest-internal-inl.h	/^  internal::Int32 repeat_;$/;"	m	class:testing::internal::GTestFlagSaver
repeater	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners
repeater	test/gtest/src/gtest.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners
repeater_	test/gtest/fused-src/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners
repeater_	test/gtest/include/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners
replacer_	test/gtest/test/gtest-death-test_test.cc	/^  static testing::internal::ReplaceDeathTestFactory* replacer_;$/;"	m	class:MacroLogicDeathTest	file:
replacer_	test/gtest/test/gtest-death-test_test.cc	/^testing::internal::ReplaceDeathTestFactory* MacroLogicDeathTest::replacer_$/;"	m	class:MacroLogicDeathTest	file:
reportable_disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::reportable_disabled_test_count() const {$/;"	f	class:testing::TestCase
reportable_disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest
reportable_disabled_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reportable_disabled_test_count	test/gtest/src/gtest.cc	/^int TestCase::reportable_disabled_test_count() const {$/;"	f	class:testing::TestCase
reportable_disabled_test_count	test/gtest/src/gtest.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest
reportable_disabled_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reportable_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::reportable_test_count() const {$/;"	f	class:testing::TestCase
reportable_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest
reportable_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reportable_test_count	test/gtest/src/gtest.cc	/^int TestCase::reportable_test_count() const {$/;"	f	class:testing::TestCase
reportable_test_count	test/gtest/src/gtest.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest
reportable_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reset	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^void HexxagonGame::reset()$/;"	f	class:HexxagonGame
reset	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^void HexxagonGame::reset()$/;"	f	class:HexxagonGame
reset	test/gtest/fused-src/gtest/gtest.h	/^  void reset(T* p = NULL) {$/;"	f	struct:std::tr1::tuple_element
reset	test/gtest/fused-src/gtest/gtest.h	/^  void reset(T* ptr = NULL) {$/;"	f	class:testing::internal::linked_ptr
reset	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  void reset(T* ptr = NULL) {$/;"	f	class:testing::internal::linked_ptr
reset	test/gtest/include/gtest/internal/gtest-port.h	/^  void reset(T* p = NULL) {$/;"	f	class:testing::internal::scoped_ptr
resize	include/CostEstimator/LRUCache.h	/^      void resize( size_t nth ) {$/;"	f	class:lru::cache
result	test/gtest/fused-src/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo
result	test/gtest/include/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo
result_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
result_	test/gtest/fused-src/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo
result_	test/gtest/include/gtest/gtest-spi.h	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter
result_	test/gtest/include/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo
results_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
results_	test/gtest/include/gtest/gtest-spi.h	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker
rev	experiments/backup/benchmarks/src/aha/aha.h	/^int rev(int xi, int y, int z) {$/;"	f
rev	experiments/benchmarks/src/aha/aha.h	/^int rev(int xi, int y, int z) {$/;"	f
revision	include/Profiling/papi.h	/^      float revision;               \/* Revision of CPU *\/$/;"	m	struct:_papi_hw_info
right	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:p
right	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  double right;                         \/* = 1.0; *\/$/;"	m	struct:__anon58
right	experiments/backup/benchmarks/src/base/bubblesort.c	/^  struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/intmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/oscar.c	/^  struct node *left, *right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/perm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/queens.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/quicksort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/realmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/towers.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/backup/benchmarks/src/base/treesort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/SciMark2-C/Random.h	/^  double right;                         \/* = 1.0; *\/$/;"	m	struct:__anon45
right	experiments/benchmarks/src/base/bubblesort.c	/^  struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/intmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/oscar.c	/^  struct node *left, *right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/perm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/puzzle-stanford.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/queens.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/quicksort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/realmm.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/towers.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
right	experiments/benchmarks/src/base/treesort.c	/^	struct node *left,*right;$/;"	m	struct:node	typeref:struct:node::	file:
rma	experiments/backup/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/oscar.c	/^float rma[rowsize + 1][rowsize + 1], rmb[rowsize + 1][rowsize + 1],$/;"	v
rma	experiments/backup/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/backup/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/oscar.c	/^float rma[rowsize + 1][rowsize + 1], rmb[rowsize + 1][rowsize + 1],$/;"	v
rma	experiments/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rma	experiments/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/oscar.c	/^float rma[rowsize + 1][rowsize + 1], rmb[rowsize + 1][rowsize + 1],$/;"	v
rmb	experiments/backup/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/backup/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/oscar.c	/^float rma[rowsize + 1][rowsize + 1], rmb[rowsize + 1][rowsize + 1],$/;"	v
rmb	experiments/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmb	experiments/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/oscar.c	/^  rmr[rowsize + 1][rowsize + 1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/backup/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/bubblesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/intmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/oscar.c	/^  rmr[rowsize + 1][rowsize + 1];$/;"	v
rmr	experiments/benchmarks/src/base/perm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/puzzle-stanford.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/queens.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/quicksort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/realmm.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/towers.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
rmr	experiments/benchmarks/src/base/treesort.c	/^float rma[rowsize+1][rowsize+1], rmb[rowsize+1][rowsize+1], rmr[rowsize+1][rowsize+1];$/;"	v
role_	test/gtest/test/gtest-death-test_test.cc	/^  DeathTest::TestRole role_;$/;"	m	class:MockDeathTestFactory	file:
role_	test/gtest/test/gtest-death-test_test.cc	/^  const TestRole role_;$/;"	m	class:MockDeathTest	file:
rotl	experiments/backup/benchmarks/src/aha/aha.h	/^int rotl(int x, int y, int z) {int s = y & NBSM;$/;"	f
rotl	experiments/benchmarks/src/aha/aha.h	/^int rotl(int x, int y, int z) {int s = y & NBSM;$/;"	f
rowsize	experiments/backup/benchmarks/src/base/bubblesort.c	22;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/intmm.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/oscar.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/perm.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/puzzle-stanford.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/queens.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/quicksort.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/realmm.c	26;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/towers.c	24;"	d	file:
rowsize	experiments/backup/benchmarks/src/base/treesort.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/bubblesort.c	22;"	d	file:
rowsize	experiments/benchmarks/src/base/intmm.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/oscar.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/perm.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/puzzle-stanford.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/queens.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/quicksort.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/realmm.c	26;"	d	file:
rowsize	experiments/benchmarks/src/base/towers.c	24;"	d	file:
rowsize	experiments/benchmarks/src/base/treesort.c	24;"	d	file:
rp	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/oscar.c	/^  float rp, ip;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/backup/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/bubblesort.c	/^struct complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/intmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/oscar.c	/^  float rp, ip;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/perm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/queens.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/quicksort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/realmm.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/towers.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rp	experiments/benchmarks/src/base/treesort.c	/^struct    complex { float rp, ip; } ;$/;"	m	struct:complex	file:
rsdec_204	experiments/backup/benchmarks/src/base/reedsolomon.c	/^void rsdec_204(unsigned char* data_out, unsigned char* data_in)$/;"	f
rsdec_204	experiments/benchmarks/src/base/reedsolomon.c	/^void rsdec_204(unsigned char* data_out, unsigned char* data_in)$/;"	f
rsenc_204	experiments/backup/benchmarks/src/base/reedsolomon.c	/^void rsenc_204(unsigned char* data_out, unsigned char* data_in)$/;"	f
rsenc_204	experiments/benchmarks/src/base/reedsolomon.c	/^void rsenc_204(unsigned char* data_out, unsigned char* data_in)$/;"	f
rtclock	experiments/backup/benchmarks/src/polybench/utilities/instrument.c	/^double rtclock()$/;"	f	file:
rtclock	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^double rtclock()$/;"	f	file:
rtclock	experiments/benchmarks/src/polybench/utilities/instrument.c	/^double rtclock()$/;"	f	file:
rtclock	experiments/benchmarks/src/polybench/utilities/polybench.c	/^double rtclock()$/;"	f	file:
runOnFunction	src/CostEstimator/CostAnalysis/Cache/CacheAnalysis.cpp	/^  virtual bool runOnFunction(Function &F) {$/;"	f	struct:MachineAST
runOnFunction	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^bool MachineFunctionAnalysis::runOnFunction(Function &F) {$/;"	f	class:MachineFunctionAnalysis
runOnFunction	src/CostEstimator/CostAnalysis/Instruction/TTI/CostModel.cpp	/^CostModelAnalysis::runOnFunction(Function &F) {$/;"	f	class:CostModelAnalysis
runOnFunction	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^  bool runOnFunction(Function &F) {$/;"	f	struct:StaticProfiling
running	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.h	/^    int running;        \/* boolean *\/$/;"	m	struct:__anon57
running	experiments/benchmarks/src/SciMark2-C/Stopwatch.h	/^    int running;        \/* boolean *\/$/;"	m	struct:__anon44
rusage	experiments/backup/benchmarks/src/base/flops.c	/^struct rusage rusage;$/;"	v	typeref:struct:rusage
rusage	experiments/backup/benchmarks/src/base/flops.c	/^struct tmsu rusage;$/;"	v	typeref:struct:tmsu
rusage	experiments/benchmarks/src/base/flops.c	/^struct rusage rusage;$/;"	v	typeref:struct:rusage
rusage	experiments/benchmarks/src/base/flops.c	/^struct tmsu rusage;$/;"	v	typeref:struct:tmsu
s	experiments/backup/benchmarks/src/base/fbench.c	/^static double s[max_surfaces][5];$/;"	v	file:
s	experiments/benchmarks/src/base/fbench.c	/^static double s[max_surfaces][5];$/;"	v	file:
s1_	test/gtest/test/gtest_unittest.cc	/^  static const char* const s1_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
s1_	test/gtest/test/gtest_unittest.cc	/^const char* const SingleEvaluationTest::s1_ = "01234";$/;"	m	class:__anon14::SingleEvaluationTest	file:
s2_	test/gtest/test/gtest_unittest.cc	/^  static const char* const s2_;$/;"	m	class:__anon14::SingleEvaluationTest	file:
s2_	test/gtest/test/gtest_unittest.cc	/^const char* const SingleEvaluationTest::s2_ = "abcde";$/;"	m	class:__anon14::SingleEvaluationTest	file:
sa	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sa	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
safeDiv	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^static uint32_t safeDiv(uint64_t Numerator, uint64_t Divisor) {$/;"	f	file:
salsa	experiments/backup/benchmarks/src/base/salsa20.c	/^uint32_t salsa(void) {$/;"	f
salsa	experiments/benchmarks/src/base/salsa20.c	/^uint32_t salsa(void) {$/;"	f
salsa20	experiments/backup/benchmarks/src/base/salsa20.c	/^void salsa20(uint32_t out[16],uint32_t in[16]) {$/;"	f
salsa20	experiments/benchmarks/src/base/salsa20.c	/^void salsa20(uint32_t out[16],uint32_t in[16]) {$/;"	f
saveGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::saveGame(char *filename)$/;"	f	class:HexxagonGame
saveGame	experiments/benchmarks/src/.hexxagon/hexxagongame.cpp	/^int HexxagonGame::saveGame(char *filename)$/;"	f	class:HexxagonGame
saved_tz_	test/gtest/test/gtest_unittest.cc	/^  const char* saved_tz_;$/;"	m	class:__anon14::FormatEpochTimeInMillisAsIso8601Test	file:
saver_	test/gtest/test/gtest_unittest.cc	/^  static GTestFlagSaver* saver_;$/;"	m	class:__anon14::GTestFlagSaverTest	file:
saver_	test/gtest/test/gtest_unittest.cc	/^GTestFlagSaver* GTestFlagSaverTest::saver_ = NULL;$/;"	m	class:__anon14::GTestFlagSaverTest	file:
saxpy	experiments/backup/benchmarks/src/sgefa/blas.c	/^void saxpy( n, sa, sx, incx, sy, incy )$/;"	f
saxpy	experiments/benchmarks/src/sgefa/blas.c	/^void saxpy( n, sa, sx, incx, sy, incy )$/;"	f
saxpyx	experiments/backup/benchmarks/src/sgefa/blas.c	/^void saxpyx( n, sa, sx, incx, sy, incy )$/;"	f
saxpyx	experiments/benchmarks/src/sgefa/blas.c	/^void saxpyx( n, sa, sx, incx, sy, incy )$/;"	f
sb	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sb	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sc	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-1.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-2.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-3.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-4.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-5.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-6.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-7.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops-8.c	/^double scale,pierr;$/;"	v
scale	experiments/backup/benchmarks/src/base/flops.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-1.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-2.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-3.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-4.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-5.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-6.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-7.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops-8.c	/^double scale,pierr;$/;"	v
scale	experiments/benchmarks/src/base/flops.c	/^double scale,pierr;$/;"	v
schedule	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^void schedule()$/;"	f
schedule	experiments/benchmarks/src/base/richards_benchmark.c	/^void schedule()$/;"	f
scoped_ptr	test/gtest/include/gtest/internal/gtest-port.h	/^  explicit scoped_ptr(T* p = NULL) : ptr_(p) {}$/;"	f	class:testing::internal::scoped_ptr
scoped_ptr	test/gtest/include/gtest/internal/gtest-port.h	/^class scoped_ptr {$/;"	c	namespace:testing::internal
scopy	experiments/backup/benchmarks/src/sgefa/blas.c	/^void scopy( n, sx, incx, sy, incy )$/;"	f
scopy	experiments/benchmarks/src/sgefa/blas.c	/^void scopy( n, sx, incx, sy, incy )$/;"	f
score	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	int score;$/;"	m	class:HexxagonMove
score	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	int score;$/;"	m	class:HexxagonMove
scoreAllMoves	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::scoreAllMoves(HexxagonBoard board, int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonMoveList
scoreAllMoves	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::scoreAllMoves(HexxagonBoard board, int depth, void (*callback)(), int maxtime)$/;"	f	class:HexxagonMoveList
scrollLeft	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
scrollTop	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
sd	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sd	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
sdot	experiments/backup/benchmarks/src/sgefa/blas.c	/^double sdot( n, sx, incx, sy, incy )$/;"	f
sdot	experiments/benchmarks/src/sgefa/blas.c	/^double sdot( n, sx, incx, sy, incy )$/;"	f
search	experiments/backup/benchmarks/src/aha/aha.c	/^search(void)$/;"	f
search	experiments/benchmarks/src/aha/aha.c	/^search(void)$/;"	f
searchData	docs/html/search/all_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_10.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_11.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_12.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_13.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_14.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_15.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_16.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_17.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_7.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_8.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_9.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_a.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_b.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_c.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_d.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_e.js	/^var searchData=$/;"	v
searchData	docs/html/search/all_f.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_7.js	/^var searchData=$/;"	v
searchData	docs/html/search/classes_8.js	/^var searchData=$/;"	v
searchData	docs/html/search/defines_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/defines_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/defines_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/enums_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/enums_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/enums_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/enums_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_10.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_11.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_12.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_13.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_14.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_7.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_8.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_9.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_a.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_b.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_c.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_d.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_e.js	/^var searchData=$/;"	v
searchData	docs/html/search/enumvalues_f.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_7.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_8.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_9.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_a.js	/^var searchData=$/;"	v
searchData	docs/html/search/files_b.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_10.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_7.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_8.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_9.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_a.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_b.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_c.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_d.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_e.js	/^var searchData=$/;"	v
searchData	docs/html/search/functions_f.js	/^var searchData=$/;"	v
searchData	docs/html/search/namespaces_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/namespaces_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/typedefs_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/typedefs_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_0.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_1.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_2.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_3.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_4.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_5.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_6.js	/^var searchData=$/;"	v
searchData	docs/html/search/variables_7.js	/^var searchData=$/;"	v
second	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^second()$/;"	f
second	experiments/benchmarks/src/base/himenobmtxpa.c	/^second()$/;"	f
seconds	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.c	/^double seconds()$/;"	f
seconds	experiments/benchmarks/src/SciMark2-C/Stopwatch.c	/^double seconds()$/;"	f
seed	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  int seed;                             $/;"	m	struct:__anon58
seed	experiments/backup/benchmarks/src/base/bubblesort.c	/^long seed; \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/huffbench.c	/^static       long seed = 1325;$/;"	v	file:
seed	experiments/backup/benchmarks/src/base/intmm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/lpbench.c	/^static       long seed = 1325;$/;"	v	file:
seed	experiments/backup/benchmarks/src/base/oscar.c	/^long seed;			\/* converted to long for 16 bit WR *\/$/;"	v
seed	experiments/backup/benchmarks/src/base/perm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/queens.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/quicksort.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/realmm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/towers.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/backup/benchmarks/src/base/treesort.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/SciMark2-C/Random.h	/^  int seed;                             $/;"	m	struct:__anon45
seed	experiments/benchmarks/src/base/bubblesort.c	/^long seed; \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/huffbench.c	/^static       long seed = 1325;$/;"	v	file:
seed	experiments/benchmarks/src/base/intmm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/lpbench.c	/^static       long seed = 1325;$/;"	v	file:
seed	experiments/benchmarks/src/base/oscar.c	/^long seed;			\/* converted to long for 16 bit WR *\/$/;"	v
seed	experiments/benchmarks/src/base/perm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/puzzle-stanford.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/queens.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/quicksort.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/realmm.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/towers.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed	experiments/benchmarks/src/base/treesort.c	/^long    seed;  \/* converted to long for 16 bit WR*\/$/;"	v
seed48	experiments/backup/benchmarks/src/base/misr.c	44;"	d	file:
seed48	experiments/benchmarks/src/base/misr.c	44;"	d	file:
seleq	experiments/backup/benchmarks/src/aha/aha.h	/^int seleq(int x, int y, int z) {return x == 0 ? y : z;}$/;"	f
seleq	experiments/benchmarks/src/aha/aha.h	/^int seleq(int x, int y, int z) {return x == 0 ? y : z;}$/;"	f
selle	experiments/backup/benchmarks/src/aha/aha.h	/^int selle(int x, int y, int z) {return x <= 0 ? y : z;}$/;"	f
selle	experiments/benchmarks/src/aha/aha.h	/^int selle(int x, int y, int z) {return x <= 0 ? y : z;}$/;"	f
sellt	experiments/backup/benchmarks/src/aha/aha.h	/^int sellt(int x, int y, int z) {return x < 0 ? y : z;}$/;"	f
sellt	experiments/benchmarks/src/aha/aha.h	/^int sellt(int x, int y, int z) {return x < 0 ? y : z;}$/;"	f
set	test/gtest/fused-src/gtest/gtest.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:std::tr1::ThreadLocal
set	test/gtest/fused-src/gtest/gtest.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:std::tr1::ThreadLocal
set	test/gtest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:testing::internal::ThreadLocal
set	test/gtest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:testing::internal::ThreadLocal
setBasicBlockFrequency	src/ProfileModule/ProfileModule.cpp	/^ProfileModule::setBasicBlockFrequency(BasicBlock &BB, uint64_t Freq) {$/;"	f	class:ProfileModule
setBit	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::setBit(int bit)$/;"	f	class:BitBoard64
setBit	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::setBit(int bit)$/;"	f	class:BitBoard64
setCallCost	src/ProfileModule/ProfileModule.cpp	/^ProfileModule::setCallCost(CallInst &I, double Cost) {$/;"	f	class:ProfileModule
setClassAttr	docs/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setID	src/ProfileModule/ProfileModule.cpp	/^void setID(Instruction &I, int ID) {$/;"	f
setKeyActions	docs/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setProgramCount	include/Profiling/GCOV.h	/^  void setProgramCount(uint32_t Programs) { ProgramCount = Programs; }$/;"	f	class:llvm::FileInfo
setRunCount	include/Profiling/GCOV.h	/^  void setRunCount(uint32_t Runs) { RunCount = Runs; }$/;"	f	class:llvm::FileInfo
setUp	test/gtest/test/gtest_filter_unittest.py	/^  def setUp(self):$/;"	m	class:GTestFilterUnitTest
setUp	test/gtest/test/gtest_shuffle_test.py	/^  def setUp(self):$/;"	m	class:GTestShuffleUnitTest
setUp	test/gtest/test/gtest_xml_outfiles_test.py	/^  def setUp(self):$/;"	m	class:GTestXMLOutFilesTest
setWeight	src/ProfileModule/ProfileModule.cpp	/^void setWeight(Instruction &I, double Weight) {$/;"	f
set_catch_exceptions	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl	file:
set_catch_exceptions	test/gtest/src/gtest-internal-inl.h	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl
set_child_pid	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest
set_child_pid	test/gtest/src/gtest-death-test.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest
set_current_test_case	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_current_test_case(TestCase* a_current_test_case) {$/;"	f	class:testing::internal::UnitTestImpl
set_current_test_case	test/gtest/src/gtest-internal-inl.h	/^  void set_current_test_case(TestCase* a_current_test_case) {$/;"	f	class:testing::internal::UnitTestImpl
set_current_test_info	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl
set_current_test_info	test/gtest/src/gtest-internal-inl.h	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl
set_elapsed_time	test/gtest/fused-src/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult
set_elapsed_time	test/gtest/include/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult
set_failure_in_set_up	test/gtest/test/gtest_environment_test.cc	/^  void set_failure_in_set_up(FailureType type) {$/;"	f	class:__anon21::MyEnvironment
set_forwarding_enabled	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater
set_forwarding_enabled	test/gtest/src/gtest.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater
set_last_death_test_message	test/gtest/fused-src/gtest/gtest-all.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest
set_last_death_test_message	test/gtest/src/gtest-death-test.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest
set_os_stack_trace_getter	test/gtest/fused-src/gtest/gtest-all.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl
set_os_stack_trace_getter	test/gtest/src/gtest.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl
set_outcome	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl
set_outcome	test/gtest/src/gtest-death-test.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl
set_param	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^set_param(int is[],char *size)$/;"	f
set_param	experiments/benchmarks/src/base/himenobmtxpa.c	/^set_param(int is[],char *size)$/;"	f
set_param_value	test/gtest/test/gtest-param-test_test.cc	/^  static void set_param_value(int param_value) { param_value_ = param_value; }$/;"	f	class:GeneratorEvaluationTest
set_read_fd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_read_fd	test/gtest/src/gtest-death-test.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_should_run	test/gtest/fused-src/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestCase
set_should_run	test/gtest/include/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestCase
set_spawned	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl
set_spawned	test/gtest/src/gtest-death-test.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl
set_status	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl
set_status	test/gtest/src/gtest-death-test.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl
set_up_count_	test/gtest/test/gtest-param-test_test.cc	/^  int set_up_count_;$/;"	m	class:TestGenerationEnvironment	file:
set_up_tc_	test/gtest/fused-src/gtest/gtest.h	/^  Test::SetUpTestCaseFunc set_up_tc_;$/;"	m	class:testing::TestCase
set_up_tc_	test/gtest/include/gtest/gtest.h	/^  Test::SetUpTestCaseFunc set_up_tc_;$/;"	m	class:testing::TestCase
set_up_was_run	test/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run() const { return set_up_was_run_; }$/;"	f	class:__anon21::MyEnvironment
set_up_was_run_	test/gtest/test/gtest_environment_test.cc	/^  bool set_up_was_run_;$/;"	m	class:__anon21::MyEnvironment	file:
set_write_fd	test/gtest/fused-src/gtest/gtest-all.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_write_fd	test/gtest/src/gtest-death-test.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_x	test/gtest/test/production.h	/^  void set_x(int an_x) { x_ = an_x; }$/;"	f	class:PrivateCode
setupCPU	src/saferun	/^function setupCPU() {$/;"	f
severity_	test/gtest/fused-src/gtest/gtest.h	/^  const GTestLogSeverity severity_;$/;"	m	class:std::tr1::GTestLog
severity_	test/gtest/include/gtest/internal/gtest-port.h	/^  const GTestLogSeverity severity_;$/;"	m	class:testing::internal::GTestLog
sgefa	experiments/backup/benchmarks/src/sgefa/sgefa.c	/^int sgefa( a, ipvt )$/;"	f
sgefa	experiments/benchmarks/src/sgefa/sgefa.c	/^int sgefa( a, ipvt )$/;"	f
sgesl	experiments/backup/benchmarks/src/sgefa/sgesl.c	/^int sgesl( a, ipvt, b, job )$/;"	f
sgesl	experiments/benchmarks/src/sgefa/sgesl.c	/^int sgesl( a, ipvt, b, job )$/;"	f
shared_	test/gtest/test/gtest-typed-test_test.cc	/^  static T* shared_;$/;"	m	class:CommonTest	file:
shared_	test/gtest/test/gtest-typed-test_test.cc	/^T* CommonTest<T>::shared_ = NULL;$/;"	m	class:CommonTest	file:
shared_resource_	test/gtest/test/gtest_unittest.cc	/^  static const char* shared_resource_;$/;"	m	class:testing::SetUpTestCaseTest	file:
shared_resource_	test/gtest/test/gtest_unittest.cc	/^const char* SetUpTestCaseTest::shared_resource_ = NULL;$/;"	m	class:testing::SetUpTestCaseTest	file:
shl	experiments/backup/benchmarks/src/aha/aha.h	/^int shl (int x, int y, int z) {int s = y & NBSM;$/;"	f
shl	experiments/benchmarks/src/aha/aha.h	/^int shl (int x, int y, int z) {int s = y & NBSM;$/;"	f
shlib_info	include/Profiling/papi.h	/^      PAPI_shlib_info_t *shlib_info;$/;"	m	union:__anon7
short_descr	include/Profiling/papi.h	/^      char short_descr[PAPI_MIN_STR_LEN];    \/* a description suitable for use as a label, typically only$/;"	m	struct:event_info
should_die_	test/gtest/test/gtest-death-test_test.cc	/^  bool should_die_;$/;"	m	class:MayDie	file:
should_die_	test/gtest/test/gtest-death-test_test.cc	/^  bool should_die_;$/;"	m	class:TestForDeathTest	file:
should_run	test/gtest/fused-src/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestCase
should_run	test/gtest/fused-src/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo
should_run	test/gtest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestCase
should_run	test/gtest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo
should_run_	test/gtest/fused-src/gtest/gtest.h	/^  bool should_run_;                 \/\/ True iff this test should run$/;"	m	class:testing::TestInfo
should_run_	test/gtest/fused-src/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestCase
should_run_	test/gtest/include/gtest/gtest.h	/^  bool should_run_;                 \/\/ True iff this test should run$/;"	m	class:testing::TestInfo
should_run_	test/gtest/include/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestCase
show_data	experiments/backup/benchmarks/src/base/chomp.c	/^void show_data(int *data) \/* little display routine to give off results *\/$/;"	f
show_data	experiments/benchmarks/src/base/chomp.c	/^void show_data(int *data) \/* little display routine to give off results *\/$/;"	f
show_help	test/gtest/scripts/gtest-config.in	/^show_help()$/;"	f
show_list	experiments/backup/benchmarks/src/base/chomp.c	/^void show_list(struct _list *list) \/* show the entire list of moves *\/$/;"	f
show_list	experiments/benchmarks/src/base/chomp.c	/^void show_list(struct _list *list) \/* show the entire list of moves *\/$/;"	f
show_move	experiments/backup/benchmarks/src/base/chomp.c	/^void show_move(int *data) \/* puts in the "(" and ")" for show_data() *\/$/;"	f
show_move	experiments/benchmarks/src/base/chomp.c	/^void show_move(int *data) \/* puts in the "(" and ")" for show_data() *\/$/;"	f
show_play	experiments/backup/benchmarks/src/base/chomp.c	/^void show_play(struct _play *play) \/* to diplay the whole tree *\/$/;"	f
show_play	experiments/benchmarks/src/base/chomp.c	/^void show_play(struct _play *play) \/* to diplay the whole tree *\/$/;"	f
show_usage	test/gtest/scripts/gtest-config.in	/^show_usage()$/;"	f
shr	experiments/backup/benchmarks/src/aha/aha.h	/^int shr(int x, int y, int z) {int s = y & NBSM;$/;"	f
shr	experiments/benchmarks/src/aha/aha.h	/^int shr(int x, int y, int z) {int s = y & NBSM;$/;"	f
shrs	experiments/backup/benchmarks/src/aha/aha.h	/^int shrs(int x, int y, int z) {int s = y & NBSM;$/;"	f
shrs	experiments/benchmarks/src/aha/aha.h	/^int shrs(int x, int y, int z) {int s = y & NBSM;$/;"	f
shuffle	experiments/backup/benchmarks/src/base/puzzle.c	/^void shuffle(int* items, int len) {$/;"	f
shuffle	experiments/benchmarks/src/base/puzzle.c	/^void shuffle(int* items, int len) {$/;"	f
shuffle	test/gtest/test/gtest_unittest.cc	/^  bool shuffle;$/;"	m	struct:testing::Flags	file:
shuffle_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
shuffle_	test/gtest/src/gtest-internal-inl.h	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver
sign_bit	test/gtest/fused-src/gtest/gtest.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
sign_bit	test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
signum_	test/gtest/fused-src/gtest/gtest.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal
signum_	test/gtest/include/gtest/gtest-death-test.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal
simulate	experiments/backup/benchmarks/src/base/misr.c	/^int simulate(int iterations, misr_type *present, double prob, char *structure)$/;"	f
simulate	experiments/benchmarks/src/base/misr.c	/^int simulate(int iterations, misr_type *present, double prob, char *structure)$/;"	f
simulate_one_instruction	experiments/backup/benchmarks/src/aha/aha.c	/^simulate_one_instruction(int i)$/;"	f	file:
simulate_one_instruction	experiments/benchmarks/src/aha/aha.c	/^simulate_one_instruction(int i)$/;"	f	file:
sin	experiments/backup/benchmarks/src/base/fbench.c	/^static double sin(x)$/;"	f	file:
sin	experiments/backup/benchmarks/src/base/fbench.c	321;"	d	file:
sin	experiments/benchmarks/src/base/fbench.c	/^static double sin(x)$/;"	f	file:
sin	experiments/benchmarks/src/base/fbench.c	321;"	d	file:
size	experiments/backup/benchmarks/src/base/bubblesort.c	24;"	d	file:
size	experiments/backup/benchmarks/src/base/dt.c	/^  size = 2048$/;"	e	enum:__anon65	file:
size	experiments/backup/benchmarks/src/base/intmm.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/oscar.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/perm.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/puzzle-stanford.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/queens.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/quicksort.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/realmm.c	29;"	d	file:
size	experiments/backup/benchmarks/src/base/simple_hash.h	/^    int size;$/;"	m	struct:ht_ht
size	experiments/backup/benchmarks/src/base/towers.c	27;"	d	file:
size	experiments/backup/benchmarks/src/base/treesort.c	27;"	d	file:
size	experiments/benchmarks/src/base/bubblesort.c	24;"	d	file:
size	experiments/benchmarks/src/base/dt.c	/^  size = 2048$/;"	e	enum:__anon52	file:
size	experiments/benchmarks/src/base/intmm.c	27;"	d	file:
size	experiments/benchmarks/src/base/oscar.c	27;"	d	file:
size	experiments/benchmarks/src/base/perm.c	27;"	d	file:
size	experiments/benchmarks/src/base/puzzle-stanford.c	27;"	d	file:
size	experiments/benchmarks/src/base/queens.c	27;"	d	file:
size	experiments/benchmarks/src/base/quicksort.c	27;"	d	file:
size	experiments/benchmarks/src/base/realmm.c	29;"	d	file:
size	experiments/benchmarks/src/base/simple_hash.h	/^    int size;$/;"	m	struct:ht_ht
size	experiments/benchmarks/src/base/towers.c	27;"	d	file:
size	experiments/benchmarks/src/base/treesort.c	27;"	d	file:
size	include/Profiling/papi.h	/^      int size;$/;"	m	struct:_papi_mh_cache_info
size	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray
size	test/gtest/fused-src/gtest/gtest.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray
size	test/gtest/include/gtest/internal/gtest-internal.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray
size	test/gtest/src/gtest-test-part.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray
size_	test/gtest/fused-src/gtest/gtest.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray
size_	test/gtest/include/gtest/internal/gtest-internal.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray
size_	test/gtest/samples/sample3-inl.h	/^  size_t size_;  \/\/ The number of elements in the queue.$/;"	m	class:Queue
smartPlacement	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:k.k.k.k
snrm2	experiments/backup/benchmarks/src/sgefa/blas.c	/^double snrm2( n, sx, incx )$/;"	f
snrm2	experiments/benchmarks/src/sgefa/blas.c	/^double snrm2( n, sx, incx )$/;"	f
socket_writer_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const scoped_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener	file:
socket_writer_	test/gtest/src/gtest-internal-inl.h	/^  const scoped_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener
sockfd_	test/gtest/fused-src/gtest/gtest-all.cc	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
sockfd_	test/gtest/src/gtest-internal-inl.h	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter
solar_mass	experiments/backup/benchmarks/src/base/n-body.c	14;"	d	file:
solar_mass	experiments/benchmarks/src/base/n-body.c	14;"	d	file:
solutions	experiments/backup/benchmarks/src/base/queens-mcgill.c	/^unsigned long solutions = 0;	\/* Number of solutions found *\/$/;"	v
solutions	experiments/benchmarks/src/base/queens-mcgill.c	/^unsigned long solutions = 0;	\/* Number of solutions found *\/$/;"	v
sortDstEdges	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^void GCOVBlock::sortDstEdges() {$/;"	f	class:GCOVBlock
sortList	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::sortList()$/;"	f	class:HexxagonMoveList
sortList	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::sortList()$/;"	f	class:HexxagonMoveList
sortListQuick	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::sortListQuick()$/;"	f	class:HexxagonMoveList
sortListQuick	experiments/benchmarks/src/.hexxagon/hexxagonmove.cpp	/^void HexxagonMoveList::sortListQuick()$/;"	f	class:HexxagonMoveList
sortelements	experiments/backup/benchmarks/src/base/bubblesort.c	29;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/intmm.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/oscar.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/perm.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/puzzle-stanford.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/queens.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/quicksort.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/realmm.c	35;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/towers.c	33;"	d	file:
sortelements	experiments/backup/benchmarks/src/base/treesort.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/bubblesort.c	29;"	d	file:
sortelements	experiments/benchmarks/src/base/intmm.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/oscar.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/perm.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/puzzle-stanford.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/queens.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/quicksort.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/realmm.c	35;"	d	file:
sortelements	experiments/benchmarks/src/base/towers.c	33;"	d	file:
sortelements	experiments/benchmarks/src/base/treesort.c	33;"	d	file:
sortlist	experiments/backup/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/backup/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
sortlist	experiments/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
spawn_thread_ok_to_terminate	test/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_ok_to_terminate;$/;"	m	struct:SpawnThreadNotifications	file:
spawn_thread_started	test/gtest/test/gtest_output_test_.cc	/^  Notification spawn_thread_started;$/;"	m	struct:SpawnThreadNotifications	file:
spawned	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl
spawned	test/gtest/src/gtest-death-test.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl
spawned_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	file:
spawned_	test/gtest/src/gtest-death-test.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	file:
spectral_line	experiments/backup/benchmarks/src/base/fbench.c	/^static double spectral_line[9];$/;"	v	file:
spectral_line	experiments/benchmarks/src/base/fbench.c	/^static double spectral_line[9];$/;"	v	file:
spreadOverCallGraph	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^void spreadOverCallGraph(ProfileModule *Profile) {$/;"	f
sqr	experiments/backup/benchmarks/src/base/mandel-2.c	/^double sqr(double x) { return x*x; }$/;"	f
sqr	experiments/benchmarks/src/base/mandel-2.c	/^double sqr(double x) { return x*x; }$/;"	f
sqrt	experiments/backup/benchmarks/src/base/fbench.c	/^double sqrt(x)$/;"	f
sqrt	experiments/backup/benchmarks/src/base/fbench.c	324;"	d	file:
sqrt	experiments/benchmarks/src/base/fbench.c	/^double sqrt(x)$/;"	f
sqrt	experiments/benchmarks/src/base/fbench.c	324;"	d	file:
sqrt_of_array_cell	experiments/backup/benchmarks/src/polybench/datamining/correlation/correlation.c	70;"	d	file:
sqrt_of_array_cell	experiments/benchmarks/src/polybench/datamining/correlation/correlation.c	70;"	d	file:
srand	experiments/backup/benchmarks/src/base/puzzle.c	/^void srand( unsigned int seed ) {$/;"	f
srand	experiments/benchmarks/src/base/puzzle.c	/^void srand( unsigned int seed ) {$/;"	f
src_begin	include/Profiling/GCOV.h	/^  EdgeIterator src_begin() const { return SrcEdges.begin(); }$/;"	f	class:llvm::GCOVBlock
src_end	include/Profiling/GCOV.h	/^  EdgeIterator src_end() const { return SrcEdges.end(); }$/;"	f	class:llvm::GCOVBlock
srtelements	experiments/backup/benchmarks/src/base/bubblesort.c	30;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/intmm.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/oscar.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/perm.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/puzzle-stanford.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/queens.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/quicksort.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/realmm.c	36;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/towers.c	34;"	d	file:
srtelements	experiments/backup/benchmarks/src/base/treesort.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/bubblesort.c	30;"	d	file:
srtelements	experiments/benchmarks/src/base/intmm.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/oscar.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/perm.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/puzzle-stanford.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/queens.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/quicksort.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/realmm.c	36;"	d	file:
srtelements	experiments/benchmarks/src/base/towers.c	34;"	d	file:
srtelements	experiments/benchmarks/src/base/treesort.c	34;"	d	file:
ss_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::scoped_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message
ss_	test/gtest/include/gtest/gtest-message.h	/^  const internal::scoped_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message
sscal	experiments/backup/benchmarks/src/sgefa/blas.c	/^int sscal( n, sa, sx, incx )$/;"	f
sscal	experiments/benchmarks/src/sgefa/blas.c	/^int sscal( n, sa, sx, incx )$/;"	f
stack	experiments/backup/benchmarks/src/base/bubblesort.c	/^int stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/intmm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/oscar.c	/^int stack[stackrange + 1];$/;"	v
stack	experiments/backup/benchmarks/src/base/perm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/queens.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/quicksort.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/realmm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/towers.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/backup/benchmarks/src/base/treesort.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/bubblesort.c	/^int stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/intmm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/oscar.c	/^int stack[stackrange + 1];$/;"	v
stack	experiments/benchmarks/src/base/perm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/puzzle-stanford.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/queens.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/quicksort.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/realmm.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/towers.c	/^int	   stack[stackrange+1];$/;"	v
stack	experiments/benchmarks/src/base/treesort.c	/^int	   stack[stackrange+1];$/;"	v
stack_trace_depth	test/gtest/test/gtest_unittest.cc	/^  Int32 stack_trace_depth;$/;"	m	struct:testing::Flags	file:
stack_trace_depth_	test/gtest/fused-src/gtest/gtest-all.cc	/^  internal::Int32 stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
stack_trace_depth_	test/gtest/src/gtest-internal-inl.h	/^  internal::Int32 stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver
stackrange	experiments/backup/benchmarks/src/base/bubblesort.c	45;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/intmm.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/oscar.c	53;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/perm.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/puzzle-stanford.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/queens.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/quicksort.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/realmm.c	54;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/towers.c	52;"	d	file:
stackrange	experiments/backup/benchmarks/src/base/treesort.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/bubblesort.c	45;"	d	file:
stackrange	experiments/benchmarks/src/base/intmm.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/oscar.c	53;"	d	file:
stackrange	experiments/benchmarks/src/base/perm.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/puzzle-stanford.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/queens.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/quicksort.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/realmm.c	54;"	d	file:
stackrange	experiments/benchmarks/src/base/towers.c	52;"	d	file:
stackrange	experiments/benchmarks/src/base/treesort.c	52;"	d	file:
start_measures	src/Profiling/CallCostAnalyzer/CallCostPass/PAPI.cpp	/^void start_measures(int Id) {$/;"	f
start_time_	test/gtest/samples/sample5_unittest.cc	/^  time_t start_time_;$/;"	m	class:QuickTest	file:
start_timestamp	test/gtest/fused-src/gtest/gtest-all.cc	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl
start_timestamp	test/gtest/fused-src/gtest/gtest-all.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest
start_timestamp	test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl
start_timestamp	test/gtest/src/gtest.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest
start_timestamp_	test/gtest/fused-src/gtest/gtest-all.cc	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl	file:
start_timestamp_	test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl
state	experiments/backup/benchmarks/src/base/chomp.c	/^  int *state;$/;"	m	struct:_play	file:
state	experiments/benchmarks/src/base/chomp.c	/^  int *state;$/;"	m	struct:_play	file:
state_	test/gtest/fused-src/gtest/gtest.h	/^  UInt32 state_;$/;"	m	class:testing::internal::Random
state_	test/gtest/include/gtest/internal/gtest-internal.h	/^  UInt32 state_;$/;"	m	class:testing::internal::Random
state_	test/gtest/test/gtest-typed-test_test.cc	/^  TypedTestCasePState state_;$/;"	m	class:TypedTestCasePStateTest	file:
statement	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl
statement	test/gtest/src/gtest-death-test.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl
statement_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	file:
statement_	test/gtest/src/gtest-death-test.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	file:
staticData	experiments/backup/benchmarks/src/base/lowercase.c	/^static UChar staticData[]  = {'H', 'E', 'L', 'L', 'O', ' ', 'W', 'O', 'R', 'L', 'D', '!', 'H', 'E', 'L', 'L'};$/;"	v	file:
staticData	experiments/benchmarks/src/base/lowercase.c	/^static UChar staticData[]  = {'H', 'E', 'L', 'L', 'O', ' ', 'W', 'O', 'R', 'L', 'D', '!', 'H', 'E', 'L', 'L'};$/;"	v	file:
staticDataLength	experiments/backup/benchmarks/src/base/lowercase.c	/^static const size_t staticDataLength = sizeof(staticData) \/ sizeof(staticData[0]);$/;"	v	file:
staticDataLength	experiments/benchmarks/src/base/lowercase.c	/^static const size_t staticDataLength = sizeof(staticData) \/ sizeof(staticData[0]);$/;"	v	file:
status	test/gtest/fused-src/gtest/gtest-all.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl
status	test/gtest/src/gtest-death-test.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl
status_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	file:
status_	test/gtest/src/gtest-death-test.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	file:
status_	test/gtest/test/gtest-death-test_test.cc	/^  const int status_;$/;"	m	class:MockDeathTest	file:
status_	test/gtest/test/gtest-death-test_test.cc	/^  int status_;$/;"	m	class:MockDeathTestFactory	file:
std	test/gtest/fused-src/gtest/gtest.h	/^namespace std {$/;"	n
std	test/gtest/include/gtest/internal/gtest-port.h	/^namespace std {$/;"	n
std	test/gtest/include/gtest/internal/gtest-tuple.h	/^namespace std {$/;"	n
step	experiments/backup/benchmarks/src/base/mandel.c	10;"	d	file:
step	experiments/benchmarks/src/base/mandel.c	10;"	d	file:
step_	test/gtest/fused-src/gtest/gtest.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
step_	test/gtest/fused-src/gtest/gtest.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator
step_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
step_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator
strcat	experiments/backup/benchmarks/src/base/dry.c	/^strcat(s1, s2)$/;"	f
strcat	experiments/backup/benchmarks/src/base/fldry.c	/^char *strcat(s1, s2)$/;"	f
strcat	experiments/benchmarks/src/base/dry.c	/^strcat(s1, s2)$/;"	f
strcat	experiments/benchmarks/src/base/fldry.c	/^char *strcat(s1, s2)$/;"	f
strcmp	experiments/backup/benchmarks/src/base/dry.c	/^strcmp(s1, s2)$/;"	f
strcmp	experiments/backup/benchmarks/src/base/fldry.c	/^strcmp(s1, s2)$/;"	f
strcmp	experiments/benchmarks/src/base/dry.c	/^strcmp(s1, s2)$/;"	f
strcmp	experiments/benchmarks/src/base/fldry.c	/^strcmp(s1, s2)$/;"	f
strcpy	experiments/backup/benchmarks/src/base/dry.c	/^strcpy(s1, s2)$/;"	f
strcpy	experiments/backup/benchmarks/src/base/fldry.c	/^char *strcpy(s1, s2)$/;"	f
strcpy	experiments/benchmarks/src/base/dry.c	/^strcpy(s1, s2)$/;"	f
strcpy	experiments/benchmarks/src/base/fldry.c	/^char *strcpy(s1, s2)$/;"	f
stream_result_to	test/gtest/test/gtest_unittest.cc	/^  const char* stream_result_to;$/;"	m	struct:testing::Flags	file:
stream_result_to_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
stream_result_to_	test/gtest/src/gtest-internal-inl.h	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver
streamer_	test/gtest/test/gtest_unittest.cc	/^  StreamingListener streamer_;$/;"	m	class:testing::internal::StreamingListenerTest	file:
string	test/gtest/fused-src/gtest/gtest.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath
string	test/gtest/include/gtest/internal/gtest-filepath.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath
string	test/gtest/include/gtest/internal/gtest-port.h	/^typedef ::std::string string;$/;"	t	namespace:testing::internal
string	test/gtest/include/gtest/internal/gtest-port.h	/^typedef ::string string;$/;"	t	namespace:testing::internal
stripFromDblSpace	experiments/backup/benchmarks/src/.hexxagon/hexxagon.cpp	/^void stripFromDblSpace(char *cpfrom)$/;"	f
stripFromDblSpace	experiments/benchmarks/src/.hexxagon/hexxagon.cpp	/^void stripFromDblSpace(char *cpfrom)$/;"	f
structassign	experiments/backup/benchmarks/src/base/dry.c	120;"	d	file:
structassign	experiments/backup/benchmarks/src/base/dry.c	122;"	d	file:
structassign	experiments/backup/benchmarks/src/base/fldry.c	121;"	d	file:
structassign	experiments/backup/benchmarks/src/base/fldry.c	123;"	d	file:
structassign	experiments/benchmarks/src/base/dry.c	120;"	d	file:
structassign	experiments/benchmarks/src/base/dry.c	122;"	d	file:
structassign	experiments/benchmarks/src/base/fldry.c	121;"	d	file:
structassign	experiments/benchmarks/src/base/fldry.c	123;"	d	file:
sub	experiments/backup/benchmarks/src/aha/aha.h	/^int sub (int x, int y, int z) {return x - y;}$/;"	f
sub	experiments/benchmarks/src/aha/aha.h	/^int sub (int x, int y, int z) {return x - y;}$/;"	f
sub_info	include/Profiling/papi.h	/^      PAPI_substrate_info_t sub_info;$/;"	m	union:__anon7
subdirs	docs/html/dir_013a394b402d3273324773ae5029f83e.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_32cd92f4b1e7e88c2290560ea44244e9.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_487a7221d3690a6622ab8370d2a6fa2f.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_631a7eda700388ca678958e521042e12.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_6e4a6184ab20585769ffddd40488d8fe.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_80a7b15fbf7f484bdc1ece4cb1792575.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_90d0cab7a5432012d32fc1aee9952fe0.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_9e8b31a0f31d2b33203fb9f3e1a40d76.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_a37a1a71e3ba79850e8b1e1071e50e5d.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_a9ec1ef424966475f993eb98877e3088.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_c1cac778c5291f7d85175b6e39b12919.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_c1f2915039fd72b8406fb0fd9c3d1b3c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_c32bc508750d3b844730cc2800ef6d82.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_ca719a3c9c7698fbb7b385e0ac0f0ef9.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_cbfe0d2cd414f41bee631c9f167aaa8c.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subdirs	docs/html/dir_e0762b620cfa87064b3d80e60af710bc.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
substr_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const string substr_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
substr_	test/gtest/include/gtest/gtest-spi.h	/^  const string substr_;$/;"	m	class:testing::internal::SingleFailureChecker
success_	test/gtest/fused-src/gtest/gtest.h	/^  bool success_;$/;"	m	class:testing::AssertionResult
success_	test/gtest/include/gtest/gtest.h	/^  bool success_;$/;"	m	class:testing::AssertionResult
successful_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest
successful_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::successful_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
successful_test_case_count	test/gtest/src/gtest.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest
successful_test_case_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::successful_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
successful_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::successful_test_count() const {$/;"	f	class:testing::TestCase
successful_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest
successful_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
successful_test_count	test/gtest/src/gtest.cc	/^int TestCase::successful_test_count() const {$/;"	f	class:testing::TestCase
successful_test_count	test/gtest/src/gtest.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest
successful_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
sum_vec	experiments/backup/benchmarks/src/base/partialsums.c	/^double sum_vec(v2df x)$/;"	f
sum_vec	experiments/benchmarks/src/base/partialsums.c	/^double sum_vec(v2df x)$/;"	f
summary	test/gtest/fused-src/gtest/gtest.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult
summary	test/gtest/include/gtest/gtest-test-part.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult
summary_	test/gtest/fused-src/gtest/gtest.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult
summary_	test/gtest/include/gtest/gtest-test-part.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult
supports_64bit_counters	include/Profiling/papi.h	/^      int supports_64bit_counters; \/* Only limited precision is available from hardware *\/$/;"	m	struct:_papi_substrate_option
supports_attach	include/Profiling/papi.h	/^      int supports_attach;         \/* We can attach PAPI to another process *\/$/;"	m	struct:_papi_substrate_option
supports_hw_overflow	include/Profiling/papi.h	/^      int supports_hw_overflow;    \/* Needs overflow to be emulated *\/$/;"	m	struct:_papi_substrate_option
supports_hw_profile	include/Profiling/papi.h	/^      int supports_hw_profile;     \/* Needs profile to be emulated *\/$/;"	m	struct:_papi_substrate_option
supports_inheritance	include/Profiling/papi.h	/^      int supports_inheritance;    \/* We can pass on and inherit child counters\/values *\/$/;"	m	struct:_papi_substrate_option
supports_multiple_threads	include/Profiling/papi.h	/^      int supports_multiple_threads;     \/* hardware counters support$/;"	m	struct:_papi_substrate_option
supports_program	include/Profiling/papi.h	/^      int supports_program;        \/* We can use programmable events *\/$/;"	m	struct:_papi_substrate_option
supports_real_cyc	include/Profiling/papi.h	/^      int supports_real_cyc;       \/* We can use the real_cyc call *\/$/;"	m	struct:_papi_substrate_option
supports_real_usec	include/Profiling/papi.h	/^      int supports_real_usec;      \/* We can use the real_usec call *\/$/;"	m	struct:_papi_substrate_option
supports_virt_cyc	include/Profiling/papi.h	/^      int supports_virt_cyc;       \/* We can use the virt_cyc call *\/$/;"	m	struct:_papi_substrate_option
supports_virt_usec	include/Profiling/papi.h	/^      int supports_virt_usec;      \/* We can use the virt_usec call *\/$/;"	m	struct:_papi_substrate_option
supports_write	include/Profiling/papi.h	/^      int supports_write;          \/* We can write the counters *\/$/;"	m	struct:_papi_substrate_option
symbol	include/Profiling/papi.h	/^      char symbol[PAPI_MAX_STR_LEN+3];       \/* name of the event$/;"	m	struct:event_info
t	experiments/backup/benchmarks/src/base/oourafft.c	/^static LARGE_INTEGER t = {0, 0};$/;"	v	file:
t	experiments/benchmarks/src/base/oourafft.c	/^static LARGE_INTEGER t = {0, 0};$/;"	v	file:
tInitarr	experiments/backup/benchmarks/src/base/treesort.c	/^void tInitarr() {$/;"	f
tInitarr	experiments/benchmarks/src/base/treesort.c	/^void tInitarr() {$/;"	f
t_fn	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    struct task    *(*t_fn)(struct packet *);$/;"	m	struct:task	typeref:struct:task::t_fn	file:
t_fn	experiments/benchmarks/src/base/richards_benchmark.c	/^    struct task    *(*t_fn)(struct packet *);$/;"	m	struct:task	typeref:struct:task::t_fn	file:
t_id	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             t_id;$/;"	m	struct:task	file:
t_id	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             t_id;$/;"	m	struct:task	file:
t_link	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    struct task    *t_link;$/;"	m	struct:task	typeref:struct:task::task	file:
t_link	experiments/benchmarks/src/base/richards_benchmark.c	/^    struct task    *t_link;$/;"	m	struct:task	typeref:struct:task::task	file:
t_pri	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             t_pri;$/;"	m	struct:task	file:
t_pri	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             t_pri;$/;"	m	struct:task	file:
t_state	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    int             t_state;$/;"	m	struct:task	file:
t_state	experiments/benchmarks/src/base/richards_benchmark.c	/^    int             t_state;$/;"	m	struct:task	file:
t_v1	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    long            t_v1;$/;"	m	struct:task	file:
t_v1	experiments/benchmarks/src/base/richards_benchmark.c	/^    long            t_v1;$/;"	m	struct:task	file:
t_v2	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    long            t_v2;$/;"	m	struct:task	file:
t_v2	experiments/benchmarks/src/base/richards_benchmark.c	/^    long            t_v2;$/;"	m	struct:task	file:
t_wkq	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^    struct packet  *t_wkq;$/;"	m	struct:task	typeref:struct:task::packet	file:
t_wkq	experiments/benchmarks/src/base/richards_benchmark.c	/^    struct packet  *t_wkq;$/;"	m	struct:task	typeref:struct:task::packet	file:
table_	test/gtest/samples/sample6_unittest.cc	/^  PrimeTable* const table_;$/;"	m	class:PrimeTableTest	file:
table_	test/gtest/samples/sample7_unittest.cc	/^  PrimeTable* table_;$/;"	m	class:PrimeTableTest	file:
table_	test/gtest/samples/sample8_unittest.cc	/^  HybridPrimeTable* table_;$/;"	m	class:PrimeTableTest	file:
tak	experiments/backup/benchmarks/src/base/recursive.c	/^int tak(int x, int y, int z) {$/;"	f
tak	experiments/benchmarks/src/base/recursive.c	/^int tak(int x, int y, int z) {$/;"	f
takFP	experiments/backup/benchmarks/src/base/recursive.c	/^double takFP(double x, double y, double z) {$/;"	f
takFP	experiments/benchmarks/src/base/recursive.c	/^double takFP(double x, double y, double z) {$/;"	f
tan	experiments/backup/benchmarks/src/base/fbench.c	/^static double tan(x)$/;"	f	file:
tan	experiments/backup/benchmarks/src/base/fbench.c	323;"	d	file:
tan	experiments/benchmarks/src/base/fbench.c	/^static double tan(x)$/;"	f	file:
tan	experiments/benchmarks/src/base/fbench.c	323;"	d	file:
task	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task$/;"	s	file:
task	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task$/;"	s	file:
taskid	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^long    taskid;$/;"	v
taskid	experiments/benchmarks/src/base/richards_benchmark.c	/^long    taskid;$/;"	v
tasklist	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *tasklist    =  0;$/;"	v	typeref:struct:task
tasklist	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *tasklist    =  0;$/;"	v	typeref:struct:task
tasktab	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *tasktab[11]  =  {0,0,0,0,0,0,0,0,0,0,0};$/;"	v	typeref:struct:task
tasktab	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *tasktab[11]  =  {0,0,0,0,0,0,0,0,0,0,0};$/;"	v	typeref:struct:task
tbfr	experiments/backup/benchmarks/src/base/fbench.c	/^static char tbfr[132];$/;"	v	file:
tbfr	experiments/benchmarks/src/base/fbench.c	/^static char tbfr[132];$/;"	v	file:
tbl	experiments/backup/benchmarks/src/base/simple_hash.h	/^    struct ht_node **tbl;$/;"	m	struct:ht_ht	typeref:struct:ht_ht::ht_node
tbl	experiments/benchmarks/src/base/simple_hash.h	/^    struct ht_node **tbl;$/;"	m	struct:ht_ht	typeref:struct:ht_ht::ht_node
tbuffer_t	experiments/backup/benchmarks/src/base/flops.c	/^struct tbuffer_t$/;"	s	file:
tbuffer_t	experiments/benchmarks/src/base/flops.c	/^struct tbuffer_t$/;"	s	file:
tcb	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *tcb;$/;"	v	typeref:struct:task
tcb	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *tcb;$/;"	v	typeref:struct:task
tearDown	test/gtest/test/gtest_xml_outfiles_test.py	/^  def tearDown(self):$/;"	m	class:GTestXMLOutFilesTest
tear_down_count_	test/gtest/test/gtest-param-test_test.cc	/^  int tear_down_count_;$/;"	m	class:TestGenerationEnvironment	file:
tear_down_tc_	test/gtest/fused-src/gtest/gtest.h	/^  Test::TearDownTestCaseFunc tear_down_tc_;$/;"	m	class:testing::TestCase
tear_down_tc_	test/gtest/include/gtest/gtest.h	/^  Test::TearDownTestCaseFunc tear_down_tc_;$/;"	m	class:testing::TestCase
tear_down_was_run	test/gtest/test/gtest_environment_test.cc	/^  bool tear_down_was_run() const { return tear_down_was_run_; }$/;"	f	class:__anon21::MyEnvironment
tear_down_was_run_	test/gtest/test/gtest_environment_test.cc	/^  bool tear_down_was_run_;$/;"	m	class:__anon21::MyEnvironment	file:
testAliasesOfYesAndNo	test/gtest/test/gtest_color_test.py	/^  def testAliasesOfYesAndNo(self):$/;"	m	class:GTestColorTest
testBadFilter	test/gtest/test/gtest_filter_unittest.py	/^  def testBadFilter(self):$/;"	m	class:GTestFilterUnitTest
testBreakOnFailureOverridesThrowOnFailure	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def testBreakOnFailureOverridesThrowOnFailure(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testCatchExceptionsDoesNotInterfere	test/gtest/test/gtest_break_on_failure_unittest.py	/^    def testCatchExceptionsDoesNotInterfere(self):$/;"	f	function:GTestBreakOnFailureUnitTest.testBreakOnFailureOverridesThrowOnFailure
testCatchesCxxExceptionsInFixtureConstructor	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInFixtureConstructor(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInFixtureDestructor	test/gtest/test/gtest_catch_exceptions_test.py	/^    def testCatchesCxxExceptionsInFixtureDestructor(self):$/;"	f	function:CatchCxxExceptionsTest.testCatchesCxxExceptionsInFixtureConstructor
testCatchesCxxExceptionsInSetUp	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInSetUp(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInSetUpTestCase	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInSetUpTestCase(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTearDown	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTearDown(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTearDownTestCase	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTearDownTestCase(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesCxxExceptionsInTestBody	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesCxxExceptionsInTestBody(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesNonStdCxxExceptions	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testCatchesNonStdCxxExceptions(self):$/;"	m	class:CatchCxxExceptionsTest
testCatchesSehExceptionsWithCxxExceptionsDisabled	test/gtest/test/gtest_catch_exceptions_test.py	/^    def testCatchesSehExceptionsWithCxxExceptionsDisabled(self):$/;"	m	class:CatchSehExceptionsTest
testCatchesSehExceptionsWithCxxExceptionsEnabled	test/gtest/test/gtest_catch_exceptions_test.py	/^    def testCatchesSehExceptionsWithCxxExceptionsEnabled(self):$/;"	m	class:CatchSehExceptionsTest
testDefaultBehavior	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testDefaultBehavior	test/gtest/test/gtest_filter_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestFilterUnitTest
testDefaultBehavior	test/gtest/test/gtest_list_tests_unittest.py	/^  def testDefaultBehavior(self):$/;"	m	class:GTestListTestsUnitTest
testDefaultBehavior	test/gtest/test/gtest_throw_on_failure_test.py	/^  def testDefaultBehavior(self):$/;"	m	class:ThrowOnFailureTest
testDefaultBehaviorWithShards	test/gtest/test/gtest_filter_unittest.py	/^  def testDefaultBehaviorWithShards(self):$/;"	m	class:GTestFilterUnitTest
testDefaultOutputFile	test/gtest/test/gtest_xml_output_unittest.py	/^  def testDefaultOutputFile(self):$/;"	m	class:GTestXMLOutputUnitTest
testEmptyFilter	test/gtest/test/gtest_filter_unittest.py	/^  def testEmptyFilter(self):$/;"	m	class:GTestFilterUnitTest
testEmptyXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^  def testEmptyXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testEnvVar	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def testEnvVar(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testEnvVarAffectsFlag	test/gtest/test/gtest_env_var_test.py	/^  def testEnvVarAffectsFlag(self):$/;"	m	class:GTestEnvVarTest
testEnvVarAndFlag	test/gtest/test/gtest_color_test.py	/^  def testEnvVarAndFlag(self):$/;"	m	class:GTestColorTest
testEnvVarOnly	test/gtest/test/gtest_color_test.py	/^  def testEnvVarOnly(self):$/;"	m	class:GTestColorTest
testExitCodeAndOutput	test/gtest/test/gtest_uninitialized_test.py	/^  def testExitCodeAndOutput(self):$/;"	m	class:GTestUninitializedTest
testFilterByTest	test/gtest/test/gtest_filter_unittest.py	/^  def testFilterByTest(self):$/;"	m	class:GTestFilterUnitTest
testFilterByTestCase	test/gtest/test/gtest_filter_unittest.py	/^  def testFilterByTestCase(self):$/;"	m	class:GTestFilterUnitTest
testFilterDisabledTests	test/gtest/test/gtest_filter_unittest.py	/^  def testFilterDisabledTests(self):$/;"	m	class:GTestFilterUnitTest
testFilterWithoutDot	test/gtest/test/gtest_filter_unittest.py	/^  def testFilterWithoutDot(self):$/;"	m	class:GTestFilterUnitTest
testFilteredTestXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^  def testFilteredTestXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testFlag	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def testFlag(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testFlag	test/gtest/test/gtest_list_tests_unittest.py	/^  def testFlag(self):$/;"	m	class:GTestListTestsUnitTest
testFlagOnly	test/gtest/test/gtest_color_test.py	/^  def testFlagOnly(self):$/;"	m	class:GTestColorTest
testFlagOverridesEnvVar	test/gtest/test/gtest_break_on_failure_unittest.py	/^  def testFlagOverridesEnvVar(self):$/;"	m	class:GTestBreakOnFailureUnitTest
testFlagOverridesEnvVar	test/gtest/test/gtest_filter_unittest.py	/^  def testFlagOverridesEnvVar(self):$/;"	m	class:GTestFilterUnitTest
testFullName	test/gtest/test/gtest_filter_unittest.py	/^  def testFullName(self):$/;"	m	class:GTestFilterUnitTest
testNegativeFilters	test/gtest/test/gtest_filter_unittest.py	/^  def testNegativeFilters(self):$/;"	m	class:GTestFilterUnitTest
testNoEnvVarNoFlag	test/gtest/test/gtest_color_test.py	/^  def testNoEnvVarNoFlag(self):$/;"	m	class:GTestColorTest
testNonEmptyXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^    def testNonEmptyXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testOutfile1	test/gtest/test/gtest_xml_outfiles_test.py	/^  def testOutfile1(self):$/;"	m	class:GTestXMLOutFilesTest
testOutfile2	test/gtest/test/gtest_xml_outfiles_test.py	/^  def testOutfile2(self):$/;"	m	class:GTestXMLOutFilesTest
testOutput	test/gtest/test/gtest_output_test.py	/^  def testOutput(self):$/;"	m	class:GTestOutputTest
testOverrideNonFilterFlags	test/gtest/test/gtest_list_tests_unittest.py	/^  def testOverrideNonFilterFlags(self):$/;"	m	class:GTestListTestsUnitTest
testPrintsHelpWithFullFlag	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithFullFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithIncorrectFlagStyle	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithIncorrectFlagStyle(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithQuestionFlag	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithQuestionFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithShortFlag	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithShortFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithUnrecognizedGoogleTestFlag	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithUnrecognizedGoogleTestFlag(self):$/;"	m	class:GTestHelpTest
testPrintsHelpWithWindowsStyleQuestionFlag	test/gtest/test/gtest_help_test.py	/^  def testPrintsHelpWithWindowsStyleQuestionFlag(self):$/;"	m	class:GTestHelpTest
testRunsTestsWithGtestInternalFlag	test/gtest/test/gtest_help_test.py	/^  def testRunsTestsWithGtestInternalFlag(self):$/;"	m	class:GTestHelpTest
testRunsTestsWithoutHelpFlag	test/gtest/test/gtest_help_test.py	/^  def testRunsTestsWithoutHelpFlag(self):$/;"	m	class:GTestHelpTest
testShardStatusFileIsCreated	test/gtest/test/gtest_filter_unittest.py	/^  def testShardStatusFileIsCreated(self):$/;"	m	class:GTestFilterUnitTest
testShardStatusFileIsCreatedWithListTests	test/gtest/test/gtest_filter_unittest.py	/^  def testShardStatusFileIsCreatedWithListTests(self):$/;"	m	class:GTestFilterUnitTest
testShardingWorksWithDeathTests	test/gtest/test/gtest_filter_unittest.py	/^    def testShardingWorksWithDeathTests(self):$/;"	f	function:GTestFilterUnitTest.testShardStatusFileIsCreatedWithListTests
testShuffleChangesTestCaseOrder	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleChangesTestCaseOrder(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleChangesTestOrder	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleChangesTestOrder(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotCreateNewTest	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotCreateNewTest(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotInterleaveTestCases	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotInterleaveTestCases(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleDoesNotRepeatTest	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleDoesNotRepeatTest(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleGeneratesNewOrderInEachIteration	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleGeneratesNewOrderInEachIteration(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleIncludesAllTests	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleIncludesAllTests(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleLeavesDeathTestsAtFront	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleLeavesDeathTestsAtFront(self):$/;"	m	class:GTestShuffleUnitTest
testShufflePreservesNumberOfTests	test/gtest/test/gtest_shuffle_test.py	/^  def testShufflePreservesNumberOfTests(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleRestoresOrderAfterEachIteration	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleRestoresOrderAfterEachIteration(self):$/;"	m	class:GTestShuffleUnitTest
testShuffleShardedTestsPreservesPartition	test/gtest/test/gtest_shuffle_test.py	/^  def testShuffleShardedTestsPreservesPartition(self):$/;"	m	class:GTestShuffleUnitTest
testSuppressedXmlOutput	test/gtest/test/gtest_xml_output_unittest.py	/^  def testSuppressedXmlOutput(self):$/;"	m	class:GTestXMLOutputUnitTest
testThreePatterns	test/gtest/test/gtest_filter_unittest.py	/^  def testThreePatterns(self):$/;"	m	class:GTestFilterUnitTest
testThrowOnFailureEnvVar	test/gtest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureEnvVar(self):$/;"	m	class:ThrowOnFailureTest
testThrowOnFailureFlag	test/gtest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureFlag(self):$/;"	m	class:ThrowOnFailureTest
testThrowOnFailureFlagOverridesEnvVar	test/gtest/test/gtest_throw_on_failure_test.py	/^  def testThrowOnFailureFlagOverridesEnvVar(self):$/;"	m	class:ThrowOnFailureTest
testTimestampValue	test/gtest/test/gtest_xml_output_unittest.py	/^  def testTimestampValue(self):$/;"	m	class:GTestXMLOutputUnitTest
testTwoPatterns	test/gtest/test/gtest_filter_unittest.py	/^  def testTwoPatterns(self):$/;"	m	class:GTestFilterUnitTest
testUnhandledCxxExceptionsAbortTheProgram	test/gtest/test/gtest_catch_exceptions_test.py	/^  def testUnhandledCxxExceptionsAbortTheProgram(self):$/;"	m	class:CatchCxxExceptionsTest
testUniversalFilters	test/gtest/test/gtest_filter_unittest.py	/^  def testUniversalFilters(self):$/;"	m	class:GTestFilterUnitTest
testWildcardInTestCaseName	test/gtest/test/gtest_filter_unittest.py	/^  def testWildcardInTestCaseName(self):$/;"	m	class:GTestFilterUnitTest
testWildcardInTestName	test/gtest/test/gtest_filter_unittest.py	/^  def testWildcardInTestName(self):$/;"	m	class:GTestFilterUnitTest
testWithFilterFlags	test/gtest/test/gtest_list_tests_unittest.py	/^  def testWithFilterFlags(self):$/;"	m	class:GTestListTestsUnitTest
test_	test/gtest/fused-src/gtest/gtest.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel
test_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel
test_base_name	test/gtest/fused-src/gtest/gtest.h	/^    const string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_base_name	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_body_count_	test/gtest/test/gtest-param-test_test.cc	/^  int test_body_count_;$/;"	m	class:TestGenerationEnvironment	file:
test_case_base_name	test/gtest/fused-src/gtest/gtest.h	/^    const string test_case_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_case_base_name	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const string test_case_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_case_indices_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<int> test_case_indices_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_case_indices_	test/gtest/src/gtest-internal-inl.h	/^  std::vector<int> test_case_indices_;$/;"	m	class:testing::internal::UnitTestImpl
test_case_infos_	test/gtest/fused-src/gtest/gtest.h	/^  TestCaseInfoContainer test_case_infos_;$/;"	m	class:testing::internal::ParameterizedTestCaseRegistry
test_case_infos_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestCaseInfoContainer test_case_infos_;$/;"	m	class:testing::internal::ParameterizedTestCaseRegistry
test_case_name	test/gtest/fused-src/gtest/gtest.h	/^  const char* test_case_name() const { return test_case_name_.c_str(); }$/;"	f	class:testing::TestInfo
test_case_name	test/gtest/include/gtest/gtest.h	/^  const char* test_case_name() const { return test_case_name_.c_str(); }$/;"	f	class:testing::TestInfo
test_case_name_	test/gtest/fused-src/gtest/gtest.h	/^  const std::string test_case_name_;     \/\/ Test case name$/;"	m	class:testing::TestInfo
test_case_name_	test/gtest/fused-src/gtest/gtest.h	/^  const string test_case_name_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
test_case_name_	test/gtest/include/gtest/gtest.h	/^  const std::string test_case_name_;     \/\/ Test case name$/;"	m	class:testing::TestInfo
test_case_name_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  const string test_case_name_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
test_case_to_run_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest
test_case_to_run_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::test_case_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_case_to_run_count	test/gtest/src/gtest.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest
test_case_to_run_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::test_case_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_cases_	test/gtest/fused-src/gtest/gtest-all.cc	/^  std::vector<TestCase*> test_cases_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_cases_	test/gtest/src/gtest-internal-inl.h	/^  std::vector<TestCase*> test_cases_;$/;"	m	class:testing::internal::UnitTestImpl
test_deleted_	test/gtest/test/gtest-death-test_test.cc	/^  bool test_deleted_;$/;"	m	class:MockDeathTestFactory	file:
test_fail	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^void test_fail(char *file, int line, char *call, int retval)$/;"	f	file:
test_fail	experiments/benchmarks/src/polybench/utilities/polybench.c	/^void test_fail(char *file, int line, char *call, int retval)$/;"	f	file:
test_generation_params	test/gtest/test/gtest-param-test_test.cc	/^const int test_generation_params[] = {36, 42, 72};$/;"	v
test_indices_	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestCase
test_indices_	test/gtest/include/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestCase
test_info_list	test/gtest/fused-src/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestCase
test_info_list	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestCase
test_info_list	test/gtest/include/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestCase
test_info_list	test/gtest/include/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestCase
test_info_list_	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestCase
test_info_list_	test/gtest/include/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestCase
test_info_obj_	test/gtest/test/gtest_unittest.cc	/^  TestInfo test_info_obj_;  \/\/ The name test_info_ was taken by testing::Test.$/;"	m	class:testing::internal::StreamingListenerTest	file:
test_list	test/gtest/test/gtest_output_test.py	/^test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)$/;"	v
test_lists	experiments/backup/benchmarks/src/base/lists.c	/^int test_lists() {$/;"	f
test_lists	experiments/benchmarks/src/base/lists.c	/^int test_lists() {$/;"	f
test_meta_factory	test/gtest/fused-src/gtest/gtest.h	/^    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_meta_factory	test/gtest/include/gtest/internal/gtest-param-util.h	/^    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_part_results	test/gtest/fused-src/gtest/gtest-all.cc	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor
test_part_results	test/gtest/fused-src/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult
test_part_results	test/gtest/include/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult
test_part_results	test/gtest/src/gtest-internal-inl.h	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor
test_part_results_	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult
test_part_results_	test/gtest/include/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult
test_properites_mutex_	test/gtest/fused-src/gtest/gtest.h	/^  internal::Mutex test_properites_mutex_;$/;"	m	class:testing::TestResult
test_properites_mutex_	test/gtest/include/gtest/gtest.h	/^  internal::Mutex test_properites_mutex_;$/;"	m	class:testing::TestResult
test_properties	test/gtest/fused-src/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult
test_properties	test/gtest/include/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult
test_properties_	test/gtest/fused-src/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult
test_properties_	test/gtest/include/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult
test_property_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult
test_property_count	test/gtest/src/gtest.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult
test_to_run_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::test_to_run_count() const {$/;"	f	class:testing::TestCase
test_to_run_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest
test_to_run_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_to_run_count	test/gtest/src/gtest.cc	/^int TestCase::test_to_run_count() const {$/;"	f	class:testing::TestCase
test_to_run_count	test/gtest/src/gtest.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest
test_to_run_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_was_run	test/gtest/test/gtest_environment_test.cc	/^bool test_was_run;$/;"	m	namespace:__anon21	file:
testcase	experiments/backup/benchmarks/src/base/fbench.c	/^static double testcase[4][4] = {$/;"	v	file:
testcase	experiments/benchmarks/src/base/fbench.c	/^static double testcase[4][4] = {$/;"	v	file:
testdata_file_	test/gtest/test/gtest-filepath_test.cc	/^  FilePath testdata_file_;  \/\/ "\/tmp\/directory_creation\/test"$/;"	m	class:testing::internal::__anon22::DirectoryCreationTest	file:
testdata_path_	test/gtest/test/gtest-filepath_test.cc	/^  FilePath testdata_path_;  \/\/ "\/tmp\/directory_creation\/test\/"$/;"	m	class:testing::internal::__anon22::DirectoryCreationTest	file:
testing	test/gtest/fused-src/gtest/gtest-all.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/fused-src/gtest/gtest.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-death-test.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-message.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-param-test.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-printers.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-spi.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest-test-part.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/gtest.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-filepath.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-internal.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-param-util.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-port.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-string.h	/^namespace testing {$/;"	n
testing	test/gtest/include/gtest/internal/gtest-type-util.h	/^namespace testing {$/;"	n
testing	test/gtest/src/gtest-death-test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest-filepath.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest-internal-inl.h	/^namespace testing {$/;"	n
testing	test/gtest/src/gtest-port.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest-printers.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest-test-part.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest-typed-test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/src/gtest.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-death-test_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-filepath_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-listener_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-options_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-port_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-printers_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest-unittest-api_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_env_var_test_.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_environment_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_repeat_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_stress_test.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_unittest.cc	/^namespace testing {$/;"	n	file:
testing	test/gtest/test/gtest_unittest.cc	/^namespace testing {$/;"	n	namespace:my_namespace	file:
testing_internal	test/gtest/fused-src/gtest/gtest.h	/^namespace testing_internal {$/;"	n
testing_internal	test/gtest/include/gtest/gtest-printers.h	/^namespace testing_internal {$/;"	n
tests_	test/gtest/fused-src/gtest/gtest.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
tests_	test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
text_end	include/Profiling/papi.h	/^      caddr_t text_end;         \/* End address of program text segment *\/$/;"	m	struct:_papi_address_map
text_start	include/Profiling/papi.h	/^      caddr_t text_start;       \/* Start address of program text segment *\/$/;"	m	struct:_papi_address_map
thread_	test/gtest/fused-src/gtest/gtest.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:std::tr1::ThreadWithParam
thread_	test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:testing::internal::ThreadWithParam
thread_	test/gtest/test/gtest_output_test_.cc	/^  scoped_ptr<ThreadWithParam<SpawnThreadNotifications*> > thread_;$/;"	m	class:DeathTestAndMultiThreadsTest	file:
thread_can_start_	test/gtest/fused-src/gtest/gtest.h	/^  Notification* const thread_can_start_;$/;"	m	class:std::tr1::ThreadWithParam
thread_can_start_	test/gtest/include/gtest/internal/gtest-port.h	/^  Notification* const thread_can_start_;$/;"	m	class:testing::internal::ThreadWithParam
three	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
three	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
throw_on_failure	test/gtest/test/gtest_unittest.cc	/^  bool throw_on_failure;$/;"	m	struct:testing::Flags	file:
throw_on_failure_	test/gtest/fused-src/gtest/gtest-all.cc	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
throw_on_failure_	test/gtest/src/gtest-internal-inl.h	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver
tipOpenImminent	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
tlb	include/Profiling/papi.h	/^      PAPI_mh_tlb_info_t   tlb[2];$/;"	m	struct:_papi_mh_level_info
tms	experiments/backup/benchmarks/src/base/flops.c	/^struct tbuffer_t tms;$/;"	v	typeref:struct:tbuffer_t
tms	experiments/backup/benchmarks/src/base/flops.c	/^struct tms tms;$/;"	v	typeref:struct:tms
tms	experiments/benchmarks/src/base/flops.c	/^struct tbuffer_t tms;$/;"	v	typeref:struct:tbuffer_t
tms	experiments/benchmarks/src/base/flops.c	/^struct tms tms;$/;"	v	typeref:struct:tms
tnow	experiments/backup/benchmarks/src/base/flops.c	/^clock_t tnow;$/;"	v
tnow	experiments/backup/benchmarks/src/base/flops.c	/^struct time tnow;$/;"	v	typeref:struct:time
tnow	experiments/backup/benchmarks/src/base/flops.c	/^struct timeval tnow;$/;"	v	typeref:struct:timeval
tnow	experiments/benchmarks/src/base/flops.c	/^clock_t tnow;$/;"	v
tnow	experiments/benchmarks/src/base/flops.c	/^struct time tnow;$/;"	v	typeref:struct:time
tnow	experiments/benchmarks/src/base/flops.c	/^struct timeval tnow;$/;"	v	typeref:struct:timeval
to	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	char from, to;$/;"	m	class:HexxagonMove
to	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	char from, to;$/;"	m	class:HexxagonMove
toASCIILower	experiments/backup/benchmarks/src/base/lowercase.c	/^static inline UChar toASCIILower(UChar c) { return c | ((c >= 'A' && c <= 'Z') << 5); }$/;"	f	file:
toASCIILower	experiments/benchmarks/src/base/lowercase.c	/^static inline UChar toASCIILower(UChar c) { return c | ((c >= 'A' && c <= 'Z') << 5); }$/;"	f	file:
to_index	experiments/backup/benchmarks/src/base/fbench.c	/^static double to_index;$/;"	v	file:
to_index	experiments/benchmarks/src/base/fbench.c	/^static double to_index;$/;"	v	file:
toggleFolder	docs/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	docs/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	docs/html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	docs/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
toggle_activate	experiments/backup/benchmarks/src/base/methcall.c	/^Toggle *toggle_activate(Toggle *this) {$/;"	f
toggle_activate	experiments/backup/benchmarks/src/base/objinst.c	/^Toggle *toggle_activate(Toggle *this) {$/;"	f
toggle_activate	experiments/benchmarks/src/base/methcall.c	/^Toggle *toggle_activate(Toggle *this) {$/;"	f
toggle_activate	experiments/benchmarks/src/base/objinst.c	/^Toggle *toggle_activate(Toggle *this) {$/;"	f
toggle_value	experiments/backup/benchmarks/src/base/methcall.c	/^char toggle_value(Toggle *this) {$/;"	f
toggle_value	experiments/backup/benchmarks/src/base/objinst.c	/^char toggle_value(Toggle *this) {$/;"	f
toggle_value	experiments/benchmarks/src/base/methcall.c	/^char toggle_value(Toggle *this) {$/;"	f
toggle_value	experiments/benchmarks/src/base/objinst.c	/^char toggle_value(Toggle *this) {$/;"	f
top	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:p
top	experiments/backup/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/backup/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/bubblesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/intmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/oscar.c	/^int sortlist[sortelements + 1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/perm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/puzzle-stanford.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/queens.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/quicksort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/realmm.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/towers.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
top	experiments/benchmarks/src/base/treesort.c	/^int sortlist[sortelements+1], biggest, littlest, top;$/;"	v
topologicalSort	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^std::list<Function*>& topologicalSort(CallGraph &CG) {$/;"	f
total	experiments/backup/benchmarks/src/SciMark2-C/Stopwatch.h	/^    double total;$/;"	m	struct:__anon57
total	experiments/benchmarks/src/SciMark2-C/Stopwatch.h	/^    double total;$/;"	m	struct:__anon44
total_memory	include/Profiling/papi.h	/^      long_long total_memory;$/;"	m	struct:_dmem_t
total_part_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult
total_part_count	test/gtest/src/gtest.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult
total_swapping	include/Profiling/papi.h	/^      long_long total_swapping;$/;"	m	struct:_dmem_t
total_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest
total_test_case_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::total_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_test_case_count	test/gtest/src/gtest.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest
total_test_case_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::total_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int TestCase::total_test_count() const {$/;"	f	class:testing::TestCase
total_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest
total_test_count	test/gtest/fused-src/gtest/gtest-all.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_test_count	test/gtest/src/gtest.cc	/^int TestCase::total_test_count() const {$/;"	f	class:testing::TestCase
total_test_count	test/gtest/src/gtest.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest
total_test_count	test/gtest/src/gtest.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_var_	test/gtest/test/gtest_unittest.cc	/^  const char* total_var_;$/;"	m	class:__anon14::ShouldShardTest	file:
totalcpus	include/Profiling/papi.h	/^      int totalcpus;                \/* Total number of CPU's in the entire system *\/$/;"	m	struct:_papi_hw_info
tower	experiments/backup/benchmarks/src/base/towers.c	/^void tower(int i, int j, int k) {$/;"	f
tower	experiments/benchmarks/src/base/towers.c	/^void tower(int i, int j, int k) {$/;"	f
towersbase	experiments/backup/benchmarks/src/base/bubblesort.c	10;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/intmm.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/oscar.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/perm.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/queens.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/quicksort.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/realmm.c	13;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/towers.c	11;"	d	file:
towersbase	experiments/backup/benchmarks/src/base/treesort.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/bubblesort.c	10;"	d	file:
towersbase	experiments/benchmarks/src/base/intmm.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/oscar.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/perm.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/puzzle-stanford.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/queens.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/quicksort.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/realmm.c	13;"	d	file:
towersbase	experiments/benchmarks/src/base/towers.c	11;"	d	file:
towersbase	experiments/benchmarks/src/base/treesort.c	11;"	d	file:
tr1	test/gtest/fused-src/gtest/gtest.h	/^namespace tr1 {$/;"	n	namespace:std
tr1	test/gtest/include/gtest/internal/gtest-port.h	/^namespace tr1 {$/;"	n	namespace:std
tr1	test/gtest/include/gtest/internal/gtest-tuple.h	/^namespace tr1 {$/;"	n	namespace:std
trace	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^void trace(char a)$/;"	f
trace	experiments/benchmarks/src/base/richards_benchmark.c	/^void trace(char a)$/;"	f
trace_line	experiments/backup/benchmarks/src/base/fbench.c	/^static trace_line(line, ray_h)$/;"	f	file:
trace_line	experiments/benchmarks/src/base/fbench.c	/^static trace_line(line, ray_h)$/;"	f	file:
tracing	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^int     tracing      =  1;$/;"	v
tracing	experiments/benchmarks/src/base/richards_benchmark.c	/^int     tracing      =  1;$/;"	v
transit_surface	experiments/backup/benchmarks/src/base/fbench.c	/^static void transit_surface() {$/;"	f	file:
transit_surface	experiments/benchmarks/src/base/fbench.c	/^static void transit_surface() {$/;"	f	file:
tree	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/intmm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/oscar.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/perm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/queens.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/quicksort.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/realmm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/towers.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/backup/benchmarks/src/base/treesort.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/bubblesort.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/intmm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/oscar.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/perm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/queens.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/quicksort.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/realmm.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/towers.c	/^struct node *tree;$/;"	v	typeref:struct:node
tree	experiments/benchmarks/src/base/treesort.c	/^struct node *tree;$/;"	v	typeref:struct:node
treebase	experiments/backup/benchmarks/src/base/bubblesort.c	13;"	d	file:
treebase	experiments/backup/benchmarks/src/base/intmm.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/oscar.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/perm.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/puzzle-stanford.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/queens.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/quicksort.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/realmm.c	16;"	d	file:
treebase	experiments/backup/benchmarks/src/base/towers.c	14;"	d	file:
treebase	experiments/backup/benchmarks/src/base/treesort.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/bubblesort.c	13;"	d	file:
treebase	experiments/benchmarks/src/base/intmm.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/oscar.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/perm.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/puzzle-stanford.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/queens.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/quicksort.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/realmm.c	16;"	d	file:
treebase	experiments/benchmarks/src/base/towers.c	14;"	d	file:
treebase	experiments/benchmarks/src/base/treesort.c	14;"	d	file:
trialx	experiments/backup/benchmarks/src/aha/aha.h	/^int trialx[] = {1, 0, -1, MAXNEG, MAXPOS, \\$/;"	v
trialx	experiments/benchmarks/src/aha/aha.h	/^int trialx[] = {1, 0, -1, MAXNEG, MAXPOS, \\$/;"	v
trialy	experiments/backup/benchmarks/src/aha/aha.h	/^   int trialy[] = {0};$/;"	v
trialy	experiments/benchmarks/src/aha/aha.h	/^   int trialy[] = {0};$/;"	v
true	experiments/backup/benchmarks/src/base/bubblesort.c	5;"	d	file:
true	experiments/backup/benchmarks/src/base/intmm.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/methcall.c	/^enum {false, true};$/;"	e	enum:__anon61	file:
true	experiments/backup/benchmarks/src/base/objinst.c	/^enum {false, true};$/;"	e	enum:__anon62	file:
true	experiments/backup/benchmarks/src/base/oscar.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/perm.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/puzzle-stanford.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/queens.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/quicksort.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/realmm.c	8;"	d	file:
true	experiments/backup/benchmarks/src/base/towers.c	6;"	d	file:
true	experiments/backup/benchmarks/src/base/treesort.c	6;"	d	file:
true	experiments/benchmarks/src/base/bubblesort.c	5;"	d	file:
true	experiments/benchmarks/src/base/intmm.c	6;"	d	file:
true	experiments/benchmarks/src/base/methcall.c	/^enum {false, true};$/;"	e	enum:__anon48	file:
true	experiments/benchmarks/src/base/objinst.c	/^enum {false, true};$/;"	e	enum:__anon49	file:
true	experiments/benchmarks/src/base/oscar.c	6;"	d	file:
true	experiments/benchmarks/src/base/perm.c	6;"	d	file:
true	experiments/benchmarks/src/base/puzzle-stanford.c	6;"	d	file:
true	experiments/benchmarks/src/base/queens.c	6;"	d	file:
true	experiments/benchmarks/src/base/quicksort.c	6;"	d	file:
true	experiments/benchmarks/src/base/realmm.c	8;"	d	file:
true	experiments/benchmarks/src/base/towers.c	6;"	d	file:
true	experiments/benchmarks/src/base/treesort.c	6;"	d	file:
true_type	test/gtest/fused-src/gtest/gtest.h	/^typedef bool_constant<true> true_type;$/;"	t	namespace:std::tr1
true_type	test/gtest/include/gtest/internal/gtest-port.h	/^typedef bool_constant<true> true_type;$/;"	t	namespace:testing::internal
tt	experiments/backup/benchmarks/src/base/reedsolomon.c	53;"	d	file:
tt	experiments/benchmarks/src/base/reedsolomon.c	53;"	d	file:
tuple	test/gtest/fused-src/gtest/gtest.h	/^  tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),$/;"	f	class:std::tr1::tuple
tuple	test/gtest/fused-src/gtest/gtest.h	/^  tuple() {}$/;"	f	class:std::tr1::tuple
tuple	test/gtest/fused-src/gtest/gtest.h	/^  tuple(const tuple& \/* t *\/)  {}$/;"	f	class:std::tr1::tuple
tuple	test/gtest/fused-src/gtest/gtest.h	/^  tuple(const tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),$/;"	f	class:std::tr1::tuple
tuple	test/gtest/fused-src/gtest/gtest.h	/^class tuple {$/;"	c	namespace:std::tr1
tuple	test/gtest/fused-src/gtest/gtest.h	/^class tuple<> {$/;"	c	namespace:std::tr1
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),$/;"	f	class:std::tr1::tuple
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple() {}$/;"	f	class:std::tr1::tuple
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple(const tuple& \/* t *\/)  {}$/;"	f	class:std::tr1::tuple
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^  tuple(const tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),$/;"	f	class:std::tr1::tuple
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^class tuple {$/;"	c	namespace:std::tr1
tuple	test/gtest/include/gtest/internal/gtest-tuple.h	/^class tuple<> {$/;"	c	namespace:std::tr1
tuple_element	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_element {$/;"	s	namespace:std::tr1
tuple_element	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_element {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_0_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_1_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_2_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_3_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_4_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_5_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_6_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_7_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_8_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/fused-src/gtest/gtest.h	/^struct tuple_size<GTEST_9_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_0_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_1_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_2_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_3_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_4_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_5_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_6_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_7_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_8_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct tuple_size<GTEST_9_TUPLE_(T) > {$/;"	s	namespace:std::tr1
turn	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	int turn;$/;"	m	class:HexxagonGame
turn	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	int turn;$/;"	m	class:HexxagonGame
two	experiments/backup/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/backup/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-1.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-2.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-3.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-4.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-5.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-6.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-7.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops-8.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
two	experiments/benchmarks/src/base/flops.c	/^double sa,sb,sc,sd,one,two,three;$/;"	v
twopi	experiments/backup/benchmarks/src/base/fbench.c	/^	twopi =pic * 2.0,$/;"	v	file:
twopi	experiments/benchmarks/src/base/fbench.c	/^	twopi =pic * 2.0,$/;"	v	file:
type	include/Profiling/papi.h	/^      int type; \/* Empty, instr, data, vector, unified *\/$/;"	m	struct:_papi_mh_cache_info
type	include/Profiling/papi.h	/^      int type; \/* Empty, instr, data, vector, unified *\/$/;"	m	struct:_papi_mh_tlb_info
type	include/Profiling/papi.h	/^      int type;$/;"	m	struct:_papi_overflow_option
type	test/gtest/fused-src/gtest/gtest.h	/^      T12> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16, T17> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15, T16> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14, T15> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13, T14> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16, T17> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15, T16> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14, T15> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T14> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T26> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30, T31> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29, T30> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28, T29> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27, T28> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30, T31> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29, T30> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28, T29> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T28> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T40> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;$/;"	t	struct:testing::internal::TypeList
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44, T45> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43, T44> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42, T43> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41, T42> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44, T45> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43, T44> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42, T43> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^      T42> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::TestPartResult
type	test/gtest/fused-src/gtest/gtest.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind
type	test/gtest/fused-src/gtest/gtest.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T0 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T1 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T2 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T3 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T4 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T5 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T6 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T7 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T8 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T9 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates0 type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates1<T1> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates2<T1, T2> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates3<T1, T2, T3> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates4<T1, T2, T3, T4> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Types1<T> type;$/;"	t	struct:testing::internal::TypeList
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef bool type;$/;"	t	struct:testing::internal::AssertTypeEq
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef bool_constant<bool_value> type;$/;"	t	struct:std::tr1::bool_constant
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types0 type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types1<T1> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types2<T1, T2> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types3<T1, T2, T3> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types4<T1, T2, T3, T4> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::Types
type	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename RemoveConst<T>::type type[N];$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/fused-src/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	test/gtest/fused-src/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	test/gtest/fused-src/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	test/gtest/fused-src/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	test/gtest/fused-src/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	test/gtest/fused-src/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	test/gtest/fused-src/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	test/gtest/fused-src/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::EnableIf
type	test/gtest/include/gtest/gtest-test-part.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult
type	test/gtest/include/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::TestPartResult
type	test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef typename RemoveConst<T>::type type[N];$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	test/gtest/include/gtest/internal/gtest-internal.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	test/gtest/include/gtest/internal/gtest-internal.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::EnableIf
type	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef bool_constant<bool_value> type;$/;"	t	struct:testing::internal::bool_constant
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T0 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T1 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T2 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T3 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T4 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T5 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T6 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T7 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T8 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^  typedef T9 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	test/gtest/include/gtest/internal/gtest-tuple.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T12> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16, T17> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15, T16> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14, T15> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13, T14> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T13> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16, T17> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15, T16> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14, T15> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T14> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T26> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30, T31> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29, T30> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28, T29> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27, T28> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T27> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30, T31> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29, T30> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28, T29> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T28> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T40> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;$/;"	t	struct:testing::internal::TypeList
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44, T45> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43, T44> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42, T43> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41, T42> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T41> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44, T45> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43, T44> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42, T43> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^      T42> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates0 type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates1<T1> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates2<T1, T2> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates3<T1, T2, T3> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates4<T1, T2, T3, T4> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::internal::Templates
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef Types1<T> type;$/;"	t	struct:testing::internal::TypeList
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef bool type;$/;"	t	struct:testing::internal::AssertTypeEq
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types0 type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types1<T1> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types2<T1, T2> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types3<T1, T2, T3> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types4<T1, T2, T3, T4> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::Types
type	test/gtest/include/gtest/internal/gtest-type-util.h	/^  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::Types
type_	test/gtest/fused-src/gtest/gtest-all.cc	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
type_	test/gtest/fused-src/gtest/gtest.h	/^  Type type_;$/;"	m	class:testing::TestPartResult
type_	test/gtest/include/gtest/gtest-spi.h	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker
type_	test/gtest/include/gtest/gtest-test-part.h	/^  Type type_;$/;"	m	class:testing::TestPartResult
type_param	test/gtest/fused-src/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestCase
type_param	test/gtest/fused-src/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo
type_param	test/gtest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestCase
type_param	test/gtest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo
type_param_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestCase
type_param_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo
type_param_	test/gtest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestCase
type_param_	test/gtest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo
typemax	experiments/backup/benchmarks/src/base/bubblesort.c	26;"	d	file:
typemax	experiments/backup/benchmarks/src/base/intmm.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/oscar.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/perm.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/puzzle-stanford.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/queens.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/quicksort.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/realmm.c	31;"	d	file:
typemax	experiments/backup/benchmarks/src/base/towers.c	29;"	d	file:
typemax	experiments/backup/benchmarks/src/base/treesort.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/bubblesort.c	26;"	d	file:
typemax	experiments/benchmarks/src/base/intmm.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/oscar.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/perm.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/puzzle-stanford.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/queens.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/quicksort.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/realmm.c	31;"	d	file:
typemax	experiments/benchmarks/src/base/towers.c	29;"	d	file:
typemax	experiments/benchmarks/src/base/treesort.c	29;"	d	file:
u_	test/gtest/fused-src/gtest/gtest.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint
u_	test/gtest/include/gtest/internal/gtest-internal.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint
u_long_long	include/Profiling/papi.h	295;"	d
unSetBit	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::unSetBit(int bit)$/;"	f	class:BitBoard64
unSetBit	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^void BitBoard64::unSetBit(int bit)$/;"	f	class:BitBoard64
unacceptable	experiments/backup/benchmarks/src/aha/aha.h	/^int unacceptable;               \/\/ Code below sets this to 1 for an$/;"	v
unacceptable	experiments/benchmarks/src/aha/aha.h	/^int unacceptable;               \/\/ Code below sets this to 1 for an$/;"	v
uncaptured_fd_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	file:
uncaptured_fd_	test/gtest/src/gtest-port.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	file:
unique_file0_	test/gtest/test/gtest-filepath_test.cc	/^  FilePath unique_file0_;  \/\/ "\/tmp\/directory_creation\/test\/unique.txt"$/;"	m	class:testing::internal::__anon22::DirectoryCreationTest	file:
unique_file1_	test/gtest/test/gtest-filepath_test.cc	/^  FilePath unique_file1_;  \/\/ "\/tmp\/directory_creation\/test\/unique_1.txt"$/;"	m	class:testing::internal::__anon22::DirectoryCreationTest	file:
unit_test_	test/gtest/fused-src/gtest/gtest-all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter	file:
unit_test_	test/gtest/fused-src/gtest/gtest-all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter	file:
unit_test_	test/gtest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter
unit_test_	test/gtest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter
unit_test_	test/gtest/test/gtest_unittest.cc	/^  UnitTest unit_test_;$/;"	m	class:testing::internal::StreamingListenerTest	file:
unit_test_	test/gtest/test/gtest_unittest.cc	/^  UnitTest unit_test_;$/;"	m	class:testing::internal::UnitTestRecordPropertyTestHelper	file:
unit_test_impl_	test/gtest/test/gtest-death-test_test.cc	/^  UnitTestImpl* unit_test_impl_;$/;"	m	class:testing::internal::ReplaceDeathTestFactory	file:
updateStripes	docs/html/dynsections.js	/^function updateStripes()$/;"	f
us	include/Profiling/papi.h	/^      int us;$/;"	m	struct:_papi_multiplex_option
userfun	experiments/backup/benchmarks/src/aha/userfun.c	/^int userfun(int x) {$/;"	f
userfun	experiments/benchmarks/src/aha/userfun.c	/^int userfun(int x) {$/;"	f
v1	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^long    v1;$/;"	v
v1	experiments/benchmarks/src/base/richards_benchmark.c	/^long    v1;$/;"	v
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray10
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray11
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray12
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray13
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray14
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray15
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray16
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray17
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray18
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray19
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray20
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray21
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray22
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray23
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray24
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray25
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray26
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray27
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray28
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray29
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray30
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray31
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray32
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray33
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray34
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray35
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray36
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray37
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray38
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray39
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray40
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray41
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray42
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray43
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray44
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray45
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray46
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray47
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray48
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray49
v10_	test/gtest/fused-src/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray50
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray10
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray11
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray12
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray13
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray14
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray15
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray16
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray17
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray18
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray19
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray20
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray21
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray22
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray23
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray24
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray25
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray26
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray27
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray28
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray29
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray30
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray31
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray32
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray33
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray34
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray35
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray36
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray37
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray38
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray39
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray40
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray41
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray42
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray43
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray44
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray45
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray46
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray47
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray48
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray49
v10_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray50
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray11
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray12
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray13
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray14
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray15
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray16
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray17
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray18
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray19
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray20
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray21
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray22
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray23
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray24
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray25
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray26
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray27
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray28
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray29
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray30
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray31
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray32
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray33
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray34
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray35
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray36
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray37
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray38
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray39
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray40
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray41
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray42
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray43
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray44
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray45
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray46
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray47
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray48
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray49
v11_	test/gtest/fused-src/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray50
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray11
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray12
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray13
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray14
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray15
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray16
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray17
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray18
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray19
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray20
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray21
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray22
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray23
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray24
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray25
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray26
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray27
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray28
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray29
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray30
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray31
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray32
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray33
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray34
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray35
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray36
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray37
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray38
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray39
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray40
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray41
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray42
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray43
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray44
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray45
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray46
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray47
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray48
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray49
v11_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray50
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray12
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray13
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray14
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray15
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray16
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray17
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray18
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray19
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray20
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray21
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray22
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray23
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray24
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray25
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray26
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray27
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray28
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray29
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray30
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray31
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray32
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray33
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray34
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray35
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray36
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray37
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray38
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray39
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray40
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray41
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray42
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray43
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray44
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray45
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray46
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray47
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray48
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray49
v12_	test/gtest/fused-src/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray50
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray12
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray13
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray14
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray15
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray16
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray17
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray18
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray19
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray20
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray21
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray22
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray23
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray24
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray25
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray26
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray27
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray28
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray29
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray30
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray31
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray32
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray33
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray34
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray35
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray36
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray37
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray38
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray39
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray40
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray41
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray42
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray43
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray44
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray45
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray46
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray47
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray48
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray49
v12_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray50
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray13
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray14
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray15
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray16
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray17
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray18
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray19
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray20
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray21
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray22
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray23
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray24
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray25
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray26
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray27
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray28
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray29
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray30
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray31
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray32
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray33
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray34
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray35
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray36
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray37
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray38
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray39
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray40
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray41
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray42
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray43
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray44
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray45
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray46
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray47
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray48
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray49
v13_	test/gtest/fused-src/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray50
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray13
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray14
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray15
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray16
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray17
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray18
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray19
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray20
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray21
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray22
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray23
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray24
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray25
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray26
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray27
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray28
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray29
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray30
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray31
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray32
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray33
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray34
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray35
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray36
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray37
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray38
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray39
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray40
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray41
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray42
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray43
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray44
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray45
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray46
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray47
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray48
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray49
v13_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray50
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray14
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray15
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray16
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray17
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray18
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray19
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray20
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray21
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray22
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray23
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray24
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray25
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray26
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray27
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray28
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray29
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray30
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray31
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray32
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray33
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray34
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray35
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray36
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray37
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray38
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray39
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray40
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray41
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray42
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray43
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray44
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray45
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray46
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray47
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray48
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray49
v14_	test/gtest/fused-src/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray50
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray14
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray15
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray16
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray17
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray18
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray19
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray20
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray21
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray22
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray23
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray24
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray25
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray26
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray27
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray28
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray29
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray30
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray31
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray32
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray33
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray34
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray35
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray36
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray37
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray38
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray39
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray40
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray41
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray42
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray43
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray44
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray45
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray46
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray47
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray48
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray49
v14_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray50
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray15
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray16
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray17
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray18
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray19
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray20
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray21
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray22
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray23
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray24
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray25
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray26
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray27
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray28
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray29
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray30
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray31
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray32
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray33
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray34
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray35
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray36
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray37
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray38
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray39
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray40
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray41
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray42
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray43
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray44
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray45
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray46
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray47
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray48
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray49
v15_	test/gtest/fused-src/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray50
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray15
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray16
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray17
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray18
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray19
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray20
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray21
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray22
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray23
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray24
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray25
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray26
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray27
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray28
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray29
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray30
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray31
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray32
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray33
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray34
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray35
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray36
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray37
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray38
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray39
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray40
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray41
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray42
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray43
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray44
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray45
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray46
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray47
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray48
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray49
v15_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray50
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray16
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray17
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray18
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray19
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray20
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray21
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray22
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray23
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray24
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray25
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray26
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray27
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray28
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray29
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray30
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray31
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray32
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray33
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray34
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray35
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray36
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray37
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray38
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray39
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray40
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray41
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray42
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray43
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray44
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray45
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray46
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray47
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray48
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray49
v16_	test/gtest/fused-src/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray50
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray16
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray17
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray18
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray19
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray20
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray21
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray22
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray23
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray24
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray25
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray26
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray27
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray28
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray29
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray30
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray31
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray32
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray33
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray34
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray35
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray36
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray37
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray38
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray39
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray40
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray41
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray42
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray43
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray44
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray45
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray46
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray47
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray48
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray49
v16_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray50
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray17
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray18
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray19
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray20
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray21
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray22
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray23
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray24
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray25
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray26
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray27
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray28
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray29
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray30
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray31
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray32
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray33
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray34
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray35
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray36
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray37
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray38
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray39
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray40
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray41
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray42
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray43
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray44
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray45
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray46
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray47
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray48
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray49
v17_	test/gtest/fused-src/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray50
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray17
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray18
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray19
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray20
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray21
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray22
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray23
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray24
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray25
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray26
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray27
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray28
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray29
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray30
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray31
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray32
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray33
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray34
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray35
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray36
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray37
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray38
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray39
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray40
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray41
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray42
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray43
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray44
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray45
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray46
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray47
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray48
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray49
v17_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray50
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray18
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray19
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray20
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray21
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray22
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray23
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray24
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray25
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray26
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray27
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray28
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray29
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray30
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray31
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray32
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray33
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray34
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray35
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray36
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray37
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray38
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray39
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray40
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray41
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray42
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray43
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray44
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray45
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray46
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray47
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray48
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray49
v18_	test/gtest/fused-src/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray50
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray18
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray19
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray20
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray21
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray22
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray23
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray24
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray25
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray26
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray27
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray28
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray29
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray30
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray31
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray32
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray33
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray34
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray35
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray36
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray37
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray38
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray39
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray40
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray41
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray42
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray43
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray44
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray45
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray46
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray47
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray48
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray49
v18_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray50
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray19
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray20
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray21
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray22
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray23
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray24
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray25
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray26
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray27
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray28
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray29
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray30
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray31
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray32
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray33
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray34
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray35
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray36
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray37
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray38
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray39
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray40
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray41
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray42
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray43
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray44
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray45
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray46
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray47
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray48
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray49
v19_	test/gtest/fused-src/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray50
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray19
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray20
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray21
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray22
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray23
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray24
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray25
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray26
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray27
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray28
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray29
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray30
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray31
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray32
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray33
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray34
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray35
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray36
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray37
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray38
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray39
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray40
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray41
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray42
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray43
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray44
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray45
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray46
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray47
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray48
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray49
v19_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray50
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray1
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray10
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray11
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray12
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray13
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray14
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray15
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray16
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray17
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray18
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray19
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray2
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray20
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray21
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray22
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray23
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray24
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray25
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray26
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray27
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray28
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray29
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray3
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray30
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray31
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray32
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray33
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray34
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray35
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray36
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray37
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray38
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray39
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray4
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray40
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray41
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray42
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray43
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray44
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray45
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray46
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray47
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray48
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray49
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray5
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray50
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray6
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray7
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray8
v1_	test/gtest/fused-src/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray9
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray1
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray10
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray11
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray12
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray13
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray14
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray15
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray16
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray17
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray18
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray19
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray2
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray20
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray21
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray22
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray23
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray24
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray25
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray26
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray27
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray28
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray29
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray3
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray30
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray31
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray32
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray33
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray34
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray35
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray36
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray37
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray38
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray39
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray4
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray40
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray41
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray42
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray43
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray44
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray45
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray46
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray47
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray48
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray49
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray5
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray50
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray6
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray7
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray8
v1_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray9
v2	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^long    v2;$/;"	v
v2	experiments/benchmarks/src/base/richards_benchmark.c	/^long    v2;$/;"	v
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray20
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray21
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray22
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray23
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray24
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray25
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray26
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray27
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray28
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray29
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray30
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray31
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray32
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray33
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray34
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray35
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray36
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray37
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray38
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray39
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray40
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray41
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray42
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray43
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray44
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray45
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray46
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray47
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray48
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray49
v20_	test/gtest/fused-src/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray50
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray20
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray21
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray22
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray23
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray24
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray25
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray26
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray27
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray28
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray29
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray30
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray31
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray32
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray33
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray34
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray35
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray36
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray37
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray38
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray39
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray40
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray41
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray42
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray43
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray44
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray45
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray46
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray47
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray48
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray49
v20_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray50
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray21
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray22
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray23
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray24
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray25
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray26
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray27
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray28
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray29
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray30
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray31
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray32
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray33
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray34
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray35
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray36
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray37
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray38
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray39
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray40
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray41
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray42
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray43
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray44
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray45
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray46
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray47
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray48
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray49
v21_	test/gtest/fused-src/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray50
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray21
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray22
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray23
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray24
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray25
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray26
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray27
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray28
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray29
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray30
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray31
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray32
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray33
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray34
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray35
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray36
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray37
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray38
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray39
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray40
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray41
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray42
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray43
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray44
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray45
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray46
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray47
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray48
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray49
v21_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray50
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray22
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray23
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray24
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray25
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray26
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray27
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray28
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray29
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray30
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray31
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray32
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray33
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray34
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray35
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray36
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray37
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray38
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray39
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray40
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray41
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray42
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray43
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray44
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray45
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray46
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray47
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray48
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray49
v22_	test/gtest/fused-src/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray50
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray22
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray23
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray24
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray25
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray26
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray27
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray28
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray29
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray30
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray31
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray32
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray33
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray34
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray35
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray36
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray37
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray38
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray39
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray40
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray41
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray42
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray43
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray44
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray45
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray46
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray47
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray48
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray49
v22_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray50
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray23
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray24
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray25
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray26
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray27
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray28
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray29
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray30
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray31
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray32
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray33
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray34
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray35
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray36
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray37
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray38
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray39
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray40
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray41
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray42
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray43
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray44
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray45
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray46
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray47
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray48
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray49
v23_	test/gtest/fused-src/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray50
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray23
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray24
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray25
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray26
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray27
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray28
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray29
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray30
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray31
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray32
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray33
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray34
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray35
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray36
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray37
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray38
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray39
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray40
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray41
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray42
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray43
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray44
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray45
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray46
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray47
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray48
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray49
v23_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray50
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray24
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray25
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray26
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray27
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray28
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray29
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray30
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray31
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray32
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray33
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray34
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray35
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray36
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray37
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray38
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray39
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray40
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray41
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray42
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray43
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray44
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray45
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray46
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray47
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray48
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray49
v24_	test/gtest/fused-src/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray50
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray24
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray25
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray26
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray27
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray28
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray29
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray30
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray31
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray32
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray33
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray34
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray35
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray36
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray37
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray38
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray39
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray40
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray41
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray42
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray43
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray44
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray45
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray46
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray47
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray48
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray49
v24_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray50
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray25
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray26
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray27
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray28
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray29
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray30
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray31
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray32
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray33
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray34
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray35
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray36
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray37
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray38
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray39
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray40
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray41
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray42
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray43
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray44
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray45
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray46
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray47
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray48
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray49
v25_	test/gtest/fused-src/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray50
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray25
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray26
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray27
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray28
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray29
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray30
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray31
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray32
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray33
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray34
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray35
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray36
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray37
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray38
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray39
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray40
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray41
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray42
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray43
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray44
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray45
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray46
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray47
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray48
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray49
v25_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray50
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray26
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray27
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray28
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray29
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray30
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray31
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray32
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray33
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray34
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray35
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray36
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray37
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray38
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray39
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray40
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray41
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray42
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray43
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray44
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray45
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray46
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray47
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray48
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray49
v26_	test/gtest/fused-src/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray50
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray26
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray27
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray28
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray29
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray30
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray31
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray32
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray33
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray34
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray35
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray36
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray37
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray38
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray39
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray40
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray41
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray42
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray43
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray44
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray45
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray46
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray47
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray48
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray49
v26_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray50
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray27
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray28
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray29
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray30
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray31
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray32
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray33
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray34
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray35
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray36
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray37
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray38
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray39
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray40
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray41
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray42
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray43
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray44
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray45
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray46
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray47
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray48
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray49
v27_	test/gtest/fused-src/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray50
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray27
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray28
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray29
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray30
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray31
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray32
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray33
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray34
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray35
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray36
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray37
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray38
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray39
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray40
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray41
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray42
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray43
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray44
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray45
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray46
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray47
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray48
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray49
v27_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray50
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray28
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray29
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray30
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray31
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray32
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray33
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray34
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray35
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray36
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray37
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray38
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray39
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray40
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray41
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray42
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray43
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray44
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray45
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray46
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray47
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray48
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray49
v28_	test/gtest/fused-src/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray50
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray28
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray29
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray30
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray31
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray32
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray33
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray34
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray35
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray36
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray37
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray38
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray39
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray40
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray41
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray42
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray43
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray44
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray45
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray46
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray47
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray48
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray49
v28_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray50
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray29
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray30
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray31
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray32
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray33
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray34
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray35
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray36
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray37
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray38
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray39
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray40
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray41
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray42
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray43
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray44
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray45
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray46
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray47
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray48
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray49
v29_	test/gtest/fused-src/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray50
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray29
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray30
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray31
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray32
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray33
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray34
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray35
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray36
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray37
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray38
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray39
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray40
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray41
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray42
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray43
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray44
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray45
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray46
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray47
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray48
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray49
v29_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray50
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray10
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray11
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray12
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray13
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray14
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray15
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray16
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray17
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray18
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray19
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray2
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray20
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray21
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray22
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray23
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray24
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray25
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray26
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray27
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray28
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray29
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray3
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray30
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray31
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray32
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray33
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray34
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray35
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray36
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray37
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray38
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray39
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray4
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray40
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray41
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray42
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray43
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray44
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray45
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray46
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray47
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray48
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray49
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray5
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray50
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray6
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray7
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray8
v2_	test/gtest/fused-src/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray9
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray10
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray11
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray12
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray13
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray14
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray15
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray16
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray17
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray18
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray19
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray2
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray20
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray21
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray22
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray23
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray24
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray25
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray26
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray27
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray28
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray29
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray3
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray30
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray31
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray32
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray33
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray34
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray35
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray36
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray37
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray38
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray39
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray4
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray40
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray41
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray42
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray43
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray44
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray45
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray46
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray47
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray48
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray49
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray5
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray50
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray6
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray7
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray8
v2_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray9
v2df	experiments/backup/benchmarks/src/base/partialsums.c	/^typedef double v2df __attribute__ ((vector_size (16)));$/;"	t	file:
v2df	experiments/benchmarks/src/base/partialsums.c	/^typedef double v2df __attribute__ ((vector_size (16)));$/;"	t	file:
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray30
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray31
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray32
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray33
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray34
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray35
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray36
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray37
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray38
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray39
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray40
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray41
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray42
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray43
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray44
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray45
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray46
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray47
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray48
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray49
v30_	test/gtest/fused-src/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray50
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray30
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray31
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray32
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray33
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray34
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray35
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray36
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray37
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray38
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray39
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray40
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray41
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray42
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray43
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray44
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray45
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray46
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray47
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray48
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray49
v30_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray50
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray31
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray32
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray33
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray34
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray35
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray36
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray37
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray38
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray39
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray40
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray41
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray42
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray43
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray44
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray45
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray46
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray47
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray48
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray49
v31_	test/gtest/fused-src/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray50
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray31
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray32
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray33
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray34
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray35
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray36
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray37
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray38
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray39
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray40
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray41
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray42
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray43
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray44
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray45
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray46
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray47
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray48
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray49
v31_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray50
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray32
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray33
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray34
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray35
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray36
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray37
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray38
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray39
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray40
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray41
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray42
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray43
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray44
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray45
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray46
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray47
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray48
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray49
v32_	test/gtest/fused-src/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray50
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray32
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray33
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray34
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray35
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray36
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray37
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray38
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray39
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray40
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray41
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray42
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray43
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray44
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray45
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray46
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray47
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray48
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray49
v32_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray50
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray33
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray34
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray35
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray36
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray37
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray38
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray39
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray40
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray41
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray42
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray43
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray44
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray45
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray46
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray47
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray48
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray49
v33_	test/gtest/fused-src/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray50
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray33
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray34
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray35
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray36
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray37
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray38
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray39
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray40
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray41
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray42
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray43
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray44
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray45
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray46
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray47
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray48
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray49
v33_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray50
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray34
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray35
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray36
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray37
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray38
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray39
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray40
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray41
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray42
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray43
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray44
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray45
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray46
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray47
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray48
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray49
v34_	test/gtest/fused-src/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray50
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray34
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray35
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray36
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray37
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray38
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray39
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray40
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray41
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray42
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray43
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray44
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray45
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray46
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray47
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray48
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray49
v34_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray50
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray35
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray36
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray37
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray38
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray39
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray40
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray41
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray42
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray43
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray44
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray45
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray46
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray47
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray48
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray49
v35_	test/gtest/fused-src/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray50
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray35
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray36
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray37
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray38
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray39
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray40
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray41
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray42
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray43
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray44
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray45
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray46
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray47
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray48
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray49
v35_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray50
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray36
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray37
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray38
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray39
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray40
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray41
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray42
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray43
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray44
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray45
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray46
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray47
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray48
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray49
v36_	test/gtest/fused-src/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray50
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray36
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray37
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray38
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray39
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray40
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray41
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray42
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray43
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray44
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray45
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray46
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray47
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray48
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray49
v36_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray50
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray37
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray38
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray39
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray40
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray41
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray42
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray43
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray44
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray45
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray46
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray47
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray48
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray49
v37_	test/gtest/fused-src/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray50
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray37
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray38
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray39
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray40
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray41
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray42
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray43
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray44
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray45
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray46
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray47
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray48
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray49
v37_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray50
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray38
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray39
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray40
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray41
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray42
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray43
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray44
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray45
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray46
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray47
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray48
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray49
v38_	test/gtest/fused-src/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray50
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray38
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray39
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray40
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray41
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray42
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray43
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray44
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray45
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray46
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray47
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray48
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray49
v38_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray50
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray39
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray40
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray41
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray42
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray43
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray44
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray45
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray46
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray47
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray48
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray49
v39_	test/gtest/fused-src/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray50
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray39
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray40
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray41
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray42
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray43
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray44
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray45
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray46
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray47
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray48
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray49
v39_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray50
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray10
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray11
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray12
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray13
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray14
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray15
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray16
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray17
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray18
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray19
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray20
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray21
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray22
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray23
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray24
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray25
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray26
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray27
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray28
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray29
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray3
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray30
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray31
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray32
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray33
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray34
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray35
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray36
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray37
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray38
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray39
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray4
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray40
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray41
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray42
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray43
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray44
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray45
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray46
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray47
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray48
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray49
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray5
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray50
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray6
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray7
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray8
v3_	test/gtest/fused-src/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray9
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray10
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray11
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray12
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray13
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray14
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray15
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray16
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray17
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray18
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray19
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray20
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray21
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray22
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray23
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray24
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray25
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray26
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray27
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray28
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray29
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray3
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray30
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray31
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray32
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray33
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray34
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray35
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray36
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray37
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray38
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray39
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray4
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray40
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray41
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray42
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray43
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray44
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray45
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray46
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray47
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray48
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray49
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray5
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray50
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray6
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray7
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray8
v3_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray9
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray40
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray41
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray42
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray43
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray44
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray45
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray46
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray47
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray48
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray49
v40_	test/gtest/fused-src/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray50
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray40
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray41
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray42
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray43
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray44
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray45
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray46
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray47
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray48
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray49
v40_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray50
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray41
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray42
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray43
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray44
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray45
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray46
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray47
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray48
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray49
v41_	test/gtest/fused-src/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray50
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray41
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray42
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray43
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray44
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray45
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray46
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray47
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray48
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray49
v41_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray50
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray42
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray43
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray44
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray45
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray46
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray47
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray48
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray49
v42_	test/gtest/fused-src/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray50
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray42
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray43
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray44
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray45
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray46
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray47
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray48
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray49
v42_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray50
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray43
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray44
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray45
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray46
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray47
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray48
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray49
v43_	test/gtest/fused-src/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray50
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray43
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray44
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray45
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray46
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray47
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray48
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray49
v43_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray50
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray44
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray45
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray46
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray47
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray48
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray49
v44_	test/gtest/fused-src/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray50
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray44
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray45
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray46
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray47
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray48
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray49
v44_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray50
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray45
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray46
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray47
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray48
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray49
v45_	test/gtest/fused-src/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray50
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray45
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray46
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray47
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray48
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray49
v45_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray50
v46_	test/gtest/fused-src/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray46
v46_	test/gtest/fused-src/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray47
v46_	test/gtest/fused-src/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray48
v46_	test/gtest/fused-src/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray49
v46_	test/gtest/fused-src/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray50
v46_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray46
v46_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray47
v46_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray48
v46_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray49
v46_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray50
v47_	test/gtest/fused-src/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray47
v47_	test/gtest/fused-src/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray48
v47_	test/gtest/fused-src/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray49
v47_	test/gtest/fused-src/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray50
v47_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray47
v47_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray48
v47_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray49
v47_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray50
v48_	test/gtest/fused-src/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray48
v48_	test/gtest/fused-src/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray49
v48_	test/gtest/fused-src/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray50
v48_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray48
v48_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray49
v48_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray50
v49_	test/gtest/fused-src/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray49
v49_	test/gtest/fused-src/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray50
v49_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray49
v49_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray50
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray10
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray11
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray12
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray13
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray14
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray15
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray16
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray17
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray18
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray19
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray20
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray21
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray22
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray23
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray24
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray25
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray26
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray27
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray28
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray29
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray30
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray31
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray32
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray33
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray34
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray35
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray36
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray37
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray38
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray39
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray4
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray40
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray41
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray42
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray43
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray44
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray45
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray46
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray47
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray48
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray49
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray5
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray50
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray6
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray7
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray8
v4_	test/gtest/fused-src/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray9
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray10
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray11
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray12
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray13
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray14
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray15
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray16
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray17
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray18
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray19
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray20
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray21
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray22
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray23
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray24
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray25
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray26
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray27
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray28
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray29
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray30
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray31
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray32
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray33
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray34
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray35
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray36
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray37
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray38
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray39
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray4
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray40
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray41
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray42
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray43
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray44
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray45
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray46
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray47
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray48
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray49
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray5
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray50
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray6
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray7
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray8
v4_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray9
v50_	test/gtest/fused-src/gtest/gtest.h	/^  const T50 v50_;$/;"	m	class:testing::internal::ValueArray50
v50_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T50 v50_;$/;"	m	class:testing::internal::ValueArray50
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray10
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray11
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray12
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray13
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray14
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray15
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray16
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray17
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray18
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray19
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray20
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray21
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray22
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray23
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray24
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray25
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray26
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray27
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray28
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray29
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray30
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray31
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray32
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray33
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray34
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray35
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray36
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray37
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray38
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray39
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray40
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray41
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray42
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray43
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray44
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray45
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray46
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray47
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray48
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray49
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray5
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray50
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray6
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray7
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray8
v5_	test/gtest/fused-src/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray9
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray10
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray11
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray12
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray13
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray14
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray15
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray16
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray17
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray18
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray19
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray20
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray21
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray22
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray23
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray24
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray25
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray26
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray27
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray28
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray29
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray30
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray31
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray32
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray33
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray34
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray35
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray36
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray37
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray38
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray39
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray40
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray41
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray42
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray43
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray44
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray45
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray46
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray47
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray48
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray49
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray5
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray50
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray6
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray7
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray8
v5_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray9
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray10
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray11
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray12
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray13
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray14
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray15
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray16
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray17
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray18
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray19
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray20
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray21
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray22
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray23
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray24
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray25
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray26
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray27
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray28
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray29
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray30
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray31
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray32
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray33
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray34
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray35
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray36
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray37
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray38
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray39
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray40
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray41
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray42
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray43
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray44
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray45
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray46
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray47
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray48
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray49
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray50
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray6
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray7
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray8
v6_	test/gtest/fused-src/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray9
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray10
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray11
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray12
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray13
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray14
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray15
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray16
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray17
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray18
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray19
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray20
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray21
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray22
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray23
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray24
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray25
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray26
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray27
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray28
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray29
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray30
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray31
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray32
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray33
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray34
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray35
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray36
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray37
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray38
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray39
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray40
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray41
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray42
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray43
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray44
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray45
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray46
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray47
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray48
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray49
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray50
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray6
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray7
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray8
v6_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray9
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray10
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray11
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray12
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray13
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray14
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray15
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray16
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray17
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray18
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray19
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray20
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray21
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray22
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray23
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray24
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray25
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray26
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray27
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray28
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray29
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray30
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray31
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray32
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray33
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray34
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray35
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray36
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray37
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray38
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray39
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray40
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray41
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray42
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray43
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray44
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray45
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray46
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray47
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray48
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray49
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray50
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray7
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray8
v7_	test/gtest/fused-src/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray9
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray10
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray11
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray12
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray13
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray14
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray15
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray16
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray17
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray18
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray19
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray20
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray21
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray22
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray23
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray24
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray25
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray26
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray27
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray28
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray29
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray30
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray31
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray32
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray33
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray34
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray35
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray36
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray37
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray38
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray39
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray40
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray41
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray42
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray43
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray44
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray45
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray46
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray47
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray48
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray49
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray50
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray7
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray8
v7_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray9
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray10
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray11
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray12
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray13
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray14
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray15
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray16
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray17
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray18
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray19
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray20
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray21
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray22
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray23
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray24
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray25
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray26
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray27
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray28
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray29
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray30
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray31
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray32
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray33
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray34
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray35
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray36
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray37
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray38
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray39
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray40
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray41
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray42
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray43
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray44
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray45
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray46
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray47
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray48
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray49
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray50
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray8
v8_	test/gtest/fused-src/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray9
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray10
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray11
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray12
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray13
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray14
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray15
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray16
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray17
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray18
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray19
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray20
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray21
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray22
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray23
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray24
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray25
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray26
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray27
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray28
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray29
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray30
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray31
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray32
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray33
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray34
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray35
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray36
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray37
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray38
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray39
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray40
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray41
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray42
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray43
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray44
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray45
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray46
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray47
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray48
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray49
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray50
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray8
v8_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray9
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray10
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray11
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray12
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray13
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray14
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray15
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray16
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray17
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray18
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray19
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray20
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray21
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray22
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray23
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray24
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray25
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray26
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray27
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray28
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray29
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray30
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray31
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray32
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray33
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray34
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray35
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray36
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray37
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray38
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray39
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray40
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray41
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray42
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray43
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray44
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray45
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray46
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray47
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray48
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray49
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray50
v9_	test/gtest/fused-src/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray9
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray10
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray11
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray12
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray13
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray14
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray15
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray16
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray17
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray18
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray19
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray20
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray21
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray22
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray23
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray24
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray25
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray26
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray27
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray28
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray29
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray30
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray31
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray32
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray33
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray34
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray35
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray36
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray37
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray38
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray39
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray40
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray41
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray42
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray43
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray44
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray45
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray46
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray47
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray48
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray49
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray50
v9_	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray9
val	experiments/backup/benchmarks/src/base/bubblesort.c	/^  int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/intmm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/lists.c	/^  int val;$/;"	m	struct:DLL	file:
val	experiments/backup/benchmarks/src/base/oscar.c	/^  int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/perm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/queens.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/quicksort.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/realmm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/simple_hash.h	/^    int val;$/;"	m	struct:ht_node
val	experiments/backup/benchmarks/src/base/towers.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/backup/benchmarks/src/base/treesort.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/bubblesort.c	/^  int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/intmm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/lists.c	/^  int val;$/;"	m	struct:DLL	file:
val	experiments/benchmarks/src/base/oscar.c	/^  int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/perm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/puzzle-stanford.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/queens.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/quicksort.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/realmm.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/simple_hash.h	/^    int val;$/;"	m	struct:ht_node
val	experiments/benchmarks/src/base/towers.c	/^	int val;$/;"	m	struct:node	file:
val	experiments/benchmarks/src/base/treesort.c	/^	int val;$/;"	m	struct:node	file:
valid_data	experiments/backup/benchmarks/src/base/chomp.c	/^int valid_data(int *data) \/* checks if the play could ever be achieved. *\/$/;"	f
valid_data	experiments/benchmarks/src/base/chomp.c	/^int valid_data(int *data) \/* checks if the play could ever be achieved. *\/$/;"	f
value	experiments/backup/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/chomp.c	/^  int value;$/;"	m	struct:_play	file:
value	experiments/backup/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
value	experiments/backup/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/bubblesort.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/chomp.c	/^  int value;$/;"	m	struct:_play	file:
value	experiments/benchmarks/src/base/intmm.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/oscar.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/perm.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/puzzle-stanford.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/queens.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/quicksort.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/realmm.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/towers.c	/^float value, fixed, floated;$/;"	v
value	experiments/benchmarks/src/base/treesort.c	/^float value, fixed, floated;$/;"	v
value	test/gtest/fused-src/gtest/gtest.h	/^  const char* value() const {$/;"	f	class:testing::TestProperty
value	test/gtest/fused-src/gtest/gtest.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr
value	test/gtest/fused-src/gtest/gtest.h	/^  static const bool value = __is_convertible(From, To);$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/fused-src/gtest/gtest.h	/^  static const bool value = bool_value;$/;"	m	struct:std::tr1::bool_constant
value	test/gtest/fused-src/gtest/gtest.h	/^  static const bool value =$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 0;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 10;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 1;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 2;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 3;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 4;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 5;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 6;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 7;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 8;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^  static const int value = 9;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/fused-src/gtest/gtest.h	/^const bool ImplicitlyConvertible<From, To>::value;$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/fused-src/gtest/gtest.h	/^template <bool bool_value> const bool bool_constant<bool_value>::value;$/;"	m	class:std::tr1::bool_constant
value	test/gtest/include/gtest/gtest.h	/^  const char* value() const {$/;"	f	class:testing::TestProperty
value	test/gtest/include/gtest/internal/gtest-internal.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr
value	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const bool value = __is_convertible(From, To);$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/include/gtest/internal/gtest-internal.h	/^  static const bool value =$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/include/gtest/internal/gtest-internal.h	/^const bool ImplicitlyConvertible<From, To>::value;$/;"	m	class:testing::internal::ImplicitlyConvertible
value	test/gtest/include/gtest/internal/gtest-port.h	/^  static const bool value = bool_value;$/;"	m	struct:testing::internal::bool_constant
value	test/gtest/include/gtest/internal/gtest-port.h	/^template <bool bool_value> const bool bool_constant<bool_value>::value;$/;"	m	class:testing::internal::bool_constant
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 0;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 10;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 1;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 2;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 3;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 4;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 5;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 6;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 7;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 8;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/include/gtest/internal/gtest-tuple.h	/^  static const int value = 9;$/;"	m	struct:std::tr1::tuple_size
value	test/gtest/test/gtest-param-test_test.cc	/^  const std::string& value() const { return value_; }$/;"	f	class:DogAdder
value	test/gtest/test/gtest-param-test_test.cc	/^  int value() const { return value_; }$/;"	f	class:IntWrapper
value	test/gtest/test/gtest-port_test.cc	/^  int value() const { return value_; }$/;"	f	class:testing::internal::AtomicCounterWithMutex
value	test/gtest/test/gtest-printers_test.cc	/^  const T& value() const { return value_; }$/;"	f	class:foo::PrintableViaPrintToTemplate
value	test/gtest/test/gtest-printers_test.cc	/^  const T& value() const { return value_; }$/;"	f	class:foo::StreamableTemplateInFoo
value	test/gtest/test/gtest-printers_test.cc	/^  int value;$/;"	m	struct:foo::PrintableViaPrintTo	file:
value	test/gtest/test/gtest-printers_test.cc	/^  int value;$/;"	m	struct:testing::gtest_printers_test::Foo	file:
value	test/gtest/test/gtest_list_tests_unittest_.cc	/^  const std::string& value() const { return value_; }$/;"	f	class:MyType
value	test/gtest/test/gtest_pred_impl_unittest.cc	/^  bool value;$/;"	m	struct:Bool	file:
value	test/gtest/test/gtest_unittest.cc	/^  int value() const { return value_; }$/;"	f	class:__anon14::Uncopyable
value_	test/gtest/fused-src/gtest/gtest.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
value_	test/gtest/fused-src/gtest/gtest.h	/^    T value_;$/;"	m	class:std::tr1::ThreadLocal::ValueHolder
value_	test/gtest/fused-src/gtest/gtest.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
value_	test/gtest/fused-src/gtest/gtest.h	/^    mutable scoped_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
value_	test/gtest/fused-src/gtest/gtest.h	/^  T value_;$/;"	m	class:std::tr1::ThreadLocal
value_	test/gtest/fused-src/gtest/gtest.h	/^  T* value_;$/;"	m	class:testing::internal::linked_ptr
value_	test/gtest/fused-src/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty
value_	test/gtest/include/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty
value_	test/gtest/include/gtest/internal/gtest-internal.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
value_	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  T* value_;$/;"	m	class:testing::internal::linked_ptr
value_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
value_	test/gtest/include/gtest/internal/gtest-param-util.h	/^    mutable scoped_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
value_	test/gtest/include/gtest/internal/gtest-port.h	/^    T value_;$/;"	m	class:testing::internal::ThreadLocal::ValueHolder
value_	test/gtest/include/gtest/internal/gtest-port.h	/^  T value_;$/;"	m	class:testing::internal::ThreadLocal
value_	test/gtest/test/gtest-param-test_test.cc	/^  int value_;$/;"	m	class:IntWrapper	file:
value_	test/gtest/test/gtest-param-test_test.cc	/^  int value_;$/;"	m	class:Unstreamable	file:
value_	test/gtest/test/gtest-param-test_test.cc	/^  std::string value_;$/;"	m	class:DogAdder	file:
value_	test/gtest/test/gtest-port_test.cc	/^  volatile int value_;$/;"	m	class:testing::internal::AtomicCounterWithMutex	file:
value_	test/gtest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:UnprintableTemplateInGlobal	file:
value_	test/gtest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:foo::PrintableViaPrintToTemplate	file:
value_	test/gtest/test/gtest-printers_test.cc	/^  T value_;$/;"	m	class:foo::StreamableTemplateInFoo	file:
value_	test/gtest/test/gtest-typed-test_test.cc	/^  T value_;$/;"	m	class:CommonTest	file:
value_	test/gtest/test/gtest_list_tests_unittest_.cc	/^  std::string value_;$/;"	m	class:MyType	file:
value_	test/gtest/test/gtest_unittest.cc	/^  int value_;$/;"	m	class:__anon14::Uncopyable	file:
value_param	test/gtest/fused-src/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo
value_param	test/gtest/include/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo
value_param_	test/gtest/fused-src/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo
value_param_	test/gtest/include/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo
value_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray
value_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator
value_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef T value_type;$/;"	t	struct:std::tr1::IteratorTraits
value_type	test/gtest/fused-src/gtest/gtest.h	/^  typedef typename Iterator::value_type value_type;$/;"	t	struct:std::tr1::IteratorTraits
value_type	test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray
value_type	test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator
value_type	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef T value_type;$/;"	t	struct:testing::internal::IteratorTraits
value_type	test/gtest/include/gtest/internal/gtest-port.h	/^  typedef typename Iterator::value_type value_type;$/;"	t	struct:testing::internal::IteratorTraits
values_	test/gtest/test/gtest_unittest.cc	/^    FloatingPointTest<RawType>::values_;$/;"	m	class:__anon14::FloatingPointTest	file:
values_	test/gtest/test/gtest_unittest.cc	/^  static TestValues values_;$/;"	m	class:__anon14::FloatingPointTest	file:
var-members	docs/html/DatabaseManager_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/html/PAPI_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	docs/html/ProfileModule_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
vector_	test/gtest/test/gtest_unittest.cc	/^  TestingVector vector_;$/;"	m	class:__anon14::VectorShuffleTest	file:
vector_	test/gtest/test/gtest_unittest.cc	/^  std::vector<std::string>* vector_;$/;"	m	class:SequenceTestingListener	file:
vendor	include/Profiling/papi.h	/^      int vendor;                   \/* Vendor number of CPU *\/$/;"	m	struct:_papi_hw_info
vendor_string	include/Profiling/papi.h	/^      char vendor_string[PAPI_MAX_STR_LEN];     \/* Vendor string of CPU *\/$/;"	m	struct:_papi_hw_info
version_expression	test/gtest/xcode/Scripts/versiongenerate.py	/^version_expression = re.compile(r"AC_INIT\\(.*?\\[(\\d+)\\.(\\d+)\\.(\\d+)\\].*?\\)",$/;"	v
version_file	test/gtest/xcode/Scripts/versiongenerate.py	/^version_file = open("%s\/Version.h" % output_dir, 'w')$/;"	v
version_values	test/gtest/xcode/Scripts/versiongenerate.py	/^version_values = version_expression.search(opening_string)$/;"	v
vexopy	experiments/backup/benchmarks/src/sgefa/blas.c	/^void vexopy( n, v, x, y, itype )$/;"	f
vexopy	experiments/benchmarks/src/sgefa/blas.c	/^void vexopy( n, v, x, y, itype )$/;"	f
vfill	experiments/backup/benchmarks/src/sgefa/blas.c	/^void vfill( n, v, val )$/;"	f
vfill	experiments/benchmarks/src/sgefa/blas.c	/^void vfill( n, v, val )$/;"	f
visit	src/Profiling/ExecutionFrequency/Static/StaticProfiling.cpp	/^void visit(CallGraphNode &CallNode, $/;"	f
vsnprintf	test/gtest/fused-src/gtest/gtest-all.cc	1623;"	d	file:
vsnprintf	test/gtest/src/gtest.cc	139;"	d	file:
vx	experiments/backup/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
vx	experiments/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
vy	experiments/backup/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
vy	experiments/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
vz	experiments/backup/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
vz	experiments/benchmarks/src/base/n-body.c	/^  double vx, vy, vz;$/;"	m	struct:planet	file:
w	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/backup/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
w	experiments/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:
wait_calls_	test/gtest/test/gtest-death-test_test.cc	/^  int wait_calls_;$/;"	m	class:MockDeathTestFactory	file:
wanted	experiments/backup/benchmarks/src/base/chomp.c	/^} *wanted;$/;"	v	typeref:struct:_list
wanted	experiments/benchmarks/src/base/chomp.c	/^} *wanted;$/;"	v	typeref:struct:_list
what	test/gtest/test/gtest-death-test_ex_test.cc	/^  virtual const char* what() const throw() { return "exceptional message"; }$/;"	f	class:TestException
where	experiments/backup/benchmarks/src/base/chomp.c	/^struct _list *where(int *data,struct _play *play)$/;"	f
where	experiments/benchmarks/src/base/chomp.c	/^struct _list *where(int *data,struct _play *play)$/;"	f
width	experiments/backup/benchmarks/src/SciMark2-C/Random.h	/^  double width;                         \/* = 1.0; *\/$/;"	m	struct:__anon58
width	experiments/benchmarks/src/SciMark2-C/Random.h	/^  double width;                         \/* = 1.0; *\/$/;"	m	struct:__anon45
windowHeight	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
windowWidth	docs/html/jquery.js	/^(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{a(jQuery)}}(function(k){var A=k(document),s=k(window),w=k("body");var n="displayController",e="hasActiveHover",d="forcedOpen",u="hasMouseMove",f="mouseOnToPopup",g="originalTitle",y="powertip",o="powertipjq",l="powertiptarget",E=180\/Math.PI;var c={isTipOpen:false,isFixedTipOpen:false,isClosing:false,tipOpenImminent:false,activeHover:null,currentX:0,currentY:0,previousX:0,previousY:0,desyncTimeout:null,mouseTrackingActive:false,delayInProgress:false,windowWidth:0,windowHeight:0,scrollTop:0,scrollLeft:0};var p={none:0,top:1,bottom:2,left:4,right:8};k.fn.powerTip=function(F,N){if(!this.length){return this}if(k.type(F)==="string"&&k.powerTip[F]){return k.powerTip[F].call(this,this,N)}var O=k.extend({},k.fn.powerTip.defaults,F),G=new x(O);h();this.each(function M(){var R=k(this),Q=R.data(y),P=R.data(o),T=R.data(l),S;if(R.data(n)){k.powerTip.destroy(R)}S=R.attr("title");if(!Q&&!T&&!P&&S){R.data(y,S);R.data(g,S);R.removeAttr("title")}R.data(n,new t(R,O,G))});if(!O.manual){this.on({"mouseenter.powertip":function J(P){k.powerTip.show(this,P)},"mouseleave.powertip":function L(){k.powerTip.hide(this)},"focus.powertip":function K(){k.powerTip.show(this)},"blur.powertip":function H(){k.powerTip.hide(this,true)},"keydown.powertip":function I(P){if(P.keyCode===27){k.powerTip.hide(this,true)}}})}return this};k.fn.powerTip.defaults={fadeInTime:200,fadeOutTime:100,followMouse:false,popupId:"powerTip",intentSensitivity:7,intentPollInterval:100,closeDelay:100,placement:"n",smartPlacement:false,offset:10,mouseOnToPopup:false,manual:false};k.fn.powerTip.smartPlacementLists={n:["n","ne","nw","s"],e:["e","ne","se","w","nw","sw","n","s","e"],s:["s","se","sw","n"],w:["w","nw","sw","e","ne","se","n","s","w"],nw:["nw","w","sw","n","s","se","nw"],ne:["ne","e","se","n","s","sw","ne"],sw:["sw","w","nw","s","n","ne","sw"],se:["se","e","ne","s","n","nw","se"],"nw-alt":["nw-alt","n","ne-alt","sw-alt","s","se-alt","w","e"],"ne-alt":["ne-alt","n","nw-alt","se-alt","s","sw-alt","e","w"],"sw-alt":["sw-alt","s","se-alt","nw-alt","n","ne-alt","w","e"],"se-alt":["se-alt","s","sw-alt","ne-alt","n","nw-alt","e","w"]};k.powerTip={show:function z(F,G){if(G){i(G);c.previousX=G.pageX;c.previousY=G.pageY;k(F).data(n).show()}else{k(F).first().data(n).show(true,true)}return F},reposition:function r(F){k(F).first().data(n).resetPosition();return F},hide:function D(G,F){if(G){k(G).first().data(n).hide(F)}else{if(c.activeHover){c.activeHover.data(n).hide(true)}}return G},destroy:function C(G){k(G).off(".powertip").each(function F(){var I=k(this),H=[g,n,e,d];if(I.data(g)){I.attr("title",I.data(g));H.push(y)}I.removeData(H)});return G}};k.powerTip.showTip=k.powerTip.show;k.powerTip.closeTip=k.powerTip.hide;function b(){var F=this;F.top="auto";F.left="auto";F.right="auto";F.bottom="auto";F.set=function(H,G){if(k.isNumeric(G)){F[H]=Math.round(G)}}}function t(K,N,F){var J=null;function L(P,Q){M();if(!K.data(e)){if(!P){c.tipOpenImminent=true;J=setTimeout(function O(){J=null;I()},N.intentPollInterval)}else{if(Q){K.data(d,true)}F.showTip(K)}}}function G(P){M();c.tipOpenImminent=false;if(K.data(e)){K.data(d,false);if(!P){c.delayInProgress=true;J=setTimeout(function O(){J=null;F.hideTip(K);c.delayInProgress=false},N.closeDelay)}else{F.hideTip(K)}}}function I(){var Q=Math.abs(c.previousX-c.currentX),O=Math.abs(c.previousY-c.currentY),P=Q+O;if(P<N.intentSensitivity){F.showTip(K)}else{c.previousX=c.currentX;c.previousY=c.currentY;L()}}function M(){J=clearTimeout(J);c.delayInProgress=false}function H(){F.resetPosition(K)}this.show=L;this.hide=G;this.cancel=M;this.resetPosition=H}function j(){function G(M,L,J,O,P){var K=L.split("-")[0],N=new b(),I;if(q(M)){I=H(M,K)}else{I=F(M,K)}switch(L){case"n":N.set("left",I.left-(J\/2));N.set("bottom",c.windowHeight-I.top+P);break;case"e":N.set("left",I.left+P);N.set("top",I.top-(O\/2));break;case"s":N.set("left",I.left-(J\/2));N.set("top",I.top+P);break;case"w":N.set("top",I.top-(O\/2));N.set("right",c.windowWidth-I.left+P);break;case"nw":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"nw-alt":N.set("left",I.left);N.set("bottom",c.windowHeight-I.top+P);break;case"ne":N.set("left",I.left-20);N.set("bottom",c.windowHeight-I.top+P);break;case"ne-alt":N.set("bottom",c.windowHeight-I.top+P);N.set("right",c.windowWidth-I.left);break;case"sw":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left-20);break;case"sw-alt":N.set("left",I.left);N.set("top",I.top+P);break;case"se":N.set("left",I.left-20);N.set("top",I.top+P);break;case"se-alt":N.set("top",I.top+P);N.set("right",c.windowWidth-I.left);break}return N}function F(K,J){var O=K.offset(),N=K.outerWidth(),I=K.outerHeight(),M,L;switch(J){case"n":M=O.left+N\/2;L=O.top;break;case"e":M=O.left+N;L=O.top+I\/2;break;case"s":M=O.left+N\/2;L=O.top+I;break;case"w":M=O.left;L=O.top+I\/2;break;case"nw":M=O.left;L=O.top;break;case"ne":M=O.left+N;L=O.top;break;case"sw":M=O.left;L=O.top+I;break;case"se":M=O.left+N;L=O.top+I;break}return{top:L,left:M}}function H(O,K){var S=O.closest("svg")[0],N=O[0],W=S.createSVGPoint(),L=N.getBBox(),V=N.getScreenCTM(),M=L.width\/2,Q=L.height\/2,P=[],I=["nw","n","ne","e","se","s","sw","w"],U,X,R,T;function J(){P.push(W.matrixTransform(V))}W.x=L.x;W.y=L.y;J();W.x+=M;J();W.x+=M;J();W.y+=Q;J();W.y+=Q;J();W.x-=M;J();W.x-=M;J();W.y-=Q;J();if(P[0].y!==P[1].y||P[0].x!==P[7].x){X=Math.atan2(V.b,V.a)*E;R=Math.ceil(((X%360)-22.5)\/45);if(R<1){R+=8}while(R--){I.push(I.shift())}}for(T=0;T<P.length;T++){if(I[T]===K){U=P[T];break}}return{top:U.y+c.scrollTop,left:U.x+c.scrollLeft}}this.compute=G}function x(Q){var P=new j(),O=k("#"+Q.popupId);if(O.length===0){O=k("<div\/>",{id:Q.popupId});if(w.length===0){w=k("body")}w.append(O)}if(Q.followMouse){if(!O.data(u)){A.on("mousemove",M);s.on("scroll",M);O.data(u,true)}}if(Q.mouseOnToPopup){O.on({mouseenter:function L(){if(O.data(f)){if(c.activeHover){c.activeHover.data(n).cancel()}}},mouseleave:function N(){if(c.activeHover){c.activeHover.data(n).hide()}}})}function I(S){S.data(e,true);O.queue(function R(T){H(S);T()})}function H(S){var U;if(!S.data(e)){return}if(c.isTipOpen){if(!c.isClosing){K(c.activeHover)}O.delay(100).queue(function R(V){H(S);V()});return}S.trigger("powerTipPreRender");U=B(S);if(U){O.empty().append(U)}else{return}S.trigger("powerTipRender");c.activeHover=S;c.isTipOpen=true;O.data(f,Q.mouseOnToPopup);if(!Q.followMouse){G(S);c.isFixedTipOpen=true}else{M()}O.fadeIn(Q.fadeInTime,function T(){if(!c.desyncTimeout){c.desyncTimeout=setInterval(J,500)}S.trigger("powerTipOpen")})}function K(R){c.isClosing=true;c.activeHover=null;c.isTipOpen=false;c.desyncTimeout=clearInterval(c.desyncTimeout);R.data(e,false);R.data(d,false);O.fadeOut(Q.fadeOutTime,function S(){var T=new b();c.isClosing=false;c.isFixedTipOpen=false;O.removeClass();T.set("top",c.currentY+Q.offset);T.set("left",c.currentX+Q.offset);O.css(T);R.trigger("powerTipClose")})}function M(){if(!c.isFixedTipOpen&&(c.isTipOpen||(c.tipOpenImminent&&O.data(u)))){var R=O.outerWidth(),V=O.outerHeight(),U=new b(),S,T;U.set("top",c.currentY+Q.offset);U.set("left",c.currentX+Q.offset);S=m(U,R,V);if(S!==p.none){T=a(S);if(T===1){if(S===p.right){U.set("left",c.windowWidth-R)}else{if(S===p.bottom){U.set("top",c.scrollTop+c.windowHeight-V)}}}else{U.set("left",c.currentX-R-Q.offset);U.set("top",c.currentY-V-Q.offset)}}O.css(U)}}function G(S){var R,T;if(Q.smartPlacement){R=k.fn.powerTip.smartPlacementLists[Q.placement];k.each(R,function(U,W){var V=m(F(S,W),O.outerWidth(),O.outerHeight());T=W;if(V===p.none){return false}})}else{F(S,Q.placement);T=Q.placement}O.addClass(T)}function F(U,T){var R=0,S,W,V=new b();V.set("top",0);V.set("left",0);O.css(V);do{S=O.outerWidth();W=O.outerHeight();V=P.compute(U,T,S,W,Q.offset);O.css(V)}while(++R<=5&&(S!==O.outerWidth()||W!==O.outerHeight()));return V}function J(){var R=false;if(c.isTipOpen&&!c.isClosing&&!c.delayInProgress){if(c.activeHover.data(e)===false||c.activeHover.is(":disabled")){R=true}else{if(!v(c.activeHover)&&!c.activeHover.is(":focus")&&!c.activeHover.data(d)){if(O.data(f)){if(!v(O)){R=true}}else{R=true}}}if(R){K(c.activeHover)}}}this.showTip=I;this.hideTip=K;this.resetPosition=G}function q(F){return window.SVGElement&&F[0] instanceof SVGElement}function h(){if(!c.mouseTrackingActive){c.mouseTrackingActive=true;k(function H(){c.scrollLeft=s.scrollLeft();c.scrollTop=s.scrollTop();c.windowWidth=s.width();c.windowHeight=s.height()});A.on("mousemove",i);s.on({resize:function G(){c.windowWidth=s.width();c.windowHeight=s.height()},scroll:function F(){var I=s.scrollLeft(),J=s.scrollTop();if(I!==c.scrollLeft){c.currentX+=I-c.scrollLeft;c.scrollLeft=I}if(J!==c.scrollTop){c.currentY+=J-c.scrollTop;c.scrollTop=J}}})}}function i(F){c.currentX=F.pageX;c.currentY=F.pageY}function v(F){var H=F.offset(),J=F[0].getBoundingClientRect(),I=J.right-J.left,G=J.bottom-J.top;return c.currentX>=H.left&&c.currentX<=H.left+I&&c.currentY>=H.top&&c.currentY<=H.top+G}function B(I){var G=I.data(y),F=I.data(o),K=I.data(l),H,J;if(G){if(k.isFunction(G)){G=G.call(I[0])}J=G}else{if(F){if(k.isFunction(F)){F=F.call(I[0])}if(F.length>0){J=F.clone(true,true)}}else{if(K){H=k("#"+K);if(H.length>0){J=H.html()}}}}return J}function m(M,L,K){var G=c.scrollTop,J=c.scrollLeft,I=G+c.windowHeight,F=J+c.windowWidth,H=p.none;if(M.top<G||Math.abs(M.bottom-c.windowHeight)-K<G){H|=p.top}if(M.top+K>I||Math.abs(M.bottom-c.windowHeight)>I){H|=p.bottom}if(M.left<J||M.right+L>F){H|=p.left}if(M.left+L>F||M.right<J){H|=p.right}return H}function a(G){var F=0;while(G){G&=G-1;F++}return F}}));$/;"	p	class:c
workfn	experiments/backup/benchmarks/src/base/richards_benchmark.c	/^struct task *workfn(struct packet *pkt)$/;"	f
workfn	experiments/benchmarks/src/base/richards_benchmark.c	/^struct task *workfn(struct packet *pkt)$/;"	f
writeToFile	experiments/backup/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::writeToFile(FILE *file)$/;"	f	class:BitBoard64
writeToFile	experiments/backup/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::writeToFile(FILE *file)$/;"	f	class:HexxagonBoard
writeToFile	experiments/benchmarks/src/.hexxagon/bitboard64.cpp	/^int BitBoard64::writeToFile(FILE *file)$/;"	f	class:BitBoard64
writeToFile	experiments/benchmarks/src/.hexxagon/hexxagonboard.cpp	/^int HexxagonBoard::writeToFile(FILE *file)$/;"	f	class:HexxagonBoard
write_fd	test/gtest/fused-src/gtest/gtest-all.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
write_fd	test/gtest/fused-src/gtest/gtest.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
write_fd	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
write_fd	test/gtest/src/gtest-death-test.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
write_fd_	test/gtest/fused-src/gtest/gtest-all.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
write_fd_	test/gtest/fused-src/gtest/gtest.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
write_fd_	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
write_fd_	test/gtest/src/gtest-death-test.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
write_handle_	test/gtest/fused-src/gtest/gtest-all.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
write_handle_	test/gtest/src/gtest-death-test.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
wrk1	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
wrk1	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
wrk2	experiments/backup/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
wrk2	experiments/benchmarks/src/base/himenobmtxpa.c	/^Matrix  a,b,c,p,bnd,wrk1,wrk2;$/;"	v
wstring	test/gtest/include/gtest/internal/gtest-port.h	/^typedef ::std::wstring wstring;$/;"	t	namespace:testing::internal
wstring	test/gtest/include/gtest/internal/gtest-port.h	/^typedef ::wstring wstring;$/;"	t	namespace:testing::internal
x	experiments/backup/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
x	experiments/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
x	test/gtest/test/gtest-printers_test.cc	/^  char x;$/;"	m	struct:testing::gtest_printers_test::const_iterator	file:
x	test/gtest/test/gtest-printers_test.cc	/^  char x;$/;"	m	struct:testing::gtest_printers_test::iterator	file:
x	test/gtest/test/gtest_unittest.cc	/^  int x() const { return x_; }$/;"	f	class:Base
x	test/gtest/test/production.h	/^  int x() const { return x_; }$/;"	f	class:PrivateCode
x_	test/gtest/test/gtest_unittest.cc	/^  int x_;$/;"	m	class:Base	file:
x_	test/gtest/test/production.h	/^  int x_;$/;"	m	class:PrivateCode
xmalloc	experiments/backup/benchmarks/src/polybench/utilities/polybench.c	/^xmalloc (size_t num)$/;"	f	file:
xmalloc	experiments/benchmarks/src/polybench/utilities/polybench.c	/^xmalloc (size_t num)$/;"	f	file:
xy_	test/gtest/test/gtest-printers_test.cc	/^  char xy_[8];$/;"	m	class:foo::UnprintableInFoo	file:
y	experiments/backup/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
y	experiments/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
z	experiments/backup/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
z	experiments/backup/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/backup/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/bubblesort.c	/^struct complex z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/intmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/n-body.c	/^  double x, y, z;$/;"	m	struct:planet	file:
z	experiments/benchmarks/src/base/oscar.c	/^struct complex z[fftsize + 1], w[fftsize + 1], e[fftsize2 + 1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/perm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/puzzle-stanford.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/queens.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/quicksort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/realmm.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/towers.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z	experiments/benchmarks/src/base/treesort.c	/^struct complex    z[fftsize+1], w[fftsize+1], e[fftsize2+1];$/;"	v	typeref:struct:complex
z_	test/gtest/test/gtest-printers_test.cc	/^  double z_;$/;"	m	class:foo::UnprintableInFoo	file:
zeromatrix	experiments/backup/benchmarks/src/base/matrix.c	/^void zeromatrix(int rows, int cols, int **m) {$/;"	f
zeromatrix	experiments/benchmarks/src/base/matrix.c	/^void zeromatrix(int rows, int cols, int **m) {$/;"	f
zi	experiments/backup/benchmarks/src/base/bubblesort.c	/^float zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/intmm.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/oscar.c	/^float zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/perm.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/queens.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/quicksort.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/realmm.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/towers.c	/^float    zr, zi;$/;"	v
zi	experiments/backup/benchmarks/src/base/treesort.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/bubblesort.c	/^float zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/intmm.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/oscar.c	/^float zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/perm.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/puzzle-stanford.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/queens.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/quicksort.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/realmm.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/towers.c	/^float    zr, zi;$/;"	v
zi	experiments/benchmarks/src/base/treesort.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/bubblesort.c	/^float zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/intmm.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/oscar.c	/^float zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/perm.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/puzzle-stanford.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/queens.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/quicksort.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/realmm.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/towers.c	/^float    zr, zi;$/;"	v
zr	experiments/backup/benchmarks/src/base/treesort.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/bubblesort.c	/^float zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/intmm.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/oscar.c	/^float zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/perm.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/puzzle-stanford.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/queens.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/quicksort.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/realmm.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/towers.c	/^float    zr, zi;$/;"	v
zr	experiments/benchmarks/src/base/treesort.c	/^float    zr, zi;$/;"	v
~A	test/gtest/test/gtest-linked_ptr_test.cc	/^  virtual ~A() { *history << "A" << mynum << " dtor\\n"; }$/;"	f	class:__anon25::A
~AbstractSocketWriter	test/gtest/fused-src/gtest/gtest-all.cc	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~AbstractSocketWriter	test/gtest/src/gtest-internal-inl.h	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~Arguments	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments
~Arguments	test/gtest/src/gtest-death-test.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments
~AssertHelper	test/gtest/fused-src/gtest/gtest-all.cc	/^AssertHelper::~AssertHelper() {$/;"	f	class:testing::internal::AssertHelper
~AssertHelper	test/gtest/src/gtest.cc	/^AssertHelper::~AssertHelper() {$/;"	f	class:testing::internal::AssertHelper
~AutoHandle	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~AutoHandle() { Reset(); }$/;"	f	class:testing::internal::AutoHandle
~AutoHandle	test/gtest/src/gtest-internal-inl.h	/^  ~AutoHandle() { Reset(); }$/;"	f	class:testing::internal::AutoHandle
~B	test/gtest/test/gtest-linked_ptr_test.cc	/^  ~B() { *history << "B" << mynum << " dtor\\n"; }$/;"	f	class:__anon25::B
~Base	test/gtest/test/gtest-port_test.cc	/^  virtual ~Base() {}$/;"	f	class:testing::internal::Base
~CapturedStream	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~CapturedStream() {$/;"	f	class:testing::internal::CapturedStream
~CapturedStream	test/gtest/src/gtest-port.cc	/^  ~CapturedStream() {$/;"	f	class:testing::internal::CapturedStream
~CartesianProductGenerator10	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator10() {}$/;"	f	class:testing::internal::CartesianProductGenerator10
~CartesianProductGenerator10	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator10() {}$/;"	f	class:testing::internal::CartesianProductGenerator10
~CartesianProductGenerator2	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator2() {}$/;"	f	class:testing::internal::CartesianProductGenerator2
~CartesianProductGenerator2	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator2() {}$/;"	f	class:testing::internal::CartesianProductGenerator2
~CartesianProductGenerator3	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator3() {}$/;"	f	class:testing::internal::CartesianProductGenerator3
~CartesianProductGenerator3	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator3() {}$/;"	f	class:testing::internal::CartesianProductGenerator3
~CartesianProductGenerator4	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator4() {}$/;"	f	class:testing::internal::CartesianProductGenerator4
~CartesianProductGenerator4	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator4() {}$/;"	f	class:testing::internal::CartesianProductGenerator4
~CartesianProductGenerator5	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator5() {}$/;"	f	class:testing::internal::CartesianProductGenerator5
~CartesianProductGenerator5	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator5() {}$/;"	f	class:testing::internal::CartesianProductGenerator5
~CartesianProductGenerator6	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator6() {}$/;"	f	class:testing::internal::CartesianProductGenerator6
~CartesianProductGenerator6	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator6() {}$/;"	f	class:testing::internal::CartesianProductGenerator6
~CartesianProductGenerator7	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator7() {}$/;"	f	class:testing::internal::CartesianProductGenerator7
~CartesianProductGenerator7	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator7() {}$/;"	f	class:testing::internal::CartesianProductGenerator7
~CartesianProductGenerator8	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator8() {}$/;"	f	class:testing::internal::CartesianProductGenerator8
~CartesianProductGenerator8	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator8() {}$/;"	f	class:testing::internal::CartesianProductGenerator8
~CartesianProductGenerator9	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~CartesianProductGenerator9() {}$/;"	f	class:testing::internal::CartesianProductGenerator9
~CartesianProductGenerator9	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^  virtual ~CartesianProductGenerator9() {}$/;"	f	class:testing::internal::CartesianProductGenerator9
~CommonTest	test/gtest/test/gtest-typed-test_test.cc	/^  virtual ~CommonTest() { EXPECT_EQ(3, value_); }$/;"	f	class:CommonTest
~CxxExceptionInConstructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInConstructorTest() {$/;"	f	class:CxxExceptionInConstructorTest
~CxxExceptionInDestructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInDestructorTest() {$/;"	f	class:CxxExceptionInDestructorTest
~CxxExceptionInSetUpTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInSetUpTest() {$/;"	f	class:CxxExceptionInSetUpTest
~CxxExceptionInSetUpTestCaseTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInSetUpTestCaseTest() {$/;"	f	class:CxxExceptionInSetUpTestCaseTest
~CxxExceptionInTearDownTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInTearDownTest() {$/;"	f	class:CxxExceptionInTearDownTest
~CxxExceptionInTestBodyTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~CxxExceptionInTestBodyTest() {$/;"	f	class:CxxExceptionInTestBodyTest
~DeathTest	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~DeathTest() { }$/;"	f	class:testing::internal::DeathTest
~DeathTest	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTest() { }$/;"	f	class:testing::internal::DeathTest
~DeathTestFactory	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~DeathTestFactory() { }$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestFactory	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTestFactory() { }$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl
~DeathTestImpl	test/gtest/src/gtest-death-test.cc	/^  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl
~DestructorTracker	test/gtest/test/gtest-port_test.cc	/^  ~DestructorTracker() {$/;"	f	class:testing::internal::DestructorTracker
~Environment	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~Environment	test/gtest/include/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~FatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^  ~FatalFailureInFixtureConstructorTest() {$/;"	f	class:FatalFailureInFixtureConstructorTest
~FatalFailureInSetUpTest	test/gtest/test/gtest_output_test_.cc	/^  virtual ~FatalFailureInSetUpTest() {$/;"	f	class:FatalFailureInSetUpTest
~Foo	test/gtest/test/gtest-printers_test.cc	/^  virtual ~Foo() {}$/;"	f	struct:testing::gtest_printers_test::Foo
~GCOVBlock	src/Profiling/ExecutionFrequency/GCOV/GCOV.cpp	/^GCOVBlock::~GCOVBlock() {$/;"	f	class:GCOVBlock
~GTestFlagSaver	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestFlagSaver	test/gtest/src/gtest-internal-inl.h	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestLog	test/gtest/fused-src/gtest/gtest-all.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestLog	test/gtest/src/gtest-port.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestMutexLock	test/gtest/fused-src/gtest/gtest.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:std::tr1::GTestMutexLock
~GTestMutexLock	test/gtest/include/gtest/internal/gtest-port.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:testing::internal::GTestMutexLock
~HasNewFatalFailureHelper	test/gtest/fused-src/gtest/gtest-all.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~HasNewFatalFailureHelper	test/gtest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~HexxagonGame	experiments/backup/benchmarks/src/.hexxagon/hexxagongame.h	/^	~HexxagonGame() {destroyRest(); delete first;};$/;"	f	class:HexxagonGame
~HexxagonGame	experiments/benchmarks/src/.hexxagon/hexxagongame.h	/^	~HexxagonGame() {destroyRest(); delete first;};$/;"	f	class:HexxagonGame
~HexxagonMoveList	experiments/backup/benchmarks/src/.hexxagon/hexxagonmove.h	/^	~HexxagonMoveList() { delete moves; };$/;"	f	class:HexxagonMoveList
~HexxagonMoveList	experiments/benchmarks/src/.hexxagon/hexxagonmove.h	/^	~HexxagonMoveList() { delete moves; };$/;"	f	class:HexxagonMoveList
~HybridPrimeTable	test/gtest/samples/sample8_unittest.cc	/^  virtual ~HybridPrimeTable() {$/;"	f	class:HybridPrimeTable
~InternalRunDeathTestFlag	test/gtest/fused-src/gtest/gtest.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~InternalRunDeathTestFlag	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	test/gtest/fused-src/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util-generated.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	test/gtest/include/gtest/internal/gtest-param-util.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~LinkedPtrTest	test/gtest/test/gtest-linked_ptr_test.cc	/^  virtual ~LinkedPtrTest() {$/;"	f	class:__anon25::LinkedPtrTest
~MachineFunctionAnalysis	src/CostEstimator/CostAnalysis/Cache/MachineFunctionAnalysis.cpp	/^MachineFunctionAnalysis::~MachineFunctionAnalysis() {$/;"	f	class:MachineFunctionAnalysis
~MockDeathTest	test/gtest/test/gtest-death-test_test.cc	/^  virtual ~MockDeathTest() {$/;"	f	class:MockDeathTest
~Mutex	test/gtest/fused-src/gtest/gtest.h	/^  ~Mutex() {$/;"	f	class:std::tr1::Mutex
~Mutex	test/gtest/include/gtest/internal/gtest-port.h	/^  ~Mutex() {$/;"	f	class:testing::internal::Mutex
~MyString	test/gtest/samples/sample2.h	/^  ~MyString() { delete[] c_string_; }$/;"	f	class:MyString
~NativeArray	test/gtest/fused-src/gtest/gtest.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~NativeArray	test/gtest/include/gtest/internal/gtest-internal.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~NonFatalFailureInFixtureConstructorTest	test/gtest/test/gtest_output_test_.cc	/^  ~NonFatalFailureInFixtureConstructorTest() {$/;"	f	class:NonFatalFailureInFixtureConstructorTest
~NonFatalFailureInSetUpTest	test/gtest/test/gtest_output_test_.cc	/^  virtual ~NonFatalFailureInSetUpTest() {$/;"	f	class:NonFatalFailureInSetUpTest
~Notification	test/gtest/fused-src/gtest/gtest.h	/^  ~Notification() {$/;"	f	class:std::tr1::Notification
~Notification	test/gtest/include/gtest/internal/gtest-port.h	/^  ~Notification() {$/;"	f	class:testing::internal::Notification
~OsStackTraceGetterInterface	test/gtest/fused-src/gtest/gtest-all.cc	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~OsStackTraceGetterInterface	test/gtest/src/gtest-internal-inl.h	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~ParamGeneratorInterface	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamGeneratorInterface	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamIteratorInterface	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParamIteratorInterface	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParameterizedTestCaseInfoBase	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
~ParameterizedTestCaseInfoBase	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
~ParameterizedTestCaseRegistry	test/gtest/fused-src/gtest/gtest.h	/^  ~ParameterizedTestCaseRegistry() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
~ParameterizedTestCaseRegistry	test/gtest/include/gtest/internal/gtest-param-util.h	/^  ~ParameterizedTestCaseRegistry() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
~PreCalculatedPrimeTable	test/gtest/samples/prime_tables.h	/^  virtual ~PreCalculatedPrimeTable() { delete[] is_prime_; }$/;"	f	class:PreCalculatedPrimeTable
~PrimeTable	test/gtest/samples/prime_tables.h	/^  virtual ~PrimeTable() {}$/;"	f	class:PrimeTable
~PrimeTableTest	test/gtest/samples/sample6_unittest.cc	/^  virtual ~PrimeTableTest() { delete table_; }$/;"	f	class:PrimeTableTest
~PrimeTableTest	test/gtest/samples/sample7_unittest.cc	/^  virtual ~PrimeTableTest() { delete table_; }$/;"	f	class:PrimeTableTest
~Queue	test/gtest/samples/sample3-inl.h	/^  ~Queue() { Clear(); }$/;"	f	class:Queue
~RE	test/gtest/fused-src/gtest/gtest-all.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RE	test/gtest/src/gtest-port.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~RangeGenerator() {}$/;"	f	class:testing::internal::RangeGenerator
~RangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~RangeGenerator() {}$/;"	f	class:testing::internal::RangeGenerator
~ReplaceDeathTestFactory	test/gtest/test/gtest-death-test_test.cc	/^  ~ReplaceDeathTestFactory() {$/;"	f	class:testing::internal::ReplaceDeathTestFactory
~ReturnSentinel	test/gtest/fused-src/gtest/gtest.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~ReturnSentinel	test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~ScopedFakeTestPartResultReporter	test/gtest/fused-src/gtest/gtest-all.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedFakeTestPartResultReporter	test/gtest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedPrematureExitFile	test/gtest/fused-src/gtest/gtest-all.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile
~ScopedPrematureExitFile	test/gtest/src/gtest.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile
~SehExceptionInDestructorTest	test/gtest/test/gtest_catch_exceptions_test_.cc	/^  ~SehExceptionInDestructorTest() { RaiseException(42, 0, 0, NULL); }$/;"	f	class:SehExceptionInDestructorTest
~SingleFailureChecker	test/gtest/fused-src/gtest/gtest-all.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~SingleFailureChecker	test/gtest/src/gtest.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~SocketWriter	test/gtest/fused-src/gtest/gtest-all.cc	/^    virtual ~SocketWriter() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~SocketWriter	test/gtest/src/gtest-internal-inl.h	/^    virtual ~SocketWriter() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~StreamableInGlobal	test/gtest/test/gtest-printers_test.cc	/^  virtual ~StreamableInGlobal() {}$/;"	f	class:StreamableInGlobal
~Test	test/gtest/fused-src/gtest/gtest-all.cc	/^Test::~Test() {$/;"	f	class:testing::Test
~Test	test/gtest/src/gtest.cc	/^Test::~Test() {$/;"	f	class:testing::Test
~TestCase	test/gtest/fused-src/gtest/gtest-all.cc	/^TestCase::~TestCase() {$/;"	f	class:testing::TestCase
~TestCase	test/gtest/src/gtest.cc	/^TestCase::~TestCase() {$/;"	f	class:testing::TestCase
~TestEventListener	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListener	test/gtest/include/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListeners	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventListeners	test/gtest/src/gtest.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventRepeater	test/gtest/fused-src/gtest/gtest-all.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestEventRepeater	test/gtest/src/gtest.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestFactoryBase	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestFactoryBase	test/gtest/include/gtest/internal/gtest-internal.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestForDeathTest	test/gtest/test/gtest-death-test_test.cc	/^  virtual ~TestForDeathTest() {$/;"	f	class:TestForDeathTest
~TestInfo	test/gtest/fused-src/gtest/gtest-all.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestInfo	test/gtest/src/gtest.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestLifeCycleTest	test/gtest/test/gtest_unittest.cc	/^  ~TestLifeCycleTest() { count_--; }$/;"	f	class:__anon16::TestLifeCycleTest
~TestListener	test/gtest/test/gtest_unittest.cc	/^  virtual ~TestListener() {$/;"	f	class:TestListener
~TestMetaFactoryBase	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestMetaFactoryBase	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestPartResultReporterInterface	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestPartResultReporterInterface	test/gtest/include/gtest/gtest-test-part.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestResult	test/gtest/fused-src/gtest/gtest-all.cc	/^TestResult::~TestResult() {$/;"	f	class:testing::TestResult
~TestResult	test/gtest/src/gtest.cc	/^TestResult::~TestResult() {$/;"	f	class:testing::TestResult
~ThreadLocal	test/gtest/fused-src/gtest/gtest.h	/^  ~ThreadLocal() {$/;"	f	class:std::tr1::ThreadLocal
~ThreadLocal	test/gtest/include/gtest/internal/gtest-port.h	/^  ~ThreadLocal() {$/;"	f	class:testing::internal::ThreadLocal
~ThreadLocalValueHolderBase	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:std::tr1::ThreadLocalValueHolderBase
~ThreadLocalValueHolderBase	test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:testing::internal::ThreadLocalValueHolderBase
~ThreadWithParam	test/gtest/fused-src/gtest/gtest.h	/^  ~ThreadWithParam() { Join(); }$/;"	f	class:std::tr1::ThreadWithParam
~ThreadWithParam	test/gtest/include/gtest/internal/gtest-port.h	/^  ~ThreadWithParam() { Join(); }$/;"	f	class:testing::internal::ThreadWithParam
~ThreadWithParamBase	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:std::tr1::ThreadWithParamBase
~ThreadWithParamBase	test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:testing::internal::ThreadWithParamBase
~UnitTest	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTest::~UnitTest() {$/;"	f	class:testing::UnitTest
~UnitTest	test/gtest/src/gtest.cc	/^UnitTest::~UnitTest() {$/;"	f	class:testing::UnitTest
~UnitTestImpl	test/gtest/fused-src/gtest/gtest-all.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~UnitTestImpl	test/gtest/src/gtest.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~ValuesInIteratorRangeGenerator	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~ValuesInIteratorRangeGenerator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~ValuesInIteratorRangeGenerator	test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ValuesInIteratorRangeGenerator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~Widget	test/gtest/xcode/Samples/FrameworkSample/widget.cc	/^Widget::~Widget() {}$/;"	f	class:Widget
~WithParamInterface	test/gtest/fused-src/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~WithParamInterface	test/gtest/include/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~linked_ptr	test/gtest/fused-src/gtest/gtest.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:testing::internal::linked_ptr
~linked_ptr	test/gtest/include/gtest/internal/gtest-linked_ptr.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:testing::internal::linked_ptr
~scoped_ptr	test/gtest/include/gtest/internal/gtest-port.h	/^  ~scoped_ptr() { reset(); }$/;"	f	class:testing::internal::scoped_ptr
